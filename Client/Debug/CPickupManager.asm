; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	d:\vice-players-master\Client\net\CPickupManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	??0CPickupManager@@QAE@XZ			; CPickupManager::CPickupManager
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\vice-players-master\client\net\cpickupmanager.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??0CPickupManager@@QAE@XZ
_TEXT	SEGMENT
_i$209250 = -17						; size = 1
_this$ = -8						; size = 4
??0CPickupManager@@QAE@XZ PROC				; CPickupManager::CPickupManager, COMDAT
; _this$ = ecx

; 17   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 18   : 	for(EntityId i = 0; i < MAX_PICKUPS; i++) 

	mov	BYTE PTR _i$209250[ebp], 0
	jmp	SHORT $LN3@CPickupMan
$LN2@CPickupMan:
	mov	al, BYTE PTR _i$209250[ebp]
	add	al, 1
	mov	BYTE PTR _i$209250[ebp], al
$LN3@CPickupMan:
	movzx	eax, BYTE PTR _i$209250[ebp]
	cmp	eax, 128				; 00000080H
	jge	SHORT $LN4@CPickupMan

; 19   : 	{
; 20   : 		m_bPickupSlotState[i] = false;

	movzx	eax, BYTE PTR _i$209250[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+eax], 0

; 21   : 		m_pPickups[i] = NULL;

	movzx	eax, BYTE PTR _i$209250[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+128], 0
	jmp	SHORT $LN2@CPickupMan
$LN4@CPickupMan:

; 22   : 	}
; 23   : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0CPickupManager@@QAE@XZ ENDP				; CPickupManager::CPickupManager
_TEXT	ENDS
PUBLIC	?Delete@CPickupManager@@QAE_NE@Z		; CPickupManager::Delete
PUBLIC	??1CPickupManager@@QAE@XZ			; CPickupManager::~CPickupManager
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1CPickupManager@@QAE@XZ
_TEXT	SEGMENT
_i$209257 = -17						; size = 1
_this$ = -8						; size = 4
??1CPickupManager@@QAE@XZ PROC				; CPickupManager::~CPickupManager, COMDAT
; _this$ = ecx

; 26   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 27   : 	for(EntityId i = 0; i < MAX_PICKUPS; i++)

	mov	BYTE PTR _i$209257[ebp], 0
	jmp	SHORT $LN3@CPickupMan@2
$LN2@CPickupMan@2:
	mov	al, BYTE PTR _i$209257[ebp]
	add	al, 1
	mov	BYTE PTR _i$209257[ebp], al
$LN3@CPickupMan@2:
	movzx	eax, BYTE PTR _i$209257[ebp]
	cmp	eax, 128				; 00000080H
	jge	SHORT $LN4@CPickupMan@2

; 28   : 	{
; 29   : 		Delete(i);

	movzx	eax, BYTE PTR _i$209257[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Delete@CPickupManager@@QAE_NE@Z	; CPickupManager::Delete
	jmp	SHORT $LN2@CPickupMan@2
$LN4@CPickupMan@2:

; 30   : 	}
; 31   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CPickupManager@@QAE@XZ ENDP				; CPickupManager::~CPickupManager
_TEXT	ENDS
PUBLIC	?New@CPickupManager@@QAE_NEHHPAUVector3@@@Z	; CPickupManager::New
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??0CPickup@@QAE@HHPAUVector3@@@Z:PROC		; CPickup::CPickup
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?New@CPickupManager@@QAE_NEHHPAUVector3@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?New@CPickupManager@@QAE_NEHHPAUVector3@@@Z$0
__ehfuncinfo$?New@CPickupManager@@QAE_NEHHPAUVector3@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?New@CPickupManager@@QAE_NEHHPAUVector3@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?New@CPickupManager@@QAE_NEHHPAUVector3@@@Z
_TEXT	SEGMENT
tv84 = -244						; size = 4
$T209310 = -236						; size = 4
$T209311 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_PickupID$ = 8						; size = 1
_iModel$ = 12						; size = 4
_iType$ = 16						; size = 4
_vecPos$ = 20						; size = 4
?New@CPickupManager@@QAE_NEHHPAUVector3@@@Z PROC	; CPickupManager::New, COMDAT
; _this$ = ecx

; 34   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?New@CPickupManager@@QAE_NEHHPAUVector3@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 35   : 	if(m_bPickupSlotState[PickupID] == true)

	movzx	eax, BYTE PTR _PickupID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 1
	jne	SHORT $LN2@New

; 36   : 	{
; 37   : 		Delete(PickupID);

	movzx	eax, BYTE PTR _PickupID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Delete@CPickupManager@@QAE_NE@Z	; CPickupManager::Delete
$LN2@New:

; 38   : 	}
; 39   : 
; 40   : 	m_pPickups[PickupID] = new CPickup(iModel, iType, vecPos);

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T209311[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T209311[ebp], 0
	je	SHORT $LN5@New
	mov	eax, DWORD PTR _vecPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iModel$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T209311[ebp]
	call	??0CPickup@@QAE@HHPAUVector3@@@Z	; CPickup::CPickup
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN6@New
$LN5@New:
	mov	DWORD PTR tv84[ebp], 0
$LN6@New:
	mov	eax, DWORD PTR tv84[ebp]
	mov	DWORD PTR $T209310[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	movzx	ecx, BYTE PTR _PickupID$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR $T209310[ebp]
	mov	DWORD PTR [edx+ecx*4+128], eax

; 41   : 
; 42   : 	if (m_pPickups[PickupID])

	movzx	eax, BYTE PTR _PickupID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	je	SHORT $LN1@New

; 43   : 	{
; 44   : 		m_bPickupSlotState[PickupID] = true;

	movzx	eax, BYTE PTR _PickupID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+eax], 1

; 45   : 
; 46   : 		return true;

	mov	al, 1
	jmp	SHORT $LN3@New
$LN1@New:

; 47   : 	}
; 48   : 
; 49   : 	return false;

	xor	al, al
$LN3@New:

; 50   : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?New@CPickupManager@@QAE_NEHHPAUVector3@@@Z$0:
	mov	eax, DWORD PTR $T209311[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?New@CPickupManager@@QAE_NEHHPAUVector3@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?New@CPickupManager@@QAE_NEHHPAUVector3@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?New@CPickupManager@@QAE_NEHHPAUVector3@@@Z ENDP	; CPickupManager::New
PUBLIC	??_GCPickup@@QAEPAXI@Z				; CPickup::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Delete@CPickupManager@@QAE_NE@Z
_TEXT	SEGMENT
tv81 = -232						; size = 4
$T209328 = -224						; size = 4
$T209329 = -212						; size = 4
_this$ = -8						; size = 4
_PickupID$ = 8						; size = 1
?Delete@CPickupManager@@QAE_NE@Z PROC			; CPickupManager::Delete, COMDAT
; _this$ = ecx

; 53   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 54   : 	if(PickupID > MAX_PICKUPS || !m_pPickups[PickupID])

	movzx	eax, BYTE PTR _PickupID$[ebp]
	cmp	eax, 128				; 00000080H
	jg	SHORT $LN1@Delete
	movzx	eax, BYTE PTR _PickupID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 0
	jne	SHORT $LN2@Delete
$LN1@Delete:

; 55   : 	{
; 56   : 		return false;

	xor	al, al
	jmp	SHORT $LN3@Delete
$LN2@Delete:

; 57   : 	}
; 58   : 
; 59   : 	m_bPickupSlotState[PickupID] = false;

	movzx	eax, BYTE PTR _PickupID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+eax], 0

; 60   : 	delete m_pPickups[PickupID];

	movzx	eax, BYTE PTR _PickupID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+128]
	mov	DWORD PTR $T209329[ebp], edx
	mov	eax, DWORD PTR $T209329[ebp]
	mov	DWORD PTR $T209328[ebp], eax
	cmp	DWORD PTR $T209328[ebp], 0
	je	SHORT $LN5@Delete
	push	1
	mov	ecx, DWORD PTR $T209328[ebp]
	call	??_GCPickup@@QAEPAXI@Z
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN6@Delete
$LN5@Delete:
	mov	DWORD PTR tv81[ebp], 0
$LN6@Delete:

; 61   : 	m_pPickups[PickupID] = NULL;

	movzx	eax, BYTE PTR _PickupID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+128], 0

; 62   : 
; 63   : 	return true;

	mov	al, 1
$LN3@Delete:

; 64   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Delete@CPickupManager@@QAE_NE@Z ENDP			; CPickupManager::Delete
_TEXT	ENDS
EXTRN	??1CPickup@@QAE@XZ:PROC				; CPickup::~CPickup
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCPickup@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCPickup@@QAEPAXI@Z PROC				; CPickup::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CPickup@@QAE@XZ			; CPickup::~CPickup
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCPickup@@QAEPAXI@Z ENDP				; CPickup::`scalar deleting destructor'
_TEXT	ENDS
END
