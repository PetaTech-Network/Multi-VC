; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	d:\vice-players-master\Client\net\CSpawnSelection.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?HandleClassSelection@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z ; CSpawnSelection::HandleClassSelection
PUBLIC	?GetLocalPlayer@CPlayerManager@@QAEPAVCLocalPlayer@@XZ ; CPlayerManager::GetLocalPlayer
PUBLIC	?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ; CNetworkManager::GetPlayerManager
PUBLIC	??0CSpawnSelection@@QAE@XZ			; CSpawnSelection::CSpawnSelection
EXTRN	?pNetowkManager@@3PAVCNetworkManager@@A:DWORD	; pNetowkManager
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\vice-players-master\client\net\cspawnselection.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??0CSpawnSelection@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CSpawnSelection@@QAE@XZ PROC				; CSpawnSelection::CSpawnSelection, COMDAT
; _this$ = ecx

; 24   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 25   : 	m_iSelectedClass = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 26   : 	m_dwLastSpawnSelectionTick = GetTickCount();

	mov	esi, esp
	call	DWORD PTR __imp__GetTickCount@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 27   : 	HandleClassSelection(pNetowkManager->GetPlayerManager()->GetLocalPlayer());

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ; CNetworkManager::GetPlayerManager
	mov	ecx, eax
	call	?GetLocalPlayer@CPlayerManager@@QAEPAVCLocalPlayer@@XZ ; CPlayerManager::GetLocalPlayer
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?HandleClassSelection@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z ; CSpawnSelection::HandleClassSelection

; 28   : 	m_pGUIText = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 29   : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CSpawnSelection@@QAE@XZ ENDP				; CSpawnSelection::CSpawnSelection
_TEXT	ENDS
PUBLIC	__real@431b0000
PUBLIC	??_C@_0M@GDDLCFDG@TextColours?$AA@		; `string'
PUBLIC	??_C@_0DA@FEECGPGI@tl?3FFFFFFFF?5tr?3FFFFFFFF?5bl?3FFFFF@ ; `string'
PUBLIC	??_C@_04IEDBBIIG@Font?$AA@			; `string'
PUBLIC	??_C@_0P@EIIDBBFO@Tahoma?9Bold?910?$AA@		; `string'
PUBLIC	??_C@_0N@CCPGAGID@FrameEnabled?$AA@		; `string'
PUBLIC	??_C@_0BC@NDMEIEMB@BackgroundEnabled?$AA@	; `string'
PUBLIC	??_C@_05LAPONLG@false?$AA@			; `string'
PUBLIC	__real@3f4ccccd
PUBLIC	??_C@_01IDAFKMJL@_?$AA@				; `string'
PUBLIC	??1UDim@CEGUI@@QAE@XZ				; CEGUI::UDim::~UDim
PUBLIC	??1UVector2@CEGUI@@QAE@XZ			; CEGUI::UVector2::~UVector2
PUBLIC	??0UVector2@CEGUI@@QAE@ABVUDim@1@0@Z		; CEGUI::UVector2::UVector2
PUBLIC	??0UDim@CEGUI@@QAE@MM@Z				; CEGUI::UDim::UDim
PUBLIC	__real@00000000
PUBLIC	__real@4008000000000000
PUBLIC	?getFontHeight@Font@CEGUI@@QBEMM@Z		; CEGUI::Font::getFontHeight
PUBLIC	__real@3f800000
PUBLIC	??0String@CEGUI@@QAE@PBD@Z			; CEGUI::String::String
PUBLIC	??_C@_0CL@LJLMCCJA@?$DO?5Press?5Shift?5button?5when?5ready?5@ ; `string'
PUBLIC	??_C@_0DE@DKGBDNIP@?$DO?5Use?5Left?5and?5Right?5arrow?5keys?5@ ; `string'
PUBLIC	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ	; CGame::FindPlayerPed
PUBLIC	?GetCamera@CGame@@QAEPAVCCamera@@XZ		; CGame::GetCamera
PUBLIC	?IsWasted@CLocalPlayer@@QAEHXZ			; CLocalPlayer::IsWasted
PUBLIC	?IsActive@CLocalPlayer@@QAEHXZ			; CLocalPlayer::IsActive
PUBLIC	__real@437a0000
PUBLIC	__real@41c80000
PUBLIC	??0Vector3@@QAE@XZ				; Vector3::Vector3
PUBLIC	__$ArrayPad$
PUBLIC	?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z ; CSpawnSelection::ProcessLocalPlayer
EXTRN	?RequestClass@CLocalPlayer@@QAEXH@Z:PROC	; CLocalPlayer::RequestClass
EXTRN	?ClearAllWeapons@CPlayerPed@@QAEXXZ:PROC	; CPlayerPed::ClearAllWeapons
EXTRN	?pChatWindow@@3PAVCChatWindow@@A:DWORD		; pChatWindow
EXTRN	?setAlpha@Window@CEGUI@@QAEXM@Z:PROC		; CEGUI::Window::setAlpha
EXTRN	?setProperty@PropertySet@CEGUI@@QAEXABVString@2@0@Z:PROC ; CEGUI::PropertySet::setProperty
EXTRN	?setPosition@Window@CEGUI@@QAEXABVUVector2@2@@Z:PROC ; CEGUI::Window::setPosition
EXTRN	?setSize@Window@CEGUI@@QAEXABVUVector2@2@@Z:PROC ; CEGUI::Window::setSize
EXTRN	?getTextExtent@Font@CEGUI@@QBEMABVString@2@M@Z:PROC ; CEGUI::Font::getTextExtent
EXTRN	?GetTahomaBold10Font@CGUI@@QAEPAVFont@CEGUI@@XZ:PROC ; CGUI::GetTahomaBold10Font
EXTRN	??1String@CEGUI@@QAE@XZ:PROC			; CEGUI::String::~String
EXTRN	?setText@Window@CEGUI@@QAEXABVString@2@@Z:PROC	; CEGUI::Window::setText
EXTRN	?CreateGUIStaticText@CGUI@@QAEPAUCGUIStaticText@@PAVWindow@CEGUI@@@Z:PROC ; CGUI::CreateGUIStaticText
EXTRN	?pGUI@@3PAVCGUI@@A:DWORD			; pGUI
EXTRN	_strcat:PROC
EXTRN	?setVisible@Window@CEGUI@@QAEX_N@Z:PROC		; CEGUI::Window::setVisible
EXTRN	?TogglePlayerControllable@CPlayerPed@@QAEXH@Z:PROC ; CPlayerPed::TogglePlayerControllable
EXTRN	?PlaySoundA@CGame@@QAEXHUVector3@@@Z:PROC	; CGame::PlaySoundA
EXTRN	?GetPosition@CEntity@@QAEXPAUVector3@@@Z:PROC	; CEntity::GetPosition
EXTRN	?SetBehindPlayer@CCamera@@QAEXXZ:PROC		; CCamera::SetBehindPlayer
EXTRN	?HideRadar@CGame@@QAEX_N@Z:PROC			; CGame::HideRadar
EXTRN	?ToggleHud@CGame@@QAEX_N@Z:PROC			; CGame::ToggleHud
EXTRN	?DisplayHud@CGame@@QAEXH@Z:PROC			; CGame::DisplayHud
EXTRN	?SpawnPlayer@CLocalPlayer@@QAEHXZ:PROC		; CLocalPlayer::SpawnPlayer
EXTRN	?Restore@CCamera@@QAEXXZ:PROC			; CCamera::Restore
EXTRN	__imp__GetKeyState@4:PROC
EXTRN	?ToggleKeyInputsDisabled@CGame@@QAEXH@Z:PROC	; CGame::ToggleKeyInputsDisabled
EXTRN	?pGame@@3PAVCGame@@A:DWORD			; pGame
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__fltused:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT __real@431b0000
CONST	SEGMENT
__real@431b0000 DD 0431b0000r			; 155
CONST	ENDS
;	COMDAT ??_C@_0M@GDDLCFDG@TextColours?$AA@
CONST	SEGMENT
??_C@_0M@GDDLCFDG@TextColours?$AA@ DB 'TextColours', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@FEECGPGI@tl?3FFFFFFFF?5tr?3FFFFFFFF?5bl?3FFFFF@
CONST	SEGMENT
??_C@_0DA@FEECGPGI@tl?3FFFFFFFF?5tr?3FFFFFFFF?5bl?3FFFFF@ DB 'tl:FFFFFFFF'
	DB	' tr:FFFFFFFF bl:FFFFFFFF br:FFFFFFFF', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04IEDBBIIG@Font?$AA@
CONST	SEGMENT
??_C@_04IEDBBIIG@Font?$AA@ DB 'Font', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EIIDBBFO@Tahoma?9Bold?910?$AA@
CONST	SEGMENT
??_C@_0P@EIIDBBFO@Tahoma?9Bold?910?$AA@ DB 'Tahoma-Bold-10', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CCPGAGID@FrameEnabled?$AA@
CONST	SEGMENT
??_C@_0N@CCPGAGID@FrameEnabled?$AA@ DB 'FrameEnabled', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NDMEIEMB@BackgroundEnabled?$AA@
CONST	SEGMENT
??_C@_0BC@NDMEIEMB@BackgroundEnabled?$AA@ DB 'BackgroundEnabled', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05LAPONLG@false?$AA@
CONST	SEGMENT
??_C@_05LAPONLG@false?$AA@ DB 'false', 00H		; `string'
CONST	ENDS
;	COMDAT __real@3f4ccccd
CONST	SEGMENT
__real@3f4ccccd DD 03f4ccccdr			; 0.8
CONST	ENDS
;	COMDAT ??_C@_01IDAFKMJL@_?$AA@
CONST	SEGMENT
??_C@_01IDAFKMJL@_?$AA@ DB '_', 00H			; `string'
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT __real@4008000000000000
CONST	SEGMENT
__real@4008000000000000 DQ 04008000000000000r	; 3
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT ??_C@_0CL@LJLMCCJA@?$DO?5Press?5Shift?5button?5when?5ready?5@
CONST	SEGMENT
??_C@_0CL@LJLMCCJA@?$DO?5Press?5Shift?5button?5when?5ready?5@ DB '> Press'
	DB	' Shift button when ready to spawn.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@DKGBDNIP@?$DO?5Use?5Left?5and?5Right?5arrow?5keys?5@
CONST	SEGMENT
??_C@_0DE@DKGBDNIP@?$DO?5Use?5Left?5and?5Right?5arrow?5keys?5@ DB '> Use '
	DB	'Left and Right arrow keys to select a class.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT __real@437a0000
CONST	SEGMENT
__real@437a0000 DD 0437a0000r			; 250
CONST	ENDS
;	COMDAT __real@41c80000
CONST	SEGMENT
__real@41c80000 DD 041c80000r			; 25
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z DD 019930522H
	DD	011H
	DD	FLAT:__unwindtable$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$5
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$7
	DD	07H
	DD	FLAT:__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$8
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$9
	DD	09H
	DD	FLAT:__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$10
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$11
	DD	0bH
	DD	FLAT:__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$12
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$13
	DD	0dH
	DD	FLAT:__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$14
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$15
	DD	0fH
	DD	FLAT:__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$16
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z
_TEXT	SEGMENT
tv427 = -2540						; size = 4
tv443 = -2536						; size = 4
tv434 = -2532						; size = 4
tv425 = -2532						; size = 4
tv445 = -2528						; size = 4
tv170 = -2528						; size = 4
tv493 = -2524						; size = 4
tv432 = -2524						; size = 4
tv444 = -2520						; size = 4
tv423 = -2520						; size = 4
tv430 = -2516						; size = 4
tv180 = -2516						; size = 4
tv485 = -2512						; size = 4
tv222 = -2512						; size = 4
$T209376 = -2504					; size = 152
$T209377 = -2344					; size = 152
$T209378 = -2184					; size = 16
$T209379 = -2160					; size = 8
$T209380 = -2144					; size = 8
$T209381 = -2128					; size = 152
$T209382 = -1968					; size = 16
$T209383 = -1944					; size = 8
$T209384 = -1928					; size = 8
$T209385 = -1912					; size = 152
$T209386 = -1752					; size = 152
$T209387 = -1592					; size = 152
$T209388 = -1432					; size = 152
$T209389 = -1272					; size = 152
$T209390 = -1112					; size = 152
$T209391 = -952						; size = 152
$T209392 = -792						; size = 152
_pD3DFont$209299 = -440					; size = 4
_fTextY$209283 = -428					; size = 4
_fTextX$209280 = -416					; size = 4
_fTextHeight$209276 = -404				; size = 4
_fTextWidth$209274 = -392				; size = 4
_pFont$209273 = -380					; size = 4
_szMsg$ = -368						; size = 256
_fDrawY$ = -104						; size = 4
_fDrawX$ = -92						; size = 4
_vPlayerPos$ = -80					; size = 12
_dwTicksSinceLastSelection$ = -60			; size = 4
_pGamePlayer$ = -48					; size = 4
_pGameCamera$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pLocalPlayer$ = 8					; size = 4
?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z PROC ; CSpawnSelection::ProcessLocalPlayer, COMDAT
; _this$ = ecx

; 34   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 2528				; 000009e0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-2540]
	mov	ecx, 632				; 00000278H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 35   : 	CCamera *pGameCamera;
; 36   : 	CPlayerPed *pGamePlayer;
; 37   : 	DWORD dwTicksSinceLastSelection;
; 38   : 	Vector3 vPlayerPos;

	lea	ecx, DWORD PTR _vPlayerPos$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 39   : 	float fDrawX=25.0f;

	fld	DWORD PTR __real@41c80000
	fstp	DWORD PTR _fDrawX$[ebp]

; 40   : 	float fDrawY=250.0f;

	fld	DWORD PTR __real@437a0000
	fstp	DWORD PTR _fDrawY$[ebp]

; 41   : 	char szMsg[256];
; 42   : 
; 43   : 	if(FALSE == pLocalPlayer->IsActive() && !pLocalPlayer->IsWasted() && m_bClearedToSpawn)

	mov	ecx, DWORD PTR _pLocalPlayer$[ebp]
	call	?IsActive@CLocalPlayer@@QAEHXZ		; CLocalPlayer::IsActive
	test	eax, eax
	jne	$LN1@ProcessLoc
	mov	ecx, DWORD PTR _pLocalPlayer$[ebp]
	call	?IsWasted@CLocalPlayer@@QAEHXZ		; CLocalPlayer::IsWasted
	test	eax, eax
	jne	$LN1@ProcessLoc
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	$LN1@ProcessLoc

; 44   : 	{
; 45   : 		// DONT ALLOW ANY ACTIONS IF WE'RE STILL FADING OR WAITING.
; 46   : 		if((GetTickCount() - m_dwInitialSelectionTick) < 2000) return;

	mov	esi, esp
	call	DWORD PTR __imp__GetTickCount@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+12]
	cmp	eax, 2000				; 000007d0H
	jae	SHORT $LN7@ProcessLoc
	jmp	$LN9@ProcessLoc
$LN7@ProcessLoc:

; 47   : 		pGame->ToggleKeyInputsDisabled(TRUE);

	push	1
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?ToggleKeyInputsDisabled@CGame@@QAEXH@Z	; CGame::ToggleKeyInputsDisabled

; 48   : 		
; 49   : 		if(GetKeyState(VK_SHIFT)&0x8000) // SHIFT PRESSED SO SPAWN

	mov	esi, esp
	push	16					; 00000010H
	call	DWORD PTR __imp__GetKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 32768				; 00008000H
	je	$LN6@ProcessLoc

; 50   : 		{		
; 51   : 			pGameCamera = pGame->GetCamera();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?GetCamera@CGame@@QAEPAVCCamera@@XZ	; CGame::GetCamera
	mov	DWORD PTR _pGameCamera$[ebp], eax

; 52   : 			pGamePlayer = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pGamePlayer$[ebp], eax

; 53   : 			pGameCamera->Restore();

	mov	ecx, DWORD PTR _pGameCamera$[ebp]
	call	?Restore@CCamera@@QAEXXZ		; CCamera::Restore

; 54   : 			pLocalPlayer->SpawnPlayer();

	mov	ecx, DWORD PTR _pLocalPlayer$[ebp]
	call	?SpawnPlayer@CLocalPlayer@@QAEHXZ	; CLocalPlayer::SpawnPlayer

; 55   : 			pGame->DisplayHud(TRUE);

	push	1
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?DisplayHud@CGame@@QAEXH@Z		; CGame::DisplayHud

; 56   : 			pGame->ToggleHud(TRUE);

	push	1
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?ToggleHud@CGame@@QAEX_N@Z		; CGame::ToggleHud

; 57   : 			pGame->HideRadar(FALSE);

	push	0
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?HideRadar@CGame@@QAEX_N@Z		; CGame::HideRadar

; 58   : 			pGameCamera->SetBehindPlayer();

	mov	ecx, DWORD PTR _pGameCamera$[ebp]
	call	?SetBehindPlayer@CCamera@@QAEXXZ	; CCamera::SetBehindPlayer

; 59   : 			pGamePlayer->GetPosition(&vPlayerPos);		

	lea	eax, DWORD PTR _vPlayerPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pGamePlayer$[ebp]
	call	?GetPosition@CEntity@@QAEXPAUVector3@@@Z ; CEntity::GetPosition

; 60   : 			pGame->PlaySound(10, vPlayerPos);

	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	ecx, DWORD PTR _vPlayerPos$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _vPlayerPos$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _vPlayerPos$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	push	10					; 0000000aH
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?PlaySoundA@CGame@@QAEXHUVector3@@@Z	; CGame::PlaySoundA

; 61   : 			pGame->ToggleKeyInputsDisabled(FALSE);

	push	0
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?ToggleKeyInputsDisabled@CGame@@QAEXH@Z	; CGame::ToggleKeyInputsDisabled

; 62   : 			pGamePlayer->TogglePlayerControllable(TRUE);

	push	1
	mov	ecx, DWORD PTR _pGamePlayer$[ebp]
	call	?TogglePlayerControllable@CPlayerPed@@QAEXH@Z ; CPlayerPed::TogglePlayerControllable

; 63   : 			m_pGUIText->setVisible(false);

	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	call	?setVisible@Window@CEGUI@@QAEX_N@Z	; CEGUI::Window::setVisible
	jmp	$LN9@ProcessLoc

; 64   : 			return;

	jmp	$LN1@ProcessLoc
$LN6@ProcessLoc:

; 65   : 		}
; 66   : 		else if(m_bClearedToSpawn) // WE ARE CLEARED TO SPAWN OR SELECT ANOTHER CLASS

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	$LN1@ProcessLoc

; 67   : 		{
; 68   : 			pGame->ToggleHud(FALSE);

	push	0
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?ToggleHud@CGame@@QAEX_N@Z		; CGame::ToggleHud

; 69   : 			pGame->HideRadar(TRUE);

	push	1
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?HideRadar@CGame@@QAEX_N@Z		; CGame::HideRadar

; 70   : 
; 71   : 			// SHOW INFO ABOUT THE SELECTED CLASS..
; 72   : 			szMsg[0] = '\0';

	mov	BYTE PTR _szMsg$[ebp], 0

; 73   : 			strcat(szMsg, "> Use Left and Right arrow keys to select a class.\n");

	push	OFFSET ??_C@_0DE@DKGBDNIP@?$DO?5Use?5Left?5and?5Right?5arrow?5keys?5@
	lea	eax, DWORD PTR _szMsg$[ebp]
	push	eax
	call	_strcat
	add	esp, 8

; 74   : 			strcat(szMsg, "> Press Shift button when ready to spawn.\n");

	push	OFFSET ??_C@_0CL@LJLMCCJA@?$DO?5Press?5Shift?5button?5when?5ready?5@
	lea	eax, DWORD PTR _szMsg$[ebp]
	push	eax
	call	_strcat
	add	esp, 8

; 75   : 
; 76   : 			if(!m_pGUIText)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	$LN3@ProcessLoc

; 77   : 			{
; 78   : 				m_pGUIText = pGUI->CreateGUIStaticText();

	push	0
	mov	ecx, DWORD PTR ?pGUI@@3PAVCGUI@@A	; pGUI
	call	?CreateGUIStaticText@CGUI@@QAEPAUCGUIStaticText@@PAVWindow@CEGUI@@@Z ; CGUI::CreateGUIStaticText
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax

; 79   : 				m_pGUIText->setText(szMsg);

	lea	eax, DWORD PTR _szMsg$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T209376[ebp]
	call	??0String@CEGUI@@QAE@PBD@Z		; CEGUI::String::String
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T209376[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	call	?setText@Window@CEGUI@@QAEXABVString@2@@Z ; CEGUI::Window::setText
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T209376[ebp]
	call	??1String@CEGUI@@QAE@XZ			; CEGUI::String::~String

; 80   : 				CEGUI::Font * pFont = pGUI->GetTahomaBold10Font();

	mov	ecx, DWORD PTR ?pGUI@@3PAVCGUI@@A	; pGUI
	call	?GetTahomaBold10Font@CGUI@@QAEPAVFont@CEGUI@@XZ ; CGUI::GetTahomaBold10Font
	mov	DWORD PTR _pFont$209273[ebp], eax

; 81   : 				float fTextWidth = pFont->getTextExtent(szMsg);

	lea	eax, DWORD PTR _szMsg$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T209377[ebp]
	call	??0String@CEGUI@@QAE@PBD@Z		; CEGUI::String::String
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T209377[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pFont$209273[ebp]
	call	?getTextExtent@Font@CEGUI@@QBEMABVString@2@M@Z ; CEGUI::Font::getTextExtent
	fstp	DWORD PTR _fTextWidth$209274[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T209377[ebp]
	call	??1String@CEGUI@@QAE@XZ			; CEGUI::String::~String

; 82   : 				float fTextHeight = pFont->getFontHeight();

	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _pFont$209273[ebp]
	call	?getFontHeight@Font@CEGUI@@QBEMM@Z	; CEGUI::Font::getFontHeight
	fstp	DWORD PTR _fTextHeight$209276[ebp]

; 83   : 				m_pGUIText->setSize(CEGUI::UVector2(CEGUI::UDim(0, fTextWidth*3), CEGUI::UDim(0, fTextHeight*3)));

	fld	DWORD PTR _fTextHeight$209276[ebp]
	fmul	QWORD PTR __real@4008000000000000
	fstp	DWORD PTR tv485[ebp]
	fld	DWORD PTR tv485[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T209379[ebp]
	call	??0UDim@CEGUI@@QAE@MM@Z			; CEGUI::UDim::UDim
	mov	DWORD PTR tv180[ebp], eax
	mov	eax, DWORD PTR tv180[ebp]
	mov	DWORD PTR tv423[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR tv423[ebp]
	push	ecx
	fld	DWORD PTR _fTextWidth$209274[ebp]
	fmul	QWORD PTR __real@4008000000000000
	fstp	DWORD PTR tv493[ebp]
	fld	DWORD PTR tv493[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T209380[ebp]
	call	??0UDim@CEGUI@@QAE@MM@Z			; CEGUI::UDim::UDim
	mov	DWORD PTR tv170[ebp], eax
	mov	edx, DWORD PTR tv170[ebp]
	mov	DWORD PTR tv425[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	eax, DWORD PTR tv425[ebp]
	push	eax
	lea	ecx, DWORD PTR $T209378[ebp]
	call	??0UVector2@CEGUI@@QAE@ABVUDim@1@0@Z	; CEGUI::UVector2::UVector2
	mov	DWORD PTR tv443[ebp], eax
	mov	ecx, DWORD PTR tv443[ebp]
	mov	DWORD PTR tv427[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	mov	edx, DWORD PTR tv427[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	call	?setSize@Window@CEGUI@@QAEXABVUVector2@2@@Z ; CEGUI::Window::setSize
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR $T209378[ebp]
	call	??1UVector2@CEGUI@@QAE@XZ		; CEGUI::UVector2::~UVector2
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR $T209380[ebp]
	call	??1UDim@CEGUI@@QAE@XZ			; CEGUI::UDim::~UDim
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T209379[ebp]
	call	??1UDim@CEGUI@@QAE@XZ			; CEGUI::UDim::~UDim

; 84   : 				float fTextX = pFont->getTextExtent("_");

	push	OFFSET ??_C@_01IDAFKMJL@_?$AA@
	lea	ecx, DWORD PTR $T209381[ebp]
	call	??0String@CEGUI@@QAE@PBD@Z		; CEGUI::String::String
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	push	ecx
	fld1
	fstp	DWORD PTR [esp]
	lea	eax, DWORD PTR $T209381[ebp]
	push	eax
	mov	ecx, DWORD PTR _pFont$209273[ebp]
	call	?getTextExtent@Font@CEGUI@@QBEMABVString@2@M@Z ; CEGUI::Font::getTextExtent
	fstp	DWORD PTR _fTextX$209280[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T209381[ebp]
	call	??1String@CEGUI@@QAE@XZ			; CEGUI::String::~String

; 85   : 				float fTextY = -(fTextX + fTextHeight);

	fld	DWORD PTR _fTextX$209280[ebp]
	fadd	DWORD PTR _fTextHeight$209276[ebp]
	fchs
	fstp	DWORD PTR _fTextY$209283[ebp]

; 86   : 				m_pGUIText->setPosition(CEGUI::UVector2(CEGUI::UDim(0, fTextX), CEGUI::UDim(0.8, fTextY)));

	push	ecx
	fld	DWORD PTR _fTextY$209283[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR __real@3f4ccccd
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T209383[ebp]
	call	??0UDim@CEGUI@@QAE@MM@Z			; CEGUI::UDim::UDim
	mov	DWORD PTR tv222[ebp], eax
	mov	eax, DWORD PTR tv222[ebp]
	mov	DWORD PTR tv430[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 6
	mov	ecx, DWORD PTR tv430[ebp]
	push	ecx
	push	ecx
	fld	DWORD PTR _fTextX$209280[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	lea	ecx, DWORD PTR $T209384[ebp]
	call	??0UDim@CEGUI@@QAE@MM@Z			; CEGUI::UDim::UDim
	mov	DWORD PTR tv444[ebp], eax
	mov	edx, DWORD PTR tv444[ebp]
	mov	DWORD PTR tv432[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	mov	eax, DWORD PTR tv432[ebp]
	push	eax
	lea	ecx, DWORD PTR $T209382[ebp]
	call	??0UVector2@CEGUI@@QAE@ABVUDim@1@0@Z	; CEGUI::UVector2::UVector2
	mov	DWORD PTR tv445[ebp], eax
	mov	ecx, DWORD PTR tv445[ebp]
	mov	DWORD PTR tv434[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 8
	mov	edx, DWORD PTR tv434[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	call	?setPosition@Window@CEGUI@@QAEXABVUVector2@2@@Z ; CEGUI::Window::setPosition
	mov	BYTE PTR __$EHRec$[ebp+8], 7
	lea	ecx, DWORD PTR $T209382[ebp]
	call	??1UVector2@CEGUI@@QAE@XZ		; CEGUI::UVector2::~UVector2
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR $T209384[ebp]
	call	??1UDim@CEGUI@@QAE@XZ			; CEGUI::UDim::~UDim
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T209383[ebp]
	call	??1UDim@CEGUI@@QAE@XZ			; CEGUI::UDim::~UDim

; 87   : 				m_pGUIText->setProperty("BackgroundEnabled", "false");

	push	OFFSET ??_C@_05LAPONLG@false?$AA@
	lea	ecx, DWORD PTR $T209385[ebp]
	call	??0String@CEGUI@@QAE@PBD@Z		; CEGUI::String::String
	mov	DWORD PTR __$EHRec$[ebp+8], 9
	push	OFFSET ??_C@_0BC@NDMEIEMB@BackgroundEnabled?$AA@
	lea	ecx, DWORD PTR $T209386[ebp]
	call	??0String@CEGUI@@QAE@PBD@Z		; CEGUI::String::String
	mov	BYTE PTR __$EHRec$[ebp+8], 10		; 0000000aH
	lea	eax, DWORD PTR $T209385[ebp]
	push	eax
	lea	ecx, DWORD PTR $T209386[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	call	?setProperty@PropertySet@CEGUI@@QAEXABVString@2@0@Z ; CEGUI::PropertySet::setProperty
	mov	BYTE PTR __$EHRec$[ebp+8], 9
	lea	ecx, DWORD PTR $T209386[ebp]
	call	??1String@CEGUI@@QAE@XZ			; CEGUI::String::~String
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T209385[ebp]
	call	??1String@CEGUI@@QAE@XZ			; CEGUI::String::~String

; 88   : 				m_pGUIText->setProperty("FrameEnabled", "false");

	push	OFFSET ??_C@_05LAPONLG@false?$AA@
	lea	ecx, DWORD PTR $T209387[ebp]
	call	??0String@CEGUI@@QAE@PBD@Z		; CEGUI::String::String
	mov	DWORD PTR __$EHRec$[ebp+8], 11		; 0000000bH
	push	OFFSET ??_C@_0N@CCPGAGID@FrameEnabled?$AA@
	lea	ecx, DWORD PTR $T209388[ebp]
	call	??0String@CEGUI@@QAE@PBD@Z		; CEGUI::String::String
	mov	BYTE PTR __$EHRec$[ebp+8], 12		; 0000000cH
	lea	eax, DWORD PTR $T209387[ebp]
	push	eax
	lea	ecx, DWORD PTR $T209388[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	call	?setProperty@PropertySet@CEGUI@@QAEXABVString@2@0@Z ; CEGUI::PropertySet::setProperty
	mov	BYTE PTR __$EHRec$[ebp+8], 11		; 0000000bH
	lea	ecx, DWORD PTR $T209388[ebp]
	call	??1String@CEGUI@@QAE@XZ			; CEGUI::String::~String
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T209387[ebp]
	call	??1String@CEGUI@@QAE@XZ			; CEGUI::String::~String

; 89   : 				m_pGUIText->setProperty("Font", "Tahoma-Bold-10");

	push	OFFSET ??_C@_0P@EIIDBBFO@Tahoma?9Bold?910?$AA@
	lea	ecx, DWORD PTR $T209389[ebp]
	call	??0String@CEGUI@@QAE@PBD@Z		; CEGUI::String::String
	mov	DWORD PTR __$EHRec$[ebp+8], 13		; 0000000dH
	push	OFFSET ??_C@_04IEDBBIIG@Font?$AA@
	lea	ecx, DWORD PTR $T209390[ebp]
	call	??0String@CEGUI@@QAE@PBD@Z		; CEGUI::String::String
	mov	BYTE PTR __$EHRec$[ebp+8], 14		; 0000000eH
	lea	eax, DWORD PTR $T209389[ebp]
	push	eax
	lea	ecx, DWORD PTR $T209390[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	call	?setProperty@PropertySet@CEGUI@@QAEXABVString@2@0@Z ; CEGUI::PropertySet::setProperty
	mov	BYTE PTR __$EHRec$[ebp+8], 13		; 0000000dH
	lea	ecx, DWORD PTR $T209390[ebp]
	call	??1String@CEGUI@@QAE@XZ			; CEGUI::String::~String
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T209389[ebp]
	call	??1String@CEGUI@@QAE@XZ			; CEGUI::String::~String

; 90   : 				m_pGUIText->setProperty("TextColours", "tl:FFFFFFFF tr:FFFFFFFF bl:FFFFFFFF br:FFFFFFFF");

	push	OFFSET ??_C@_0DA@FEECGPGI@tl?3FFFFFFFF?5tr?3FFFFFFFF?5bl?3FFFFF@
	lea	ecx, DWORD PTR $T209391[ebp]
	call	??0String@CEGUI@@QAE@PBD@Z		; CEGUI::String::String
	mov	DWORD PTR __$EHRec$[ebp+8], 15		; 0000000fH
	push	OFFSET ??_C@_0M@GDDLCFDG@TextColours?$AA@
	lea	ecx, DWORD PTR $T209392[ebp]
	call	??0String@CEGUI@@QAE@PBD@Z		; CEGUI::String::String
	mov	BYTE PTR __$EHRec$[ebp+8], 16		; 00000010H
	lea	eax, DWORD PTR $T209391[ebp]
	push	eax
	lea	ecx, DWORD PTR $T209392[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	call	?setProperty@PropertySet@CEGUI@@QAEXABVString@2@0@Z ; CEGUI::PropertySet::setProperty
	mov	BYTE PTR __$EHRec$[ebp+8], 15		; 0000000fH
	lea	ecx, DWORD PTR $T209392[ebp]
	call	??1String@CEGUI@@QAE@XZ			; CEGUI::String::~String
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T209391[ebp]
	call	??1String@CEGUI@@QAE@XZ			; CEGUI::String::~String

; 91   : 				m_pGUIText->setAlpha(155);

	push	ecx
	fld	DWORD PTR __real@431b0000
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	call	?setAlpha@Window@CEGUI@@QAEXM@Z		; CEGUI::Window::setAlpha

; 92   : 				m_pGUIText->setVisible(true);

	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	call	?setVisible@Window@CEGUI@@QAEX_N@Z	; CEGUI::Window::setVisible
$LN3@ProcessLoc:

; 93   : 			}
; 94   : 
; 95   : 			CD3DFont *pD3DFont = pChatWindow->m_pD3DFont;

	mov	eax, DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A ; pChatWindow
	mov	ecx, DWORD PTR [eax+968]
	mov	DWORD PTR _pD3DFont$209299[ebp], ecx

; 96   : 			//pD3DFont->DrawText(fDrawX,fDrawY,0xFFFFFFFF,szMsg);
; 97   : 
; 98   : 			// GRAB PLAYER MATRIX FOR SOUND POSITION
; 99   : 			pGamePlayer = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pGamePlayer$[ebp], eax

; 100  : 			pGamePlayer->GetPosition(&vPlayerPos);

	lea	eax, DWORD PTR _vPlayerPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pGamePlayer$[ebp]
	call	?GetPosition@CEntity@@QAEXPAUVector3@@@Z ; CEntity::GetPosition

; 101  : 
; 102  : 			pGame->DisplayHud(FALSE);

	push	0
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?DisplayHud@CGame@@QAEXH@Z		; CGame::DisplayHud

; 103  : 			pGamePlayer->ClearAllWeapons();

	mov	ecx, DWORD PTR _pGamePlayer$[ebp]
	call	?ClearAllWeapons@CPlayerPed@@QAEXXZ	; CPlayerPed::ClearAllWeapons

; 104  : 			pGamePlayer->TogglePlayerControllable(FALSE);

	push	0
	mov	ecx, DWORD PTR _pGamePlayer$[ebp]
	call	?TogglePlayerControllable@CPlayerPed@@QAEXH@Z ; CPlayerPed::TogglePlayerControllable

; 105  : 			dwTicksSinceLastSelection = GetTickCount() - m_dwLastSpawnSelectionTick; // used to delay reselection.

	mov	esi, esp
	call	DWORD PTR __imp__GetTickCount@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR _dwTicksSinceLastSelection$[ebp], eax

; 106  : 
; 107  : 			// ALLOW ANOTHER SELECTION WITH LEFT KEY
; 108  : 			if( (GetKeyState(VK_LEFT)&0x8000) && (dwTicksSinceLastSelection > 250)) { // LEFT ARROW

	mov	esi, esp
	push	37					; 00000025H
	call	DWORD PTR __imp__GetKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 32768				; 00008000H
	je	SHORT $LN2@ProcessLoc
	cmp	DWORD PTR _dwTicksSinceLastSelection$[ebp], 250 ; 000000faH
	jbe	SHORT $LN2@ProcessLoc

; 109  : 				m_bClearedToSpawn = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 110  : 				m_dwLastSpawnSelectionTick = GetTickCount();

	mov	esi, esp
	call	DWORD PTR __imp__GetTickCount@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 111  : 				m_iSelectedClass--;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 112  : 		
; 113  : 				pGame->PlaySound(14, vPlayerPos);

	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	ecx, DWORD PTR _vPlayerPos$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _vPlayerPos$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _vPlayerPos$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	push	14					; 0000000eH
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?PlaySoundA@CGame@@QAEXHUVector3@@@Z	; CGame::PlaySoundA

; 114  : 				pLocalPlayer->RequestClass(m_iSelectedClass);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _pLocalPlayer$[ebp]
	call	?RequestClass@CLocalPlayer@@QAEXH@Z	; CLocalPlayer::RequestClass

; 115  : 				return;

	jmp	$LN9@ProcessLoc
$LN2@ProcessLoc:

; 116  : 			}
; 117  : 
; 118  : 			// ALLOW ANOTHER SELECTION WITH RIGHT KEY
; 119  : 			if( (GetKeyState(VK_RIGHT)&0x8000) && (dwTicksSinceLastSelection > 250)) { // RIGHT ARROW

	mov	esi, esp
	push	39					; 00000027H
	call	DWORD PTR __imp__GetKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 32768				; 00008000H
	je	SHORT $LN1@ProcessLoc
	cmp	DWORD PTR _dwTicksSinceLastSelection$[ebp], 250 ; 000000faH
	jbe	SHORT $LN1@ProcessLoc

; 120  : 	
; 121  : 				m_bClearedToSpawn = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 122  : 				m_dwLastSpawnSelectionTick = GetTickCount();

	mov	esi, esp
	call	DWORD PTR __imp__GetTickCount@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 123  : 				m_iSelectedClass++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 124  : 
; 125  : 				pGame->PlaySound(13, vPlayerPos);

	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	ecx, DWORD PTR _vPlayerPos$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _vPlayerPos$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _vPlayerPos$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	push	13					; 0000000dH
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?PlaySoundA@CGame@@QAEXHUVector3@@@Z	; CGame::PlaySoundA

; 126  : 				pLocalPlayer->RequestClass(m_iSelectedClass);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _pLocalPlayer$[ebp]
	call	?RequestClass@CLocalPlayer@@QAEXH@Z	; CLocalPlayer::RequestClass
$LN1@ProcessLoc:
$LN9@ProcessLoc:

; 127  : 				return;
; 128  : 			}	
; 129  : 		}
; 130  : 	}
; 131  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN32@ProcessLoc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 2540				; 000009ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN32@ProcessLoc:
	DD	2
	DD	$LN31@ProcessLoc
$LN31@ProcessLoc:
	DD	-80					; ffffffb0H
	DD	12					; 0000000cH
	DD	$LN28@ProcessLoc
	DD	-368					; fffffe90H
	DD	256					; 00000100H
	DD	$LN29@ProcessLoc
$LN29@ProcessLoc:
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	77					; 0000004dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
$LN28@ProcessLoc:
	DB	118					; 00000076H
	DB	80					; 00000050H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$0:
	lea	ecx, DWORD PTR $T209376[ebp]
	jmp	??1String@CEGUI@@QAE@XZ			; CEGUI::String::~String
__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$1:
	lea	ecx, DWORD PTR $T209377[ebp]
	jmp	??1String@CEGUI@@QAE@XZ			; CEGUI::String::~String
__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$2:
	lea	ecx, DWORD PTR $T209379[ebp]
	jmp	??1UDim@CEGUI@@QAE@XZ			; CEGUI::UDim::~UDim
__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$3:
	lea	ecx, DWORD PTR $T209380[ebp]
	jmp	??1UDim@CEGUI@@QAE@XZ			; CEGUI::UDim::~UDim
__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$4:
	lea	ecx, DWORD PTR $T209378[ebp]
	jmp	??1UVector2@CEGUI@@QAE@XZ		; CEGUI::UVector2::~UVector2
__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$5:
	lea	ecx, DWORD PTR $T209381[ebp]
	jmp	??1String@CEGUI@@QAE@XZ			; CEGUI::String::~String
__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$6:
	lea	ecx, DWORD PTR $T209383[ebp]
	jmp	??1UDim@CEGUI@@QAE@XZ			; CEGUI::UDim::~UDim
__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$7:
	lea	ecx, DWORD PTR $T209384[ebp]
	jmp	??1UDim@CEGUI@@QAE@XZ			; CEGUI::UDim::~UDim
__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$8:
	lea	ecx, DWORD PTR $T209382[ebp]
	jmp	??1UVector2@CEGUI@@QAE@XZ		; CEGUI::UVector2::~UVector2
__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$9:
	lea	ecx, DWORD PTR $T209385[ebp]
	jmp	??1String@CEGUI@@QAE@XZ			; CEGUI::String::~String
__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$10:
	lea	ecx, DWORD PTR $T209386[ebp]
	jmp	??1String@CEGUI@@QAE@XZ			; CEGUI::String::~String
__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$11:
	lea	ecx, DWORD PTR $T209387[ebp]
	jmp	??1String@CEGUI@@QAE@XZ			; CEGUI::String::~String
__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$12:
	lea	ecx, DWORD PTR $T209388[ebp]
	jmp	??1String@CEGUI@@QAE@XZ			; CEGUI::String::~String
__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$13:
	lea	ecx, DWORD PTR $T209389[ebp]
	jmp	??1String@CEGUI@@QAE@XZ			; CEGUI::String::~String
__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$14:
	lea	ecx, DWORD PTR $T209390[ebp]
	jmp	??1String@CEGUI@@QAE@XZ			; CEGUI::String::~String
__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$15:
	lea	ecx, DWORD PTR $T209391[ebp]
	jmp	??1String@CEGUI@@QAE@XZ			; CEGUI::String::~String
__unwindfunclet$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z$16:
	lea	ecx, DWORD PTR $T209392[ebp]
	jmp	??1String@CEGUI@@QAE@XZ			; CEGUI::String::~String
__ehhandler$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-2544]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z ENDP ; CSpawnSelection::ProcessLocalPlayer
EXTRN	?LookAtPoint@CCamera@@QAEXUVector3@@H@Z:PROC	; CCamera::LookAtPoint
EXTRN	?SetPosition@CCamera@@QAEXUVector3@@@Z:PROC	; CCamera::SetPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?HandleClassSelection@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z
_TEXT	SEGMENT
_pGamePlayer$ = -32					; size = 4
_pGameCamera$ = -20					; size = 4
_this$ = -8						; size = 4
_pLocalPlayer$ = 8					; size = 4
?HandleClassSelection@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z PROC ; CSpawnSelection::HandleClassSelection, COMDAT
; _this$ = ecx

; 136  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 137  : 	CCamera *pGameCamera = pGame->GetCamera();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?GetCamera@CGame@@QAEPAVCCamera@@XZ	; CGame::GetCamera
	mov	DWORD PTR _pGameCamera$[ebp], eax

; 138  : 	CPlayerPed *pGamePlayer = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pGamePlayer$[ebp], eax

; 139  : 	m_bClearedToSpawn = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 140  : 
; 141  : 	pGame->DisplayHud(FALSE);

	push	0
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?DisplayHud@CGame@@QAEXH@Z		; CGame::DisplayHud

; 142  : 
; 143  : 	if(pGameCamera)	{

	cmp	DWORD PTR _pGameCamera$[ebp], 0
	je	SHORT $LN1@HandleClas

; 144  : 		pGameCamera->SetPosition(pNetowkManager->m_vecInitCameraPos);

	mov	eax, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	add	eax, 316				; 0000013cH
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	ecx, DWORD PTR _pGameCamera$[ebp]
	call	?SetPosition@CCamera@@QAEXUVector3@@@Z	; CCamera::SetPosition

; 145  : 		pGameCamera->LookAtPoint(pNetowkManager->m_vecInitCameraLook, 1);

	push	1
	mov	eax, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	add	eax, 328				; 00000148H
	sub	esp, 12					; 0000000cH
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], eax
	mov	ecx, DWORD PTR _pGameCamera$[ebp]
	call	?LookAtPoint@CCamera@@QAEXUVector3@@H@Z	; CCamera::LookAtPoint
$LN1@HandleClas:

; 146  : 	}
; 147  : 
; 148  : 	pLocalPlayer->RequestClass(m_iSelectedClass);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR _pLocalPlayer$[ebp]
	call	?RequestClass@CLocalPlayer@@QAEXH@Z	; CLocalPlayer::RequestClass

; 149  : 	m_dwInitialSelectionTick = GetTickCount();

	mov	esi, esp
	call	DWORD PTR __imp__GetTickCount@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 150  : 	m_dwLastSpawnSelectionTick = GetTickCount();

	mov	esi, esp
	call	DWORD PTR __imp__GetTickCount@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 151  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?HandleClassSelection@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z ENDP ; CSpawnSelection::HandleClassSelection
_TEXT	ENDS
PUBLIC	?HandleClassSelectionOutcome@CSpawnSelection@@QAEXPAU_PLAYER_SPAWN_INFO@@H@Z ; CSpawnSelection::HandleClassSelectionOutcome
EXTRN	?GiveWeapon@CPlayerPed@@QAEHHH@Z:PROC		; CPlayerPed::GiveWeapon
EXTRN	?SetModel@CPlayerPed@@QAEXH@Z:PROC		; CPlayerPed::SetModel
EXTRN	?SetRotation@CPlayerPed@@QAEXM@Z:PROC		; CPlayerPed::SetRotation
EXTRN	?Teleport@CEntity@@QAEXMMM@Z:PROC		; CEntity::Teleport
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?HandleClassSelectionOutcome@CSpawnSelection@@QAEXPAU_PLAYER_SPAWN_INFO@@H@Z
_TEXT	SEGMENT
_pGamePlayer$ = -20					; size = 4
_this$ = -8						; size = 4
_pSpawnInfo$ = 8					; size = 4
_bOutcome$ = 12						; size = 4
?HandleClassSelectionOutcome@CSpawnSelection@@QAEXPAU_PLAYER_SPAWN_INFO@@H@Z PROC ; CSpawnSelection::HandleClassSelectionOutcome, COMDAT
; _this$ = ecx

; 156  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 157  : 	CPlayerPed *pGamePlayer = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pGamePlayer$[ebp], eax

; 158  : 
; 159  : 	if(bOutcome) {

	cmp	DWORD PTR _bOutcome$[ebp], 0
	je	$LN3@HandleClas@2

; 160  : 		if(pGamePlayer)	{

	cmp	DWORD PTR _pGamePlayer$[ebp], 0
	je	SHORT $LN1@HandleClas@2

; 161  : 			pGamePlayer->ClearAllWeapons();

	mov	ecx, DWORD PTR _pGamePlayer$[ebp]
	call	?ClearAllWeapons@CPlayerPed@@QAEXXZ	; CPlayerPed::ClearAllWeapons

; 162  : 			pGamePlayer->Teleport(pNetowkManager->m_vecInitPlayerPos.X, pNetowkManager->m_vecInitPlayerPos.Y, 
; 163  : 				pNetowkManager->m_vecInitPlayerPos.Z);

	mov	eax, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	push	ecx
	fld	DWORD PTR [eax+312]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	push	ecx
	fld	DWORD PTR [ecx+308]
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	push	ecx
	fld	DWORD PTR [edx+304]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _pGamePlayer$[ebp]
	call	?Teleport@CEntity@@QAEXMMM@Z		; CEntity::Teleport

; 164  : 			pGamePlayer->SetRotation(0.0f);

	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _pGamePlayer$[ebp]
	call	?SetRotation@CPlayerPed@@QAEXM@Z	; CPlayerPed::SetRotation

; 165  : 			pGamePlayer->SetModel(pSpawnInfo->byteSkin);

	mov	eax, DWORD PTR _pSpawnInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	push	ecx
	mov	ecx, DWORD PTR _pGamePlayer$[ebp]
	call	?SetModel@CPlayerPed@@QAEXH@Z		; CPlayerPed::SetModel

; 166  : 			if(pSpawnInfo->iSpawnWeapons[0] != (-1)) {

	mov	eax, DWORD PTR _pSpawnInfo$[ebp]
	cmp	DWORD PTR [eax+20], -1
	je	SHORT $LN1@HandleClas@2

; 167  : 				pGamePlayer->GiveWeapon(pSpawnInfo->iSpawnWeapons[0],pSpawnInfo->iSpawnWeaponsAmmo[0]);

	mov	eax, DWORD PTR _pSpawnInfo$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR _pSpawnInfo$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _pGamePlayer$[ebp]
	call	?GiveWeapon@CPlayerPed@@QAEHHH@Z	; CPlayerPed::GiveWeapon
$LN1@HandleClas@2:

; 168  : 			}
; 169  : 		}
; 170  : 
; 171  : 		m_bClearedToSpawn = TRUE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 1
$LN3@HandleClas@2:

; 172  : 	}
; 173  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?HandleClassSelectionOutcome@CSpawnSelection@@QAEXPAU_PLAYER_SPAWN_INFO@@H@Z ENDP ; CSpawnSelection::HandleClassSelectionOutcome
_TEXT	ENDS
PUBLIC	?SetSelectedClass@CSpawnSelection@@QAEXH@Z	; CSpawnSelection::SetSelectedClass
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetSelectedClass@CSpawnSelection@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iSelectedClass$ = 8					; size = 4
?SetSelectedClass@CSpawnSelection@@QAEXH@Z PROC		; CSpawnSelection::SetSelectedClass, COMDAT
; _this$ = ecx

; 178  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 179  : 	m_iSelectedClass = iSelectedClass;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _iSelectedClass$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 180  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSelectedClass@CSpawnSelection@@QAEXH@Z ENDP		; CSpawnSelection::SetSelectedClass
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\client\game\common.h
_TEXT	ENDS
;	COMDAT ??0Vector3@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Vector3@@QAE@XZ PROC					; Vector3::Vector3, COMDAT
; _this$ = ecx

; 34   : 	Vector3()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 35   : 	{
; 36   : 		X = Y = Z = 0;

	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax+8]
	mov	ecx, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [edx]

; 37   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0Vector3@@QAE@XZ ENDP					; Vector3::Vector3
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??0CPlayerPed@@QAE@XZ:PROC			; CPlayerPed::CPlayerPed
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT xdata$x
; File d:\vice-players-master\client\game\cgame.h
xdata$x	SEGMENT
__unwindtable$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ$0
__ehfuncinfo$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
_TEXT	SEGMENT
tv74 = -244						; size = 4
$T209451 = -236						; size = 4
$T209452 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ PROC		; CGame::FindPlayerPed, COMDAT
; _this$ = ecx

; 101  : 	CPlayerPed  *FindPlayerPed() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 102  : 		if(m_pInternalPlayer==NULL)	m_pInternalPlayer = new CPlayerPed();

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN1@FindPlayer
	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T209452[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T209452[ebp], 0
	je	SHORT $LN4@FindPlayer
	mov	ecx, DWORD PTR $T209452[ebp]
	call	??0CPlayerPed@@QAE@XZ			; CPlayerPed::CPlayerPed
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN5@FindPlayer
$LN4@FindPlayer:
	mov	DWORD PTR tv74[ebp], 0
$LN5@FindPlayer:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T209451[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T209451[ebp]
	mov	DWORD PTR [ecx+4], edx
$LN1@FindPlayer:

; 103  : 		return m_pInternalPlayer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 104  : 	};

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ$0:
	mov	eax, DWORD PTR $T209452[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ENDP		; CGame::FindPlayerPed
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetCamera@CGame@@QAEPAVCCamera@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetCamera@CGame@@QAEPAVCCamera@@XZ PROC		; CGame::GetCamera, COMDAT
; _this$ = ecx

; 106  : 	CCamera     *GetCamera() {	return m_pInternalCamera; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCamera@CGame@@QAEPAVCCamera@@XZ ENDP		; CGame::GetCamera
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\client\net\clocalplayer.h
_TEXT	ENDS
;	COMDAT ?IsActive@CLocalPlayer@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IsActive@CLocalPlayer@@QAEHXZ PROC			; CLocalPlayer::IsActive, COMDAT
; _this$ = ecx

; 76   : 	BOOL IsActive() { return m_bIsActive; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+56]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?IsActive@CLocalPlayer@@QAEHXZ ENDP			; CLocalPlayer::IsActive
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?IsWasted@CLocalPlayer@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IsWasted@CLocalPlayer@@QAEHXZ PROC			; CLocalPlayer::IsWasted, COMDAT
; _this$ = ecx

; 77   : 	BOOL IsWasted() { return m_bIsWasted; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+60]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?IsWasted@CLocalPlayer@@QAEHXZ ENDP			; CLocalPlayer::IsWasted
_TEXT	ENDS
PUBLIC	?assign@String@CEGUI@@QAEAAV12@PBD@Z		; CEGUI::String::assign
PUBLIC	?init@String@CEGUI@@AAEXXZ			; CEGUI::String::init
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\vendor\cegui\cegui\include\ceguistring.h
;	COMDAT ??0String@CEGUI@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_cstr$ = 8						; size = 4
??0String@CEGUI@@QAE@PBD@Z PROC				; CEGUI::String::String, COMDAT
; _this$ = ecx

; 606  : 	String(const char* cstr)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 	{
; 608  : 		init();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@String@CEGUI@@AAEXXZ		; CEGUI::String::init

; 609  : 		assign(cstr);

	mov	eax, DWORD PTR _cstr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@String@CEGUI@@QAEAAV12@PBD@Z	; CEGUI::String::assign

; 610  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0String@CEGUI@@QAE@PBD@Z ENDP				; CEGUI::String::String
_TEXT	ENDS
PUBLIC	?assign@String@CEGUI@@QAEAAV12@PBDI@Z		; CEGUI::String::assign
EXTRN	_strlen:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?assign@String@CEGUI@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_cstr$ = 8						; size = 4
?assign@String@CEGUI@@QAEAAV12@PBD@Z PROC		; CEGUI::String::assign, COMDAT
; _this$ = ecx

; 1554 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1555 : 		return assign(cstr, strlen(cstr));

	mov	eax, DWORD PTR _cstr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _cstr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@String@CEGUI@@QAEAAV12@PBDI@Z	; CEGUI::String::assign

; 1556 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@String@CEGUI@@QAEAAV12@PBD@Z ENDP		; CEGUI::String::assign
_TEXT	ENDS
PUBLIC	?setlen@String@CEGUI@@AAEXI@Z			; CEGUI::String::setlen
PUBLIC	?ptr@String@CEGUI@@QAEPAIXZ			; CEGUI::String::ptr
EXTRN	?grow@String@CEGUI@@AAE_NI@Z:PROC		; CEGUI::String::grow
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?assign@String@CEGUI@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_i$129839 = -32						; size = 4
_pt$ = -20						; size = 4
_this$ = -8						; size = 4
_chars$ = 8						; size = 4
_chars_len$ = 12					; size = 4
?assign@String@CEGUI@@QAEAAV12@PBDI@Z PROC		; CEGUI::String::assign, COMDAT
; _this$ = ecx

; 1575 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1576 : 		grow(chars_len);

	mov	eax, DWORD PTR _chars_len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?grow@String@CEGUI@@AAE_NI@Z		; CEGUI::String::grow

; 1577 : 		utf32* pt = ptr();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ptr@String@CEGUI@@QAEPAIXZ		; CEGUI::String::ptr
	mov	DWORD PTR _pt$[ebp], eax

; 1578 : 
; 1579 : 		for (size_type i = 0; i < chars_len; ++i)

	mov	DWORD PTR _i$129839[ebp], 0
	jmp	SHORT $LN3@assign
$LN2@assign:
	mov	eax, DWORD PTR _i$129839[ebp]
	add	eax, 1
	mov	DWORD PTR _i$129839[ebp], eax
$LN3@assign:
	mov	eax, DWORD PTR _i$129839[ebp]
	cmp	eax, DWORD PTR _chars_len$[ebp]
	jae	SHORT $LN1@assign

; 1580 : 		{
; 1581 : 			*pt++ = static_cast<utf32>(static_cast<unsigned char>(*chars++));

	mov	eax, DWORD PTR _chars$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _pt$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _pt$[ebp]
	add	eax, 4
	mov	DWORD PTR _pt$[ebp], eax
	mov	ecx, DWORD PTR _chars$[ebp]
	add	ecx, 1
	mov	DWORD PTR _chars$[ebp], ecx

; 1582 : 		}

	jmp	SHORT $LN2@assign
$LN1@assign:

; 1583 : 
; 1584 : 		setlen(chars_len);

	mov	eax, DWORD PTR _chars_len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setlen@String@CEGUI@@AAEXI@Z		; CEGUI::String::setlen

; 1585 : 		return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1586 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@String@CEGUI@@QAEAAV12@PBDI@Z ENDP		; CEGUI::String::assign
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ptr@String@CEGUI@@QAEPAIXZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?ptr@String@CEGUI@@QAEPAIXZ PROC			; CEGUI::String::ptr, COMDAT
; _this$ = ecx

; 1206 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1207 : 		return (d_reserve > STR_QUICKBUFF_SIZE) ? d_buffer : d_quickbuff;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 32			; 00000020H
	jbe	SHORT $LN3@ptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+148]
	mov	DWORD PTR tv68[ebp], edx
	jmp	SHORT $LN4@ptr
$LN3@ptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	mov	DWORD PTR tv68[ebp], eax
$LN4@ptr:
	mov	eax, DWORD PTR tv68[ebp]

; 1208 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ptr@String@CEGUI@@QAEPAIXZ ENDP			; CEGUI::String::ptr
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setlen@String@CEGUI@@AAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_len$ = 8						; size = 4
?setlen@String@CEGUI@@AAEXI@Z PROC			; CEGUI::String::setlen, COMDAT
; _this$ = ecx

; 4797 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 4798 : 		d_cplength = len;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax], ecx

; 4799 : 		ptr()[len] = (utf32)(0);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ptr@String@CEGUI@@QAEPAIXZ		; CEGUI::String::ptr
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+ecx*4], 0

; 4800 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setlen@String@CEGUI@@AAEXI@Z ENDP			; CEGUI::String::setlen
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?init@String@CEGUI@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?init@String@CEGUI@@AAEXXZ PROC				; CEGUI::String::init, COMDAT
; _this$ = ecx

; 4804 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 4805 : 		d_reserve			= STR_QUICKBUFF_SIZE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 32			; 00000020H

; 4806 : 		d_encodedbuff		= 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 4807 : 		d_encodedbufflen	= 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 4808 : 		d_encodeddatlen		= 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 4809 :         d_buffer            = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+148], 0

; 4810 : 		setlen(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setlen@String@CEGUI@@AAEXI@Z		; CEGUI::String::setlen

; 4811 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?init@String@CEGUI@@AAEXXZ ENDP				; CEGUI::String::init
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\vendor\cegui\cegui\include\ceguiudim.h
_TEXT	ENDS
;	COMDAT ??0UDim@CEGUI@@QAE@MM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_scale$ = 8						; size = 4
_offset$ = 12						; size = 4
??0UDim@CEGUI@@QAE@MM@Z PROC				; CEGUI::UDim::UDim, COMDAT
; _this$ = ecx

; 51   :     UDim(float scale, float offset) : d_scale(scale), d_offset(offset) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _scale$[ebp]
	fstp	DWORD PTR [eax]
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _offset$[ebp]
	fstp	DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0UDim@CEGUI@@QAE@MM@Z ENDP				; CEGUI::UDim::UDim
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1UDim@CEGUI@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1UDim@CEGUI@@QAE@XZ PROC				; CEGUI::UDim::~UDim, COMDAT
; _this$ = ecx

; 53   :     ~UDim() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1UDim@CEGUI@@QAE@XZ ENDP				; CEGUI::UDim::~UDim
_TEXT	ENDS
PUBLIC	??0UDim@CEGUI@@QAE@ABV01@@Z			; CEGUI::UDim::UDim
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0UVector2@CEGUI@@QAE@ABVUDim@1@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0UVector2@CEGUI@@QAE@ABVUDim@1@0@Z$0
__ehfuncinfo$??0UVector2@CEGUI@@QAE@ABVUDim@1@0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0UVector2@CEGUI@@QAE@ABVUDim@1@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0UVector2@CEGUI@@QAE@ABVUDim@1@0@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_x$ = 8							; size = 4
_y$ = 12						; size = 4
??0UVector2@CEGUI@@QAE@ABVUDim@1@0@Z PROC		; CEGUI::UVector2::UVector2, COMDAT
; _this$ = ecx

; 132  :     UVector2(const UDim& x, const UDim& y) : d_x(x), d_y(y) {}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0UVector2@CEGUI@@QAE@ABVUDim@1@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0UDim@CEGUI@@QAE@ABV01@@Z		; CEGUI::UDim::UDim
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0UDim@CEGUI@@QAE@ABV01@@Z		; CEGUI::UDim::UDim
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0UVector2@CEGUI@@QAE@ABVUDim@1@0@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1UDim@CEGUI@@QAE@XZ			; CEGUI::UDim::~UDim
__ehhandler$??0UVector2@CEGUI@@QAE@ABVUDim@1@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0UVector2@CEGUI@@QAE@ABVUDim@1@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0UVector2@CEGUI@@QAE@ABVUDim@1@0@Z ENDP		; CEGUI::UVector2::UVector2
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0UDim@CEGUI@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_v$ = 8							; size = 4
??0UDim@CEGUI@@QAE@ABV01@@Z PROC			; CEGUI::UDim::UDim, COMDAT
; _this$ = ecx

; 52   :     UDim(const UDim& v): d_scale(v.d_scale), d_offset(v.d_offset) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	fld	DWORD PTR [ecx]
	fstp	DWORD PTR [eax]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	fld	DWORD PTR [ecx+4]
	fstp	DWORD PTR [eax+4]
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0UDim@CEGUI@@QAE@ABV01@@Z ENDP			; CEGUI::UDim::UDim
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1UVector2@CEGUI@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1UVector2@CEGUI@@QAE@XZ$0
__ehfuncinfo$??1UVector2@CEGUI@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1UVector2@CEGUI@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1UVector2@CEGUI@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1UVector2@CEGUI@@QAE@XZ PROC				; CEGUI::UVector2::~UVector2, COMDAT
; _this$ = ecx

; 134  :     ~UVector2() {}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1UVector2@CEGUI@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??1UDim@CEGUI@@QAE@XZ			; CEGUI::UDim::~UDim
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1UDim@CEGUI@@QAE@XZ			; CEGUI::UDim::~UDim
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1UVector2@CEGUI@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1UDim@CEGUI@@QAE@XZ			; CEGUI::UDim::~UDim
__ehhandler$??1UVector2@CEGUI@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1UVector2@CEGUI@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1UVector2@CEGUI@@QAE@XZ ENDP				; CEGUI::UVector2::~UVector2
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\vendor\cegui\cegui\include\ceguifont.h
;	COMDAT ?getFontHeight@Font@CEGUI@@QBEMM@Z
_TEXT	SEGMENT
tv76 = -208						; size = 4
_this$ = -8						; size = 4
_y_scale$ = 8						; size = 4
?getFontHeight@Font@CEGUI@@QBEMM@Z PROC			; CEGUI::Font::getFontHeight, COMDAT
; _this$ = ecx

; 205  :     { return (d_ascender - d_descender) * y_scale; }

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+640]
	mov	ecx, DWORD PTR _this$[ebp]
	fsub	DWORD PTR [ecx+644]
	fmul	DWORD PTR _y_scale$[ebp]
	fstp	DWORD PTR tv76[ebp]
	fld	DWORD PTR tv76[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?getFontHeight@Font@CEGUI@@QBEMM@Z ENDP			; CEGUI::Font::getFontHeight
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\client\net\cplayermanager.h
_TEXT	ENDS
;	COMDAT ?GetLocalPlayer@CPlayerManager@@QAEPAVCLocalPlayer@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetLocalPlayer@CPlayerManager@@QAEPAVCLocalPlayer@@XZ PROC ; CPlayerManager::GetLocalPlayer, COMDAT
; _this$ = ecx

; 39   : 	CLocalPlayer * GetLocalPlayer() { return m_pLocalPlayer; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+200]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLocalPlayer@CPlayerManager@@QAEPAVCLocalPlayer@@XZ ENDP ; CPlayerManager::GetLocalPlayer
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\client\net\cnetworkmanager.h
_TEXT	ENDS
;	COMDAT ?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ PROC ; CNetworkManager::GetPlayerManager, COMDAT
; _this$ = ecx

; 79   : 	CPlayerManager * GetPlayerManager() { return m_pPlayerManager; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ENDP ; CNetworkManager::GetPlayerManager
_TEXT	ENDS
END
