; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	d:\vice-players-master\Client\net\netrpc.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	??$Read@I@BitStream@RakNet@@QAE_NAAI@Z		; RakNet::BitStream::Read<unsigned int>
PUBLIC	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z		; RakNet::BitStream::Read<unsigned char>
PUBLIC	?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ; CNetworkManager::GetPlayerManager
PUBLIC	__$ArrayPad$
PUBLIC	?ServerJoin@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; ServerJoin
EXTRN	?New@CPlayerManager@@QAEHEPAD@Z:PROC		; CPlayerManager::New
EXTRN	?Read@BitStream@RakNet@@QAE_NPADI@Z:PROC	; RakNet::BitStream::Read
EXTRN	_memset:PROC
EXTRN	?pNetowkManager@@3PAVCNetworkManager@@A:DWORD	; pNetowkManager
EXTRN	___security_cookie:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\vice-players-master\client\net\netrpc.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ?ServerJoin@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_uiNameLength$ = -68					; size = 4
_playerID$ = -53					; size = 1
_szPlayerName$ = -44					; size = 24
_pPlayerManager$ = -12					; size = 4
__$ArrayPad$ = -4					; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?ServerJoin@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; ServerJoin, COMDAT

; 30   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 31   : 	CPlayerManager *pPlayerManager = pNetowkManager->GetPlayerManager();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ; CNetworkManager::GetPlayerManager
	mov	DWORD PTR _pPlayerManager$[ebp], eax

; 32   : 	CHAR szPlayerName[MAX_PLAYER_NAME];
; 33   : 	EntityId playerID;
; 34   : 	UINT uiNameLength;
; 35   : 
; 36   : 	memset(szPlayerName,0,MAX_PLAYER_NAME);

	push	24					; 00000018H
	push	0
	lea	eax, DWORD PTR _szPlayerName$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 37   : 
; 38   : 	bitStream->Read(playerID);

	lea	eax, DWORD PTR _playerID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 39   : 	bitStream->Read(uiNameLength);

	lea	eax, DWORD PTR _uiNameLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@I@BitStream@RakNet@@QAE_NAAI@Z	; RakNet::BitStream::Read<unsigned int>

; 40   : 	bitStream->Read(szPlayerName,uiNameLength);

	mov	eax, DWORD PTR _uiNameLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _szPlayerName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?Read@BitStream@RakNet@@QAE_NPADI@Z	; RakNet::BitStream::Read

; 41   : 	szPlayerName[uiNameLength] = '\0';

	mov	eax, DWORD PTR _uiNameLength$[ebp]
	mov	BYTE PTR _szPlayerName$[ebp+eax], 0

; 42   : 
; 43   : 	// Add this client to the player pool.
; 44   : 	pPlayerManager->New(playerID, szPlayerName);

	lea	eax, DWORD PTR _szPlayerName$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _playerID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pPlayerManager$[ebp]
	call	?New@CPlayerManager@@QAEHEPAD@Z		; CPlayerManager::New

; 45   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@ServerJoin
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@ServerJoin:
	DD	3
	DD	$LN6@ServerJoin
$LN6@ServerJoin:
	DD	-44					; ffffffd4H
	DD	24					; 00000018H
	DD	$LN3@ServerJoin
	DD	-53					; ffffffcbH
	DD	1
	DD	$LN4@ServerJoin
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN5@ServerJoin
$LN5@ServerJoin:
	DB	117					; 00000075H
	DB	105					; 00000069H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN4@ServerJoin:
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
$LN3@ServerJoin:
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	80					; 00000050H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
?ServerJoin@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; ServerJoin
_TEXT	ENDS
PUBLIC	?ServerQuit@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; ServerQuit
EXTRN	?Delete@CPlayerManager@@QAEHEE@Z:PROC		; CPlayerManager::Delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ServerQuit@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_byteReason$ = -29					; size = 1
_playerID$ = -17					; size = 1
_pPlayerManager$ = -8					; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?ServerQuit@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; ServerQuit, COMDAT

; 52   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 53   : 	CPlayerManager *pPlayerManager = pNetowkManager->GetPlayerManager();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ; CNetworkManager::GetPlayerManager
	mov	DWORD PTR _pPlayerManager$[ebp], eax

; 54   : 	EntityId playerID;
; 55   : 	BYTE byteReason;
; 56   : 
; 57   : 	bitStream->Read(playerID);

	lea	eax, DWORD PTR _playerID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 58   : 	bitStream->Read(byteReason);

	lea	eax, DWORD PTR _byteReason$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 59   : 
; 60   : 	// Delete this client from the player pool.
; 61   : 	pPlayerManager->Delete(playerID,byteReason);

	movzx	eax, BYTE PTR _byteReason$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _playerID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pPlayerManager$[ebp]
	call	?Delete@CPlayerManager@@QAEHEE@Z	; CPlayerManager::Delete

; 62   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@ServerQuit
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@ServerQuit:
	DD	2
	DD	$LN5@ServerQuit
$LN5@ServerQuit:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@ServerQuit
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN4@ServerQuit
$LN4@ServerQuit:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN3@ServerQuit:
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
?ServerQuit@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; ServerQuit
_TEXT	ENDS
PUBLIC	?SetGameState@CNetworkManager@@QAEXH@Z		; CNetworkManager::SetGameState
PUBLIC	?SetLocalPlayerID@CPlayerManager@@QAEXE@Z	; CPlayerManager::SetLocalPlayerID
PUBLIC	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z		; RakNet::BitStream::Read<float>
PUBLIC	?InitGame@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; InitGame
EXTRN	?InitGameLogic@CNetworkManager@@QAEXXZ:PROC	; CNetworkManager::InitGameLogic
EXTRN	?FadeScreen@CGame@@QAEXHH@Z:PROC		; CGame::FadeScreen
EXTRN	?pGame@@3PAVCGame@@A:DWORD			; pGame
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InitGame@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_myPlayerID$ = -17					; size = 1
_pPlayerManager$ = -8					; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?InitGame@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC	; InitGame, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 70   : 	CPlayerManager *pPlayerManager = pNetowkManager->GetPlayerManager();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ; CNetworkManager::GetPlayerManager
	mov	DWORD PTR _pPlayerManager$[ebp], eax

; 71   : 	EntityId myPlayerID;
; 72   : 
; 73   : 	bitStream->Read((char *)&pNetowkManager->m_vecInitPlayerPos, sizeof(Vector3));

	push	12					; 0000000cH
	mov	eax, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	add	eax, 304				; 00000130H
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?Read@BitStream@RakNet@@QAE_NPADI@Z	; RakNet::BitStream::Read

; 74   : 	bitStream->Read((char *)&pNetowkManager->m_vecInitCameraPos, sizeof(Vector3));

	push	12					; 0000000cH
	mov	eax, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	add	eax, 316				; 0000013cH
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?Read@BitStream@RakNet@@QAE_NPADI@Z	; RakNet::BitStream::Read

; 75   : 	bitStream->Read((char *)&pNetowkManager->m_vecInitCameraLook, sizeof(Vector3));

	push	12					; 0000000cH
	mov	eax, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	add	eax, 328				; 00000148H
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?Read@BitStream@RakNet@@QAE_NPADI@Z	; RakNet::BitStream::Read

; 76   : 	bitStream->Read(pNetowkManager->m_WorldBounds[0]);

	mov	eax, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	add	eax, 340				; 00000154H
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 77   : 	bitStream->Read(pNetowkManager->m_WorldBounds[1]);

	mov	eax, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	add	eax, 344				; 00000158H
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 78   : 	bitStream->Read(pNetowkManager->m_WorldBounds[2]);

	mov	eax, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	add	eax, 348				; 0000015cH
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 79   : 	bitStream->Read(pNetowkManager->m_WorldBounds[3]);

	mov	eax, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	add	eax, 352				; 00000160H
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 80   : 	bitStream->Read(pNetowkManager->m_byteFriendlyFire);

	mov	eax, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	add	eax, 356				; 00000164H
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 81   : 	bitStream->Read(pNetowkManager->m_byteShowOnRadar);

	mov	eax, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	add	eax, 357				; 00000165H
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 82   : 	bitStream->Read(myPlayerID);

	lea	eax, DWORD PTR _myPlayerID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 83   : 
; 84   : 	pPlayerManager->SetLocalPlayerID(myPlayerID);

	movzx	eax, BYTE PTR _myPlayerID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayerManager$[ebp]
	call	?SetLocalPlayerID@CPlayerManager@@QAEXE@Z ; CPlayerManager::SetLocalPlayerID

; 85   : 
; 86   : 	pGame->FadeScreen(1, 0);

	push	0
	push	1
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FadeScreen@CGame@@QAEXHH@Z		; CGame::FadeScreen

; 87   : 	pNetowkManager->InitGameLogic();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?InitGameLogic@CNetworkManager@@QAEXXZ	; CNetworkManager::InitGameLogic

; 88   : 	pNetowkManager->SetGameState(GAMESTATE_CONNECTED);

	push	2
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?SetGameState@CNetworkManager@@QAEXH@Z	; CNetworkManager::SetGameState

; 89   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@InitGame
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@InitGame:
	DD	1
	DD	$LN4@InitGame
$LN4@InitGame:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@InitGame
$LN3@InitGame:
	DB	109					; 0000006dH
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
?InitGame@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP	; InitGame
_TEXT	ENDS
PUBLIC	?GetAt@CPlayerManager@@QAEPAVCRemotePlayer@@E@Z	; CPlayerManager::GetAt
PUBLIC	?GetLocalPlayerName@CPlayerManager@@QAEPADXZ	; CPlayerManager::GetLocalPlayerName
PUBLIC	?GetLocalPlayer@CPlayerManager@@QAEPAVCLocalPlayer@@XZ ; CPlayerManager::GetLocalPlayer
PUBLIC	?GetLocalPlayerID@CPlayerManager@@QAEEXZ	; CPlayerManager::GetLocalPlayerID
PUBLIC	__$ArrayPad$
PUBLIC	?Chat@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z	; Chat
EXTRN	?Say@CRemotePlayer@@QAEXPAD@Z:PROC		; CRemotePlayer::Say
EXTRN	?AddChatMessage@CChatWindow@@QAEXPADK0@Z:PROC	; CChatWindow::AddChatMessage
EXTRN	?pChatWindow@@3PAVCChatWindow@@A:DWORD		; pChatWindow
EXTRN	?GetTeamColorAsARGB@CLocalPlayer@@QAEKXZ:PROC	; CLocalPlayer::GetTeamColorAsARGB
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Chat@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_pRemotePlayer$209299 = -312				; size = 4
_pPlayerManager$ = -300					; size = 4
_szText$ = -288						; size = 256
_byteTextLen$ = -21					; size = 1
_playerID$ = -9						; size = 1
__$ArrayPad$ = -4					; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Chat@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC	; Chat, COMDAT

; 95   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 508				; 000001fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-508]
	mov	ecx, 127				; 0000007fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 96   : 	EntityId playerID;
; 97   : 	BYTE byteTextLen;
; 98   : 	CHAR szText[256];
; 99   : 
; 100  : 	bitStream->Read(playerID);

	lea	eax, DWORD PTR _playerID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 101  : 	bitStream->Read(byteTextLen);

	lea	eax, DWORD PTR _byteTextLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 102  : 	bitStream->Read(szText,byteTextLen);

	movzx	eax, BYTE PTR _byteTextLen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _szText$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?Read@BitStream@RakNet@@QAE_NPADI@Z	; RakNet::BitStream::Read

; 103  : 
; 104  : 	szText[byteTextLen] = '\0';

	movzx	eax, BYTE PTR _byteTextLen$[ebp]
	mov	BYTE PTR _szText$[ebp+eax], 0

; 105  : 
; 106  : 	CPlayerManager * pPlayerManager = pNetowkManager->GetPlayerManager();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ; CNetworkManager::GetPlayerManager
	mov	DWORD PTR _pPlayerManager$[ebp], eax

; 107  : 	if(playerID == pPlayerManager->GetLocalPlayerID()) {

	movzx	esi, BYTE PTR _playerID$[ebp]
	mov	ecx, DWORD PTR _pPlayerManager$[ebp]
	call	?GetLocalPlayerID@CPlayerManager@@QAEEXZ ; CPlayerManager::GetLocalPlayerID
	movzx	eax, al
	cmp	esi, eax
	jne	SHORT $LN3@Chat

; 108  : 		pChatWindow->AddChatMessage(pNetowkManager->GetPlayerManager()->GetLocalPlayerName(),
; 109  : 			pPlayerManager->GetLocalPlayer()->GetTeamColorAsARGB(),szText);

	lea	eax, DWORD PTR _szText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayerManager$[ebp]
	call	?GetLocalPlayer@CPlayerManager@@QAEPAVCLocalPlayer@@XZ ; CPlayerManager::GetLocalPlayer
	mov	ecx, eax
	call	?GetTeamColorAsARGB@CLocalPlayer@@QAEKXZ ; CLocalPlayer::GetTeamColorAsARGB
	push	eax
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ; CNetworkManager::GetPlayerManager
	mov	ecx, eax
	call	?GetLocalPlayerName@CPlayerManager@@QAEPADXZ ; CPlayerManager::GetLocalPlayerName
	push	eax
	mov	ecx, DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A ; pChatWindow
	call	?AddChatMessage@CChatWindow@@QAEXPADK0@Z ; CChatWindow::AddChatMessage

; 110  : 	}
; 111  : 	else

	jmp	SHORT $LN4@Chat
$LN3@Chat:

; 112  : 	{
; 113  : 		CRemotePlayer *pRemotePlayer = pNetowkManager->GetPlayerManager()->GetAt(playerID);

	movzx	eax, BYTE PTR _playerID$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ; CNetworkManager::GetPlayerManager
	mov	ecx, eax
	call	?GetAt@CPlayerManager@@QAEPAVCRemotePlayer@@E@Z ; CPlayerManager::GetAt
	mov	DWORD PTR _pRemotePlayer$209299[ebp], eax

; 114  : 		if(pRemotePlayer) {

	cmp	DWORD PTR _pRemotePlayer$209299[ebp], 0
	je	SHORT $LN4@Chat

; 115  : 			pRemotePlayer->Say(szText);	

	lea	eax, DWORD PTR _szText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pRemotePlayer$209299[ebp]
	call	?Say@CRemotePlayer@@QAEXPAD@Z		; CRemotePlayer::Say
$LN4@Chat:

; 116  : 		}
; 117  : 	}
; 118  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Chat
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 508				; 000001fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@Chat:
	DD	3
	DD	$LN9@Chat
$LN9@Chat:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN6@Chat
	DD	-21					; ffffffebH
	DD	1
	DD	$LN7@Chat
	DD	-288					; fffffee0H
	DD	256					; 00000100H
	DD	$LN8@Chat
$LN8@Chat:
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN7@Chat:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN6@Chat:
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
?Chat@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP	; Chat
_TEXT	ENDS
PUBLIC	?Passenger@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Passenger
EXTRN	?StorePassengerData@CRemotePlayer@@QAEXEE@Z:PROC ; CRemotePlayer::StorePassengerData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Passenger@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_pRemotePlayer$ = -44					; size = 4
_byteSeat$ = -29					; size = 1
_vehicleID$ = -17					; size = 1
_playerID$ = -5						; size = 1
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Passenger@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC	; Passenger, COMDAT

; 125  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 126  : 	EntityId playerID;
; 127  : 	EntityId vehicleID;
; 128  : 	BYTE byteSeat;
; 129  : 
; 130  : 	bitStream->Read(playerID);

	lea	eax, DWORD PTR _playerID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 131  : 	bitStream->Read(vehicleID);

	lea	eax, DWORD PTR _vehicleID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 132  : 	bitStream->Read(byteSeat);

	lea	eax, DWORD PTR _byteSeat$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 133  : 	
; 134  : 	CRemotePlayer * pRemotePlayer = pNetowkManager->GetPlayerManager()->GetAt(playerID);

	movzx	eax, BYTE PTR _playerID$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ; CNetworkManager::GetPlayerManager
	mov	ecx, eax
	call	?GetAt@CPlayerManager@@QAEPAVCRemotePlayer@@E@Z ; CPlayerManager::GetAt
	mov	DWORD PTR _pRemotePlayer$[ebp], eax

; 135  : 
; 136  : 	if(pRemotePlayer) {

	cmp	DWORD PTR _pRemotePlayer$[ebp], 0
	je	SHORT $LN2@Passenger

; 137  : 		pRemotePlayer->StorePassengerData(vehicleID, byteSeat);

	movzx	eax, BYTE PTR _byteSeat$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _vehicleID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pRemotePlayer$[ebp]
	call	?StorePassengerData@CRemotePlayer@@QAEXEE@Z ; CRemotePlayer::StorePassengerData
$LN2@Passenger:

; 138  : 	}	
; 139  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Passenger
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN8@Passenger:
	DD	3
	DD	$LN7@Passenger
$LN7@Passenger:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN4@Passenger
	DD	-17					; ffffffefH
	DD	1
	DD	$LN5@Passenger
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN6@Passenger
$LN6@Passenger:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
$LN5@Passenger:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
$LN4@Passenger:
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
?Passenger@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP	; Passenger
_TEXT	ENDS
PUBLIC	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z		; RakNet::BitStream::Read<int>
PUBLIC	?GetGameLogic@CNetworkManager@@QAEPAVCSpawnSelection@@XZ ; CNetworkManager::GetGameLogic
PUBLIC	??0_PLAYER_SPAWN_INFO@@QAE@XZ			; _PLAYER_SPAWN_INFO::_PLAYER_SPAWN_INFO
PUBLIC	?RequestClass@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; RequestClass
EXTRN	?HandleClassSelectionOutcome@CSpawnSelection@@QAEXPAU_PLAYER_SPAWN_INFO@@H@Z:PROC ; CSpawnSelection::HandleClassSelectionOutcome
EXTRN	?SetSpawnInfo@CLocalPlayer@@QAEXPAU_PLAYER_SPAWN_INFO@@@Z:PROC ; CLocalPlayer::SetSpawnInfo
EXTRN	?SetSelectedClass@CSpawnSelection@@QAEXH@Z:PROC	; CSpawnSelection::SetSelectedClass
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RequestClass@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_pGameLogic$ = -100					; size = 4
_pPlayer$ = -88						; size = 4
_SpawnInfo$ = -76					; size = 48
_iRequestedClass$ = -20					; size = 4
_byteOutcome$ = -5					; size = 1
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?RequestClass@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; RequestClass, COMDAT

; 145  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 296				; 00000128H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-296]
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 146  : 	BYTE byteOutcome;
; 147  : 	int iRequestedClass;
; 148  : 	PLAYER_SPAWN_INFO SpawnInfo;

	lea	ecx, DWORD PTR _SpawnInfo$[ebp]
	call	??0_PLAYER_SPAWN_INFO@@QAE@XZ

; 149  : 	CLocalPlayer * pPlayer = pNetowkManager->GetPlayerManager()->GetLocalPlayer();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ; CNetworkManager::GetPlayerManager
	mov	ecx, eax
	call	?GetLocalPlayer@CPlayerManager@@QAEPAVCLocalPlayer@@XZ ; CPlayerManager::GetLocalPlayer
	mov	DWORD PTR _pPlayer$[ebp], eax

; 150  : 	CSpawnSelection * pGameLogic = pNetowkManager->GetGameLogic();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetGameLogic@CNetworkManager@@QAEPAVCSpawnSelection@@XZ ; CNetworkManager::GetGameLogic
	mov	DWORD PTR _pGameLogic$[ebp], eax

; 151  : 
; 152  : 	bitStream->Read(byteOutcome);

	lea	eax, DWORD PTR _byteOutcome$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 153  : 	if(byteOutcome) {

	movzx	eax, BYTE PTR _byteOutcome$[ebp]
	test	eax, eax
	je	SHORT $LN2@RequestCla

; 154  : 		bitStream->Read(iRequestedClass);

	lea	eax, DWORD PTR _iRequestedClass$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 155  : 		bitStream->Read((char *)&SpawnInfo, sizeof(PLAYER_SPAWN_INFO));

	push	48					; 00000030H
	lea	eax, DWORD PTR _SpawnInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?Read@BitStream@RakNet@@QAE_NPADI@Z	; RakNet::BitStream::Read

; 156  : 
; 157  : 		pGameLogic->SetSelectedClass(iRequestedClass);

	mov	eax, DWORD PTR _iRequestedClass$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pGameLogic$[ebp]
	call	?SetSelectedClass@CSpawnSelection@@QAEXH@Z ; CSpawnSelection::SetSelectedClass

; 158  : 		pPlayer->SetSpawnInfo(&SpawnInfo);

	lea	eax, DWORD PTR _SpawnInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?SetSpawnInfo@CLocalPlayer@@QAEXPAU_PLAYER_SPAWN_INFO@@@Z ; CLocalPlayer::SetSpawnInfo

; 159  : 		pGameLogic->HandleClassSelectionOutcome(&SpawnInfo, byteOutcome);

	movzx	eax, BYTE PTR _byteOutcome$[ebp]
	push	eax
	lea	ecx, DWORD PTR _SpawnInfo$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pGameLogic$[ebp]
	call	?HandleClassSelectionOutcome@CSpawnSelection@@QAEXPAU_PLAYER_SPAWN_INFO@@H@Z ; CSpawnSelection::HandleClassSelectionOutcome
$LN2@RequestCla:

; 160  : 	}
; 161  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@RequestCla
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 296				; 00000128H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN8@RequestCla:
	DD	3
	DD	$LN7@RequestCla
$LN7@RequestCla:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN4@RequestCla
	DD	-20					; ffffffecH
	DD	4
	DD	$LN5@RequestCla
	DD	-76					; ffffffb4H
	DD	48					; 00000030H
	DD	$LN6@RequestCla
$LN6@RequestCla:
	DB	83					; 00000053H
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	119					; 00000077H
	DB	110					; 0000006eH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
$LN5@RequestCla:
	DB	105					; 00000069H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	113					; 00000071H
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	0
$LN4@RequestCla:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	79					; 0000004fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
?RequestClass@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; RequestClass
_TEXT	ENDS
PUBLIC	??0Vector3@@QAE@XZ				; Vector3::Vector3
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_PLAYER_SPAWN_INFO@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_PLAYER_SPAWN_INFO@@QAE@XZ PROC			; _PLAYER_SPAWN_INFO::_PLAYER_SPAWN_INFO, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_PLAYER_SPAWN_INFO@@QAE@XZ ENDP			; _PLAYER_SPAWN_INFO::_PLAYER_SPAWN_INFO
_TEXT	ENDS
PUBLIC	__real@00000000
PUBLIC	?Spawn@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z	; Spawn
EXTRN	?SpawnPlayer@CRemotePlayer@@QAEHEEPAUVector3@@MHHHHHH@Z:PROC ; CRemotePlayer::SpawnPlayer
EXTRN	__fltused:DWORD
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?Spawn@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_iSpawnWeaponsAmmo3$ = -160				; size = 4
_iSpawnWeaponsAmmo2$ = -148				; size = 4
_iSpawnWeaponsAmmo1$ = -136				; size = 4
_iSpawnWeapons3$ = -124					; size = 4
_iSpawnWeapons2$ = -112					; size = 4
_iSpawnWeapons1$ = -100					; size = 4
_byteOnGround$ = -85					; size = 1
_fRotation$ = -76					; size = 4
_vecPos$ = -64						; size = 12
_byteSkin$ = -41					; size = 1
_byteTeam$ = -29					; size = 1
_playerID$ = -17					; size = 1
_pRemotePlayer$ = -8					; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Spawn@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC	; Spawn, COMDAT

; 167  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 356				; 00000164H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-356]
	mov	ecx, 89					; 00000059H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 168  : 	CRemotePlayer *pRemotePlayer;
; 169  : 
; 170  : 	EntityId playerID=0;

	mov	BYTE PTR _playerID$[ebp], 0

; 171  : 	BYTE byteTeam=0;

	mov	BYTE PTR _byteTeam$[ebp], 0

; 172  : 	BYTE byteSkin=0;

	mov	BYTE PTR _byteSkin$[ebp], 0

; 173  : 	Vector3 vecPos;

	lea	ecx, DWORD PTR _vecPos$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 174  : 	float fRotation=0;

	fldz
	fstp	DWORD PTR _fRotation$[ebp]

; 175  : 	BYTE byteOnGround=0;

	mov	BYTE PTR _byteOnGround$[ebp], 0

; 176  : 	int iSpawnWeapons1,iSpawnWeapons2,iSpawnWeapons3;
; 177  : 	int iSpawnWeaponsAmmo1,iSpawnWeaponsAmmo2,iSpawnWeaponsAmmo3;
; 178  : 
; 179  : 	bitStream->Read(playerID);

	lea	eax, DWORD PTR _playerID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 180  : 	bitStream->Read(byteTeam);

	lea	eax, DWORD PTR _byteTeam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 181  : 	bitStream->Read(byteSkin);

	lea	eax, DWORD PTR _byteSkin$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 182  : 	bitStream->Read(vecPos.X);

	lea	eax, DWORD PTR _vecPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 183  : 	bitStream->Read(vecPos.Y);

	lea	eax, DWORD PTR _vecPos$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 184  : 	bitStream->Read(vecPos.Z);

	lea	eax, DWORD PTR _vecPos$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 185  : 	bitStream->Read(fRotation);

	lea	eax, DWORD PTR _fRotation$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 186  : 	bitStream->Read(iSpawnWeapons1);

	lea	eax, DWORD PTR _iSpawnWeapons1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 187  : 	bitStream->Read(iSpawnWeaponsAmmo1);

	lea	eax, DWORD PTR _iSpawnWeaponsAmmo1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 188  : 	bitStream->Read(iSpawnWeapons2);

	lea	eax, DWORD PTR _iSpawnWeapons2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 189  : 	bitStream->Read(iSpawnWeaponsAmmo2);

	lea	eax, DWORD PTR _iSpawnWeaponsAmmo2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 190  : 	bitStream->Read(iSpawnWeapons3);

	lea	eax, DWORD PTR _iSpawnWeapons3$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 191  : 	bitStream->Read(iSpawnWeaponsAmmo3);

	lea	eax, DWORD PTR _iSpawnWeaponsAmmo3$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 192  : 
; 193  : 	pRemotePlayer = pNetowkManager->GetPlayerManager()->GetAt(playerID);

	movzx	eax, BYTE PTR _playerID$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ; CNetworkManager::GetPlayerManager
	mov	ecx, eax
	call	?GetAt@CPlayerManager@@QAEPAVCRemotePlayer@@E@Z ; CPlayerManager::GetAt
	mov	DWORD PTR _pRemotePlayer$[ebp], eax

; 194  : 
; 195  : 	if(pRemotePlayer) {

	cmp	DWORD PTR _pRemotePlayer$[ebp], 0
	je	SHORT $LN1@Spawn

; 196  : 		pRemotePlayer->SpawnPlayer(byteTeam,byteSkin,&vecPos,fRotation,
; 197  : 			iSpawnWeapons1,iSpawnWeaponsAmmo1,
; 198  : 			iSpawnWeapons2,iSpawnWeaponsAmmo2,
; 199  : 			iSpawnWeapons3,iSpawnWeaponsAmmo3);

	mov	eax, DWORD PTR _iSpawnWeaponsAmmo3$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iSpawnWeapons3$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iSpawnWeaponsAmmo2$[ebp]
	push	edx
	mov	eax, DWORD PTR _iSpawnWeapons2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iSpawnWeaponsAmmo1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iSpawnWeapons1$[ebp]
	push	edx
	push	ecx
	fld	DWORD PTR _fRotation$[ebp]
	fstp	DWORD PTR [esp]
	lea	eax, DWORD PTR _vecPos$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _byteSkin$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _byteTeam$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pRemotePlayer$[ebp]
	call	?SpawnPlayer@CRemotePlayer@@QAEHEEPAUVector3@@MHHHHHH@Z ; CRemotePlayer::SpawnPlayer
$LN1@Spawn:

; 200  : 	}		
; 201  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@Spawn
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 356				; 00000164H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN16@Spawn:
	DD	11					; 0000000bH
	DD	$LN15@Spawn
$LN15@Spawn:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN4@Spawn
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN5@Spawn
	DD	-41					; ffffffd7H
	DD	1
	DD	$LN6@Spawn
	DD	-64					; ffffffc0H
	DD	12					; 0000000cH
	DD	$LN7@Spawn
	DD	-76					; ffffffb4H
	DD	4
	DD	$LN8@Spawn
	DD	-100					; ffffff9cH
	DD	4
	DD	$LN9@Spawn
	DD	-112					; ffffff90H
	DD	4
	DD	$LN10@Spawn
	DD	-124					; ffffff84H
	DD	4
	DD	$LN11@Spawn
	DD	-136					; ffffff78H
	DD	4
	DD	$LN12@Spawn
	DD	-148					; ffffff6cH
	DD	4
	DD	$LN13@Spawn
	DD	-160					; ffffff60H
	DD	4
	DD	$LN14@Spawn
$LN14@Spawn:
	DB	105					; 00000069H
	DB	83					; 00000053H
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	119					; 00000077H
	DB	110					; 0000006eH
	DB	87					; 00000057H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	65					; 00000041H
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	51					; 00000033H
	DB	0
$LN13@Spawn:
	DB	105					; 00000069H
	DB	83					; 00000053H
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	119					; 00000077H
	DB	110					; 0000006eH
	DB	87					; 00000057H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	65					; 00000041H
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	50					; 00000032H
	DB	0
$LN12@Spawn:
	DB	105					; 00000069H
	DB	83					; 00000053H
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	119					; 00000077H
	DB	110					; 0000006eH
	DB	87					; 00000057H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	65					; 00000041H
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	49					; 00000031H
	DB	0
$LN11@Spawn:
	DB	105					; 00000069H
	DB	83					; 00000053H
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	119					; 00000077H
	DB	110					; 0000006eH
	DB	87					; 00000057H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	51					; 00000033H
	DB	0
$LN10@Spawn:
	DB	105					; 00000069H
	DB	83					; 00000053H
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	119					; 00000077H
	DB	110					; 0000006eH
	DB	87					; 00000057H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	50					; 00000032H
	DB	0
$LN9@Spawn:
	DB	105					; 00000069H
	DB	83					; 00000053H
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	119					; 00000077H
	DB	110					; 0000006eH
	DB	87					; 00000057H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	49					; 00000031H
	DB	0
$LN8@Spawn:
	DB	102					; 00000066H
	DB	82					; 00000052H
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN7@Spawn:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN6@Spawn:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	107					; 0000006bH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	0
$LN5@Spawn:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$LN4@Spawn:
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
?Spawn@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP	; Spawn
_TEXT	ENDS
PUBLIC	?Death@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z	; Death
EXTRN	?HandleDeath@CRemotePlayer@@QAEXEEE@Z:PROC	; CRemotePlayer::HandleDeath
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Death@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_pRemotePlayer$ = -56					; size = 4
_byteScoringModifier$ = -41				; size = 1
_byteWhoKilled$ = -29					; size = 1
_byteReason$ = -17					; size = 1
_playerID$ = -5						; size = 1
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Death@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC	; Death, COMDAT

; 207  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 208  : 	EntityId playerID=0;

	mov	BYTE PTR _playerID$[ebp], 0

; 209  : 	BYTE byteReason;
; 210  : 	BYTE byteWhoKilled;
; 211  : 	BYTE byteScoringModifier;
; 212  : 
; 213  : 	bitStream->Read(playerID);

	lea	eax, DWORD PTR _playerID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 214  : 	bitStream->Read(byteReason);

	lea	eax, DWORD PTR _byteReason$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 215  : 	bitStream->Read(byteWhoKilled);

	lea	eax, DWORD PTR _byteWhoKilled$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 216  : 	bitStream->Read(byteScoringModifier);

	lea	eax, DWORD PTR _byteScoringModifier$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 217  : 
; 218  : 	CRemotePlayer *pRemotePlayer = pNetowkManager->GetPlayerManager()->GetAt(playerID);

	movzx	eax, BYTE PTR _playerID$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ; CNetworkManager::GetPlayerManager
	mov	ecx, eax
	call	?GetAt@CPlayerManager@@QAEPAVCRemotePlayer@@E@Z ; CPlayerManager::GetAt
	mov	DWORD PTR _pRemotePlayer$[ebp], eax

; 219  : 	if(pRemotePlayer) {

	cmp	DWORD PTR _pRemotePlayer$[ebp], 0
	je	SHORT $LN2@Death

; 220  : 		pRemotePlayer->HandleDeath(byteReason,byteWhoKilled,byteScoringModifier);

	movzx	eax, BYTE PTR _byteScoringModifier$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _byteWhoKilled$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _byteReason$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pRemotePlayer$[ebp]
	call	?HandleDeath@CRemotePlayer@@QAEXEEE@Z	; CRemotePlayer::HandleDeath
$LN2@Death:

; 221  : 	}
; 222  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Death
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN9@Death:
	DD	4
	DD	$LN8@Death
$LN8@Death:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN4@Death
	DD	-17					; ffffffefH
	DD	1
	DD	$LN5@Death
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN6@Death
	DD	-41					; ffffffd7H
	DD	1
	DD	$LN7@Death
$LN7@Death:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	77					; 0000004dH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN6@Death:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	87					; 00000057H
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	75					; 0000004bH
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
$LN5@Death:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN4@Death:
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
?Death@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP	; Death
_TEXT	ENDS
PUBLIC	?GetPlayerPed@CRemotePlayer@@QAEPAVCPlayerPed@@XZ ; CRemotePlayer::GetPlayerPed
PUBLIC	?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ ; CNetworkManager::GetVehicleManager
PUBLIC	?EnterVehicle@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; EnterVehicle
EXTRN	?EnterVehicleAsPassenger@CPlayerPed@@QAEXH@Z:PROC ; CPlayerPed::EnterVehicleAsPassenger
EXTRN	?EnterVehicleAsDriver@CPlayerPed@@QAEXH@Z:PROC	; CPlayerPed::EnterVehicleAsDriver
EXTRN	?FindGtaIDFromID@CVehicleManager@@QAEHE@Z:PROC	; CVehicleManager::FindGtaIDFromID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?EnterVehicle@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_pVehicleManager$ = -56					; size = 4
_pRemotePlayer$ = -44					; size = 4
_bytePassenger$ = -29					; size = 1
_vehicleID$ = -17					; size = 1
_playerID$ = -5						; size = 1
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?EnterVehicle@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; EnterVehicle, COMDAT

; 228  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 229  : 	EntityId playerID=0;

	mov	BYTE PTR _playerID$[ebp], 0

; 230  : 	EntityId vehicleID=0;

	mov	BYTE PTR _vehicleID$[ebp], 0

; 231  : 	BYTE bytePassenger=0;

	mov	BYTE PTR _bytePassenger$[ebp], 0

; 232  : 
; 233  : 	bitStream->Read(playerID);

	lea	eax, DWORD PTR _playerID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 234  : 	bitStream->Read(vehicleID);

	lea	eax, DWORD PTR _vehicleID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 235  : 	bitStream->Read(bytePassenger);

	lea	eax, DWORD PTR _bytePassenger$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 236  : 
; 237  : 	CRemotePlayer *pRemotePlayer = pNetowkManager->GetPlayerManager()->GetAt(playerID);

	movzx	eax, BYTE PTR _playerID$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ; CNetworkManager::GetPlayerManager
	mov	ecx, eax
	call	?GetAt@CPlayerManager@@QAEPAVCRemotePlayer@@E@Z ; CPlayerManager::GetAt
	mov	DWORD PTR _pRemotePlayer$[ebp], eax

; 238  : 	CVehicleManager *pVehicleManager = pNetowkManager->GetVehicleManager();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ ; CNetworkManager::GetVehicleManager
	mov	DWORD PTR _pVehicleManager$[ebp], eax

; 239  : 
; 240  : 	if(pRemotePlayer) {

	cmp	DWORD PTR _pRemotePlayer$[ebp], 0
	je	SHORT $LN4@EnterVehic

; 241  : 		if(!bytePassenger) {

	movzx	eax, BYTE PTR _bytePassenger$[ebp]
	test	eax, eax
	jne	SHORT $LN2@EnterVehic

; 242  : 			pRemotePlayer->GetPlayerPed()->EnterVehicleAsDriver(pVehicleManager->FindGtaIDFromID(vehicleID));

	movzx	eax, BYTE PTR _vehicleID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pVehicleManager$[ebp]
	call	?FindGtaIDFromID@CVehicleManager@@QAEHE@Z ; CVehicleManager::FindGtaIDFromID
	push	eax
	mov	ecx, DWORD PTR _pRemotePlayer$[ebp]
	call	?GetPlayerPed@CRemotePlayer@@QAEPAVCPlayerPed@@XZ ; CRemotePlayer::GetPlayerPed
	mov	ecx, eax
	call	?EnterVehicleAsDriver@CPlayerPed@@QAEXH@Z ; CPlayerPed::EnterVehicleAsDriver

; 243  : 		} else {

	jmp	SHORT $LN4@EnterVehic
$LN2@EnterVehic:

; 244  : 			pRemotePlayer->GetPlayerPed()->EnterVehicleAsPassenger(pVehicleManager->FindGtaIDFromID(vehicleID));

	movzx	eax, BYTE PTR _vehicleID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pVehicleManager$[ebp]
	call	?FindGtaIDFromID@CVehicleManager@@QAEHE@Z ; CVehicleManager::FindGtaIDFromID
	push	eax
	mov	ecx, DWORD PTR _pRemotePlayer$[ebp]
	call	?GetPlayerPed@CRemotePlayer@@QAEPAVCPlayerPed@@XZ ; CRemotePlayer::GetPlayerPed
	mov	ecx, eax
	call	?EnterVehicleAsPassenger@CPlayerPed@@QAEXH@Z ; CPlayerPed::EnterVehicleAsPassenger
$LN4@EnterVehic:

; 245  : 		}
; 246  : 	}
; 247  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@EnterVehic
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@EnterVehic:
	DD	3
	DD	$LN9@EnterVehic
$LN9@EnterVehic:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN6@EnterVehic
	DD	-17					; ffffffefH
	DD	1
	DD	$LN7@EnterVehic
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN8@EnterVehic
$LN8@EnterVehic:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN7@EnterVehic:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
$LN6@EnterVehic:
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
?EnterVehicle@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; EnterVehicle
_TEXT	ENDS
PUBLIC	?ExitVehicle@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; ExitVehicle
EXTRN	?ExitCurrentVehicle@CPlayerPed@@QAEXXZ:PROC	; CPlayerPed::ExitCurrentVehicle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ExitVehicle@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_pVehicleManager$ = -44					; size = 4
_pRemotePlayer$ = -32					; size = 4
_vehicleID$ = -17					; size = 1
_playerID$ = -5						; size = 1
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?ExitVehicle@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; ExitVehicle, COMDAT

; 253  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 254  : 	EntityId playerID=0;

	mov	BYTE PTR _playerID$[ebp], 0

; 255  : 	EntityId vehicleID=0;

	mov	BYTE PTR _vehicleID$[ebp], 0

; 256  : 
; 257  : 	bitStream->Read(playerID);

	lea	eax, DWORD PTR _playerID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 258  : 	bitStream->Read(vehicleID);

	lea	eax, DWORD PTR _vehicleID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 259  : 
; 260  : 	CRemotePlayer *pRemotePlayer = pNetowkManager->GetPlayerManager()->GetAt(playerID);

	movzx	eax, BYTE PTR _playerID$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ; CNetworkManager::GetPlayerManager
	mov	ecx, eax
	call	?GetAt@CPlayerManager@@QAEPAVCRemotePlayer@@E@Z ; CPlayerManager::GetAt
	mov	DWORD PTR _pRemotePlayer$[ebp], eax

; 261  : 	CVehicleManager *pVehicleManager = pNetowkManager->GetVehicleManager();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ ; CNetworkManager::GetVehicleManager
	mov	DWORD PTR _pVehicleManager$[ebp], eax

; 262  : 
; 263  : 	if(pRemotePlayer) {

	cmp	DWORD PTR _pRemotePlayer$[ebp], 0
	je	SHORT $LN2@ExitVehicl

; 264  : 		pRemotePlayer->GetPlayerPed()->ExitCurrentVehicle();

	mov	ecx, DWORD PTR _pRemotePlayer$[ebp]
	call	?GetPlayerPed@CRemotePlayer@@QAEPAVCPlayerPed@@XZ ; CRemotePlayer::GetPlayerPed
	mov	ecx, eax
	call	?ExitCurrentVehicle@CPlayerPed@@QAEXXZ	; CPlayerPed::ExitCurrentVehicle
$LN2@ExitVehicl:

; 265  : 	}
; 266  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@ExitVehicl
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@ExitVehicl:
	DD	2
	DD	$LN6@ExitVehicl
$LN6@ExitVehicl:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN4@ExitVehicl
	DD	-17					; ffffffefH
	DD	1
	DD	$LN5@ExitVehicl
$LN5@ExitVehicl:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
$LN4@ExitVehicl:
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
?ExitVehicle@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; ExitVehicle
_TEXT	ENDS
PUBLIC	?VehicleSpawn@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; VehicleSpawn
EXTRN	?New@CVehicleManager@@QAEHEEPAUVector3@@MHH0M@Z:PROC ; CVehicleManager::New
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?VehicleSpawn@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_iColor2$ = -132					; size = 4
_iColor1$ = -120					; size = 4
_fHealth$ = -108					; size = 4
_fSpawnRotation$ = -96					; size = 4
_fRotation$ = -84					; size = 4
_vecSpawnPos$ = -72					; size = 12
_vecPos$ = -52						; size = 12
_byteVehicleType$ = -29					; size = 1
_vehicleID$ = -17					; size = 1
_pVehicleManager$ = -8					; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?VehicleSpawn@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; VehicleSpawn, COMDAT

; 271  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 328				; 00000148H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-328]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 272  : 	CVehicleManager *pVehicleManager = pNetowkManager->GetVehicleManager();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ ; CNetworkManager::GetVehicleManager
	mov	DWORD PTR _pVehicleManager$[ebp], eax

; 273  : 	EntityId vehicleID=0;

	mov	BYTE PTR _vehicleID$[ebp], 0

; 274  : 	BYTE byteVehicleType;
; 275  : 	Vector3 vecPos;

	lea	ecx, DWORD PTR _vecPos$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 276  : 	Vector3 vecSpawnPos;

	lea	ecx, DWORD PTR _vecSpawnPos$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 277  : 	float fRotation;
; 278  : 	float fSpawnRotation;
; 279  : 	float fHealth;
; 280  : 	int iColor1, iColor2;
; 281  : 
; 282  : 	bitStream->Read(vehicleID);

	lea	eax, DWORD PTR _vehicleID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 283  : 	bitStream->Read(byteVehicleType);

	lea	eax, DWORD PTR _byteVehicleType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 284  : 	bitStream->Read(vecPos.X);

	lea	eax, DWORD PTR _vecPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 285  : 	bitStream->Read(vecPos.Y);

	lea	eax, DWORD PTR _vecPos$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 286  : 	bitStream->Read(vecPos.Z);

	lea	eax, DWORD PTR _vecPos$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 287  : 	bitStream->Read(fRotation);

	lea	eax, DWORD PTR _fRotation$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 288  : 	bitStream->Read(iColor1);

	lea	eax, DWORD PTR _iColor1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 289  : 	bitStream->Read(iColor2);

	lea	eax, DWORD PTR _iColor2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 290  : 	bitStream->Read(fHealth);

	lea	eax, DWORD PTR _fHealth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 291  : 	bitStream->Read(vecSpawnPos.X);

	lea	eax, DWORD PTR _vecSpawnPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 292  : 	bitStream->Read(vecSpawnPos.Y);

	lea	eax, DWORD PTR _vecSpawnPos$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 293  : 	bitStream->Read(vecSpawnPos.Z);

	lea	eax, DWORD PTR _vecSpawnPos$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 294  : 	bitStream->Read(fSpawnRotation);

	lea	eax, DWORD PTR _fSpawnRotation$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 295  : 
; 296  : 	pVehicleManager->New(vehicleID,byteVehicleType,
; 297  : 		&vecPos,fRotation,iColor1,iColor2,&vecSpawnPos,fSpawnRotation);

	push	ecx
	fld	DWORD PTR _fSpawnRotation$[ebp]
	fstp	DWORD PTR [esp]
	lea	eax, DWORD PTR _vecSpawnPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iColor2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iColor1$[ebp]
	push	edx
	push	ecx
	fld	DWORD PTR _fRotation$[ebp]
	fstp	DWORD PTR [esp]
	lea	eax, DWORD PTR _vecPos$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _byteVehicleType$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _vehicleID$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pVehicleManager$[ebp]
	call	?New@CVehicleManager@@QAEHEEPAUVector3@@MHH0M@Z ; CVehicleManager::New

; 298  : 	//pVehicleManager->GetAt(vehicleID)->SetHealth(fHealth);
; 299  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@VehicleSpa
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 328				; 00000148H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN13@VehicleSpa:
	DD	9
	DD	$LN12@VehicleSpa
$LN12@VehicleSpa:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@VehicleSpa
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN4@VehicleSpa
	DD	-52					; ffffffccH
	DD	12					; 0000000cH
	DD	$LN5@VehicleSpa
	DD	-72					; ffffffb8H
	DD	12					; 0000000cH
	DD	$LN6@VehicleSpa
	DD	-84					; ffffffacH
	DD	4
	DD	$LN7@VehicleSpa
	DD	-96					; ffffffa0H
	DD	4
	DD	$LN8@VehicleSpa
	DD	-108					; ffffff94H
	DD	4
	DD	$LN9@VehicleSpa
	DD	-120					; ffffff88H
	DD	4
	DD	$LN10@VehicleSpa
	DD	-132					; ffffff7cH
	DD	4
	DD	$LN11@VehicleSpa
$LN11@VehicleSpa:
	DB	105					; 00000069H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	50					; 00000032H
	DB	0
$LN10@VehicleSpa:
	DB	105					; 00000069H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	49					; 00000031H
	DB	0
$LN9@VehicleSpa:
	DB	102					; 00000066H
	DB	72					; 00000048H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN8@VehicleSpa:
	DB	102					; 00000066H
	DB	83					; 00000053H
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	119					; 00000077H
	DB	110					; 0000006eH
	DB	82					; 00000052H
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN7@VehicleSpa:
	DB	102					; 00000066H
	DB	82					; 00000052H
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN6@VehicleSpa:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	83					; 00000053H
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	119					; 00000077H
	DB	110					; 0000006eH
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN5@VehicleSpa:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN4@VehicleSpa:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	86					; 00000056H
	DB	101					; 00000065H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	84					; 00000054H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	0
$LN3@VehicleSpa:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
?VehicleSpawn@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; VehicleSpawn
_TEXT	ENDS
PUBLIC	?VehicleDestroy@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; VehicleDestroy
EXTRN	?Delete@CVehicleManager@@QAEHE@Z:PROC		; CVehicleManager::Delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?VehicleDestroy@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_vehicleID$ = -17					; size = 1
_pVehicleManager$ = -8					; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?VehicleDestroy@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; VehicleDestroy, COMDAT

; 304  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 305  : 	CVehicleManager *pVehicleManager = pNetowkManager->GetVehicleManager();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ ; CNetworkManager::GetVehicleManager
	mov	DWORD PTR _pVehicleManager$[ebp], eax

; 306  : 	EntityId vehicleID=0;

	mov	BYTE PTR _vehicleID$[ebp], 0

; 307  : 
; 308  : 	bitStream->Read(vehicleID);

	lea	eax, DWORD PTR _vehicleID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 309  : 
; 310  : 	pVehicleManager->Delete(vehicleID);

	movzx	eax, BYTE PTR _vehicleID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pVehicleManager$[ebp]
	call	?Delete@CVehicleManager@@QAEHE@Z	; CVehicleManager::Delete

; 311  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@VehicleDes
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@VehicleDes:
	DD	1
	DD	$LN4@VehicleDes
$LN4@VehicleDes:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@VehicleDes
$LN3@VehicleDes:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
?VehicleDestroy@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; VehicleDestroy
_TEXT	ENDS
PUBLIC	?UpdateIPAddress@CPlayerManager@@QAEXEK@Z	; CPlayerManager::UpdateIPAddress
PUBLIC	?UpdatePing@CPlayerManager@@QAEXEH@Z		; CPlayerManager::UpdatePing
PUBLIC	?UpdateScore@CPlayerManager@@QAEXEH@Z		; CPlayerManager::UpdateScore
PUBLIC	?GetSlotState@CPlayerManager@@QAEHE@Z		; CPlayerManager::GetSlotState
PUBLIC	??$Read@K@BitStream@RakNet@@QAE_NAAK@Z		; RakNet::BitStream::Read<unsigned long>
PUBLIC	?UpdateScoreAndPing@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; UpdateScoreAndPing
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?UpdateScoreAndPing@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_ulIp$ = -56						; size = 4
_iPlayerPing$ = -44					; size = 4
_iPlayerScore$ = -32					; size = 4
_playerID$ = -17					; size = 1
_pPlayerManager$ = -8					; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?UpdateScoreAndPing@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; UpdateScoreAndPing, COMDAT

; 316  : {	

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 317  : 	CPlayerManager * pPlayerManager = pNetowkManager->GetPlayerManager();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ; CNetworkManager::GetPlayerManager
	mov	DWORD PTR _pPlayerManager$[ebp], eax
$LN4@UpdateScor:

; 318  : 	EntityId playerID;
; 319  : 	int iPlayerScore;
; 320  : 	int iPlayerPing;
; 321  : 	unsigned long ulIp;
; 322  : 
; 323  : 	while(bitStream->Read(playerID))

	lea	eax, DWORD PTR _playerID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>
	movzx	ecx, al
	test	ecx, ecx
	je	$LN5@UpdateScor

; 324  : 	{
; 325  : 		bitStream->Read(iPlayerScore);

	lea	eax, DWORD PTR _iPlayerScore$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 326  : 		bitStream->Read(iPlayerPing);

	lea	eax, DWORD PTR _iPlayerPing$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 327  : 		bitStream->Read(ulIp);

	lea	eax, DWORD PTR _ulIp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@K@BitStream@RakNet@@QAE_NAAK@Z	; RakNet::BitStream::Read<unsigned long>

; 328  : 
; 329  : 		if(pPlayerManager->GetSlotState(playerID) || playerID == pPlayerManager->GetLocalPlayerID())

	movzx	eax, BYTE PTR _playerID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayerManager$[ebp]
	call	?GetSlotState@CPlayerManager@@QAEHE@Z	; CPlayerManager::GetSlotState
	test	eax, eax
	jne	SHORT $LN1@UpdateScor
	movzx	esi, BYTE PTR _playerID$[ebp]
	mov	ecx, DWORD PTR _pPlayerManager$[ebp]
	call	?GetLocalPlayerID@CPlayerManager@@QAEEXZ ; CPlayerManager::GetLocalPlayerID
	movzx	eax, al
	cmp	esi, eax
	jne	SHORT $LN2@UpdateScor
$LN1@UpdateScor:

; 330  : 		{
; 331  : 			pPlayerManager->UpdateScore(playerID, iPlayerScore);

	mov	eax, DWORD PTR _iPlayerScore$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _playerID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pPlayerManager$[ebp]
	call	?UpdateScore@CPlayerManager@@QAEXEH@Z	; CPlayerManager::UpdateScore

; 332  : 			pPlayerManager->UpdatePing(playerID, iPlayerPing);

	mov	eax, DWORD PTR _iPlayerPing$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _playerID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pPlayerManager$[ebp]
	call	?UpdatePing@CPlayerManager@@QAEXEH@Z	; CPlayerManager::UpdatePing

; 333  : 			pPlayerManager->UpdateIPAddress(playerID, ulIp);

	mov	eax, DWORD PTR _ulIp$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _playerID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pPlayerManager$[ebp]
	call	?UpdateIPAddress@CPlayerManager@@QAEXEK@Z ; CPlayerManager::UpdateIPAddress
$LN2@UpdateScor:

; 334  : 		}
; 335  : 	}

	jmp	$LN4@UpdateScor
$LN5@UpdateScor:

; 336  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@UpdateScor
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN12@UpdateScor:
	DD	4
	DD	$LN11@UpdateScor
$LN11@UpdateScor:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN7@UpdateScor
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN8@UpdateScor
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN9@UpdateScor
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN10@UpdateScor
$LN10@UpdateScor:
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	73					; 00000049H
	DB	112					; 00000070H
	DB	0
$LN9@UpdateScor:
	DB	105					; 00000069H
	DB	80					; 00000050H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	80					; 00000050H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
$LN8@UpdateScor:
	DB	105					; 00000069H
	DB	80					; 00000050H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	0
$LN7@UpdateScor:
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
?UpdateScoreAndPing@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; UpdateScoreAndPing
_TEXT	ENDS
PUBLIC	??_C@_0BJ@BCLMHIDJ@YOUR?5NICKNAME?5IS?5INVALID?$AA@ ; `string'
PUBLIC	??_C@_0CD@DHKKPPLC@YOU?8RE?5USING?5AN?5INCORRECT?5VERSIO@ ; `string'
PUBLIC	??_C@_0BE@OCOLJLIB@CONNECTION?5REJECTED?$AA@	; `string'
PUBLIC	?ConnectionRejected@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; ConnectionRejected
EXTRN	?Shutdown@CNetworkManager@@QAEXXZ:PROC		; CNetworkManager::Shutdown
EXTRN	?AddInfoMessage@CChatWindow@@QAAXPADZZ:PROC	; CChatWindow::AddInfoMessage
;	COMDAT ??_C@_0BJ@BCLMHIDJ@YOUR?5NICKNAME?5IS?5INVALID?$AA@
CONST	SEGMENT
??_C@_0BJ@BCLMHIDJ@YOUR?5NICKNAME?5IS?5INVALID?$AA@ DB 'YOUR NICKNAME IS '
	DB	'INVALID', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@DHKKPPLC@YOU?8RE?5USING?5AN?5INCORRECT?5VERSIO@
CONST	SEGMENT
??_C@_0CD@DHKKPPLC@YOU?8RE?5USING?5AN?5INCORRECT?5VERSIO@ DB 'YOU''RE USI'
	DB	'NG AN INCORRECT VERSION!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OCOLJLIB@CONNECTION?5REJECTED?$AA@
CONST	SEGMENT
??_C@_0BE@OCOLJLIB@CONNECTION?5REJECTED?$AA@ DB 'CONNECTION REJECTED', 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?ConnectionRejected@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_byteRejectReason$ = -5					; size = 1
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?ConnectionRejected@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; ConnectionRejected, COMDAT

; 341  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 342  : 	BYTE byteRejectReason;
; 343  : 
; 344  : 	bitStream->Read(byteRejectReason);

	lea	eax, DWORD PTR _byteRejectReason$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 345  : 
; 346  : 	if(byteRejectReason==REJECT_REASON_BAD_VERSION) {

	movzx	eax, BYTE PTR _byteRejectReason$[ebp]
	cmp	eax, 1
	jne	SHORT $LN4@Connection

; 347  : 		pChatWindow->AddInfoMessage("CONNECTION REJECTED");

	push	OFFSET ??_C@_0BE@OCOLJLIB@CONNECTION?5REJECTED?$AA@
	mov	eax, DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A ; pChatWindow
	push	eax
	call	?AddInfoMessage@CChatWindow@@QAAXPADZZ	; CChatWindow::AddInfoMessage
	add	esp, 8

; 348  : 		pChatWindow->AddInfoMessage("YOU'RE USING AN INCORRECT VERSION!");

	push	OFFSET ??_C@_0CD@DHKKPPLC@YOU?8RE?5USING?5AN?5INCORRECT?5VERSIO@
	mov	eax, DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A ; pChatWindow
	push	eax
	call	?AddInfoMessage@CChatWindow@@QAAXPADZZ	; CChatWindow::AddInfoMessage
	add	esp, 8
	jmp	SHORT $LN3@Connection
$LN4@Connection:

; 349  : 	}
; 350  : 	else if(byteRejectReason==REJECT_REASON_BAD_NICKNAME)

	movzx	eax, BYTE PTR _byteRejectReason$[ebp]
	cmp	eax, 2
	jne	SHORT $LN3@Connection

; 351  : 	{
; 352  : 		pChatWindow->AddInfoMessage("CONNECTION REJECTED");

	push	OFFSET ??_C@_0BE@OCOLJLIB@CONNECTION?5REJECTED?$AA@
	mov	eax, DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A ; pChatWindow
	push	eax
	call	?AddInfoMessage@CChatWindow@@QAAXPADZZ	; CChatWindow::AddInfoMessage
	add	esp, 8

; 353  : 		pChatWindow->AddInfoMessage("YOUR NICKNAME IS INVALID");

	push	OFFSET ??_C@_0BJ@BCLMHIDJ@YOUR?5NICKNAME?5IS?5INVALID?$AA@
	mov	eax, DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A ; pChatWindow
	push	eax
	call	?AddInfoMessage@CChatWindow@@QAAXPADZZ	; CChatWindow::AddInfoMessage
	add	esp, 8
$LN3@Connection:

; 354  : 	}
; 355  : 
; 356  : 	if(pNetowkManager) {

	cmp	DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A, 0 ; pNetowkManager
	je	SHORT $LN5@Connection

; 357  : 		pNetowkManager->Shutdown();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?Shutdown@CNetworkManager@@QAEXXZ	; CNetworkManager::Shutdown
$LN5@Connection:

; 358  : 	}
; 359  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Connection
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@Connection:
	DD	1
	DD	$LN8@Connection
$LN8@Connection:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN7@Connection
$LN7@Connection:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
?ConnectionRejected@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; ConnectionRejected
_TEXT	ENDS
PUBLIC	?SetGameTime@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; SetGameTime
EXTRN	?SetGameTime@CGame@@QAEXHH@Z:PROC		; CGame::SetGameTime
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetGameTime@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_m$ = -17						; size = 1
_h$ = -5						; size = 1
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?SetGameTime@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; SetGameTime, COMDAT

; 364  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 365  : 	BYTE h, m;
; 366  : 	bitStream->Read(h);

	lea	eax, DWORD PTR _h$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 367  : 	bitStream->Read(m);

	lea	eax, DWORD PTR _m$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 368  : 
; 369  : 	pGame->SetGameTime(h, m);

	movzx	eax, BYTE PTR _m$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _h$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?SetGameTime@CGame@@QAEXHH@Z		; CGame::SetGameTime

; 370  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetGameTim
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@SetGameTim:
	DD	2
	DD	$LN5@SetGameTim
$LN5@SetGameTim:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@SetGameTim
	DD	-17					; ffffffefH
	DD	1
	DD	$LN4@SetGameTim
$LN4@SetGameTim:
	DB	109					; 0000006dH
	DB	0
$LN3@SetGameTim:
	DB	104					; 00000068H
	DB	0
?SetGameTime@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; SetGameTime
_TEXT	ENDS
PUBLIC	?GetCamera@CGame@@QAEPAVCCamera@@XZ		; CGame::GetCamera
PUBLIC	?SetCameraPosition@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; SetCameraPosition
EXTRN	?SetPosition@CCamera@@QAEXUVector3@@@Z:PROC	; CCamera::SetPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetCameraPosition@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_vPos$ = -16						; size = 12
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?SetCameraPosition@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; SetCameraPosition, COMDAT

; 375  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 376  : 	Vector3 vPos;

	lea	ecx, DWORD PTR _vPos$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 377  : 	bitStream->Read(vPos.X);

	lea	eax, DWORD PTR _vPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 378  : 	bitStream->Read(vPos.Y);

	lea	eax, DWORD PTR _vPos$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 379  : 	bitStream->Read(vPos.Z);

	lea	eax, DWORD PTR _vPos$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 380  : 
; 381  : 	pGame->GetCamera()->SetPosition(vPos);

	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	ecx, DWORD PTR _vPos$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _vPos$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _vPos$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?GetCamera@CGame@@QAEPAVCCamera@@XZ	; CGame::GetCamera
	mov	ecx, eax
	call	?SetPosition@CCamera@@QAEXUVector3@@@Z	; CCamera::SetPosition

; 382  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@SetCameraP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@SetCameraP:
	DD	1
	DD	$LN4@SetCameraP
$LN4@SetCameraP:
	DD	-16					; fffffff0H
	DD	12					; 0000000cH
	DD	$LN3@SetCameraP
$LN3@SetCameraP:
	DB	118					; 00000076H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
?SetCameraPosition@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; SetCameraPosition
_TEXT	ENDS
PUBLIC	?SetCameraRotation@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; SetCameraRotation
EXTRN	?SetRotation@CCamera@@QAEXUVector3@@@Z:PROC	; CCamera::SetRotation
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetCameraRotation@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_vRot$ = -16						; size = 12
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?SetCameraRotation@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; SetCameraRotation, COMDAT

; 387  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 388  : 	Vector3 vRot;

	lea	ecx, DWORD PTR _vRot$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 389  : 	bitStream->Read(vRot.X);

	lea	eax, DWORD PTR _vRot$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 390  : 	bitStream->Read(vRot.Y);

	lea	eax, DWORD PTR _vRot$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 391  : 	bitStream->Read(vRot.Z);

	lea	eax, DWORD PTR _vRot$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 392  : 
; 393  : 	pGame->GetCamera()->SetRotation(vRot);

	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	ecx, DWORD PTR _vRot$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _vRot$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _vRot$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?GetCamera@CGame@@QAEPAVCCamera@@XZ	; CGame::GetCamera
	mov	ecx, eax
	call	?SetRotation@CCamera@@QAEXUVector3@@@Z	; CCamera::SetRotation

; 394  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@SetCameraR
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@SetCameraR:
	DD	1
	DD	$LN4@SetCameraR
$LN4@SetCameraR:
	DD	-16					; fffffff0H
	DD	12					; 0000000cH
	DD	$LN3@SetCameraR
$LN3@SetCameraR:
	DB	118					; 00000076H
	DB	82					; 00000052H
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	0
?SetCameraRotation@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; SetCameraRotation
_TEXT	ENDS
PUBLIC	?SetCameraLookAt@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; SetCameraLookAt
EXTRN	?LookAtPoint@CCamera@@QAEXUVector3@@H@Z:PROC	; CCamera::LookAtPoint
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetCameraLookAt@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_vPoint$ = -16						; size = 12
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?SetCameraLookAt@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; SetCameraLookAt, COMDAT

; 399  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 400  : 	Vector3 vPoint;

	lea	ecx, DWORD PTR _vPoint$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 401  : 	bitStream->Read(vPoint.X);

	lea	eax, DWORD PTR _vPoint$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 402  : 	bitStream->Read(vPoint.Y);

	lea	eax, DWORD PTR _vPoint$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 403  : 	bitStream->Read(vPoint.Z);

	lea	eax, DWORD PTR _vPoint$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 404  : 
; 405  : 	pGame->GetCamera()->LookAtPoint(vPoint, 1);

	push	1
	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	ecx, DWORD PTR _vPoint$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _vPoint$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _vPoint$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?GetCamera@CGame@@QAEPAVCCamera@@XZ	; CGame::GetCamera
	mov	ecx, eax
	call	?LookAtPoint@CCamera@@QAEXUVector3@@H@Z	; CCamera::LookAtPoint

; 406  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@SetCameraL
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@SetCameraL:
	DD	1
	DD	$LN4@SetCameraL
$LN4@SetCameraL:
	DD	-16					; fffffff0H
	DD	12					; 0000000cH
	DD	$LN3@SetCameraL
$LN3@SetCameraL:
	DB	118					; 00000076H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
?SetCameraLookAt@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; SetCameraLookAt
_TEXT	ENDS
PUBLIC	?SetCameraBehindPlayer@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; SetCameraBehindPlayer
EXTRN	?SetBehindPlayer@CCamera@@QAEXXZ:PROC		; CCamera::SetBehindPlayer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetCameraBehindPlayer@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?SetCameraBehindPlayer@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; SetCameraBehindPlayer, COMDAT

; 411  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 412  : 	pGame->GetCamera()->SetBehindPlayer();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?GetCamera@CGame@@QAEPAVCCamera@@XZ	; CGame::GetCamera
	mov	ecx, eax
	call	?SetBehindPlayer@CCamera@@QAEXXZ	; CCamera::SetBehindPlayer

; 413  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?SetCameraBehindPlayer@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; SetCameraBehindPlayer
_TEXT	ENDS
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??_C@_02DKCKIIND@?$CFs?$AA@			; `string'
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	??_C@_02GMLFBBN@wb?$AA@				; `string'
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	??$Read@J@BitStream@RakNet@@QAE_NAAJ@Z		; RakNet::BitStream::Read<long>
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??_C@_0BE@ILADIHLB@vc?9p?1clientscripts?1?$AA@	; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?UploadClientScript@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; UploadClientScript
EXTRN	?onInit@CScripts@@QAEXH@Z:PROC			; CScripts::onInit
EXTRN	?LoadScript@CScripts@@QAEHPBD@Z:PROC		; CScripts::LoadScript
EXTRN	?pScripts@@3PAVCScripts@@A:DWORD		; pScripts
EXTRN	_fclose:PROC
EXTRN	_ftell:PROC
EXTRN	_fseek:PROC
EXTRN	_rewind:PROC
EXTRN	_fprintf:PROC
EXTRN	_fopen:PROC
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	___CxxFrameHandler3:PROC
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs?$AA@ DB '%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02GMLFBBN@wb?$AA@
CONST	SEGMENT
??_C@_02GMLFBBN@wb?$AA@ DB 'wb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@ILADIHLB@vc?9p?1clientscripts?1?$AA@
CONST	SEGMENT
??_C@_0BE@ILADIHLB@vc?9p?1clientscripts?1?$AA@ DB 'vc-p/clientscripts/', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?UploadClientScript@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?UploadClientScript@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z$0
__ehfuncinfo$?UploadClientScript@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?UploadClientScript@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?UploadClientScript@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
$T210433 = -604						; size = 4
_iSlot$209469 = -400					; size = 4
_length$209467 = -388					; size = 4
_f$ = -376						; size = 4
_szScript$ = -364					; size = 4
_str$ = -352						; size = 32
_szScriptName$ = -312					; size = 256
_uiScriptLength$ = -48					; size = 4
_uiLength$ = -36					; size = 4
_uiLengthName$ = -24					; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?UploadClientScript@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; UploadClientScript, COMDAT

; 418  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?UploadClientScript@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 596				; 00000254H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-608]
	mov	ecx, 149				; 00000095H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 419  : 	long uiLengthName;
; 420  : 	long uiLength;
; 421  : 	long uiScriptLength;
; 422  : 	char szScriptName[256];
; 423  : 	std::string str = "vc-p/clientscripts/";

	push	OFFSET ??_C@_0BE@ILADIHLB@vc?9p?1clientscripts?1?$AA@
	lea	ecx, DWORD PTR _str$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 424  : 
; 425  : 	bitStream->Read(uiLengthName);

	lea	eax, DWORD PTR _uiLengthName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@J@BitStream@RakNet@@QAE_NAAJ@Z	; RakNet::BitStream::Read<long>

; 426  : 	bitStream->Read(uiLength);

	lea	eax, DWORD PTR _uiLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@J@BitStream@RakNet@@QAE_NAAJ@Z	; RakNet::BitStream::Read<long>

; 427  : 	bitStream->Read(uiScriptLength);

	lea	eax, DWORD PTR _uiScriptLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@J@BitStream@RakNet@@QAE_NAAJ@Z	; RakNet::BitStream::Read<long>

; 428  : 
; 429  : 	char *szScript = new char[uiLength+1];

	mov	eax, DWORD PTR _uiLength$[ebp]
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T210433[ebp], eax
	mov	ecx, DWORD PTR $T210433[ebp]
	mov	DWORD PTR _szScript$[ebp], ecx

; 430  : 	bitStream->Read(szScriptName, uiLengthName);

	mov	eax, DWORD PTR _uiLengthName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _szScriptName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?Read@BitStream@RakNet@@QAE_NPADI@Z	; RakNet::BitStream::Read

; 431  : 	bitStream->Read(szScript, uiLength);

	mov	eax, DWORD PTR _uiLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _szScript$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?Read@BitStream@RakNet@@QAE_NPADI@Z	; RakNet::BitStream::Read

; 432  : 
; 433  : 	szScriptName[uiLengthName] = '\0';

	mov	eax, DWORD PTR _uiLengthName$[ebp]
	mov	BYTE PTR _szScriptName$[ebp+eax], 0

; 434  : 	szScript[uiLength] = '\0';

	mov	eax, DWORD PTR _szScript$[ebp]
	add	eax, DWORD PTR _uiLength$[ebp]
	mov	BYTE PTR [eax], 0

; 435  : 	str.append(szScriptName);

	lea	eax, DWORD PTR _szScriptName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 436  : 
; 437  : 	FILE *f = fopen(str.c_str(), "wb");

	push	OFFSET ??_C@_02GMLFBBN@wb?$AA@
	lea	ecx, DWORD PTR _str$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _f$[ebp], eax

; 438  : 	if(f)

	cmp	DWORD PTR _f$[ebp], 0
	je	$LN2@UploadClie

; 439  : 	{
; 440  : 		fprintf(f, "%s", szScript);

	mov	eax, DWORD PTR _szScript$[ebp]
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	mov	ecx, DWORD PTR _f$[ebp]
	push	ecx
	call	_fprintf
	add	esp, 12					; 0000000cH

; 441  : 		rewind(f);

	mov	eax, DWORD PTR _f$[ebp]
	push	eax
	call	_rewind
	add	esp, 4

; 442  : 		fseek(f, 0, SEEK_END);

	push	2
	push	0
	mov	eax, DWORD PTR _f$[ebp]
	push	eax
	call	_fseek
	add	esp, 12					; 0000000cH

; 443  : 		long length = ftell(f);

	mov	eax, DWORD PTR _f$[ebp]
	push	eax
	call	_ftell
	add	esp, 4
	mov	DWORD PTR _length$209467[ebp], eax

; 444  : 		rewind(f);

	mov	eax, DWORD PTR _f$[ebp]
	push	eax
	call	_rewind
	add	esp, 4

; 445  : 		fclose(f);

	mov	eax, DWORD PTR _f$[ebp]
	push	eax
	call	_fclose
	add	esp, 4

; 446  : 		if(length >= uiScriptLength)

	mov	eax, DWORD PTR _length$209467[ebp]
	cmp	eax, DWORD PTR _uiScriptLength$[ebp]
	jl	SHORT $LN2@UploadClie

; 447  : 		{
; 448  : 			int iSlot = pScripts->LoadScript(szScriptName);

	lea	eax, DWORD PTR _szScriptName$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pScripts@@3PAVCScripts@@A ; pScripts
	call	?LoadScript@CScripts@@QAEHPBD@Z		; CScripts::LoadScript
	mov	DWORD PTR _iSlot$209469[ebp], eax

; 449  : 			pScripts->onInit(iSlot);

	mov	eax, DWORD PTR _iSlot$209469[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pScripts@@3PAVCScripts@@A ; pScripts
	call	?onInit@CScripts@@QAEXH@Z		; CScripts::onInit
$LN2@UploadClie:

; 450  : 		}
; 451  : 	}
; 452  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _str$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@UploadClie
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 608				; 00000260H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN13@UploadClie:
	DD	5
	DD	$LN12@UploadClie
$LN12@UploadClie:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN6@UploadClie
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN7@UploadClie
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN8@UploadClie
	DD	-312					; fffffec8H
	DD	256					; 00000100H
	DD	$LN9@UploadClie
	DD	-352					; fffffea0H
	DD	32					; 00000020H
	DD	$LN10@UploadClie
$LN10@UploadClie:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN9@UploadClie:
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	83					; 00000053H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN8@UploadClie:
	DB	117					; 00000075H
	DB	105					; 00000069H
	DB	83					; 00000053H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN7@UploadClie:
	DB	117					; 00000075H
	DB	105					; 00000069H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN6@UploadClie:
	DB	117					; 00000075H
	DB	105					; 00000069H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?UploadClientScript@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z$0:
	lea	ecx, DWORD PTR _str$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?UploadClientScript@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-612]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?UploadClientScript@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?UploadClientScript@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; UploadClientScript
PUBLIC	??$Read@UVector3@@@BitStream@RakNet@@QAE_NAAUVector3@@@Z ; RakNet::BitStream::Read<Vector3>
PUBLIC	?GetObjectManager@CNetworkManager@@QAEPAVCObjectManager@@XZ ; CNetworkManager::GetObjectManager
PUBLIC	?ObjectSpawn@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; ObjectSpawn
EXTRN	?New@CObjectManager@@QAEHEHUVector3@@0@Z:PROC	; CObjectManager::New
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ObjectSpawn@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_vecRot$ = -72						; size = 12
_vecPos$ = -52						; size = 12
_iModel$ = -32						; size = 4
_ObjectID$ = -17					; size = 1
_pObjectManager$ = -8					; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?ObjectSpawn@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; ObjectSpawn, COMDAT

; 455  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 456  : 	CObjectManager *pObjectManager = pNetowkManager->GetObjectManager();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetObjectManager@CNetworkManager@@QAEPAVCObjectManager@@XZ ; CNetworkManager::GetObjectManager
	mov	DWORD PTR _pObjectManager$[ebp], eax

; 457  : 	EntityId ObjectID=0;

	mov	BYTE PTR _ObjectID$[ebp], 0

; 458  : 	int iModel;
; 459  : 	Vector3 vecPos, vecRot;

	lea	ecx, DWORD PTR _vecPos$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	lea	ecx, DWORD PTR _vecRot$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 460  : 	bitStream->Read(ObjectID);

	lea	eax, DWORD PTR _ObjectID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 461  : 	bitStream->Read(iModel);

	lea	eax, DWORD PTR _iModel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 462  : 	bitStream->Read(vecPos);

	lea	eax, DWORD PTR _vecPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@UVector3@@@BitStream@RakNet@@QAE_NAAUVector3@@@Z ; RakNet::BitStream::Read<Vector3>

; 463  : 	bitStream->Read(vecRot);

	lea	eax, DWORD PTR _vecRot$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@UVector3@@@BitStream@RakNet@@QAE_NAAUVector3@@@Z ; RakNet::BitStream::Read<Vector3>

; 464  : 
; 465  : 	pObjectManager->New(ObjectID, iModel, vecPos, vecRot);

	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	ecx, DWORD PTR _vecRot$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _vecRot$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _vecRot$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	sub	esp, 12					; 0000000cH
	mov	edx, esp
	mov	eax, DWORD PTR _vecPos$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR _vecPos$[ebp+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR _vecPos$[ebp+8]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR _iModel$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _ObjectID$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pObjectManager$[ebp]
	call	?New@CObjectManager@@QAEHEHUVector3@@0@Z ; CObjectManager::New

; 466  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@ObjectSpaw
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN8@ObjectSpaw:
	DD	4
	DD	$LN7@ObjectSpaw
$LN7@ObjectSpaw:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@ObjectSpaw
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN4@ObjectSpaw
	DD	-52					; ffffffccH
	DD	12					; 0000000cH
	DD	$LN5@ObjectSpaw
	DD	-72					; ffffffb8H
	DD	12					; 0000000cH
	DD	$LN6@ObjectSpaw
$LN6@ObjectSpaw:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	82					; 00000052H
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	0
$LN5@ObjectSpaw:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN4@ObjectSpaw:
	DB	105					; 00000069H
	DB	77					; 0000004dH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	0
$LN3@ObjectSpaw:
	DB	79					; 0000004fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
?ObjectSpawn@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; ObjectSpawn
_TEXT	ENDS
PUBLIC	?ObjectDestroy@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; ObjectDestroy
EXTRN	?Delete@CObjectManager@@QAEHE@Z:PROC		; CObjectManager::Delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ObjectDestroy@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_objId$ = -17						; size = 1
_pObjectManager$ = -8					; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?ObjectDestroy@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; ObjectDestroy, COMDAT

; 469  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 470  : 	CObjectManager *pObjectManager = pNetowkManager->GetObjectManager();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetObjectManager@CNetworkManager@@QAEPAVCObjectManager@@XZ ; CNetworkManager::GetObjectManager
	mov	DWORD PTR _pObjectManager$[ebp], eax

; 471  : 	EntityId objId=0;

	mov	BYTE PTR _objId$[ebp], 0

; 472  : 
; 473  : 	bitStream->Read(objId);

	lea	eax, DWORD PTR _objId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 474  : 
; 475  : 	pObjectManager->Delete(objId);

	movzx	eax, BYTE PTR _objId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObjectManager$[ebp]
	call	?Delete@CObjectManager@@QAEHE@Z		; CObjectManager::Delete

; 476  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@ObjectDest
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@ObjectDest:
	DD	1
	DD	$LN4@ObjectDest
$LN4@ObjectDest:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@ObjectDest
$LN3@ObjectDest:
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	73					; 00000049H
	DB	100					; 00000064H
	DB	0
?ObjectDestroy@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; ObjectDestroy
_TEXT	ENDS
PUBLIC	?GetPickupManager@CNetworkManager@@QAEPAVCPickupManager@@XZ ; CNetworkManager::GetPickupManager
PUBLIC	?PickupSpawn@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; PickupSpawn
EXTRN	?New@CPickupManager@@QAE_NEHHPAUVector3@@@Z:PROC ; CPickupManager::New
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PickupSpawn@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_vecPos$ = -64						; size = 12
_iType$ = -44						; size = 4
_iModel$ = -32						; size = 4
_PickupID$ = -17					; size = 1
_pPickupManager$ = -8					; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?PickupSpawn@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; PickupSpawn, COMDAT

; 479  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 480  : 	CPickupManager *pPickupManager = pNetowkManager->GetPickupManager();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetPickupManager@CNetworkManager@@QAEPAVCPickupManager@@XZ ; CNetworkManager::GetPickupManager
	mov	DWORD PTR _pPickupManager$[ebp], eax

; 481  : 	EntityId PickupID=0;

	mov	BYTE PTR _PickupID$[ebp], 0

; 482  : 	int iModel, iType;
; 483  : 	Vector3 vecPos;

	lea	ecx, DWORD PTR _vecPos$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 484  : 	bitStream->Read(PickupID);

	lea	eax, DWORD PTR _PickupID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 485  : 	bitStream->Read(iModel);

	lea	eax, DWORD PTR _iModel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 486  : 	bitStream->Read(iType);

	lea	eax, DWORD PTR _iType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 487  : 	bitStream->Read((char*)&vecPos, sizeof(Vector3));

	push	12					; 0000000cH
	lea	eax, DWORD PTR _vecPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?Read@BitStream@RakNet@@QAE_NPADI@Z	; RakNet::BitStream::Read

; 488  : 
; 489  : 	pPickupManager->New(PickupID, iModel, iType, &vecPos);

	lea	eax, DWORD PTR _vecPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iModel$[ebp]
	push	edx
	movzx	eax, BYTE PTR _PickupID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPickupManager$[ebp]
	call	?New@CPickupManager@@QAE_NEHHPAUVector3@@@Z ; CPickupManager::New

; 490  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@PickupSpaw
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@PickupSpaw:
	DD	4
	DD	$LN7@PickupSpaw
$LN7@PickupSpaw:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@PickupSpaw
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN4@PickupSpaw
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN5@PickupSpaw
	DD	-64					; ffffffc0H
	DD	12					; 0000000cH
	DD	$LN6@PickupSpaw
$LN6@PickupSpaw:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN5@PickupSpaw:
	DB	105					; 00000069H
	DB	84					; 00000054H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	0
$LN4@PickupSpaw:
	DB	105					; 00000069H
	DB	77					; 0000004dH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	0
$LN3@PickupSpaw:
	DB	80					; 00000050H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	117					; 00000075H
	DB	112					; 00000070H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
?PickupSpawn@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; PickupSpawn
_TEXT	ENDS
PUBLIC	?PickupDestroy@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; PickupDestroy
EXTRN	?Delete@CPickupManager@@QAE_NE@Z:PROC		; CPickupManager::Delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PickupDestroy@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_PickupID$ = -17					; size = 1
_pPickupManager$ = -8					; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?PickupDestroy@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; PickupDestroy, COMDAT

; 493  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 494  : 	CPickupManager *pPickupManager = pNetowkManager->GetPickupManager();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetPickupManager@CNetworkManager@@QAEPAVCPickupManager@@XZ ; CNetworkManager::GetPickupManager
	mov	DWORD PTR _pPickupManager$[ebp], eax

; 495  : 	EntityId PickupID=0;

	mov	BYTE PTR _PickupID$[ebp], 0

; 496  : 
; 497  : 	bitStream->Read(PickupID);

	lea	eax, DWORD PTR _PickupID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 498  : 
; 499  : 	pPickupManager->Delete(PickupID);

	movzx	eax, BYTE PTR _PickupID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPickupManager$[ebp]
	call	?Delete@CPickupManager@@QAE_NE@Z	; CPickupManager::Delete

; 500  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@PickupDest
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@PickupDest:
	DD	1
	DD	$LN4@PickupDest
$LN4@PickupDest:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@PickupDest
$LN3@PickupDest:
	DB	80					; 00000050H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	117					; 00000075H
	DB	112					; 00000070H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
?PickupDestroy@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; PickupDestroy
_TEXT	ENDS
PUBLIC	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ	; CGame::FindPlayerPed
PUBLIC	?Script_SetHealth@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetHealth
EXTRN	?SetHealth@CPlayerPed@@QAEXM@Z:PROC		; CPlayerPed::SetHealth
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_SetHealth@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_playerHealth$ = -20					; size = 4
_pPlayer$ = -8						; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_SetHealth@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_SetHealth, COMDAT

; 507  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 508  : 	CPlayerPed *pPlayer = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pPlayer$[ebp], eax

; 509  : 
; 510  : 	float playerHealth;
; 511  : 
; 512  : 	bitStream->Read(playerHealth);

	lea	eax, DWORD PTR _playerHealth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 513  : 
; 514  : 	pPlayer->SetHealth(playerHealth);

	push	ecx
	fld	DWORD PTR _playerHealth$[ebp]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?SetHealth@CPlayerPed@@QAEXM@Z		; CPlayerPed::SetHealth

; 515  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Script_Set
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Script_Set:
	DD	1
	DD	$LN4@Script_Set
$LN4@Script_Set:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@Script_Set
$LN3@Script_Set:
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	72					; 00000048H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
?Script_SetHealth@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_SetHealth
_TEXT	ENDS
PUBLIC	?GetAt@CVehicleManager@@QAEPAVCVehicle@@E@Z	; CVehicleManager::GetAt
PUBLIC	?Script_SetVehicleHealth@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetVehicleHealth
EXTRN	?SetHealth@CVehicle@@QAEXM@Z:PROC		; CVehicle::SetHealth
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_SetVehicleHealth@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_pVehicle$ = -32					; size = 4
_newHealth$ = -20					; size = 4
_vehicle$ = -5						; size = 1
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_SetVehicleHealth@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_SetVehicleHealth, COMDAT

; 519  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 520  : 	BYTE vehicle;
; 521  : 	float newHealth;
; 522  : 	bitStream->Read(vehicle);

	lea	eax, DWORD PTR _vehicle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 523  : 	bitStream->Read(newHealth);

	lea	eax, DWORD PTR _newHealth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 524  : 	
; 525  : 	CVehicle *pVehicle = pNetowkManager->GetVehicleManager()->GetAt(vehicle);

	movzx	eax, BYTE PTR _vehicle$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ ; CNetworkManager::GetVehicleManager
	mov	ecx, eax
	call	?GetAt@CVehicleManager@@QAEPAVCVehicle@@E@Z ; CVehicleManager::GetAt
	mov	DWORD PTR _pVehicle$[ebp], eax

; 526  : 	pVehicle->SetHealth(newHealth);

	push	ecx
	fld	DWORD PTR _newHealth$[ebp]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _pVehicle$[ebp]
	call	?SetHealth@CVehicle@@QAEXM@Z		; CVehicle::SetHealth

; 527  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@Script_Set@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@Script_Set@2:
	DD	2
	DD	$LN5@Script_Set@2
$LN5@Script_Set@2:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Script_Set@2
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@Script_Set@2
$LN4@Script_Set@2:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	72					; 00000048H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN3@Script_Set@2:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
?Script_SetVehicleHealth@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_SetVehicleHealth
_TEXT	ENDS
PUBLIC	?Script_SetArmour@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetArmour
EXTRN	?SetArmour@CPlayerPed@@QAEXM@Z:PROC		; CPlayerPed::SetArmour
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_SetArmour@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_playerArmour$ = -20					; size = 4
_pPlayer$ = -8						; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_SetArmour@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_SetArmour, COMDAT

; 531  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 532  : 	CPlayerPed *pPlayer = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pPlayer$[ebp], eax

; 533  : 
; 534  : 	float playerArmour;
; 535  : 
; 536  : 	bitStream->Read(playerArmour);

	lea	eax, DWORD PTR _playerArmour$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 537  : 
; 538  : 	pPlayer->SetArmour(playerArmour);

	push	ecx
	fld	DWORD PTR _playerArmour$[ebp]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?SetArmour@CPlayerPed@@QAEXM@Z		; CPlayerPed::SetArmour

; 539  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Script_Set@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Script_Set@3:
	DD	1
	DD	$LN4@Script_Set@3
$LN4@Script_Set@3:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@Script_Set@3
$LN3@Script_Set@3:
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	0
?Script_SetArmour@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_SetArmour
_TEXT	ENDS
PUBLIC	?Script_SetPos@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetPos
EXTRN	?Teleport@CEntity@@QAEXMMM@Z:PROC		; CEntity::Teleport
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_SetPos@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_playerPos$ = -28					; size = 12
_pPlayer$ = -8						; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_SetPos@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_SetPos, COMDAT

; 543  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 544  : 	CPlayerPed *pPlayer = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pPlayer$[ebp], eax

; 545  : 
; 546  : 	Vector3 playerPos;

	lea	ecx, DWORD PTR _playerPos$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 547  : 
; 548  : 	bitStream->Read((char *)&playerPos, sizeof(Vector3));

	push	12					; 0000000cH
	lea	eax, DWORD PTR _playerPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?Read@BitStream@RakNet@@QAE_NPADI@Z	; RakNet::BitStream::Read

; 549  : 
; 550  : 	pPlayer->Teleport(playerPos.X, playerPos.Y, playerPos.Z);

	push	ecx
	fld	DWORD PTR _playerPos$[ebp+8]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _playerPos$[ebp+4]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _playerPos$[ebp]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?Teleport@CEntity@@QAEXMMM@Z		; CEntity::Teleport

; 551  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Script_Set@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Script_Set@4:
	DD	1
	DD	$LN4@Script_Set@4
$LN4@Script_Set@4:
	DD	-28					; ffffffe4H
	DD	12					; 0000000cH
	DD	$LN3@Script_Set@4
$LN3@Script_Set@4:
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
?Script_SetPos@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_SetPos
_TEXT	ENDS
PUBLIC	?Script_SetTurnSpeed@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetTurnSpeed
EXTRN	?SetTurnSpeed@CPhysical@@QAEXUVector3@@@Z:PROC	; CPhysical::SetTurnSpeed
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_SetTurnSpeed@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_speed$ = -28						; size = 12
_pPlayer$ = -8						; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_SetTurnSpeed@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_SetTurnSpeed, COMDAT

; 555  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 556  : 	CPlayerPed *pPlayer = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pPlayer$[ebp], eax

; 557  : 
; 558  : 	Vector3 speed;

	lea	ecx, DWORD PTR _speed$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 559  : 
; 560  : 	bitStream->Read((char *)&speed, sizeof(Vector3));

	push	12					; 0000000cH
	lea	eax, DWORD PTR _speed$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?Read@BitStream@RakNet@@QAE_NPADI@Z	; RakNet::BitStream::Read

; 561  : 
; 562  : 	pPlayer->SetTurnSpeed(speed);

	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	ecx, DWORD PTR _speed$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _speed$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _speed$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?SetTurnSpeed@CPhysical@@QAEXUVector3@@@Z ; CPhysical::SetTurnSpeed

; 563  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Script_Set@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Script_Set@5:
	DD	1
	DD	$LN4@Script_Set@5
$LN4@Script_Set@5:
	DD	-28					; ffffffe4H
	DD	12					; 0000000cH
	DD	$LN3@Script_Set@5
$LN3@Script_Set@5:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
?Script_SetTurnSpeed@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_SetTurnSpeed
_TEXT	ENDS
PUBLIC	?Script_SetMoveSpeed@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetMoveSpeed
EXTRN	?SetMoveSpeed@CPhysical@@QAEXUVector3@@@Z:PROC	; CPhysical::SetMoveSpeed
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_SetMoveSpeed@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_speed$ = -28						; size = 12
_pPlayer$ = -8						; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_SetMoveSpeed@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_SetMoveSpeed, COMDAT

; 567  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 568  : 	CPlayerPed *pPlayer = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pPlayer$[ebp], eax

; 569  : 
; 570  : 	Vector3 speed;

	lea	ecx, DWORD PTR _speed$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 571  : 
; 572  : 	bitStream->Read((char *)&speed, sizeof(Vector3));

	push	12					; 0000000cH
	lea	eax, DWORD PTR _speed$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?Read@BitStream@RakNet@@QAE_NPADI@Z	; RakNet::BitStream::Read

; 573  : 
; 574  : 	pPlayer->SetMoveSpeed(speed);

	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	ecx, DWORD PTR _speed$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _speed$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _speed$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?SetMoveSpeed@CPhysical@@QAEXUVector3@@@Z ; CPhysical::SetMoveSpeed

; 575  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Script_Set@6
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Script_Set@6:
	DD	1
	DD	$LN4@Script_Set@6
$LN4@Script_Set@6:
	DD	-28					; ffffffe4H
	DD	12					; 0000000cH
	DD	$LN3@Script_Set@6
$LN3@Script_Set@6:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
?Script_SetMoveSpeed@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_SetMoveSpeed
_TEXT	ENDS
PUBLIC	?Script_PutInVehicle@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_PutInVehicle
EXTRN	?PutDirectlyInVehicle@CPlayerPed@@QAEXH@Z:PROC	; CPlayerPed::PutDirectlyInVehicle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_PutInVehicle@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_vehID$ = -20						; size = 4
_pPlayer$ = -8						; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_PutInVehicle@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_PutInVehicle, COMDAT

; 579  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 580  : 	CPlayerPed *pPlayer = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pPlayer$[ebp], eax

; 581  : 
; 582  : 	int vehID;
; 583  : 
; 584  : 	bitStream->Read(vehID);

	lea	eax, DWORD PTR _vehID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 585  : 
; 586  : 	pPlayer->PutDirectlyInVehicle(pNetowkManager->GetVehicleManager()->FindGtaIDFromID(vehID));

	movzx	eax, BYTE PTR _vehID$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ ; CNetworkManager::GetVehicleManager
	mov	ecx, eax
	call	?FindGtaIDFromID@CVehicleManager@@QAEHE@Z ; CVehicleManager::FindGtaIDFromID
	push	eax
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?PutDirectlyInVehicle@CPlayerPed@@QAEXH@Z ; CPlayerPed::PutDirectlyInVehicle

; 587  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Script_Put
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Script_Put:
	DD	1
	DD	$LN4@Script_Put
$LN4@Script_Put:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@Script_Put
$LN3@Script_Put:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	104					; 00000068H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
?Script_PutInVehicle@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_PutInVehicle
_TEXT	ENDS
PUBLIC	?Script_GivePlayerWeapon@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_GivePlayerWeapon
EXTRN	?GiveWeapon@CPlayerPed@@QAEHHH@Z:PROC		; CPlayerPed::GiveWeapon
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_GivePlayerWeapon@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_ammoAMT$ = -32						; size = 4
_weaponID$ = -20					; size = 4
_pPlayer$ = -8						; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_GivePlayerWeapon@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_GivePlayerWeapon, COMDAT

; 591  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 592  : 	CPlayerPed *pPlayer = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pPlayer$[ebp], eax

; 593  : 
; 594  : 	int weaponID;
; 595  : 	int ammoAMT;
; 596  : 
; 597  : 	bitStream->Read(weaponID);

	lea	eax, DWORD PTR _weaponID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 598  : 	bitStream->Read(ammoAMT);

	lea	eax, DWORD PTR _ammoAMT$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 599  : 
; 600  : 	pPlayer->GiveWeapon(weaponID, ammoAMT);

	mov	eax, DWORD PTR _ammoAMT$[ebp]
	push	eax
	mov	ecx, DWORD PTR _weaponID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?GiveWeapon@CPlayerPed@@QAEHHH@Z	; CPlayerPed::GiveWeapon

; 601  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@Script_Giv
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@Script_Giv:
	DD	2
	DD	$LN5@Script_Giv
$LN5@Script_Giv:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@Script_Giv
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN4@Script_Giv
$LN4@Script_Giv:
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	65					; 00000041H
	DB	77					; 0000004dH
	DB	84					; 00000054H
	DB	0
$LN3@Script_Giv:
	DB	119					; 00000077H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
?Script_GivePlayerWeapon@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_GivePlayerWeapon
_TEXT	ENDS
PUBLIC	?Script_SetPlayerSkin@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetPlayerSkin
EXTRN	?SetModel@CPlayerPed@@QAEXH@Z:PROC		; CPlayerPed::SetModel
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_SetPlayerSkin@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_skinID$ = -20						; size = 4
_pPlayer$ = -8						; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_SetPlayerSkin@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_SetPlayerSkin, COMDAT

; 605  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 606  : 	CPlayerPed *pPlayer = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pPlayer$[ebp], eax

; 607  : 
; 608  : 	int skinID;
; 609  : 
; 610  : 	bitStream->Read(skinID);

	lea	eax, DWORD PTR _skinID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 611  : 
; 612  : 	pPlayer->SetModel(skinID);

	mov	eax, DWORD PTR _skinID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?SetModel@CPlayerPed@@QAEXH@Z		; CPlayerPed::SetModel

; 613  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Script_Set@7
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Script_Set@7:
	DD	1
	DD	$LN4@Script_Set@7
$LN4@Script_Set@7:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@Script_Set@7
$LN3@Script_Set@7:
	DB	115					; 00000073H
	DB	107					; 0000006bH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
?Script_SetPlayerSkin@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_SetPlayerSkin
_TEXT	ENDS
PUBLIC	?Script_SetPlayerZAngle@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetPlayerZAngle
EXTRN	?SetRotation@CPlayerPed@@QAEXM@Z:PROC		; CPlayerPed::SetRotation
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_SetPlayerZAngle@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_fRotation$ = -20					; size = 4
_pPlayer$ = -8						; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_SetPlayerZAngle@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_SetPlayerZAngle, COMDAT

; 617  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 618  : 	CPlayerPed *pPlayer = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pPlayer$[ebp], eax

; 619  : 	float fRotation;
; 620  : 
; 621  : 	bitStream->Read(fRotation);

	lea	eax, DWORD PTR _fRotation$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 622  : 	pPlayer->SetRotation(fRotation);

	push	ecx
	fld	DWORD PTR _fRotation$[ebp]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?SetRotation@CPlayerPed@@QAEXM@Z	; CPlayerPed::SetRotation

; 623  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Script_Set@8
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Script_Set@8:
	DD	1
	DD	$LN4@Script_Set@8
$LN4@Script_Set@8:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@Script_Set@8
$LN3@Script_Set@8:
	DB	102					; 00000066H
	DB	82					; 00000052H
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
?Script_SetPlayerZAngle@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_SetPlayerZAngle
_TEXT	ENDS
PUBLIC	?Script_SetPlayerAction@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetPlayerAction
EXTRN	?SetAction@CPlayerPed@@QAEXE@Z:PROC		; CPlayerPed::SetAction
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_SetPlayerAction@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_Action$ = -17						; size = 1
_pPlayer$ = -8						; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_SetPlayerAction@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_SetPlayerAction, COMDAT

; 627  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 628  : 	CPlayerPed *pPlayer = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pPlayer$[ebp], eax

; 629  : 	BYTE Action;
; 630  : 
; 631  : 	bitStream->Read(Action);

	lea	eax, DWORD PTR _Action$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 632  : 	pPlayer->SetAction(Action);

	movzx	eax, BYTE PTR _Action$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?SetAction@CPlayerPed@@QAEXE@Z		; CPlayerPed::SetAction

; 633  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Script_Set@9
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@Script_Set@9:
	DD	1
	DD	$LN4@Script_Set@9
$LN4@Script_Set@9:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@Script_Set@9
$LN3@Script_Set@9:
	DB	65					; 00000041H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
?Script_SetPlayerAction@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_SetPlayerAction
_TEXT	ENDS
PUBLIC	?Script_SetPlayerRotation@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetPlayerRotation
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_SetPlayerRotation@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_playerRot$ = -20					; size = 4
_pPlayer$ = -8						; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_SetPlayerRotation@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_SetPlayerRotation, COMDAT

; 637  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 638  : 	CPlayerPed *pPlayer = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pPlayer$[ebp], eax

; 639  : 	float playerRot;
; 640  : 
; 641  : 	bitStream->Read(playerRot);

	lea	eax, DWORD PTR _playerRot$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 642  : 	pPlayer->SetRotation(playerRot);

	push	ecx
	fld	DWORD PTR _playerRot$[ebp]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?SetRotation@CPlayerPed@@QAEXM@Z	; CPlayerPed::SetRotation

; 643  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Script_Set@10
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@Script_Set@10:
	DD	1
	DD	$LN4@Script_Set@10
$LN4@Script_Set@10:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@Script_Set@10
$LN3@Script_Set@10:
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	82					; 00000052H
	DB	111					; 0000006fH
	DB	116					; 00000074H
	DB	0
?Script_SetPlayerRotation@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_SetPlayerRotation
_TEXT	ENDS
PUBLIC	?Script_ResetWeapons@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_ResetWeapons
EXTRN	?ClearAllWeapons@CPlayerPed@@QAEXXZ:PROC	; CPlayerPed::ClearAllWeapons
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_ResetWeapons@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_pPlayer$ = -8						; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_ResetWeapons@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_ResetWeapons, COMDAT

; 647  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 648  : 	CPlayerPed *pPlayer = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pPlayer$[ebp], eax

; 649  : 
; 650  : 	pPlayer->ClearAllWeapons();

	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?ClearAllWeapons@CPlayerPed@@QAEXXZ	; CPlayerPed::ClearAllWeapons

; 651  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Script_ResetWeapons@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_ResetWeapons
_TEXT	ENDS
PUBLIC	?Script_SetArmedWeapon@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetArmedWeapon
EXTRN	?SetArmedWeapon@CPlayerPed@@QAEHH@Z:PROC	; CPlayerPed::SetArmedWeapon
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_SetArmedWeapon@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_playerWeapon$ = -20					; size = 4
_pPlayer$ = -8						; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_SetArmedWeapon@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_SetArmedWeapon, COMDAT

; 655  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 656  : 	CPlayerPed *pPlayer = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pPlayer$[ebp], eax

; 657  : 
; 658  : 	int playerWeapon;
; 659  : 
; 660  : 	bitStream->Read(playerWeapon);

	lea	eax, DWORD PTR _playerWeapon$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 661  : 
; 662  : 	pPlayer->SetArmedWeapon(playerWeapon);

	mov	eax, DWORD PTR _playerWeapon$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?SetArmedWeapon@CPlayerPed@@QAEHH@Z	; CPlayerPed::SetArmedWeapon

; 663  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Script_Set@11
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Script_Set@11:
	DD	1
	DD	$LN4@Script_Set@11
$LN4@Script_Set@11:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@Script_Set@11
$LN3@Script_Set@11:
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	87					; 00000057H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
?Script_SetArmedWeapon@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_SetArmedWeapon
_TEXT	ENDS
PUBLIC	?Script_RemoveFromVehicle@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_RemoveFromVehicle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_RemoveFromVehicle@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_pPlayer$ = -8						; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_RemoveFromVehicle@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_RemoveFromVehicle, COMDAT

; 667  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 668  : 	CPlayerPed *pPlayer = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pPlayer$[ebp], eax

; 669  : 
; 670  : 	pPlayer->ExitCurrentVehicle();

	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?ExitCurrentVehicle@CPlayerPed@@QAEXXZ	; CPlayerPed::ExitCurrentVehicle

; 671  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Script_RemoveFromVehicle@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_RemoveFromVehicle
_TEXT	ENDS
PUBLIC	?Script_ToggleControls@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_ToggleControls
EXTRN	?TogglePlayerControllable@CPlayerPed@@QAEXH@Z:PROC ; CPlayerPed::TogglePlayerControllable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_ToggleControls@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_ControlValue$ = -20					; size = 4
_pPlayer$ = -8						; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_ToggleControls@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_ToggleControls, COMDAT

; 675  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 676  : 	CPlayerPed *pPlayer = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pPlayer$[ebp], eax

; 677  : 
; 678  : 	int ControlValue;
; 679  : 
; 680  : 	bitStream->Read(ControlValue);

	lea	eax, DWORD PTR _ControlValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 681  : 
; 682  : 	pPlayer->TogglePlayerControllable(ControlValue);

	mov	eax, DWORD PTR _ControlValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?TogglePlayerControllable@CPlayerPed@@QAEXH@Z ; CPlayerPed::TogglePlayerControllable

; 683  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Script_Tog
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Script_Tog:
	DD	1
	DD	$LN4@Script_Tog
$LN4@Script_Tog:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@Script_Tog
$LN3@Script_Tog:
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	86					; 00000056H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	0
?Script_ToggleControls@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_ToggleControls
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?Script_ClientMessage@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_ClientMessage
EXTRN	?AddClientMessage@CChatWindow@@QAEXKPAD@Z:PROC	; CChatWindow::AddClientMessage
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_ClientMessage@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_uiLength$ = -288					; size = 4
_szMessage$ = -276					; size = 256
_dwColor$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_ClientMessage@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_ClientMessage, COMDAT

; 687  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 484				; 000001e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-484]
	mov	ecx, 121				; 00000079H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 688  : 	DWORD dwColor;
; 689  : 	CHAR szMessage[256];
; 690  : 	UINT uiLength;
; 691  : 
; 692  : 	bitStream->Read(dwColor);

	lea	eax, DWORD PTR _dwColor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@K@BitStream@RakNet@@QAE_NAAK@Z	; RakNet::BitStream::Read<unsigned long>

; 693  : 	bitStream->Read(uiLength);

	lea	eax, DWORD PTR _uiLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@I@BitStream@RakNet@@QAE_NAAI@Z	; RakNet::BitStream::Read<unsigned int>

; 694  : 	bitStream->Read(szMessage,uiLength);

	mov	eax, DWORD PTR _uiLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _szMessage$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?Read@BitStream@RakNet@@QAE_NPADI@Z	; RakNet::BitStream::Read

; 695  : 	szMessage[uiLength] = '\0';

	mov	eax, DWORD PTR _uiLength$[ebp]
	mov	BYTE PTR _szMessage$[ebp+eax], 0

; 696  : 
; 697  : 	pChatWindow->AddClientMessage(dwColor,szMessage);

	lea	eax, DWORD PTR _szMessage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dwColor$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A ; pChatWindow
	call	?AddClientMessage@CChatWindow@@QAEXKPAD@Z ; CChatWindow::AddClientMessage

; 698  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Script_Cli
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 484				; 000001e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Script_Cli:
	DD	3
	DD	$LN6@Script_Cli
$LN6@Script_Cli:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN3@Script_Cli
	DD	-276					; fffffeecH
	DD	256					; 00000100H
	DD	$LN4@Script_Cli
	DD	-288					; fffffee0H
	DD	4
	DD	$LN5@Script_Cli
$LN5@Script_Cli:
	DB	117					; 00000075H
	DB	105					; 00000069H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN4@Script_Cli:
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	77					; 0000004dH
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	0
$LN3@Script_Cli:
	DB	100					; 00000064H
	DB	119					; 00000077H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
?Script_ClientMessage@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_ClientMessage
_TEXT	ENDS
PUBLIC	?GetTextManager@CNetworkManager@@QAEPAVCTextManager@@XZ ; CNetworkManager::GetTextManager
PUBLIC	__$ArrayPad$
PUBLIC	?CreateText@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; CreateText
EXTRN	?New@CTextManager@@QAEEEKPADHMM0@Z:PROC		; CTextManager::New
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CreateText@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_posY$ = -432						; size = 4
_posX$ = -420						; size = 4
_size$ = -408						; size = 4
_uiLength$ = -396					; size = 4
_uiFLength$ = -384					; size = 4
_szMessage$ = -372					; size = 256
_szFontName$ = -108					; size = 64
_dwColor$ = -36						; size = 4
_TextID$ = -21						; size = 1
_pTextManager$ = -12					; size = 4
__$ArrayPad$ = -4					; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?CreateText@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; CreateText, COMDAT

; 702  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 628				; 00000274H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-628]
	mov	ecx, 157				; 0000009dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 703  : 	CTextManager *pTextManager = pNetowkManager->GetTextManager();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetTextManager@CNetworkManager@@QAEPAVCTextManager@@XZ ; CNetworkManager::GetTextManager
	mov	DWORD PTR _pTextManager$[ebp], eax

; 704  : 	EntityId TextID=0;

	mov	BYTE PTR _TextID$[ebp], 0

; 705  : 	DWORD dwColor;
; 706  : 	CHAR szFontName[64], szMessage[256];
; 707  : 	UINT uiFLength, uiLength;
; 708  : 	int size;
; 709  : 	float posX, posY;
; 710  : 
; 711  : 	bitStream->Read(TextID);

	lea	eax, DWORD PTR _TextID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 712  : 	bitStream->Read(dwColor);

	lea	eax, DWORD PTR _dwColor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@K@BitStream@RakNet@@QAE_NAAK@Z	; RakNet::BitStream::Read<unsigned long>

; 713  : 	bitStream->Read(uiFLength);

	lea	eax, DWORD PTR _uiFLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@I@BitStream@RakNet@@QAE_NAAI@Z	; RakNet::BitStream::Read<unsigned int>

; 714  : 	bitStream->Read(szFontName,uiFLength);

	mov	eax, DWORD PTR _uiFLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _szFontName$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?Read@BitStream@RakNet@@QAE_NPADI@Z	; RakNet::BitStream::Read

; 715  : 	szFontName[uiFLength] = '\0';

	mov	eax, DWORD PTR _uiFLength$[ebp]
	mov	BYTE PTR _szFontName$[ebp+eax], 0

; 716  : 	bitStream->Read(size);

	lea	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 717  : 	bitStream->Read(posX);

	lea	eax, DWORD PTR _posX$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 718  : 	bitStream->Read(posY);

	lea	eax, DWORD PTR _posY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 719  : 	bitStream->Read(uiLength);

	lea	eax, DWORD PTR _uiLength$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@I@BitStream@RakNet@@QAE_NAAI@Z	; RakNet::BitStream::Read<unsigned int>

; 720  : 	bitStream->Read(szMessage,uiLength);

	mov	eax, DWORD PTR _uiLength$[ebp]
	push	eax
	lea	ecx, DWORD PTR _szMessage$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?Read@BitStream@RakNet@@QAE_NPADI@Z	; RakNet::BitStream::Read

; 721  : 	szMessage[uiLength] = '\0';

	mov	eax, DWORD PTR _uiLength$[ebp]
	mov	BYTE PTR _szMessage$[ebp+eax], 0

; 722  : 
; 723  : 	pTextManager->New(TextID, dwColor, szFontName, size, posX, posY, szMessage);

	lea	eax, DWORD PTR _szMessage$[ebp]
	push	eax
	push	ecx
	fld	DWORD PTR _posY$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _posX$[ebp]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	lea	edx, DWORD PTR _szFontName$[ebp]
	push	edx
	mov	eax, DWORD PTR _dwColor$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _TextID$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pTextManager$[ebp]
	call	?New@CTextManager@@QAEEEKPADHMM0@Z	; CTextManager::New

; 724  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@CreateText
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 628				; 00000274H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN13@CreateText:
	DD	9
	DD	$LN12@CreateText
$LN12@CreateText:
	DD	-21					; ffffffebH
	DD	1
	DD	$LN3@CreateText
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN4@CreateText
	DD	-108					; ffffff94H
	DD	64					; 00000040H
	DD	$LN5@CreateText
	DD	-372					; fffffe8cH
	DD	256					; 00000100H
	DD	$LN6@CreateText
	DD	-384					; fffffe80H
	DD	4
	DD	$LN7@CreateText
	DD	-396					; fffffe74H
	DD	4
	DD	$LN8@CreateText
	DD	-408					; fffffe68H
	DD	4
	DD	$LN9@CreateText
	DD	-420					; fffffe5cH
	DD	4
	DD	$LN10@CreateText
	DD	-432					; fffffe50H
	DD	4
	DD	$LN11@CreateText
$LN11@CreateText:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	89					; 00000059H
	DB	0
$LN10@CreateText:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	88					; 00000058H
	DB	0
$LN9@CreateText:
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN8@CreateText:
	DB	117					; 00000075H
	DB	105					; 00000069H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN7@CreateText:
	DB	117					; 00000075H
	DB	105					; 00000069H
	DB	70					; 00000046H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN6@CreateText:
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	77					; 0000004dH
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	0
$LN5@CreateText:
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	70					; 00000046H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN4@CreateText:
	DB	100					; 00000064H
	DB	119					; 00000077H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN3@CreateText:
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
?CreateText@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; CreateText
_TEXT	ENDS
PUBLIC	?DestroyText@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; DestroyText
EXTRN	?Delete@CTextManager@@QAE_NE@Z:PROC		; CTextManager::Delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DestroyText@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_text$ = -17						; size = 1
_pTextManager$ = -8					; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?DestroyText@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; DestroyText, COMDAT

; 727  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 728  : 	CTextManager *pTextManager = pNetowkManager->GetTextManager();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetTextManager@CNetworkManager@@QAEPAVCTextManager@@XZ ; CNetworkManager::GetTextManager
	mov	DWORD PTR _pTextManager$[ebp], eax

; 729  : 	EntityId text;
; 730  : 
; 731  : 	bitStream->Read(text);

	lea	eax, DWORD PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 732  : 
; 733  : 	pTextManager->Delete(text);

	movzx	eax, BYTE PTR _text$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pTextManager$[ebp]
	call	?Delete@CTextManager@@QAE_NE@Z		; CTextManager::Delete

; 734  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@DestroyTex
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@DestroyTex:
	DD	1
	DD	$LN4@DestroyTex
$LN4@DestroyTex:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN3@DestroyTex
$LN3@DestroyTex:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
?DestroyText@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; DestroyText
_TEXT	ENDS
PUBLIC	?GetSlotState@CVehicleManager@@QAEHE@Z		; CVehicleManager::GetSlotState
PUBLIC	?InflictDamage@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; InflictDamage
EXTRN	?InflictDamage@CRemotePlayer@@QAEX_NEHMHE@Z:PROC ; CRemotePlayer::InflictDamage
EXTRN	?ReadBit@BitStream@RakNet@@QAE_NXZ:PROC		; RakNet::BitStream::ReadBit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InflictDamage@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_pPlayer$ = -116					; size = 4
_byteUnk$ = -101					; size = 1
_iPedPieces$ = -92					; size = 4
_fUnk$ = -80						; size = 4
_iWeapon$ = -68						; size = 4
_damagerID$ = -53					; size = 1
_bPlayerVehicleDamager$ = -41				; size = 1
_playerID$ = -29					; size = 1
_pVehicleManager$ = -20					; size = 4
_pPlayerManager$ = -8					; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?InflictDamage@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; InflictDamage, COMDAT

; 740  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 741  : 	CPlayerManager * pPlayerManager = pNetowkManager->GetPlayerManager();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ; CNetworkManager::GetPlayerManager
	mov	DWORD PTR _pPlayerManager$[ebp], eax

; 742  : 	CVehicleManager * pVehicleManager = pNetowkManager->GetVehicleManager();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ ; CNetworkManager::GetVehicleManager
	mov	DWORD PTR _pVehicleManager$[ebp], eax

; 743  : 	EntityId playerID;
; 744  : 	bool bPlayerVehicleDamager;
; 745  : 	EntityId damagerID;
; 746  : 	int iWeapon;
; 747  : 	float fUnk;
; 748  : 	int iPedPieces;
; 749  : 	BYTE byteUnk;
; 750  : 
; 751  : 	bitStream->Read(playerID);

	lea	eax, DWORD PTR _playerID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 752  : 
; 753  : 	if(!pVehicleManager->GetAt(playerID))

	movzx	eax, BYTE PTR _playerID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pVehicleManager$[ebp]
	call	?GetAt@CVehicleManager@@QAEPAVCVehicle@@E@Z ; CVehicleManager::GetAt
	test	eax, eax
	jne	SHORT $LN5@InflictDam

; 754  : 	{
; 755  : 		return;

	jmp	$LN6@InflictDam
$LN5@InflictDam:

; 756  : 	}
; 757  : 
; 758  : 	bPlayerVehicleDamager = bitStream->ReadBit();

	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?ReadBit@BitStream@RakNet@@QAE_NXZ	; RakNet::BitStream::ReadBit
	mov	BYTE PTR _bPlayerVehicleDamager$[ebp], al

; 759  : 	bitStream->Read(damagerID);

	lea	eax, DWORD PTR _damagerID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 760  : 
; 761  : 	if((bPlayerVehicleDamager && !pPlayerManager->GetSlotState(damagerID)) || (!bPlayerVehicleDamager && !pVehicleManager->GetSlotState(damagerID)))

	movzx	eax, BYTE PTR _bPlayerVehicleDamager$[ebp]
	test	eax, eax
	je	SHORT $LN2@InflictDam
	movzx	eax, BYTE PTR _damagerID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayerManager$[ebp]
	call	?GetSlotState@CPlayerManager@@QAEHE@Z	; CPlayerManager::GetSlotState
	test	eax, eax
	je	SHORT $LN3@InflictDam
$LN2@InflictDam:
	movzx	eax, BYTE PTR _bPlayerVehicleDamager$[ebp]
	test	eax, eax
	jne	SHORT $LN4@InflictDam
	movzx	eax, BYTE PTR _damagerID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pVehicleManager$[ebp]
	call	?GetSlotState@CVehicleManager@@QAEHE@Z	; CVehicleManager::GetSlotState
	test	eax, eax
	jne	SHORT $LN4@InflictDam
$LN3@InflictDam:

; 762  : 	{
; 763  : 		return;

	jmp	SHORT $LN6@InflictDam
$LN4@InflictDam:

; 764  : 	}
; 765  : 
; 766  : 	bitStream->Read(iWeapon);

	lea	eax, DWORD PTR _iWeapon$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 767  : 	bitStream->Read(fUnk);

	lea	eax, DWORD PTR _fUnk$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 768  : 	bitStream->Read(iPedPieces);

	lea	eax, DWORD PTR _iPedPieces$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 769  : 	bitStream->Read(byteUnk);

	lea	eax, DWORD PTR _byteUnk$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 770  : 
; 771  : 	CRemotePlayer * pPlayer = pPlayerManager->GetAt(playerID);

	movzx	eax, BYTE PTR _playerID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayerManager$[ebp]
	call	?GetAt@CPlayerManager@@QAEPAVCRemotePlayer@@E@Z ; CPlayerManager::GetAt
	mov	DWORD PTR _pPlayer$[ebp], eax

; 772  : 
; 773  : 	if(pPlayer)

	cmp	DWORD PTR _pPlayer$[ebp], 0
	je	SHORT $LN1@InflictDam

; 774  : 	{
; 775  : 		pPlayer->InflictDamage(bPlayerVehicleDamager, damagerID, iWeapon, fUnk, iPedPieces, byteUnk);

	movzx	eax, BYTE PTR _byteUnk$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iPedPieces$[ebp]
	push	ecx
	push	ecx
	fld	DWORD PTR _fUnk$[ebp]
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _iWeapon$[ebp]
	push	edx
	movzx	eax, BYTE PTR _damagerID$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _bPlayerVehicleDamager$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?InflictDamage@CRemotePlayer@@QAEX_NEHMHE@Z ; CRemotePlayer::InflictDamage
$LN1@InflictDam:
$LN6@InflictDam:

; 776  : 	}
; 777  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@InflictDam
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN15@InflictDam:
	DD	6
	DD	$LN14@InflictDam
$LN14@InflictDam:
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN8@InflictDam
	DD	-53					; ffffffcbH
	DD	1
	DD	$LN9@InflictDam
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN10@InflictDam
	DD	-80					; ffffffb0H
	DD	4
	DD	$LN11@InflictDam
	DD	-92					; ffffffa4H
	DD	4
	DD	$LN12@InflictDam
	DD	-101					; ffffff9bH
	DD	1
	DD	$LN13@InflictDam
$LN13@InflictDam:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	85					; 00000055H
	DB	110					; 0000006eH
	DB	107					; 0000006bH
	DB	0
$LN12@InflictDam:
	DB	105					; 00000069H
	DB	80					; 00000050H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	80					; 00000050H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
$LN11@InflictDam:
	DB	102					; 00000066H
	DB	85					; 00000055H
	DB	110					; 0000006eH
	DB	107					; 0000006bH
	DB	0
$LN10@InflictDam:
	DB	105					; 00000069H
	DB	87					; 00000057H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN9@InflictDam:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
$LN8@InflictDam:
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
?InflictDamage@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; InflictDamage
_TEXT	ENDS
PUBLIC	?Show@CText@@QAEX_N@Z				; CText::Show
PUBLIC	?GetAt@CTextManager@@QAEPAVCText@@E@Z		; CTextManager::GetAt
PUBLIC	?GetSlotState@CTextManager@@QAEHE@Z		; CTextManager::GetSlotState
PUBLIC	??$Read@_N@BitStream@RakNet@@QAE_NAA_N@Z	; RakNet::BitStream::Read<bool>
PUBLIC	?Script_toggleTextForPlayer@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_toggleTextForPlayer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_toggleTextForPlayer@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_show$ = -17						; size = 1
_textId$ = -5						; size = 1
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_toggleTextForPlayer@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_toggleTextForPlayer, COMDAT

; 783  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 784  : 	EntityId textId;
; 785  : 	bool show;
; 786  : 
; 787  : 	bitStream->Read(textId);

	lea	eax, DWORD PTR _textId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 788  : 	bitStream->Read(show);

	lea	eax, DWORD PTR _show$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@_N@BitStream@RakNet@@QAE_NAA_N@Z ; RakNet::BitStream::Read<bool>

; 789  : 
; 790  : 	if(pNetowkManager->GetTextManager()->GetSlotState(textId))

	movzx	eax, BYTE PTR _textId$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetTextManager@CNetworkManager@@QAEPAVCTextManager@@XZ ; CNetworkManager::GetTextManager
	mov	ecx, eax
	call	?GetSlotState@CTextManager@@QAEHE@Z	; CTextManager::GetSlotState
	test	eax, eax
	je	SHORT $LN2@Script_tog

; 791  : 	{
; 792  : 		pNetowkManager->GetTextManager()->GetAt(textId)->Show(show);

	movzx	eax, BYTE PTR _show$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _textId$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetTextManager@CNetworkManager@@QAEPAVCTextManager@@XZ ; CNetworkManager::GetTextManager
	mov	ecx, eax
	call	?GetAt@CTextManager@@QAEPAVCText@@E@Z	; CTextManager::GetAt
	mov	ecx, eax
	call	?Show@CText@@QAEX_N@Z			; CText::Show
$LN2@Script_tog:

; 793  : 	}
; 794  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Script_tog
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@Script_tog:
	DD	2
	DD	$LN6@Script_tog
$LN6@Script_tog:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN4@Script_tog
	DD	-17					; ffffffefH
	DD	1
	DD	$LN5@Script_tog
$LN5@Script_tog:
	DB	115					; 00000073H
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	0
$LN4@Script_tog:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	100					; 00000064H
	DB	0
?Script_toggleTextForPlayer@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_toggleTextForPlayer
_TEXT	ENDS
PUBLIC	?SetText@CText@@QAEXPBD@Z			; CText::SetText
PUBLIC	?Script_SetText@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetText
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_SetText@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
$T210598 = -236						; size = 4
_szText$ = -32						; size = 4
_len$ = -20						; size = 4
_textId$ = -5						; size = 1
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_SetText@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_SetText, COMDAT

; 797  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 798  : 	EntityId textId;
; 799  : 	int len;
; 800  : 
; 801  : 	bitStream->Read(textId);

	lea	eax, DWORD PTR _textId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 802  : 	bitStream->Read(len);

	lea	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 803  : 	char * szText = new char[len+1];

	mov	eax, DWORD PTR _len$[ebp]
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T210598[ebp], eax
	mov	ecx, DWORD PTR $T210598[ebp]
	mov	DWORD PTR _szText$[ebp], ecx

; 804  : 	bitStream->Read(szText, len);

	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _szText$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?Read@BitStream@RakNet@@QAE_NPADI@Z	; RakNet::BitStream::Read

; 805  : 	szText[len] = '\0';

	mov	eax, DWORD PTR _szText$[ebp]
	add	eax, DWORD PTR _len$[ebp]
	mov	BYTE PTR [eax], 0

; 806  : 
; 807  : 	if(pNetowkManager->GetTextManager()->GetSlotState(textId))

	movzx	eax, BYTE PTR _textId$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetTextManager@CNetworkManager@@QAEPAVCTextManager@@XZ ; CNetworkManager::GetTextManager
	mov	ecx, eax
	call	?GetSlotState@CTextManager@@QAEHE@Z	; CTextManager::GetSlotState
	test	eax, eax
	je	SHORT $LN2@Script_Set@12

; 808  : 	{
; 809  : 		pNetowkManager->GetTextManager()->GetAt(textId)->SetText(szText);

	mov	eax, DWORD PTR _szText$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _textId$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetTextManager@CNetworkManager@@QAEPAVCTextManager@@XZ ; CNetworkManager::GetTextManager
	mov	ecx, eax
	call	?GetAt@CTextManager@@QAEPAVCText@@E@Z	; CTextManager::GetAt
	mov	ecx, eax
	call	?SetText@CText@@QAEXPBD@Z		; CText::SetText
$LN2@Script_Set@12:

; 810  : 	}
; 811  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Script_Set@12
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@Script_Set@12:
	DD	2
	DD	$LN6@Script_Set@12
$LN6@Script_Set@12:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN4@Script_Set@12
	DD	-20					; ffffffecH
	DD	4
	DD	$LN5@Script_Set@12
$LN5@Script_Set@12:
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN4@Script_Set@12:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	100					; 00000064H
	DB	0
?Script_SetText@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_SetText
_TEXT	ENDS
PUBLIC	?SetPosition@CText@@QAEXMM@Z			; CText::SetPosition
PUBLIC	?Script_SetTextPosition@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetTextPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_SetTextPosition@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_fPosY$ = -32						; size = 4
_fPosX$ = -20						; size = 4
_textId$ = -5						; size = 1
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_SetTextPosition@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_SetTextPosition, COMDAT

; 814  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 815  : 	EntityId textId;
; 816  : 	float fPosX, fPosY;
; 817  : 
; 818  : 	bitStream->Read(textId);

	lea	eax, DWORD PTR _textId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 819  : 	bitStream->Read(fPosX);

	lea	eax, DWORD PTR _fPosX$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 820  : 	bitStream->Read(fPosY);

	lea	eax, DWORD PTR _fPosY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 821  : 
; 822  : 	if(pNetowkManager->GetTextManager()->GetSlotState(textId))

	movzx	eax, BYTE PTR _textId$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetTextManager@CNetworkManager@@QAEPAVCTextManager@@XZ ; CNetworkManager::GetTextManager
	mov	ecx, eax
	call	?GetSlotState@CTextManager@@QAEHE@Z	; CTextManager::GetSlotState
	test	eax, eax
	je	SHORT $LN1@Script_Set@13

; 823  : 	{
; 824  : 		pNetowkManager->GetTextManager()->GetAt(textId)->SetPosition(fPosX, fPosY);

	push	ecx
	fld	DWORD PTR _fPosY$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _fPosX$[ebp]
	fstp	DWORD PTR [esp]
	movzx	eax, BYTE PTR _textId$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetTextManager@CNetworkManager@@QAEPAVCTextManager@@XZ ; CNetworkManager::GetTextManager
	mov	ecx, eax
	call	?GetAt@CTextManager@@QAEPAVCText@@E@Z	; CTextManager::GetAt
	mov	ecx, eax
	call	?SetPosition@CText@@QAEXMM@Z		; CText::SetPosition
$LN1@Script_Set@13:

; 825  : 	}
; 826  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Script_Set@13
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN8@Script_Set@13:
	DD	3
	DD	$LN7@Script_Set@13
$LN7@Script_Set@13:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN4@Script_Set@13
	DD	-20					; ffffffecH
	DD	4
	DD	$LN5@Script_Set@13
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN6@Script_Set@13
$LN6@Script_Set@13:
	DB	102					; 00000066H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	89					; 00000059H
	DB	0
$LN5@Script_Set@13:
	DB	102					; 00000066H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	88					; 00000058H
	DB	0
$LN4@Script_Set@13:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	100					; 00000064H
	DB	0
?Script_SetTextPosition@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_SetTextPosition
_TEXT	ENDS
PUBLIC	?SetColor@CText@@QAEXK@Z			; CText::SetColor
PUBLIC	?Script_SetTextColor@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetTextColor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_SetTextColor@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_color$ = -20						; size = 4
_textId$ = -5						; size = 1
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_SetTextColor@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_SetTextColor, COMDAT

; 829  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 830  : 	EntityId textId;
; 831  : 	DWORD color;
; 832  : 
; 833  : 	bitStream->Read(textId);

	lea	eax, DWORD PTR _textId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 834  : 	bitStream->Read(color);

	lea	eax, DWORD PTR _color$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@K@BitStream@RakNet@@QAE_NAAK@Z	; RakNet::BitStream::Read<unsigned long>

; 835  : 
; 836  : 	if(pNetowkManager->GetTextManager()->GetSlotState(textId))

	movzx	eax, BYTE PTR _textId$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetTextManager@CNetworkManager@@QAEPAVCTextManager@@XZ ; CNetworkManager::GetTextManager
	mov	ecx, eax
	call	?GetSlotState@CTextManager@@QAEHE@Z	; CTextManager::GetSlotState
	test	eax, eax
	je	SHORT $LN2@Script_Set@14

; 837  : 	{
; 838  : 		pNetowkManager->GetTextManager()->GetAt(textId)->SetColor(color);

	mov	eax, DWORD PTR _color$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _textId$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetTextManager@CNetworkManager@@QAEPAVCTextManager@@XZ ; CNetworkManager::GetTextManager
	mov	ecx, eax
	call	?GetAt@CTextManager@@QAEPAVCText@@E@Z	; CTextManager::GetAt
	mov	ecx, eax
	call	?SetColor@CText@@QAEXK@Z		; CText::SetColor
$LN2@Script_Set@14:

; 839  : 	}
; 840  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Script_Set@14
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Script_Set@14:
	DD	2
	DD	$LN6@Script_Set@14
$LN6@Script_Set@14:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN4@Script_Set@14
	DD	-20					; ffffffecH
	DD	4
	DD	$LN5@Script_Set@14
$LN5@Script_Set@14:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN4@Script_Set@14:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	100					; 00000064H
	DB	0
?Script_SetTextColor@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_SetTextColor
_TEXT	ENDS
PUBLIC	?Script_WorldBounds@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_WorldBounds
EXTRN	?EnforceWorldBoundries@CPlayerPed@@QAEHMMMM@Z:PROC ; CPlayerPed::EnforceWorldBoundries
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_WorldBounds@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_HighY$ = -56						; size = 4
_HighX$ = -44						; size = 4
_LowY$ = -32						; size = 4
_LowX$ = -20						; size = 4
_pPlayer$ = -8						; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_WorldBounds@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_WorldBounds, COMDAT

; 844  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 845  : 	CPlayerPed *pPlayer = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pPlayer$[ebp], eax

; 846  : 
; 847  : 	float LowX;
; 848  : 	float LowY;
; 849  : 	float HighX;
; 850  : 	float HighY;
; 851  : 
; 852  : 	bitStream->Read(LowX);

	lea	eax, DWORD PTR _LowX$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 853  : 	bitStream->Read(LowY);

	lea	eax, DWORD PTR _LowY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 854  : 	bitStream->Read(HighX);

	lea	eax, DWORD PTR _HighX$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 855  : 	bitStream->Read(HighY);

	lea	eax, DWORD PTR _HighY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 856  : 
; 857  : 	pPlayer->EnforceWorldBoundries(HighX, LowX, HighY, LowY);

	push	ecx
	fld	DWORD PTR _LowY$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _HighY$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _LowX$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _HighX$[ebp]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?EnforceWorldBoundries@CPlayerPed@@QAEHMMMM@Z ; CPlayerPed::EnforceWorldBoundries

; 858  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Script_Wor
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN8@Script_Wor:
	DD	4
	DD	$LN7@Script_Wor
$LN7@Script_Wor:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@Script_Wor
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN4@Script_Wor
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN5@Script_Wor
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN6@Script_Wor
$LN6@Script_Wor:
	DB	72					; 00000048H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	104					; 00000068H
	DB	89					; 00000059H
	DB	0
$LN5@Script_Wor:
	DB	72					; 00000048H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	104					; 00000068H
	DB	88					; 00000058H
	DB	0
$LN4@Script_Wor:
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	89					; 00000059H
	DB	0
$LN3@Script_Wor:
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	88					; 00000058H
	DB	0
?Script_WorldBounds@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_WorldBounds
_TEXT	ENDS
PUBLIC	?Script_SetVehicleColor@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetVehicleColor
EXTRN	?SetColor@CVehicle@@QAEXHH@Z:PROC		; CVehicle::SetColor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_SetVehicleColor@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_pVehicle$ = -44					; size = 4
_color2$ = -32						; size = 4
_color1$ = -20						; size = 4
_vehicle$ = -5						; size = 1
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_SetVehicleColor@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_SetVehicleColor, COMDAT

; 862  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 863  : 	BYTE vehicle;
; 864  : 	int color1, color2;
; 865  : 	bitStream->Read(vehicle);

	lea	eax, DWORD PTR _vehicle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 866  : 	bitStream->Read(color1);

	lea	eax, DWORD PTR _color1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 867  : 	bitStream->Read(color2);

	lea	eax, DWORD PTR _color2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 868  : 	
; 869  : 	CVehicle *pVehicle = pNetowkManager->GetVehicleManager()->GetAt(vehicle);

	movzx	eax, BYTE PTR _vehicle$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ ; CNetworkManager::GetVehicleManager
	mov	ecx, eax
	call	?GetAt@CVehicleManager@@QAEPAVCVehicle@@E@Z ; CVehicleManager::GetAt
	mov	DWORD PTR _pVehicle$[ebp], eax

; 870  : 	pVehicle->SetColor(color1, color2);

	mov	eax, DWORD PTR _color2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _color1$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pVehicle$[ebp]
	call	?SetColor@CVehicle@@QAEXHH@Z		; CVehicle::SetColor

; 871  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Script_Set@15
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@Script_Set@15:
	DD	3
	DD	$LN6@Script_Set@15
$LN6@Script_Set@15:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Script_Set@15
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@Script_Set@15
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN5@Script_Set@15
$LN5@Script_Set@15:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	50					; 00000032H
	DB	0
$LN4@Script_Set@15:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	49					; 00000031H
	DB	0
$LN3@Script_Set@15:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
?Script_SetVehicleColor@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_SetVehicleColor
_TEXT	ENDS
PUBLIC	?Script_SetVehiclePos@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetVehiclePos
EXTRN	?SetPosition@CEntity@@QAEXUVector3@@@Z:PROC	; CEntity::SetPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_SetVehiclePos@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_pPool$ = -40						; size = 4
_pos$ = -28						; size = 12
_vehicle$ = -5						; size = 1
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_SetVehiclePos@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_SetVehiclePos, COMDAT

; 875  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 876  : 	BYTE vehicle;
; 877  : 	Vector3 pos;

	lea	ecx, DWORD PTR _pos$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 878  : 	bitStream->Read(vehicle);

	lea	eax, DWORD PTR _vehicle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 879  : 	bitStream->Read((char *)&pos, sizeof(Vector3));

	push	12					; 0000000cH
	lea	eax, DWORD PTR _pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?Read@BitStream@RakNet@@QAE_NPADI@Z	; RakNet::BitStream::Read

; 880  : 
; 881  : 	CVehicleManager *pPool = pNetowkManager->GetVehicleManager();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ ; CNetworkManager::GetVehicleManager
	mov	DWORD PTR _pPool$[ebp], eax

; 882  : 	if(pPool->GetSlotState(vehicle))

	movzx	eax, BYTE PTR _vehicle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPool$[ebp]
	call	?GetSlotState@CVehicleManager@@QAEHE@Z	; CVehicleManager::GetSlotState
	test	eax, eax
	je	SHORT $LN2@Script_Set@16

; 883  : 	{
; 884  : 		pPool->GetAt(vehicle)->SetPosition(pos);

	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	ecx, DWORD PTR _pos$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _pos$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _pos$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	movzx	edx, BYTE PTR _vehicle$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pPool$[ebp]
	call	?GetAt@CVehicleManager@@QAEPAVCVehicle@@E@Z ; CVehicleManager::GetAt
	mov	ecx, eax
	call	?SetPosition@CEntity@@QAEXUVector3@@@Z	; CEntity::SetPosition
$LN2@Script_Set@16:

; 885  : 	}
; 886  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Script_Set@16
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@Script_Set@16:
	DD	2
	DD	$LN6@Script_Set@16
$LN6@Script_Set@16:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN4@Script_Set@16
	DD	-28					; ffffffe4H
	DD	12					; 0000000cH
	DD	$LN5@Script_Set@16
$LN5@Script_Set@16:
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN4@Script_Set@16:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
?Script_SetVehiclePos@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_SetVehiclePos
_TEXT	ENDS
PUBLIC	?Script_SetVehicleTurnSpeed@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetVehicleTurnSpeed
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_SetVehicleTurnSpeed@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_pPool$ = -40						; size = 4
_speed$ = -28						; size = 12
_vehicle$ = -5						; size = 1
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_SetVehicleTurnSpeed@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_SetVehicleTurnSpeed, COMDAT

; 890  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 891  : 	BYTE vehicle;
; 892  : 	Vector3 speed;

	lea	ecx, DWORD PTR _speed$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 893  : 	bitStream->Read(vehicle);

	lea	eax, DWORD PTR _vehicle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 894  : 	bitStream->Read((char *)&speed, sizeof(Vector3));

	push	12					; 0000000cH
	lea	eax, DWORD PTR _speed$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?Read@BitStream@RakNet@@QAE_NPADI@Z	; RakNet::BitStream::Read

; 895  : 
; 896  : 	CVehicleManager *pPool = pNetowkManager->GetVehicleManager();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ ; CNetworkManager::GetVehicleManager
	mov	DWORD PTR _pPool$[ebp], eax

; 897  : 	if(pPool->GetSlotState(vehicle))

	movzx	eax, BYTE PTR _vehicle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPool$[ebp]
	call	?GetSlotState@CVehicleManager@@QAEHE@Z	; CVehicleManager::GetSlotState
	test	eax, eax
	je	SHORT $LN2@Script_Set@17

; 898  : 	{
; 899  : 		pPool->GetAt(vehicle)->SetTurnSpeed(speed);

	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	ecx, DWORD PTR _speed$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _speed$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _speed$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	movzx	edx, BYTE PTR _vehicle$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pPool$[ebp]
	call	?GetAt@CVehicleManager@@QAEPAVCVehicle@@E@Z ; CVehicleManager::GetAt
	mov	ecx, eax
	call	?SetTurnSpeed@CPhysical@@QAEXUVector3@@@Z ; CPhysical::SetTurnSpeed
$LN2@Script_Set@17:

; 900  : 	}
; 901  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Script_Set@17
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@Script_Set@17:
	DD	2
	DD	$LN6@Script_Set@17
$LN6@Script_Set@17:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN4@Script_Set@17
	DD	-28					; ffffffe4H
	DD	12					; 0000000cH
	DD	$LN5@Script_Set@17
$LN5@Script_Set@17:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
$LN4@Script_Set@17:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
?Script_SetVehicleTurnSpeed@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_SetVehicleTurnSpeed
_TEXT	ENDS
PUBLIC	?Script_SetVehicleMoveSpeed@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetVehicleMoveSpeed
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_SetVehicleMoveSpeed@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_pPool$ = -40						; size = 4
_speed$ = -28						; size = 12
_vehicle$ = -5						; size = 1
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_SetVehicleMoveSpeed@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_SetVehicleMoveSpeed, COMDAT

; 905  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 906  : 	BYTE vehicle;
; 907  : 	Vector3 speed;

	lea	ecx, DWORD PTR _speed$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 908  : 	bitStream->Read(vehicle);

	lea	eax, DWORD PTR _vehicle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 909  : 	bitStream->Read((char *)&speed, sizeof(Vector3));

	push	12					; 0000000cH
	lea	eax, DWORD PTR _speed$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?Read@BitStream@RakNet@@QAE_NPADI@Z	; RakNet::BitStream::Read

; 910  : 
; 911  : 	CVehicleManager *pPool = pNetowkManager->GetVehicleManager();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ ; CNetworkManager::GetVehicleManager
	mov	DWORD PTR _pPool$[ebp], eax

; 912  : 	if(pPool->GetSlotState(vehicle))

	movzx	eax, BYTE PTR _vehicle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPool$[ebp]
	call	?GetSlotState@CVehicleManager@@QAEHE@Z	; CVehicleManager::GetSlotState
	test	eax, eax
	je	SHORT $LN2@Script_Set@18

; 913  : 	{
; 914  : 		pPool->GetAt(vehicle)->SetMoveSpeed(speed);

	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	ecx, DWORD PTR _speed$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _speed$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _speed$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	movzx	edx, BYTE PTR _vehicle$[ebp]
	push	edx
	mov	ecx, DWORD PTR _pPool$[ebp]
	call	?GetAt@CVehicleManager@@QAEPAVCVehicle@@E@Z ; CVehicleManager::GetAt
	mov	ecx, eax
	call	?SetMoveSpeed@CPhysical@@QAEXUVector3@@@Z ; CPhysical::SetMoveSpeed
$LN2@Script_Set@18:

; 915  : 	}
; 916  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Script_Set@18
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@Script_Set@18:
	DD	2
	DD	$LN6@Script_Set@18
$LN6@Script_Set@18:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN4@Script_Set@18
	DD	-28					; ffffffe4H
	DD	12					; 0000000cH
	DD	$LN5@Script_Set@18
$LN5@Script_Set@18:
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
$LN4@Script_Set@18:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
?Script_SetVehicleMoveSpeed@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_SetVehicleMoveSpeed
_TEXT	ENDS
PUBLIC	?Script_DestroyVehicle@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_DestroyVehicle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_DestroyVehicle@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_vehicle$ = -5						; size = 1
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_DestroyVehicle@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_DestroyVehicle, COMDAT

; 920  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 921  : 	BYTE vehicle;
; 922  : 	bitStream->Read(vehicle);

	lea	eax, DWORD PTR _vehicle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 923  : 	
; 924  : 	pNetowkManager->GetVehicleManager()->Delete(vehicle);

	movzx	eax, BYTE PTR _vehicle$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ ; CNetworkManager::GetVehicleManager
	mov	ecx, eax
	call	?Delete@CVehicleManager@@QAEHE@Z	; CVehicleManager::Delete

; 925  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Script_Des
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@Script_Des:
	DD	1
	DD	$LN4@Script_Des
$LN4@Script_Des:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Script_Des
$LN3@Script_Des:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
?Script_DestroyVehicle@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_DestroyVehicle
_TEXT	ENDS
PUBLIC	?Script_PlaySound@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_PlaySound
EXTRN	?PlaySoundA@CGame@@QAEXHUVector3@@@Z:PROC	; CGame::PlaySoundA
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_PlaySound@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_vPos$ = -28						; size = 12
_sound$ = -8						; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_PlaySound@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_PlaySound, COMDAT

; 929  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 930  : 	int sound;
; 931  : 	Vector3 vPos;

	lea	ecx, DWORD PTR _vPos$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 932  : 
; 933  : 	bitStream->Read(sound);

	lea	eax, DWORD PTR _sound$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 934  : 	bitStream->Read(vPos.X);

	lea	eax, DWORD PTR _vPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 935  : 	bitStream->Read(vPos.Y);

	lea	eax, DWORD PTR _vPos$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 936  : 	bitStream->Read(vPos.Z);

	lea	eax, DWORD PTR _vPos$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 937  : 
; 938  : 	pGame->PlaySound(sound, vPos);

	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	ecx, DWORD PTR _vPos$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _vPos$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _vPos$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _sound$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?PlaySoundA@CGame@@QAEXHUVector3@@@Z	; CGame::PlaySoundA

; 939  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@Script_Pla
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@Script_Pla:
	DD	2
	DD	$LN5@Script_Pla
$LN5@Script_Pla:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@Script_Pla
	DD	-28					; ffffffe4H
	DD	12					; 0000000cH
	DD	$LN4@Script_Pla
$LN4@Script_Pla:
	DB	118					; 00000076H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN3@Script_Pla:
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
?Script_PlaySound@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_PlaySound
_TEXT	ENDS
PUBLIC	?Script_FadeScreen@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_FadeScreen
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_FadeScreen@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_time$ = -20						; size = 4
_type$ = -8						; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_FadeScreen@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_FadeScreen, COMDAT

; 943  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 944  : 	int type, time;
; 945  : 
; 946  : 	bitStream->Read(type);

	lea	eax, DWORD PTR _type$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 947  : 	bitStream->Read(time);

	lea	eax, DWORD PTR _time$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 948  : 
; 949  : 	pGame->FadeScreen(type, time);

	mov	eax, DWORD PTR _time$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FadeScreen@CGame@@QAEXHH@Z		; CGame::FadeScreen

; 950  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@Script_Fad
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@Script_Fad:
	DD	2
	DD	$LN5@Script_Fad
$LN5@Script_Fad:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@Script_Fad
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@Script_Fad
$LN4@Script_Fad:
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN3@Script_Fad:
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	0
?Script_FadeScreen@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_FadeScreen
_TEXT	ENDS
PUBLIC	?Script_FlashItem@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_FlashItem
EXTRN	?Flash@CPlayerPed@@QAEXH@Z:PROC			; CPlayerPed::Flash
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_FlashItem@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_item$ = -20						; size = 4
_pPlayer$ = -8						; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_FlashItem@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_FlashItem, COMDAT

; 954  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 955  : 	CPlayerPed *pPlayer = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pPlayer$[ebp], eax

; 956  : 
; 957  : 	int item;
; 958  : 
; 959  : 	bitStream->Read(item);

	lea	eax, DWORD PTR _item$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 960  : 
; 961  : 	pPlayer->Flash(item);

	mov	eax, DWORD PTR _item$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?Flash@CPlayerPed@@QAEXH@Z		; CPlayerPed::Flash

; 962  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Script_Fla
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Script_Fla:
	DD	1
	DD	$LN4@Script_Fla
$LN4@Script_Fla:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@Script_Fla
$LN3@Script_Fla:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	0
?Script_FlashItem@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_FlashItem
_TEXT	ENDS
PUBLIC	?Script_forceClassSelection@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_forceClassSelection
EXTRN	?HandleClassSelection@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z:PROC ; CSpawnSelection::HandleClassSelection
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_forceClassSelection@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_pLocalPlayer$ = -8					; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_forceClassSelection@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_forceClassSelection, COMDAT

; 966  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 967  : 	CLocalPlayer *pLocalPlayer = pNetowkManager->GetPlayerManager()->GetLocalPlayer();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ; CNetworkManager::GetPlayerManager
	mov	ecx, eax
	call	?GetLocalPlayer@CPlayerManager@@QAEPAVCLocalPlayer@@XZ ; CPlayerManager::GetLocalPlayer
	mov	DWORD PTR _pLocalPlayer$[ebp], eax

; 968  : 	pNetowkManager->GetGameLogic()->HandleClassSelection(pLocalPlayer);

	mov	eax, DWORD PTR _pLocalPlayer$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetGameLogic@CNetworkManager@@QAEPAVCSpawnSelection@@XZ ; CNetworkManager::GetGameLogic
	mov	ecx, eax
	call	?HandleClassSelection@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z ; CSpawnSelection::HandleClassSelection

; 969  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Script_forceClassSelection@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_forceClassSelection
_TEXT	ENDS
PUBLIC	?GetPlayerPed@CLocalPlayer@@QAEPAVCPlayerPed@@XZ ; CLocalPlayer::GetPlayerPed
PUBLIC	?Script_togglePlayerBleeding@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_togglePlayerBleeding
EXTRN	?SetActorBleeding@CPlayerPed@@QAEXH@Z:PROC	; CPlayerPed::SetActorBleeding
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_togglePlayerBleeding@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_pPlayer$209771 = -44					; size = 4
_pPlayer$209767 = -32					; size = 4
_toggle$ = -20						; size = 4
_player$ = -8						; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_togglePlayerBleeding@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_togglePlayerBleeding, COMDAT

; 973  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 974  : 	int player, toggle;
; 975  : 
; 976  : 	bitStream->Read(player);

	lea	eax, DWORD PTR _player$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 977  : 	bitStream->Read(toggle);

	lea	eax, DWORD PTR _toggle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 978  : 
; 979  : 	if(player == pNetowkManager->GetPlayerManager()->GetLocalPlayerID())

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ; CNetworkManager::GetPlayerManager
	mov	ecx, eax
	call	?GetLocalPlayerID@CPlayerManager@@QAEEXZ ; CPlayerManager::GetLocalPlayerID
	movzx	eax, al
	cmp	DWORD PTR _player$[ebp], eax
	jne	SHORT $LN4@Script_tog@2

; 980  : 	{
; 981  : 		CLocalPlayer * pPlayer = pNetowkManager->GetPlayerManager()->GetLocalPlayer();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ; CNetworkManager::GetPlayerManager
	mov	ecx, eax
	call	?GetLocalPlayer@CPlayerManager@@QAEPAVCLocalPlayer@@XZ ; CPlayerManager::GetLocalPlayer
	mov	DWORD PTR _pPlayer$209767[ebp], eax

; 982  : 		pPlayer->GetPlayerPed()->SetActorBleeding(toggle);

	mov	eax, DWORD PTR _toggle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayer$209767[ebp]
	call	?GetPlayerPed@CLocalPlayer@@QAEPAVCPlayerPed@@XZ ; CLocalPlayer::GetPlayerPed
	mov	ecx, eax
	call	?SetActorBleeding@CPlayerPed@@QAEXH@Z	; CPlayerPed::SetActorBleeding
	jmp	SHORT $LN5@Script_tog@2
$LN4@Script_tog@2:

; 983  : 	} 
; 984  : 	else if(pNetowkManager->GetPlayerManager()->GetSlotState(player))

	movzx	eax, BYTE PTR _player$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ; CNetworkManager::GetPlayerManager
	mov	ecx, eax
	call	?GetSlotState@CPlayerManager@@QAEHE@Z	; CPlayerManager::GetSlotState
	test	eax, eax
	je	SHORT $LN5@Script_tog@2

; 985  : 	{
; 986  : 		if(player != pNetowkManager->GetPlayerManager()->GetLocalPlayerID())

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ; CNetworkManager::GetPlayerManager
	mov	ecx, eax
	call	?GetLocalPlayerID@CPlayerManager@@QAEEXZ ; CPlayerManager::GetLocalPlayerID
	movzx	eax, al
	cmp	DWORD PTR _player$[ebp], eax
	je	SHORT $LN5@Script_tog@2

; 987  : 		{
; 988  : 			CRemotePlayer * pPlayer = pNetowkManager->GetPlayerManager()->GetAt(player);

	movzx	eax, BYTE PTR _player$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ; CNetworkManager::GetPlayerManager
	mov	ecx, eax
	call	?GetAt@CPlayerManager@@QAEPAVCRemotePlayer@@E@Z ; CPlayerManager::GetAt
	mov	DWORD PTR _pPlayer$209771[ebp], eax

; 989  : 			pPlayer->GetPlayerPed()->SetActorBleeding(toggle);

	mov	eax, DWORD PTR _toggle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayer$209771[ebp]
	call	?GetPlayerPed@CRemotePlayer@@QAEPAVCPlayerPed@@XZ ; CRemotePlayer::GetPlayerPed
	mov	ecx, eax
	call	?SetActorBleeding@CPlayerPed@@QAEXH@Z	; CPlayerPed::SetActorBleeding
$LN5@Script_tog@2:

; 990  : 		}
; 991  : 	}
; 992  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Script_tog@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@Script_tog@2:
	DD	2
	DD	$LN9@Script_tog@2
$LN9@Script_tog@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN7@Script_tog@2
	DD	-20					; ffffffecH
	DD	4
	DD	$LN8@Script_tog@2
$LN8@Script_tog@2:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	103					; 00000067H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN7@Script_tog@2:
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?Script_togglePlayerBleeding@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_togglePlayerBleeding
_TEXT	ENDS
PUBLIC	?Script_popVehicleTrunk@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_popVehicleTrunk
EXTRN	?PopTrunk@CVehicle@@QAEXXZ:PROC			; CVehicle::PopTrunk
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_popVehicleTrunk@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_pVehicle$ = -20					; size = 4
_vehicle$ = -5						; size = 1
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_popVehicleTrunk@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_popVehicleTrunk, COMDAT

; 996  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 997  : 	BYTE vehicle;
; 998  : 
; 999  : 	bitStream->Read(vehicle);

	lea	eax, DWORD PTR _vehicle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 1000 : 	
; 1001 : 	CVehicle *pVehicle = pNetowkManager->GetVehicleManager()->GetAt(vehicle);

	movzx	eax, BYTE PTR _vehicle$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ ; CNetworkManager::GetVehicleManager
	mov	ecx, eax
	call	?GetAt@CVehicleManager@@QAEPAVCVehicle@@E@Z ; CVehicleManager::GetAt
	mov	DWORD PTR _pVehicle$[ebp], eax

; 1002 : 	pVehicle->PopTrunk();

	mov	ecx, DWORD PTR _pVehicle$[ebp]
	call	?PopTrunk@CVehicle@@QAEXXZ		; CVehicle::PopTrunk

; 1003 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Script_pop
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Script_pop:
	DD	1
	DD	$LN4@Script_pop
$LN4@Script_pop:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Script_pop
$LN3@Script_pop:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
?Script_popVehicleTrunk@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_popVehicleTrunk
_TEXT	ENDS
PUBLIC	?Script_setSkyColor@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_setSkyColor
EXTRN	?SetSkyColor@CPlayerPed@@QAEXHH@Z:PROC		; CPlayerPed::SetSkyColor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_setSkyColor@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_pPlayer$ = -32						; size = 4
_iFade$ = -20						; size = 4
_iColor$ = -8						; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_setSkyColor@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_setSkyColor, COMDAT

; 1007 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1008 : 	int iColor, iFade;
; 1009 : 
; 1010 : 	CPlayerPed *pPlayer = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pPlayer$[ebp], eax

; 1011 : 
; 1012 : 	bitStream->Read(iColor);

	lea	eax, DWORD PTR _iColor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 1013 : 	bitStream->Read(iFade);

	lea	eax, DWORD PTR _iFade$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 1014 : 
; 1015 : 	pPlayer->SetSkyColor(iColor, iFade);

	mov	eax, DWORD PTR _iFade$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iColor$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?SetSkyColor@CPlayerPed@@QAEXHH@Z	; CPlayerPed::SetSkyColor

; 1016 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@Script_set
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@Script_set:
	DD	2
	DD	$LN5@Script_set
$LN5@Script_set:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@Script_set
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@Script_set
$LN4@Script_set:
	DB	105					; 00000069H
	DB	70					; 00000046H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN3@Script_set:
	DB	105					; 00000069H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
?Script_setSkyColor@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_setSkyColor
_TEXT	ENDS
PUBLIC	?Script_setPlayerCash@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_setPlayerCash
EXTRN	?SetCash@CGame@@QAEXH@Z:PROC			; CGame::SetCash
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_setPlayerCash@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_Cash$ = -8						; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_setPlayerCash@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_setPlayerCash, COMDAT

; 1020 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1021 : 	int Cash;
; 1022 : 	bitStream->Read(Cash);

	lea	eax, DWORD PTR _Cash$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 1023 : 	pGame->SetCash(Cash);

	mov	eax, DWORD PTR _Cash$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?SetCash@CGame@@QAEXH@Z			; CGame::SetCash

; 1024 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Script_set@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@Script_set@2:
	DD	1
	DD	$LN4@Script_set@2
$LN4@Script_set@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@Script_set@2
$LN3@Script_set@2:
	DB	67					; 00000043H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	104					; 00000068H
	DB	0
?Script_setPlayerCash@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_setPlayerCash
_TEXT	ENDS
PUBLIC	?Script_toggleDriveByState@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_toggleDriveByState
EXTRN	?SetDrivebyState@CPlayerPed@@QAEXH@Z:PROC	; CPlayerPed::SetDrivebyState
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_toggleDriveByState@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_pPlayer$ = -20						; size = 4
_iToggle$ = -8						; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_toggleDriveByState@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_toggleDriveByState, COMDAT

; 1028 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1029 : 	int iToggle;
; 1030 : 
; 1031 : 	CPlayerPed *pPlayer = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pPlayer$[ebp], eax

; 1032 : 
; 1033 : 	bitStream->Read(iToggle);

	lea	eax, DWORD PTR _iToggle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 1034 : 
; 1035 : 	pPlayer->SetDrivebyState(iToggle);

	mov	eax, DWORD PTR _iToggle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?SetDrivebyState@CPlayerPed@@QAEXH@Z	; CPlayerPed::SetDrivebyState

; 1036 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Script_tog@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Script_tog@3:
	DD	1
	DD	$LN4@Script_tog@3
$LN4@Script_tog@3:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@Script_tog@3
$LN3@Script_tog@3:
	DB	105					; 00000069H
	DB	84					; 00000054H
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	103					; 00000067H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
?Script_toggleDriveByState@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_toggleDriveByState
_TEXT	ENDS
PUBLIC	?Script_ClientCall@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_ClientCall
EXTRN	?Call@CScripts@@QAEXPAVBitStream@RakNet@@@Z:PROC ; CScripts::Call
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_ClientCall@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_ClientCall@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_ClientCall, COMDAT

; 1039 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1040 : 	pScripts->Call(bitStream);

	mov	eax, DWORD PTR _bitStream$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pScripts@@3PAVCScripts@@A ; pScripts
	call	?Call@CScripts@@QAEXPAVBitStream@RakNet@@@Z ; CScripts::Call

; 1041 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Script_ClientCall@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_ClientCall
_TEXT	ENDS
PUBLIC	?Script_toggleCellPhone@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_toggleCellPhone
EXTRN	?SetCellAction@CPlayerPed@@QAEXH@Z:PROC		; CPlayerPed::SetCellAction
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_toggleCellPhone@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_pPlayer$ = -20						; size = 4
_iToggle$ = -8						; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_toggleCellPhone@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_toggleCellPhone, COMDAT

; 1045 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1046 : 	int iToggle;
; 1047 : 	CPlayerPed *pPlayer = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pPlayer$[ebp], eax

; 1048 : 
; 1049 : 	bitStream->Read(iToggle);

	lea	eax, DWORD PTR _iToggle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 1050 : 
; 1051 : 	pPlayer->SetCellAction(iToggle);

	mov	eax, DWORD PTR _iToggle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?SetCellAction@CPlayerPed@@QAEXH@Z	; CPlayerPed::SetCellAction

; 1052 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Script_tog@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Script_tog@4:
	DD	1
	DD	$LN4@Script_tog@4
$LN4@Script_tog@4:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@Script_tog@4
$LN3@Script_tog@4:
	DB	105					; 00000069H
	DB	84					; 00000054H
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	103					; 00000067H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
?Script_toggleCellPhone@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_toggleCellPhone
_TEXT	ENDS
PUBLIC	?Script_SetCameraShakeIntensity@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetCameraShakeIntensity
EXTRN	?SetCameraShakeIntensity@CPlayerPed@@QAEXH@Z:PROC ; CPlayerPed::SetCameraShakeIntensity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_SetCameraShakeIntensity@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_pPlayer$ = -20						; size = 4
_iIntensity$ = -8					; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_SetCameraShakeIntensity@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_SetCameraShakeIntensity, COMDAT

; 1056 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1057 : 	int iIntensity;
; 1058 : 
; 1059 : 	CPlayerPed *pPlayer = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pPlayer$[ebp], eax

; 1060 : 
; 1061 : 	bitStream->Read(iIntensity);

	lea	eax, DWORD PTR _iIntensity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@H@BitStream@RakNet@@QAE_NAAH@Z	; RakNet::BitStream::Read<int>

; 1062 : 
; 1063 : 	pPlayer->SetCameraShakeIntensity(iIntensity);

	mov	eax, DWORD PTR _iIntensity$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?SetCameraShakeIntensity@CPlayerPed@@QAEXH@Z ; CPlayerPed::SetCameraShakeIntensity

; 1064 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Script_Set@19
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Script_Set@19:
	DD	1
	DD	$LN4@Script_Set@19
$LN4@Script_Set@19:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@Script_Set@19
$LN3@Script_Set@19:
	DB	105					; 00000069H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	121					; 00000079H
	DB	0
?Script_SetCameraShakeIntensity@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_SetCameraShakeIntensity
_TEXT	ENDS
PUBLIC	?Script_setPlayerGravity@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_setPlayerGravity
EXTRN	?SetGravity@CGame@@QAEXM@Z:PROC			; CGame::SetGravity
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Script_setPlayerGravity@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_amount$ = -8						; size = 4
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?Script_setPlayerGravity@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; Script_setPlayerGravity, COMDAT

; 1068 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1069 : 	float amount;
; 1070 : 	bitStream->Read(amount);

	lea	eax, DWORD PTR _amount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 1071 : 	pGame->SetGravity(amount);

	push	ecx
	fld	DWORD PTR _amount$[ebp]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?SetGravity@CGame@@QAEXM@Z		; CGame::SetGravity

; 1072 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Script_set@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Script_set@3:
	DD	1
	DD	$LN4@Script_set@3
$LN4@Script_set@3:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@Script_set@3
$LN3@Script_set@3:
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
?Script_setPlayerGravity@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; Script_setPlayerGravity
_TEXT	ENDS
PUBLIC	?GetCheckpoints@CNetworkManager@@QAEPAVCCheckpoints@@XZ ; CNetworkManager::GetCheckpoints
PUBLIC	?CreateCheckpoint@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; CreateCheckpoint
EXTRN	?New@CCheckpoints@@QAEXEUVector3@@EM@Z:PROC	; CCheckpoints::New
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CreateCheckpoint@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_cpId$ = -37						; size = 1
_fRadius$ = -28						; size = 4
_vecPos$ = -16						; size = 12
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?CreateCheckpoint@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; CreateCheckpoint, COMDAT

; 1075 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1076 : 	Vector3 vecPos;

	lea	ecx, DWORD PTR _vecPos$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 1077 : 	float fRadius;
; 1078 : 	EntityId cpId;
; 1079 : 	bitStream->Read(cpId);

	lea	eax, DWORD PTR _cpId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 1080 : 	bitStream->Read((char*)&vecPos, sizeof(Vector3));

	push	12					; 0000000cH
	lea	eax, DWORD PTR _vecPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	?Read@BitStream@RakNet@@QAE_NPADI@Z	; RakNet::BitStream::Read

; 1081 : 	bitStream->Read(fRadius);

	lea	eax, DWORD PTR _fRadius$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@M@BitStream@RakNet@@QAE_NAAM@Z	; RakNet::BitStream::Read<float>

; 1082 : 
; 1083 : 	pNetowkManager->GetCheckpoints()->New(cpId, vecPos, 0, fRadius);

	push	ecx
	fld	DWORD PTR _fRadius$[ebp]
	fstp	DWORD PTR [esp]
	push	0
	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	ecx, DWORD PTR _vecPos$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _vecPos$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _vecPos$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	movzx	edx, BYTE PTR _cpId$[ebp]
	push	edx
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetCheckpoints@CNetworkManager@@QAEPAVCCheckpoints@@XZ ; CNetworkManager::GetCheckpoints
	mov	ecx, eax
	call	?New@CCheckpoints@@QAEXEUVector3@@EM@Z	; CCheckpoints::New

; 1084 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@CreateChec
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@CreateChec:
	DD	3
	DD	$LN6@CreateChec
$LN6@CreateChec:
	DD	-16					; fffffff0H
	DD	12					; 0000000cH
	DD	$LN3@CreateChec
	DD	-28					; ffffffe4H
	DD	4
	DD	$LN4@CreateChec
	DD	-37					; ffffffdbH
	DD	1
	DD	$LN5@CreateChec
$LN5@CreateChec:
	DB	99					; 00000063H
	DB	112					; 00000070H
	DB	73					; 00000049H
	DB	100					; 00000064H
	DB	0
$LN4@CreateChec:
	DB	102					; 00000066H
	DB	82					; 00000052H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN3@CreateChec:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
?CreateCheckpoint@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; CreateCheckpoint
_TEXT	ENDS
PUBLIC	?DestroyCheckpoint@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; DestroyCheckpoint
EXTRN	?Delete@CCheckpoints@@QAEXE@Z:PROC		; CCheckpoints::Delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DestroyCheckpoint@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z
_TEXT	SEGMENT
_cpId$ = -5						; size = 1
_bitStream$ = 8						; size = 4
_packet$ = 12						; size = 4
?DestroyCheckpoint@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z PROC ; DestroyCheckpoint, COMDAT

; 1087 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1088 : 	EntityId cpId;
; 1089 : 	bitStream->Read(cpId);

	lea	eax, DWORD PTR _cpId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bitStream$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 1090 : 
; 1091 : 	pNetowkManager->GetCheckpoints()->Delete(cpId);

	movzx	eax, BYTE PTR _cpId$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetCheckpoints@CNetworkManager@@QAEPAVCCheckpoints@@XZ ; CNetworkManager::GetCheckpoints
	mov	ecx, eax
	call	?Delete@CCheckpoints@@QAEXE@Z		; CCheckpoints::Delete

; 1092 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@DestroyChe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@DestroyChe:
	DD	1
	DD	$LN4@DestroyChe
$LN4@DestroyChe:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@DestroyChe
$LN3@DestroyChe:
	DB	99					; 00000063H
	DB	112					; 00000070H
	DB	73					; 00000049H
	DB	100					; 00000064H
	DB	0
?DestroyCheckpoint@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ENDP ; DestroyCheckpoint
_TEXT	ENDS
PUBLIC	??_C@_0BE@IIFONLCF@Script_SetTextColor?$AA@	; `string'
PUBLIC	??_C@_0BH@HDIABCDH@Script_SetTextPosition?$AA@	; `string'
PUBLIC	??_C@_0P@MGACINNB@Script_SetText?$AA@		; `string'
PUBLIC	??_C@_0BL@ICODJLP@Script_toggleTextForPlayer?$AA@ ; `string'
PUBLIC	??_C@_0BI@LAFFGLND@Script_SetPlayerGravity?$AA@	; `string'
PUBLIC	??_C@_0BP@JICENCHE@Script_SetCameraShakeIntensity?$AA@ ; `string'
PUBLIC	??_C@_0BH@BGEKPAPM@Script_toggleCellPhone?$AA@	; `string'
PUBLIC	??_C@_0BK@FPNBELGH@Script_toggleDriveByState?$AA@ ; `string'
PUBLIC	??_C@_0BF@IAKLGKLC@Script_SetPlayerCash?$AA@	; `string'
PUBLIC	??_C@_0BD@NFPGPEME@Script_setSkyColor?$AA@	; `string'
PUBLIC	??_C@_0BH@ODMNJBOL@Script_popVehicleTrunk?$AA@	; `string'
PUBLIC	??_C@_0BB@OGNPJHKC@Script_FlashItem?$AA@	; `string'
PUBLIC	??_C@_0BM@JDJOIP@Script_togglePlayerBleeding?$AA@ ; `string'
PUBLIC	??_C@_0BL@MJMANHOA@Script_forceClassSelection?$AA@ ; `string'
PUBLIC	??_C@_0BC@MHLILHLB@Script_ClientCall?$AA@	; `string'
PUBLIC	??_C@_0BC@ELPNNOMJ@Script_FadeScreen?$AA@	; `string'
PUBLIC	??_C@_0BB@CNAICHEE@Script_PlaySound?$AA@	; `string'
PUBLIC	??_C@_0BG@MFDLPIHF@Script_DestroyVehicle?$AA@	; `string'
PUBLIC	??_C@_0BL@CBCCEGMH@Script_SetVehicleMoveSpeed?$AA@ ; `string'
PUBLIC	??_C@_0BL@EFDKHOAK@Script_SetVehicleTurnSpeed?$AA@ ; `string'
PUBLIC	??_C@_0BF@KEADIOHE@Script_SetVehiclePos?$AA@	; `string'
PUBLIC	??_C@_0BH@JCOJBGED@Script_SetVehicleColor?$AA@	; `string'
PUBLIC	??_C@_0BI@PFHHIOC@Script_SetVehicleHealth?$AA@	; `string'
PUBLIC	??_C@_0BD@EGMFIMMC@Script_WorldBounds?$AA@	; `string'
PUBLIC	??_C@_0BF@INNPMDDM@Script_ClientMessage?$AA@	; `string'
PUBLIC	??_C@_0BG@KBAEAJBJ@Script_ToggleControls?$AA@	; `string'
PUBLIC	??_C@_0BJ@HMIOHONK@Script_RemoveFromVehicle?$AA@ ; `string'
PUBLIC	??_C@_0BG@HCEEGJLD@Script_SetArmedWeapon?$AA@	; `string'
PUBLIC	??_C@_0BJ@OMGADBBB@Script_SetPlayerRotation?$AA@ ; `string'
PUBLIC	??_C@_0BH@BDKKAFLE@Script_SetPlayerAction?$AA@	; `string'
PUBLIC	??_C@_0BH@BHCKPGDP@Script_SetPlayerZAngle?$AA@	; `string'
PUBLIC	??_C@_0BF@MIBNJMHE@Script_SetPlayerSkin?$AA@	; `string'
PUBLIC	??_C@_0BI@DHKPDBDP@Script_GivePlayerWeapon?$AA@	; `string'
PUBLIC	??_C@_0BE@PJFBADEA@Script_PutInVehicle?$AA@	; `string'
PUBLIC	??_C@_0BE@JPIJADJC@Script_SetMoveSpeed?$AA@	; `string'
PUBLIC	??_C@_0BE@PLJBDLFP@Script_SetTurnSpeed?$AA@	; `string'
PUBLIC	??_C@_0O@DIDNBNFF@Script_SetPos?$AA@		; `string'
PUBLIC	??_C@_0BB@EADEDFCI@Script_SetArmour?$AA@	; `string'
PUBLIC	??_C@_0BB@KNNFJANL@Script_SetHealth?$AA@	; `string'
PUBLIC	??_C@_0O@MFCOAPBO@PickupDestroy?$AA@		; `string'
PUBLIC	??_C@_0M@CFGEBGPI@PickupSpawn?$AA@		; `string'
PUBLIC	??_C@_0BC@FMKKBIFO@DestroyCheckpoint?$AA@	; `string'
PUBLIC	??_C@_0BB@NJBCHBLP@CreateCheckpoint?$AA@	; `string'
PUBLIC	??_C@_0O@MNPHEIJ@InflictDamage?$AA@		; `string'
PUBLIC	??_C@_0M@EJIBDOOP@DestroyText?$AA@		; `string'
PUBLIC	??_C@_0L@LDBPIBGH@CreateText?$AA@		; `string'
PUBLIC	??_C@_0O@KKECIJBD@ObjectDestroy?$AA@		; `string'
PUBLIC	??_C@_0M@CIFAPNG@ObjectSpawn?$AA@		; `string'
PUBLIC	??_C@_0BD@HIINJMPI@UploadClientScript?$AA@	; `string'
PUBLIC	??_C@_0BG@MOOIHGOB@SetCameraBehindPlayer?$AA@	; `string'
PUBLIC	??_C@_0BA@BKMCOEGM@SetCameraLookAt?$AA@		; `string'
PUBLIC	??_C@_0BC@LNCIBIDJ@SetCameraRotation?$AA@	; `string'
PUBLIC	??_C@_0BC@LKCKIMFM@SetCameraPosition?$AA@	; `string'
PUBLIC	??_C@_0M@NGDMMFMA@SetGameTime?$AA@		; `string'
PUBLIC	??_C@_09JKPJFCCD@Passenger?$AA@			; `string'
PUBLIC	??_C@_0BD@HFLMHEOC@ConnectionRejected?$AA@	; `string'
PUBLIC	??_C@_0BD@OIDOAIGE@UpdateScoreAndPing?$AA@	; `string'
PUBLIC	??_C@_0P@PANOBCJK@VehicleDestroy?$AA@		; `string'
PUBLIC	??_C@_0N@EPEGELNF@VehicleSpawn?$AA@		; `string'
PUBLIC	??_C@_0M@KCCAADOG@ExitVehicle?$AA@		; `string'
PUBLIC	??_C@_0N@HMLMNFIG@EnterVehicle?$AA@		; `string'
PUBLIC	??_C@_05PGGAFPFO@Death?$AA@			; `string'
PUBLIC	??_C@_05BEKPGMFA@Spawn?$AA@			; `string'
PUBLIC	??_C@_0N@COFNMLME@RequestClass?$AA@		; `string'
PUBLIC	??_C@_04NKFKOIHC@Chat?$AA@			; `string'
PUBLIC	??_C@_08BBPHHJML@InitGame?$AA@			; `string'
PUBLIC	??_C@_0L@DMCDHMEG@ServerQuit?$AA@		; `string'
PUBLIC	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ	; CNetworkManager::GetRPC4
PUBLIC	??_C@_0L@KEJKJHPF@ServerJoin?$AA@		; `string'
PUBLIC	?RegisterRPCs@@YAXXZ				; RegisterRPCs
EXTRN	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z:PROC ; RakNet::RPC4::RegisterFunction
;	COMDAT ??_C@_0BE@IIFONLCF@Script_SetTextColor?$AA@
CONST	SEGMENT
??_C@_0BE@IIFONLCF@Script_SetTextColor?$AA@ DB 'Script_SetTextColor', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HDIABCDH@Script_SetTextPosition?$AA@
CONST	SEGMENT
??_C@_0BH@HDIABCDH@Script_SetTextPosition?$AA@ DB 'Script_SetTextPosition'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MGACINNB@Script_SetText?$AA@
CONST	SEGMENT
??_C@_0P@MGACINNB@Script_SetText?$AA@ DB 'Script_SetText', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@ICODJLP@Script_toggleTextForPlayer?$AA@
CONST	SEGMENT
??_C@_0BL@ICODJLP@Script_toggleTextForPlayer?$AA@ DB 'Script_toggleTextFo'
	DB	'rPlayer', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LAFFGLND@Script_SetPlayerGravity?$AA@
CONST	SEGMENT
??_C@_0BI@LAFFGLND@Script_SetPlayerGravity?$AA@ DB 'Script_SetPlayerGravi'
	DB	'ty', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@JICENCHE@Script_SetCameraShakeIntensity?$AA@
CONST	SEGMENT
??_C@_0BP@JICENCHE@Script_SetCameraShakeIntensity?$AA@ DB 'Script_SetCame'
	DB	'raShakeIntensity', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BGEKPAPM@Script_toggleCellPhone?$AA@
CONST	SEGMENT
??_C@_0BH@BGEKPAPM@Script_toggleCellPhone?$AA@ DB 'Script_toggleCellPhone'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FPNBELGH@Script_toggleDriveByState?$AA@
CONST	SEGMENT
??_C@_0BK@FPNBELGH@Script_toggleDriveByState?$AA@ DB 'Script_toggleDriveB'
	DB	'yState', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IAKLGKLC@Script_SetPlayerCash?$AA@
CONST	SEGMENT
??_C@_0BF@IAKLGKLC@Script_SetPlayerCash?$AA@ DB 'Script_SetPlayerCash', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NFPGPEME@Script_setSkyColor?$AA@
CONST	SEGMENT
??_C@_0BD@NFPGPEME@Script_setSkyColor?$AA@ DB 'Script_setSkyColor', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@ODMNJBOL@Script_popVehicleTrunk?$AA@
CONST	SEGMENT
??_C@_0BH@ODMNJBOL@Script_popVehicleTrunk?$AA@ DB 'Script_popVehicleTrunk'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OGNPJHKC@Script_FlashItem?$AA@
CONST	SEGMENT
??_C@_0BB@OGNPJHKC@Script_FlashItem?$AA@ DB 'Script_FlashItem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@JDJOIP@Script_togglePlayerBleeding?$AA@
CONST	SEGMENT
??_C@_0BM@JDJOIP@Script_togglePlayerBleeding?$AA@ DB 'Script_togglePlayer'
	DB	'Bleeding', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MJMANHOA@Script_forceClassSelection?$AA@
CONST	SEGMENT
??_C@_0BL@MJMANHOA@Script_forceClassSelection?$AA@ DB 'Script_forceClassS'
	DB	'election', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MHLILHLB@Script_ClientCall?$AA@
CONST	SEGMENT
??_C@_0BC@MHLILHLB@Script_ClientCall?$AA@ DB 'Script_ClientCall', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@ELPNNOMJ@Script_FadeScreen?$AA@
CONST	SEGMENT
??_C@_0BC@ELPNNOMJ@Script_FadeScreen?$AA@ DB 'Script_FadeScreen', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CNAICHEE@Script_PlaySound?$AA@
CONST	SEGMENT
??_C@_0BB@CNAICHEE@Script_PlaySound?$AA@ DB 'Script_PlaySound', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MFDLPIHF@Script_DestroyVehicle?$AA@
CONST	SEGMENT
??_C@_0BG@MFDLPIHF@Script_DestroyVehicle?$AA@ DB 'Script_DestroyVehicle', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@CBCCEGMH@Script_SetVehicleMoveSpeed?$AA@
CONST	SEGMENT
??_C@_0BL@CBCCEGMH@Script_SetVehicleMoveSpeed?$AA@ DB 'Script_SetVehicleM'
	DB	'oveSpeed', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@EFDKHOAK@Script_SetVehicleTurnSpeed?$AA@
CONST	SEGMENT
??_C@_0BL@EFDKHOAK@Script_SetVehicleTurnSpeed?$AA@ DB 'Script_SetVehicleT'
	DB	'urnSpeed', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KEADIOHE@Script_SetVehiclePos?$AA@
CONST	SEGMENT
??_C@_0BF@KEADIOHE@Script_SetVehiclePos?$AA@ DB 'Script_SetVehiclePos', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JCOJBGED@Script_SetVehicleColor?$AA@
CONST	SEGMENT
??_C@_0BH@JCOJBGED@Script_SetVehicleColor?$AA@ DB 'Script_SetVehicleColor'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@PFHHIOC@Script_SetVehicleHealth?$AA@
CONST	SEGMENT
??_C@_0BI@PFHHIOC@Script_SetVehicleHealth?$AA@ DB 'Script_SetVehicleHealt'
	DB	'h', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EGMFIMMC@Script_WorldBounds?$AA@
CONST	SEGMENT
??_C@_0BD@EGMFIMMC@Script_WorldBounds?$AA@ DB 'Script_WorldBounds', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@INNPMDDM@Script_ClientMessage?$AA@
CONST	SEGMENT
??_C@_0BF@INNPMDDM@Script_ClientMessage?$AA@ DB 'Script_ClientMessage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KBAEAJBJ@Script_ToggleControls?$AA@
CONST	SEGMENT
??_C@_0BG@KBAEAJBJ@Script_ToggleControls?$AA@ DB 'Script_ToggleControls', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HMIOHONK@Script_RemoveFromVehicle?$AA@
CONST	SEGMENT
??_C@_0BJ@HMIOHONK@Script_RemoveFromVehicle?$AA@ DB 'Script_RemoveFromVeh'
	DB	'icle', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HCEEGJLD@Script_SetArmedWeapon?$AA@
CONST	SEGMENT
??_C@_0BG@HCEEGJLD@Script_SetArmedWeapon?$AA@ DB 'Script_SetArmedWeapon', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@OMGADBBB@Script_SetPlayerRotation?$AA@
CONST	SEGMENT
??_C@_0BJ@OMGADBBB@Script_SetPlayerRotation?$AA@ DB 'Script_SetPlayerRota'
	DB	'tion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BDKKAFLE@Script_SetPlayerAction?$AA@
CONST	SEGMENT
??_C@_0BH@BDKKAFLE@Script_SetPlayerAction?$AA@ DB 'Script_SetPlayerAction'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BHCKPGDP@Script_SetPlayerZAngle?$AA@
CONST	SEGMENT
??_C@_0BH@BHCKPGDP@Script_SetPlayerZAngle?$AA@ DB 'Script_SetPlayerZAngle'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MIBNJMHE@Script_SetPlayerSkin?$AA@
CONST	SEGMENT
??_C@_0BF@MIBNJMHE@Script_SetPlayerSkin?$AA@ DB 'Script_SetPlayerSkin', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@DHKPDBDP@Script_GivePlayerWeapon?$AA@
CONST	SEGMENT
??_C@_0BI@DHKPDBDP@Script_GivePlayerWeapon?$AA@ DB 'Script_GivePlayerWeap'
	DB	'on', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PJFBADEA@Script_PutInVehicle?$AA@
CONST	SEGMENT
??_C@_0BE@PJFBADEA@Script_PutInVehicle?$AA@ DB 'Script_PutInVehicle', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JPIJADJC@Script_SetMoveSpeed?$AA@
CONST	SEGMENT
??_C@_0BE@JPIJADJC@Script_SetMoveSpeed?$AA@ DB 'Script_SetMoveSpeed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PLJBDLFP@Script_SetTurnSpeed?$AA@
CONST	SEGMENT
??_C@_0BE@PLJBDLFP@Script_SetTurnSpeed?$AA@ DB 'Script_SetTurnSpeed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DIDNBNFF@Script_SetPos?$AA@
CONST	SEGMENT
??_C@_0O@DIDNBNFF@Script_SetPos?$AA@ DB 'Script_SetPos', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EADEDFCI@Script_SetArmour?$AA@
CONST	SEGMENT
??_C@_0BB@EADEDFCI@Script_SetArmour?$AA@ DB 'Script_SetArmour', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KNNFJANL@Script_SetHealth?$AA@
CONST	SEGMENT
??_C@_0BB@KNNFJANL@Script_SetHealth?$AA@ DB 'Script_SetHealth', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MFCOAPBO@PickupDestroy?$AA@
CONST	SEGMENT
??_C@_0O@MFCOAPBO@PickupDestroy?$AA@ DB 'PickupDestroy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CFGEBGPI@PickupSpawn?$AA@
CONST	SEGMENT
??_C@_0M@CFGEBGPI@PickupSpawn?$AA@ DB 'PickupSpawn', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FMKKBIFO@DestroyCheckpoint?$AA@
CONST	SEGMENT
??_C@_0BC@FMKKBIFO@DestroyCheckpoint?$AA@ DB 'DestroyCheckpoint', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NJBCHBLP@CreateCheckpoint?$AA@
CONST	SEGMENT
??_C@_0BB@NJBCHBLP@CreateCheckpoint?$AA@ DB 'CreateCheckpoint', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MNPHEIJ@InflictDamage?$AA@
CONST	SEGMENT
??_C@_0O@MNPHEIJ@InflictDamage?$AA@ DB 'InflictDamage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EJIBDOOP@DestroyText?$AA@
CONST	SEGMENT
??_C@_0M@EJIBDOOP@DestroyText?$AA@ DB 'DestroyText', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LDBPIBGH@CreateText?$AA@
CONST	SEGMENT
??_C@_0L@LDBPIBGH@CreateText?$AA@ DB 'CreateText', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KKECIJBD@ObjectDestroy?$AA@
CONST	SEGMENT
??_C@_0O@KKECIJBD@ObjectDestroy?$AA@ DB 'ObjectDestroy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CIFAPNG@ObjectSpawn?$AA@
CONST	SEGMENT
??_C@_0M@CIFAPNG@ObjectSpawn?$AA@ DB 'ObjectSpawn', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HIINJMPI@UploadClientScript?$AA@
CONST	SEGMENT
??_C@_0BD@HIINJMPI@UploadClientScript?$AA@ DB 'UploadClientScript', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MOOIHGOB@SetCameraBehindPlayer?$AA@
CONST	SEGMENT
??_C@_0BG@MOOIHGOB@SetCameraBehindPlayer?$AA@ DB 'SetCameraBehindPlayer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BKMCOEGM@SetCameraLookAt?$AA@
CONST	SEGMENT
??_C@_0BA@BKMCOEGM@SetCameraLookAt?$AA@ DB 'SetCameraLookAt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LNCIBIDJ@SetCameraRotation?$AA@
CONST	SEGMENT
??_C@_0BC@LNCIBIDJ@SetCameraRotation?$AA@ DB 'SetCameraRotation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LKCKIMFM@SetCameraPosition?$AA@
CONST	SEGMENT
??_C@_0BC@LKCKIMFM@SetCameraPosition?$AA@ DB 'SetCameraPosition', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NGDMMFMA@SetGameTime?$AA@
CONST	SEGMENT
??_C@_0M@NGDMMFMA@SetGameTime?$AA@ DB 'SetGameTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09JKPJFCCD@Passenger?$AA@
CONST	SEGMENT
??_C@_09JKPJFCCD@Passenger?$AA@ DB 'Passenger', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HFLMHEOC@ConnectionRejected?$AA@
CONST	SEGMENT
??_C@_0BD@HFLMHEOC@ConnectionRejected?$AA@ DB 'ConnectionRejected', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OIDOAIGE@UpdateScoreAndPing?$AA@
CONST	SEGMENT
??_C@_0BD@OIDOAIGE@UpdateScoreAndPing?$AA@ DB 'UpdateScoreAndPing', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PANOBCJK@VehicleDestroy?$AA@
CONST	SEGMENT
??_C@_0P@PANOBCJK@VehicleDestroy?$AA@ DB 'VehicleDestroy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EPEGELNF@VehicleSpawn?$AA@
CONST	SEGMENT
??_C@_0N@EPEGELNF@VehicleSpawn?$AA@ DB 'VehicleSpawn', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KCCAADOG@ExitVehicle?$AA@
CONST	SEGMENT
??_C@_0M@KCCAADOG@ExitVehicle?$AA@ DB 'ExitVehicle', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HMLMNFIG@EnterVehicle?$AA@
CONST	SEGMENT
??_C@_0N@HMLMNFIG@EnterVehicle?$AA@ DB 'EnterVehicle', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05PGGAFPFO@Death?$AA@
CONST	SEGMENT
??_C@_05PGGAFPFO@Death?$AA@ DB 'Death', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05BEKPGMFA@Spawn?$AA@
CONST	SEGMENT
??_C@_05BEKPGMFA@Spawn?$AA@ DB 'Spawn', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@COFNMLME@RequestClass?$AA@
CONST	SEGMENT
??_C@_0N@COFNMLME@RequestClass?$AA@ DB 'RequestClass', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04NKFKOIHC@Chat?$AA@
CONST	SEGMENT
??_C@_04NKFKOIHC@Chat?$AA@ DB 'Chat', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08BBPHHJML@InitGame?$AA@
CONST	SEGMENT
??_C@_08BBPHHJML@InitGame?$AA@ DB 'InitGame', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DMCDHMEG@ServerQuit?$AA@
CONST	SEGMENT
??_C@_0L@DMCDHMEG@ServerQuit?$AA@ DB 'ServerQuit', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KEJKJHPF@ServerJoin?$AA@
CONST	SEGMENT
??_C@_0L@KEJKJHPF@ServerJoin?$AA@ DB 'ServerJoin', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?RegisterRPCs@@YAXXZ
_TEXT	SEGMENT
?RegisterRPCs@@YAXXZ PROC				; RegisterRPCs, COMDAT

; 1095 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1096 : 	pNetowkManager->GetRPC4()->RegisterFunction("ServerJoin",ServerJoin);

	push	OFFSET ?ServerJoin@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; ServerJoin
	push	OFFSET ??_C@_0L@KEJKJHPF@ServerJoin?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1097 : 	pNetowkManager->GetRPC4()->RegisterFunction("ServerQuit",ServerQuit);	

	push	OFFSET ?ServerQuit@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; ServerQuit
	push	OFFSET ??_C@_0L@DMCDHMEG@ServerQuit?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1098 : 	pNetowkManager->GetRPC4()->RegisterFunction("InitGame",InitGame);

	push	OFFSET ?InitGame@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; InitGame
	push	OFFSET ??_C@_08BBPHHJML@InitGame?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1099 : 	pNetowkManager->GetRPC4()->RegisterFunction("Chat",Chat);

	push	OFFSET ?Chat@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Chat
	push	OFFSET ??_C@_04NKFKOIHC@Chat?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1100 : 	pNetowkManager->GetRPC4()->RegisterFunction("RequestClass",RequestClass);

	push	OFFSET ?RequestClass@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; RequestClass
	push	OFFSET ??_C@_0N@COFNMLME@RequestClass?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1101 : 	pNetowkManager->GetRPC4()->RegisterFunction("Spawn",Spawn);

	push	OFFSET ?Spawn@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Spawn
	push	OFFSET ??_C@_05BEKPGMFA@Spawn?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1102 : 	pNetowkManager->GetRPC4()->RegisterFunction("Death",Death);

	push	OFFSET ?Death@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Death
	push	OFFSET ??_C@_05PGGAFPFO@Death?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1103 : 	pNetowkManager->GetRPC4()->RegisterFunction("EnterVehicle",EnterVehicle);

	push	OFFSET ?EnterVehicle@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; EnterVehicle
	push	OFFSET ??_C@_0N@HMLMNFIG@EnterVehicle?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1104 : 	pNetowkManager->GetRPC4()->RegisterFunction("ExitVehicle",ExitVehicle);

	push	OFFSET ?ExitVehicle@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; ExitVehicle
	push	OFFSET ??_C@_0M@KCCAADOG@ExitVehicle?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1105 : 	pNetowkManager->GetRPC4()->RegisterFunction("VehicleSpawn",VehicleSpawn);

	push	OFFSET ?VehicleSpawn@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; VehicleSpawn
	push	OFFSET ??_C@_0N@EPEGELNF@VehicleSpawn?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1106 : 	pNetowkManager->GetRPC4()->RegisterFunction("VehicleDestroy",VehicleDestroy);

	push	OFFSET ?VehicleDestroy@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; VehicleDestroy
	push	OFFSET ??_C@_0P@PANOBCJK@VehicleDestroy?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1107 : 	pNetowkManager->GetRPC4()->RegisterFunction("UpdateScoreAndPing",UpdateScoreAndPing);

	push	OFFSET ?UpdateScoreAndPing@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; UpdateScoreAndPing
	push	OFFSET ??_C@_0BD@OIDOAIGE@UpdateScoreAndPing?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1108 : 	pNetowkManager->GetRPC4()->RegisterFunction("ConnectionRejected",ConnectionRejected);

	push	OFFSET ?ConnectionRejected@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; ConnectionRejected
	push	OFFSET ??_C@_0BD@HFLMHEOC@ConnectionRejected?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1109 : 	pNetowkManager->GetRPC4()->RegisterFunction("Passenger",Passenger);

	push	OFFSET ?Passenger@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Passenger
	push	OFFSET ??_C@_09JKPJFCCD@Passenger?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1110 : 	pNetowkManager->GetRPC4()->RegisterFunction("SetGameTime",SetGameTime);

	push	OFFSET ?SetGameTime@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; SetGameTime
	push	OFFSET ??_C@_0M@NGDMMFMA@SetGameTime?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1111 : 	pNetowkManager->GetRPC4()->RegisterFunction("SetCameraPosition",SetCameraPosition);

	push	OFFSET ?SetCameraPosition@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; SetCameraPosition
	push	OFFSET ??_C@_0BC@LKCKIMFM@SetCameraPosition?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1112 : 	pNetowkManager->GetRPC4()->RegisterFunction("SetCameraRotation",SetCameraRotation);

	push	OFFSET ?SetCameraRotation@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; SetCameraRotation
	push	OFFSET ??_C@_0BC@LNCIBIDJ@SetCameraRotation?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1113 : 	pNetowkManager->GetRPC4()->RegisterFunction("SetCameraLookAt",SetCameraLookAt);

	push	OFFSET ?SetCameraLookAt@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; SetCameraLookAt
	push	OFFSET ??_C@_0BA@BKMCOEGM@SetCameraLookAt?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1114 : 	pNetowkManager->GetRPC4()->RegisterFunction("SetCameraBehindPlayer",SetCameraBehindPlayer);

	push	OFFSET ?SetCameraBehindPlayer@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; SetCameraBehindPlayer
	push	OFFSET ??_C@_0BG@MOOIHGOB@SetCameraBehindPlayer?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1115 : 	pNetowkManager->GetRPC4()->RegisterFunction("UploadClientScript",UploadClientScript);

	push	OFFSET ?UploadClientScript@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; UploadClientScript
	push	OFFSET ??_C@_0BD@HIINJMPI@UploadClientScript?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1116 : 	pNetowkManager->GetRPC4()->RegisterFunction("ObjectSpawn", ObjectSpawn);

	push	OFFSET ?ObjectSpawn@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; ObjectSpawn
	push	OFFSET ??_C@_0M@CIFAPNG@ObjectSpawn?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1117 : 	pNetowkManager->GetRPC4()->RegisterFunction("ObjectDestroy", ObjectDestroy);

	push	OFFSET ?ObjectDestroy@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; ObjectDestroy
	push	OFFSET ??_C@_0O@KKECIJBD@ObjectDestroy?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1118 : 	pNetowkManager->GetRPC4()->RegisterFunction("CreateText", CreateText);

	push	OFFSET ?CreateText@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; CreateText
	push	OFFSET ??_C@_0L@LDBPIBGH@CreateText?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1119 : 	pNetowkManager->GetRPC4()->RegisterFunction("DestroyText", DestroyText);

	push	OFFSET ?DestroyText@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; DestroyText
	push	OFFSET ??_C@_0M@EJIBDOOP@DestroyText?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1120 : 	pNetowkManager->GetRPC4()->RegisterFunction("InflictDamage", InflictDamage);

	push	OFFSET ?InflictDamage@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; InflictDamage
	push	OFFSET ??_C@_0O@MNPHEIJ@InflictDamage?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1121 : 	pNetowkManager->GetRPC4()->RegisterFunction("CreateCheckpoint", CreateCheckpoint);

	push	OFFSET ?CreateCheckpoint@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; CreateCheckpoint
	push	OFFSET ??_C@_0BB@NJBCHBLP@CreateCheckpoint?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1122 : 	pNetowkManager->GetRPC4()->RegisterFunction("DestroyCheckpoint", DestroyCheckpoint);

	push	OFFSET ?DestroyCheckpoint@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; DestroyCheckpoint
	push	OFFSET ??_C@_0BC@FMKKBIFO@DestroyCheckpoint?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1123 : 	pNetowkManager->GetRPC4()->RegisterFunction("PickupSpawn", PickupSpawn);

	push	OFFSET ?PickupSpawn@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; PickupSpawn
	push	OFFSET ??_C@_0M@CFGEBGPI@PickupSpawn?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1124 : 	pNetowkManager->GetRPC4()->RegisterFunction("PickupDestroy", PickupDestroy);

	push	OFFSET ?PickupDestroy@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; PickupDestroy
	push	OFFSET ??_C@_0O@MFCOAPBO@PickupDestroy?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1125 : 
; 1126 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_SetHealth",Script_SetHealth);

	push	OFFSET ?Script_SetHealth@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetHealth
	push	OFFSET ??_C@_0BB@KNNFJANL@Script_SetHealth?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1127 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_SetArmour",Script_SetArmour);

	push	OFFSET ?Script_SetArmour@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetArmour
	push	OFFSET ??_C@_0BB@EADEDFCI@Script_SetArmour?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1128 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_SetPos",Script_SetPos);

	push	OFFSET ?Script_SetPos@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetPos
	push	OFFSET ??_C@_0O@DIDNBNFF@Script_SetPos?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1129 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_SetTurnSpeed",Script_SetTurnSpeed);

	push	OFFSET ?Script_SetTurnSpeed@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetTurnSpeed
	push	OFFSET ??_C@_0BE@PLJBDLFP@Script_SetTurnSpeed?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1130 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_SetMoveSpeed",Script_SetMoveSpeed);

	push	OFFSET ?Script_SetMoveSpeed@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetMoveSpeed
	push	OFFSET ??_C@_0BE@JPIJADJC@Script_SetMoveSpeed?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1131 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_PutInVehicle",Script_PutInVehicle);

	push	OFFSET ?Script_PutInVehicle@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_PutInVehicle
	push	OFFSET ??_C@_0BE@PJFBADEA@Script_PutInVehicle?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1132 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_GivePlayerWeapon",Script_GivePlayerWeapon);

	push	OFFSET ?Script_GivePlayerWeapon@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_GivePlayerWeapon
	push	OFFSET ??_C@_0BI@DHKPDBDP@Script_GivePlayerWeapon?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1133 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_SetPlayerSkin",Script_SetPlayerSkin);

	push	OFFSET ?Script_SetPlayerSkin@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetPlayerSkin
	push	OFFSET ??_C@_0BF@MIBNJMHE@Script_SetPlayerSkin?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1134 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_SetPlayerZAngle",Script_SetPlayerZAngle);

	push	OFFSET ?Script_SetPlayerZAngle@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetPlayerZAngle
	push	OFFSET ??_C@_0BH@BHCKPGDP@Script_SetPlayerZAngle?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1135 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_SetPlayerAction",Script_SetPlayerAction);

	push	OFFSET ?Script_SetPlayerAction@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetPlayerAction
	push	OFFSET ??_C@_0BH@BDKKAFLE@Script_SetPlayerAction?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1136 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_SetPlayerRotation",Script_SetPlayerRotation);

	push	OFFSET ?Script_SetPlayerRotation@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetPlayerRotation
	push	OFFSET ??_C@_0BJ@OMGADBBB@Script_SetPlayerRotation?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1137 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_SetArmedWeapon",Script_SetArmedWeapon);

	push	OFFSET ?Script_SetArmedWeapon@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetArmedWeapon
	push	OFFSET ??_C@_0BG@HCEEGJLD@Script_SetArmedWeapon?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1138 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_RemoveFromVehicle",Script_RemoveFromVehicle);

	push	OFFSET ?Script_RemoveFromVehicle@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_RemoveFromVehicle
	push	OFFSET ??_C@_0BJ@HMIOHONK@Script_RemoveFromVehicle?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1139 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_ToggleControls",Script_ToggleControls);

	push	OFFSET ?Script_ToggleControls@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_ToggleControls
	push	OFFSET ??_C@_0BG@KBAEAJBJ@Script_ToggleControls?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1140 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_ClientMessage",Script_ClientMessage);

	push	OFFSET ?Script_ClientMessage@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_ClientMessage
	push	OFFSET ??_C@_0BF@INNPMDDM@Script_ClientMessage?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1141 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_WorldBounds",Script_WorldBounds);

	push	OFFSET ?Script_WorldBounds@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_WorldBounds
	push	OFFSET ??_C@_0BD@EGMFIMMC@Script_WorldBounds?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1142 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_SetVehicleHealth",Script_SetVehicleHealth);

	push	OFFSET ?Script_SetVehicleHealth@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetVehicleHealth
	push	OFFSET ??_C@_0BI@PFHHIOC@Script_SetVehicleHealth?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1143 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_SetVehicleColor",Script_SetVehicleColor);

	push	OFFSET ?Script_SetVehicleColor@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetVehicleColor
	push	OFFSET ??_C@_0BH@JCOJBGED@Script_SetVehicleColor?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1144 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_SetVehiclePos",Script_SetVehiclePos);

	push	OFFSET ?Script_SetVehiclePos@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetVehiclePos
	push	OFFSET ??_C@_0BF@KEADIOHE@Script_SetVehiclePos?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1145 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_SetVehicleTurnSpeed",Script_SetVehicleTurnSpeed);

	push	OFFSET ?Script_SetVehicleTurnSpeed@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetVehicleTurnSpeed
	push	OFFSET ??_C@_0BL@EFDKHOAK@Script_SetVehicleTurnSpeed?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1146 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_SetVehicleMoveSpeed",Script_SetVehicleMoveSpeed);

	push	OFFSET ?Script_SetVehicleMoveSpeed@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetVehicleMoveSpeed
	push	OFFSET ??_C@_0BL@CBCCEGMH@Script_SetVehicleMoveSpeed?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1147 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_DestroyVehicle",Script_DestroyVehicle);

	push	OFFSET ?Script_DestroyVehicle@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_DestroyVehicle
	push	OFFSET ??_C@_0BG@MFDLPIHF@Script_DestroyVehicle?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1148 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_PlaySound",Script_PlaySound);

	push	OFFSET ?Script_PlaySound@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_PlaySound
	push	OFFSET ??_C@_0BB@CNAICHEE@Script_PlaySound?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1149 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_FadeScreen",Script_FadeScreen);

	push	OFFSET ?Script_FadeScreen@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_FadeScreen
	push	OFFSET ??_C@_0BC@ELPNNOMJ@Script_FadeScreen?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1150 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_ClientCall", Script_ClientCall);

	push	OFFSET ?Script_ClientCall@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_ClientCall
	push	OFFSET ??_C@_0BC@MHLILHLB@Script_ClientCall?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1151 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_forceClassSelection",Script_forceClassSelection);

	push	OFFSET ?Script_forceClassSelection@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_forceClassSelection
	push	OFFSET ??_C@_0BL@MJMANHOA@Script_forceClassSelection?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1152 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_togglePlayerBleeding",Script_togglePlayerBleeding);

	push	OFFSET ?Script_togglePlayerBleeding@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_togglePlayerBleeding
	push	OFFSET ??_C@_0BM@JDJOIP@Script_togglePlayerBleeding?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1153 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_FlashItem",Script_FlashItem);

	push	OFFSET ?Script_FlashItem@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_FlashItem
	push	OFFSET ??_C@_0BB@OGNPJHKC@Script_FlashItem?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1154 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_popVehicleTrunk", Script_popVehicleTrunk);

	push	OFFSET ?Script_popVehicleTrunk@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_popVehicleTrunk
	push	OFFSET ??_C@_0BH@ODMNJBOL@Script_popVehicleTrunk?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1155 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_setSkyColor", Script_setSkyColor);

	push	OFFSET ?Script_setSkyColor@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_setSkyColor
	push	OFFSET ??_C@_0BD@NFPGPEME@Script_setSkyColor?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1156 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_SetPlayerCash", Script_setPlayerCash);

	push	OFFSET ?Script_setPlayerCash@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_setPlayerCash
	push	OFFSET ??_C@_0BF@IAKLGKLC@Script_SetPlayerCash?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1157 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_toggleDriveByState", Script_toggleDriveByState);

	push	OFFSET ?Script_toggleDriveByState@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_toggleDriveByState
	push	OFFSET ??_C@_0BK@FPNBELGH@Script_toggleDriveByState?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1158 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_toggleCellPhone", Script_toggleCellPhone);

	push	OFFSET ?Script_toggleCellPhone@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_toggleCellPhone
	push	OFFSET ??_C@_0BH@BGEKPAPM@Script_toggleCellPhone?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1159 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_SetCameraShakeIntensity", Script_SetCameraShakeIntensity);

	push	OFFSET ?Script_SetCameraShakeIntensity@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetCameraShakeIntensity
	push	OFFSET ??_C@_0BP@JICENCHE@Script_SetCameraShakeIntensity?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1160 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_SetPlayerGravity", Script_setPlayerGravity);

	push	OFFSET ?Script_setPlayerGravity@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_setPlayerGravity
	push	OFFSET ??_C@_0BI@LAFFGLND@Script_SetPlayerGravity?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1161 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_toggleTextForPlayer", Script_toggleTextForPlayer);

	push	OFFSET ?Script_toggleTextForPlayer@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_toggleTextForPlayer
	push	OFFSET ??_C@_0BL@ICODJLP@Script_toggleTextForPlayer?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1162 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_SetText", Script_SetText);

	push	OFFSET ?Script_SetText@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetText
	push	OFFSET ??_C@_0P@MGACINNB@Script_SetText?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1163 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_SetTextPosition", Script_SetTextPosition);

	push	OFFSET ?Script_SetTextPosition@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetTextPosition
	push	OFFSET ??_C@_0BH@HDIABCDH@Script_SetTextPosition?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1164 : 	pNetowkManager->GetRPC4()->RegisterFunction("Script_SetTextColor", Script_SetTextColor);

	push	OFFSET ?Script_SetTextColor@@YAXPAVBitStream@RakNet@@PAUPacket@2@@Z ; Script_SetTextColor
	push	OFFSET ??_C@_0BE@IIFONLCF@Script_SetTextColor?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?RegisterFunction@RPC4@RakNet@@QAE_NPBDP6AXPAVBitStream@2@PAUPacket@2@@Z@Z ; RakNet::RPC4::RegisterFunction

; 1165 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?RegisterRPCs@@YAXXZ ENDP				; RegisterRPCs
_TEXT	ENDS
PUBLIC	?UnRegisterRPCs@@YAXXZ				; UnRegisterRPCs
EXTRN	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z:PROC ; RakNet::RPC4::UnregisterFunction
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?UnRegisterRPCs@@YAXXZ
_TEXT	SEGMENT
?UnRegisterRPCs@@YAXXZ PROC				; UnRegisterRPCs, COMDAT

; 1170 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1171 : 	pNetowkManager->GetRPC4()->UnregisterFunction("ServerJoin");

	push	OFFSET ??_C@_0L@KEJKJHPF@ServerJoin?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1172 : 	pNetowkManager->GetRPC4()->UnregisterFunction("ServerQuit");

	push	OFFSET ??_C@_0L@DMCDHMEG@ServerQuit?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1173 : 	pNetowkManager->GetRPC4()->UnregisterFunction("InitGame");

	push	OFFSET ??_C@_08BBPHHJML@InitGame?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1174 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Chat");

	push	OFFSET ??_C@_04NKFKOIHC@Chat?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1175 : 	pNetowkManager->GetRPC4()->UnregisterFunction("RequestClass");

	push	OFFSET ??_C@_0N@COFNMLME@RequestClass?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1176 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Spawn");

	push	OFFSET ??_C@_05BEKPGMFA@Spawn?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1177 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Death");

	push	OFFSET ??_C@_05PGGAFPFO@Death?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1178 : 	pNetowkManager->GetRPC4()->UnregisterFunction("EnterVehicle");

	push	OFFSET ??_C@_0N@HMLMNFIG@EnterVehicle?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1179 : 	pNetowkManager->GetRPC4()->UnregisterFunction("ExitVehicle");

	push	OFFSET ??_C@_0M@KCCAADOG@ExitVehicle?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1180 : 	pNetowkManager->GetRPC4()->UnregisterFunction("VehicleSpawn");

	push	OFFSET ??_C@_0N@EPEGELNF@VehicleSpawn?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1181 : 	pNetowkManager->GetRPC4()->UnregisterFunction("VehicleDestroy");

	push	OFFSET ??_C@_0P@PANOBCJK@VehicleDestroy?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1182 : 	pNetowkManager->GetRPC4()->UnregisterFunction("UpdateScoreAndPing");

	push	OFFSET ??_C@_0BD@OIDOAIGE@UpdateScoreAndPing?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1183 : 	pNetowkManager->GetRPC4()->UnregisterFunction("ConnectionRejected");

	push	OFFSET ??_C@_0BD@HFLMHEOC@ConnectionRejected?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1184 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Passenger");

	push	OFFSET ??_C@_09JKPJFCCD@Passenger?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1185 : 	pNetowkManager->GetRPC4()->UnregisterFunction("SetGameTime");

	push	OFFSET ??_C@_0M@NGDMMFMA@SetGameTime?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1186 : 	pNetowkManager->GetRPC4()->UnregisterFunction("SetCameraPosition");

	push	OFFSET ??_C@_0BC@LKCKIMFM@SetCameraPosition?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1187 : 	pNetowkManager->GetRPC4()->UnregisterFunction("SetCameraRotation");

	push	OFFSET ??_C@_0BC@LNCIBIDJ@SetCameraRotation?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1188 : 	pNetowkManager->GetRPC4()->UnregisterFunction("SetCameraLookAt");

	push	OFFSET ??_C@_0BA@BKMCOEGM@SetCameraLookAt?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1189 : 	pNetowkManager->GetRPC4()->UnregisterFunction("SetCameraBehindPlayer");

	push	OFFSET ??_C@_0BG@MOOIHGOB@SetCameraBehindPlayer?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1190 : 	pNetowkManager->GetRPC4()->UnregisterFunction("UploadClientScript");

	push	OFFSET ??_C@_0BD@HIINJMPI@UploadClientScript?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1191 : 	pNetowkManager->GetRPC4()->UnregisterFunction("ObjectSpawn");

	push	OFFSET ??_C@_0M@CIFAPNG@ObjectSpawn?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1192 : 	pNetowkManager->GetRPC4()->UnregisterFunction("ObjectDestroy");

	push	OFFSET ??_C@_0O@KKECIJBD@ObjectDestroy?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1193 : 	pNetowkManager->GetRPC4()->UnregisterFunction("CreateText");

	push	OFFSET ??_C@_0L@LDBPIBGH@CreateText?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1194 : 	pNetowkManager->GetRPC4()->UnregisterFunction("DestroyText");

	push	OFFSET ??_C@_0M@EJIBDOOP@DestroyText?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1195 : 	pNetowkManager->GetRPC4()->UnregisterFunction("InflictDamage");

	push	OFFSET ??_C@_0O@MNPHEIJ@InflictDamage?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1196 : 	pNetowkManager->GetRPC4()->UnregisterFunction("CreateCheckpoint");

	push	OFFSET ??_C@_0BB@NJBCHBLP@CreateCheckpoint?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1197 : 	pNetowkManager->GetRPC4()->UnregisterFunction("DestroyCheckpoint");

	push	OFFSET ??_C@_0BC@FMKKBIFO@DestroyCheckpoint?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1198 : 	pNetowkManager->GetRPC4()->UnregisterFunction("PickupSpawn");

	push	OFFSET ??_C@_0M@CFGEBGPI@PickupSpawn?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1199 : 	pNetowkManager->GetRPC4()->UnregisterFunction("PickupDestroy");

	push	OFFSET ??_C@_0O@MFCOAPBO@PickupDestroy?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1200 : 
; 1201 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_SetHealth");

	push	OFFSET ??_C@_0BB@KNNFJANL@Script_SetHealth?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1202 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_SetArmour");

	push	OFFSET ??_C@_0BB@EADEDFCI@Script_SetArmour?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1203 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_SetPos");

	push	OFFSET ??_C@_0O@DIDNBNFF@Script_SetPos?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1204 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_PutInVehicle");

	push	OFFSET ??_C@_0BE@PJFBADEA@Script_PutInVehicle?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1205 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_GivePlayerWeapon");

	push	OFFSET ??_C@_0BI@DHKPDBDP@Script_GivePlayerWeapon?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1206 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_SetPlayerSkin");

	push	OFFSET ??_C@_0BF@MIBNJMHE@Script_SetPlayerSkin?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1207 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_SetPlayerZAngle");

	push	OFFSET ??_C@_0BH@BHCKPGDP@Script_SetPlayerZAngle?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1208 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_SetPlayerAction");

	push	OFFSET ??_C@_0BH@BDKKAFLE@Script_SetPlayerAction?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1209 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_SetPlayerRotation");

	push	OFFSET ??_C@_0BJ@OMGADBBB@Script_SetPlayerRotation?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1210 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_SetArmedWeapon");

	push	OFFSET ??_C@_0BG@HCEEGJLD@Script_SetArmedWeapon?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1211 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_RemoveFromVehicle");

	push	OFFSET ??_C@_0BJ@HMIOHONK@Script_RemoveFromVehicle?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1212 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_ToggleControls");

	push	OFFSET ??_C@_0BG@KBAEAJBJ@Script_ToggleControls?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1213 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_ClientMessage");

	push	OFFSET ??_C@_0BF@INNPMDDM@Script_ClientMessage?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1214 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_WorldBounds");

	push	OFFSET ??_C@_0BD@EGMFIMMC@Script_WorldBounds?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1215 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_SetVehicleHealth");

	push	OFFSET ??_C@_0BI@PFHHIOC@Script_SetVehicleHealth?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1216 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_SetVehicleColor");

	push	OFFSET ??_C@_0BH@JCOJBGED@Script_SetVehicleColor?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1217 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_DestroyVehicle");

	push	OFFSET ??_C@_0BG@MFDLPIHF@Script_DestroyVehicle?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1218 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_PlaySound");

	push	OFFSET ??_C@_0BB@CNAICHEE@Script_PlaySound?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1219 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_FadeScreen");

	push	OFFSET ??_C@_0BC@ELPNNOMJ@Script_FadeScreen?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1220 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_ClientCall");

	push	OFFSET ??_C@_0BC@MHLILHLB@Script_ClientCall?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1221 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_forceClassSelection");

	push	OFFSET ??_C@_0BL@MJMANHOA@Script_forceClassSelection?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1222 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_togglePlayerBleeding");

	push	OFFSET ??_C@_0BM@JDJOIP@Script_togglePlayerBleeding?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1223 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_FlashItem");

	push	OFFSET ??_C@_0BB@OGNPJHKC@Script_FlashItem?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1224 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_popVehicleTrunk");

	push	OFFSET ??_C@_0BH@ODMNJBOL@Script_popVehicleTrunk?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1225 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_setSkyColor");

	push	OFFSET ??_C@_0BD@NFPGPEME@Script_setSkyColor?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1226 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_SetPlayerCash");

	push	OFFSET ??_C@_0BF@IAKLGKLC@Script_SetPlayerCash?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1227 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_toggleDriveByState");

	push	OFFSET ??_C@_0BK@FPNBELGH@Script_toggleDriveByState?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1228 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_toggleCellPhone");

	push	OFFSET ??_C@_0BH@BGEKPAPM@Script_toggleCellPhone?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1229 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_SetCameraShakeIntensity");

	push	OFFSET ??_C@_0BP@JICENCHE@Script_SetCameraShakeIntensity?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1230 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_SetPlayerGravity");

	push	OFFSET ??_C@_0BI@LAFFGLND@Script_SetPlayerGravity?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1231 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_toggleTextForPlayer");

	push	OFFSET ??_C@_0BL@ICODJLP@Script_toggleTextForPlayer?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1232 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_SetText");

	push	OFFSET ??_C@_0P@MGACINNB@Script_SetText?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1233 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_SetTextPosition");

	push	OFFSET ??_C@_0BH@HDIABCDH@Script_SetTextPosition?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1234 : 	pNetowkManager->GetRPC4()->UnregisterFunction("Script_SetTextColor");

	push	OFFSET ??_C@_0BE@IIFONLCF@Script_SetTextColor?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?UnregisterFunction@RPC4@RakNet@@QAE_NPBD@Z ; RakNet::RPC4::UnregisterFunction

; 1235 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?UnRegisterRPCs@@YAXXZ ENDP				; UnRegisterRPCs
_TEXT	ENDS
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
PUBLIC	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z		; std::_Debug_pointer<char>
PUBLIC	??_C@_1IM@EDGMOHHN@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
;	COMDAT ??_C@_1IM@EDGMOHHN@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xstring
CONST	SEGMENT
??_C@_1IM@EDGMOHHN@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	' ', 00H, '9', 00H, '.', 00H, '0', 00H, '\', 00H, 'v', 00H, 'c'
	DB	00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H
	DB	'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 's', 00H, 't', 00H, 'r'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 992  : 		{	// append [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 993  : 		_DEBUG_POINTER(_Ptr);

	push	993					; 000003e1H
	push	OFFSET ??_C@_1IM@EDGMOHHN@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH

; 994  : 		return (append(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 995  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
EXTRN	_strlen:PROC
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 447  : 		{	// find length of null-terminated string

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 448  : //		_DEBUG_POINTER(_First);
; 449  : 		return (::strlen(_First));

	mov	eax, DWORD PTR __First$[ebp]
	push	eax
	call	_strlen
	add	esp, 4

; 450  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
PUBLIC	??$copy_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDI@Z ; std::_Traits_helper::copy_s<std::char_traits<char> >
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
EXTRN	?_Xlen@_String_base@std@@SAXXZ:PROC		; std::_String_base::_Xlen
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
__Num$ = -20						; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 970  : 		{	// append [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 971  : 
; 972  :  #if _HAS_ITERATOR_DEBUGGING
; 973  : 		if (_Count != 0)

	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN5@append

; 974  : 			_DEBUG_POINTER(_Ptr);

	push	974					; 000003ceH
	push	OFFSET ??_C@_1IM@EDGMOHHN@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
$LN5@append:

; 975  :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 976  : 
; 977  : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@append

; 978  : 			return (append(*this, _Ptr - _Myptr(), _Count));	// substring

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
	jmp	$LN6@append
$LN4@append:

; 979  : 		if (npos - _Mysize <= _Count || _Mysize + _Count < _Mysize)

	mov	eax, DWORD PTR _this$[ebp]
	or	ecx, -1
	sub	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jbe	SHORT $LN2@append
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx+24]
	jae	SHORT $LN3@append
$LN2@append:

; 980  : 			_String_base::_Xlen();	// result too long

	call	?_Xlen@_String_base@std@@SAXXZ		; std::_String_base::_Xlen
$LN3@append:

; 981  : 
; 982  : 		size_type _Num;
; 983  : 		if (0 < _Count && _Grow(_Num = _Mysize + _Count))

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@append
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@append

; 984  : 			{	// make room and append new stuff
; 985  : 			_Traits_helper::copy_s<_Traits>(_Myptr() + _Mysize, _Myres - _Mysize, _Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+28]
	sub	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+24]
	push	eax
	call	??$copy_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDI@Z ; std::_Traits_helper::copy_s<std::char_traits<char> >
	add	esp, 16					; 00000010H

; 986  : 			_Eos(_Num);

	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@append:

; 987  : 			}
; 988  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN6@append:

; 989  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
EXTRN	?_Xran@_String_base@std@@SAXXZ:PROC		; std::_String_base::_Xran
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -20						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT
; _this$ = ecx

; 951  : 		{	// append _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 952  : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@append@2

; 953  : 			_String_base::_Xran();	// _Roff off end

	call	?_Xran@_String_base@std@@SAXXZ		; std::_String_base::_Xran
$LN5@append@2:

; 954  : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 955  : 		if (_Num < _Count)

	mov	eax, DWORD PTR __Num$[ebp]
	cmp	eax, DWORD PTR __Count$[ebp]
	jae	SHORT $LN4@append@2

; 956  : 			_Count = _Num;	// trim _Count to size

	mov	eax, DWORD PTR __Num$[ebp]
	mov	DWORD PTR __Count$[ebp], eax
$LN4@append@2:

; 957  : 		if (npos - _Mysize <= _Count || _Mysize + _Count < _Mysize)

	mov	eax, DWORD PTR _this$[ebp]
	or	ecx, -1
	sub	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jbe	SHORT $LN2@append@2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, DWORD PTR __Count$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx+24]
	jae	SHORT $LN3@append@2
$LN2@append@2:

; 958  : 			_String_base::_Xlen();	// result too long

	call	?_Xlen@_String_base@std@@SAXXZ		; std::_String_base::_Xlen
$LN3@append@2:

; 959  : 
; 960  : 		if (0 < _Count && _Grow(_Num = _Mysize + _Count))

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@append@2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], ecx
	push	0
	mov	edx, DWORD PTR __Num$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@append@2

; 961  : 			{	// make room and append new stuff
; 962  : 			_Traits_helper::copy_s<_Traits>(_Myptr() + _Mysize, _Myres - _Mysize,
; 963  : 				_Right._Myptr() + _Roff, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+28]
	sub	eax, DWORD PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+24]
	push	eax
	call	??$copy_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDI@Z ; std::_Traits_helper::copy_s<std::char_traits<char> >
	add	esp, 16					; 00000010H

; 964  : 			_Eos(_Num);

	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@append@2:

; 965  : 			}
; 966  : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 967  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
PUBLIC	?DoEndianSwap@BitStream@RakNet@@SA_NXZ		; RakNet::BitStream::DoEndianSwap
EXTRN	?ReverseBytes@BitStream@RakNet@@SAXPAE0I@Z:PROC	; RakNet::BitStream::ReverseBytes
EXTRN	?ReadBits@BitStream@RakNet@@QAE_NPAEI_N@Z:PROC	; RakNet::BitStream::ReadBits
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\raknet\bitstream.h
;	COMDAT ??$Read@E@BitStream@RakNet@@QAE_NAAE@Z
_TEXT	SEGMENT
_output$209931 = -17					; size = 1
_this$ = -8						; size = 4
_outTemplateVar$ = 8					; size = 4
??$Read@E@BitStream@RakNet@@QAE_NAAE@Z PROC		; RakNet::BitStream::Read<unsigned char>, COMDAT
; _this$ = ecx

; 1423 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1424 : #ifdef _MSC_VER
; 1425 : #pragma warning(disable:4127)   // conditional expression is constant
; 1426 : #endif
; 1427 : 		if (sizeof(outTemplateVar)==1)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN5@Read

; 1428 : 			return ReadBits( ( unsigned char* ) &outTemplateVar, sizeof(templateType) * 8, true );

	push	1
	push	8
	mov	eax, DWORD PTR _outTemplateVar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEI_N@Z ; RakNet::BitStream::ReadBits
	jmp	SHORT $LN6@Read

; 1429 : 		else

	jmp	SHORT $LN6@Read
$LN5@Read:

; 1430 : 		{
; 1431 : #ifndef __BITSTREAM_NATIVE_END
; 1432 : #ifdef _MSC_VER
; 1433 : #pragma warning(disable:4244)   // '=' : conversion from 'unsigned long' to 'unsigned short', possible loss of data
; 1434 : #endif
; 1435 : 			if (DoEndianSwap())

	call	?DoEndianSwap@BitStream@RakNet@@SA_NXZ	; RakNet::BitStream::DoEndianSwap
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@Read

; 1436 : 			{
; 1437 : 				unsigned char output[sizeof(templateType)];
; 1438 : 				if (ReadBits( ( unsigned char* ) output, sizeof(templateType) * 8, true ))

	push	1
	push	8
	lea	eax, DWORD PTR _output$209931[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEI_N@Z ; RakNet::BitStream::ReadBits
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Read

; 1439 : 				{
; 1440 : 					ReverseBytes(output, (unsigned char*)&outTemplateVar, sizeof(templateType));

	push	1
	mov	eax, DWORD PTR _outTemplateVar$[ebp]
	push	eax
	lea	ecx, DWORD PTR _output$209931[ebp]
	push	ecx
	call	?ReverseBytes@BitStream@RakNet@@SAXPAE0I@Z ; RakNet::BitStream::ReverseBytes
	add	esp, 12					; 0000000cH

; 1441 : 					return true;

	mov	al, 1
	jmp	SHORT $LN6@Read
$LN2@Read:

; 1442 : 				}
; 1443 : 				return false;

	xor	al, al
	jmp	SHORT $LN6@Read

; 1444 : 			}
; 1445 : 			else

	jmp	SHORT $LN6@Read
$LN3@Read:

; 1446 : #endif
; 1447 : 				return ReadBits( ( unsigned char* ) & outTemplateVar, sizeof(templateType) * 8, true );

	push	1
	push	8
	mov	eax, DWORD PTR _outTemplateVar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEI_N@Z ; RakNet::BitStream::ReadBits
$LN6@Read:

; 1448 : 		}
; 1449 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Read
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN10@Read:
	DD	1
	DD	$LN9@Read
$LN9@Read:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN8@Read
$LN8@Read:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
??$Read@E@BitStream@RakNet@@QAE_NAAE@Z ENDP		; RakNet::BitStream::Read<unsigned char>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$Read@I@BitStream@RakNet@@QAE_NAAI@Z
_TEXT	SEGMENT
_output$209948 = -20					; size = 4
_this$ = -8						; size = 4
_outTemplateVar$ = 8					; size = 4
??$Read@I@BitStream@RakNet@@QAE_NAAI@Z PROC		; RakNet::BitStream::Read<unsigned int>, COMDAT
; _this$ = ecx

; 1423 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1424 : #ifdef _MSC_VER
; 1425 : #pragma warning(disable:4127)   // conditional expression is constant
; 1426 : #endif
; 1427 : 		if (sizeof(outTemplateVar)==1)

	xor	eax, eax
	je	SHORT $LN5@Read@2

; 1428 : 			return ReadBits( ( unsigned char* ) &outTemplateVar, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	mov	eax, DWORD PTR _outTemplateVar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEI_N@Z ; RakNet::BitStream::ReadBits
	jmp	SHORT $LN6@Read@2

; 1429 : 		else

	jmp	SHORT $LN6@Read@2
$LN5@Read@2:

; 1430 : 		{
; 1431 : #ifndef __BITSTREAM_NATIVE_END
; 1432 : #ifdef _MSC_VER
; 1433 : #pragma warning(disable:4244)   // '=' : conversion from 'unsigned long' to 'unsigned short', possible loss of data
; 1434 : #endif
; 1435 : 			if (DoEndianSwap())

	call	?DoEndianSwap@BitStream@RakNet@@SA_NXZ	; RakNet::BitStream::DoEndianSwap
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@Read@2

; 1436 : 			{
; 1437 : 				unsigned char output[sizeof(templateType)];
; 1438 : 				if (ReadBits( ( unsigned char* ) output, sizeof(templateType) * 8, true ))

	push	1
	push	32					; 00000020H
	lea	eax, DWORD PTR _output$209948[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEI_N@Z ; RakNet::BitStream::ReadBits
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Read@2

; 1439 : 				{
; 1440 : 					ReverseBytes(output, (unsigned char*)&outTemplateVar, sizeof(templateType));

	push	4
	mov	eax, DWORD PTR _outTemplateVar$[ebp]
	push	eax
	lea	ecx, DWORD PTR _output$209948[ebp]
	push	ecx
	call	?ReverseBytes@BitStream@RakNet@@SAXPAE0I@Z ; RakNet::BitStream::ReverseBytes
	add	esp, 12					; 0000000cH

; 1441 : 					return true;

	mov	al, 1
	jmp	SHORT $LN6@Read@2
$LN2@Read@2:

; 1442 : 				}
; 1443 : 				return false;

	xor	al, al
	jmp	SHORT $LN6@Read@2

; 1444 : 			}
; 1445 : 			else

	jmp	SHORT $LN6@Read@2
$LN3@Read@2:

; 1446 : #endif
; 1447 : 				return ReadBits( ( unsigned char* ) & outTemplateVar, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	mov	eax, DWORD PTR _outTemplateVar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEI_N@Z ; RakNet::BitStream::ReadBits
$LN6@Read@2:

; 1448 : 		}
; 1449 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Read@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN10@Read@2:
	DD	1
	DD	$LN9@Read@2
$LN9@Read@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN8@Read@2
$LN8@Read@2:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
??$Read@I@BitStream@RakNet@@QAE_NAAI@Z ENDP		; RakNet::BitStream::Read<unsigned int>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$Read@M@BitStream@RakNet@@QAE_NAAM@Z
_TEXT	SEGMENT
_output$209965 = -20					; size = 4
_this$ = -8						; size = 4
_outTemplateVar$ = 8					; size = 4
??$Read@M@BitStream@RakNet@@QAE_NAAM@Z PROC		; RakNet::BitStream::Read<float>, COMDAT
; _this$ = ecx

; 1423 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1424 : #ifdef _MSC_VER
; 1425 : #pragma warning(disable:4127)   // conditional expression is constant
; 1426 : #endif
; 1427 : 		if (sizeof(outTemplateVar)==1)

	xor	eax, eax
	je	SHORT $LN5@Read@3

; 1428 : 			return ReadBits( ( unsigned char* ) &outTemplateVar, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	mov	eax, DWORD PTR _outTemplateVar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEI_N@Z ; RakNet::BitStream::ReadBits
	jmp	SHORT $LN6@Read@3

; 1429 : 		else

	jmp	SHORT $LN6@Read@3
$LN5@Read@3:

; 1430 : 		{
; 1431 : #ifndef __BITSTREAM_NATIVE_END
; 1432 : #ifdef _MSC_VER
; 1433 : #pragma warning(disable:4244)   // '=' : conversion from 'unsigned long' to 'unsigned short', possible loss of data
; 1434 : #endif
; 1435 : 			if (DoEndianSwap())

	call	?DoEndianSwap@BitStream@RakNet@@SA_NXZ	; RakNet::BitStream::DoEndianSwap
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@Read@3

; 1436 : 			{
; 1437 : 				unsigned char output[sizeof(templateType)];
; 1438 : 				if (ReadBits( ( unsigned char* ) output, sizeof(templateType) * 8, true ))

	push	1
	push	32					; 00000020H
	lea	eax, DWORD PTR _output$209965[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEI_N@Z ; RakNet::BitStream::ReadBits
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Read@3

; 1439 : 				{
; 1440 : 					ReverseBytes(output, (unsigned char*)&outTemplateVar, sizeof(templateType));

	push	4
	mov	eax, DWORD PTR _outTemplateVar$[ebp]
	push	eax
	lea	ecx, DWORD PTR _output$209965[ebp]
	push	ecx
	call	?ReverseBytes@BitStream@RakNet@@SAXPAE0I@Z ; RakNet::BitStream::ReverseBytes
	add	esp, 12					; 0000000cH

; 1441 : 					return true;

	mov	al, 1
	jmp	SHORT $LN6@Read@3
$LN2@Read@3:

; 1442 : 				}
; 1443 : 				return false;

	xor	al, al
	jmp	SHORT $LN6@Read@3

; 1444 : 			}
; 1445 : 			else

	jmp	SHORT $LN6@Read@3
$LN3@Read@3:

; 1446 : #endif
; 1447 : 				return ReadBits( ( unsigned char* ) & outTemplateVar, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	mov	eax, DWORD PTR _outTemplateVar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEI_N@Z ; RakNet::BitStream::ReadBits
$LN6@Read@3:

; 1448 : 		}
; 1449 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Read@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN10@Read@3:
	DD	1
	DD	$LN9@Read@3
$LN9@Read@3:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN8@Read@3
$LN8@Read@3:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
??$Read@M@BitStream@RakNet@@QAE_NAAM@Z ENDP		; RakNet::BitStream::Read<float>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$Read@H@BitStream@RakNet@@QAE_NAAH@Z
_TEXT	SEGMENT
_output$209982 = -20					; size = 4
_this$ = -8						; size = 4
_outTemplateVar$ = 8					; size = 4
??$Read@H@BitStream@RakNet@@QAE_NAAH@Z PROC		; RakNet::BitStream::Read<int>, COMDAT
; _this$ = ecx

; 1423 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1424 : #ifdef _MSC_VER
; 1425 : #pragma warning(disable:4127)   // conditional expression is constant
; 1426 : #endif
; 1427 : 		if (sizeof(outTemplateVar)==1)

	xor	eax, eax
	je	SHORT $LN5@Read@4

; 1428 : 			return ReadBits( ( unsigned char* ) &outTemplateVar, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	mov	eax, DWORD PTR _outTemplateVar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEI_N@Z ; RakNet::BitStream::ReadBits
	jmp	SHORT $LN6@Read@4

; 1429 : 		else

	jmp	SHORT $LN6@Read@4
$LN5@Read@4:

; 1430 : 		{
; 1431 : #ifndef __BITSTREAM_NATIVE_END
; 1432 : #ifdef _MSC_VER
; 1433 : #pragma warning(disable:4244)   // '=' : conversion from 'unsigned long' to 'unsigned short', possible loss of data
; 1434 : #endif
; 1435 : 			if (DoEndianSwap())

	call	?DoEndianSwap@BitStream@RakNet@@SA_NXZ	; RakNet::BitStream::DoEndianSwap
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@Read@4

; 1436 : 			{
; 1437 : 				unsigned char output[sizeof(templateType)];
; 1438 : 				if (ReadBits( ( unsigned char* ) output, sizeof(templateType) * 8, true ))

	push	1
	push	32					; 00000020H
	lea	eax, DWORD PTR _output$209982[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEI_N@Z ; RakNet::BitStream::ReadBits
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Read@4

; 1439 : 				{
; 1440 : 					ReverseBytes(output, (unsigned char*)&outTemplateVar, sizeof(templateType));

	push	4
	mov	eax, DWORD PTR _outTemplateVar$[ebp]
	push	eax
	lea	ecx, DWORD PTR _output$209982[ebp]
	push	ecx
	call	?ReverseBytes@BitStream@RakNet@@SAXPAE0I@Z ; RakNet::BitStream::ReverseBytes
	add	esp, 12					; 0000000cH

; 1441 : 					return true;

	mov	al, 1
	jmp	SHORT $LN6@Read@4
$LN2@Read@4:

; 1442 : 				}
; 1443 : 				return false;

	xor	al, al
	jmp	SHORT $LN6@Read@4

; 1444 : 			}
; 1445 : 			else

	jmp	SHORT $LN6@Read@4
$LN3@Read@4:

; 1446 : #endif
; 1447 : 				return ReadBits( ( unsigned char* ) & outTemplateVar, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	mov	eax, DWORD PTR _outTemplateVar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEI_N@Z ; RakNet::BitStream::ReadBits
$LN6@Read@4:

; 1448 : 		}
; 1449 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Read@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN10@Read@4:
	DD	1
	DD	$LN9@Read@4
$LN9@Read@4:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN8@Read@4
$LN8@Read@4:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
??$Read@H@BitStream@RakNet@@QAE_NAAH@Z ENDP		; RakNet::BitStream::Read<int>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$Read@J@BitStream@RakNet@@QAE_NAAJ@Z
_TEXT	SEGMENT
_output$209999 = -20					; size = 4
_this$ = -8						; size = 4
_outTemplateVar$ = 8					; size = 4
??$Read@J@BitStream@RakNet@@QAE_NAAJ@Z PROC		; RakNet::BitStream::Read<long>, COMDAT
; _this$ = ecx

; 1423 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1424 : #ifdef _MSC_VER
; 1425 : #pragma warning(disable:4127)   // conditional expression is constant
; 1426 : #endif
; 1427 : 		if (sizeof(outTemplateVar)==1)

	xor	eax, eax
	je	SHORT $LN5@Read@5

; 1428 : 			return ReadBits( ( unsigned char* ) &outTemplateVar, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	mov	eax, DWORD PTR _outTemplateVar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEI_N@Z ; RakNet::BitStream::ReadBits
	jmp	SHORT $LN6@Read@5

; 1429 : 		else

	jmp	SHORT $LN6@Read@5
$LN5@Read@5:

; 1430 : 		{
; 1431 : #ifndef __BITSTREAM_NATIVE_END
; 1432 : #ifdef _MSC_VER
; 1433 : #pragma warning(disable:4244)   // '=' : conversion from 'unsigned long' to 'unsigned short', possible loss of data
; 1434 : #endif
; 1435 : 			if (DoEndianSwap())

	call	?DoEndianSwap@BitStream@RakNet@@SA_NXZ	; RakNet::BitStream::DoEndianSwap
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@Read@5

; 1436 : 			{
; 1437 : 				unsigned char output[sizeof(templateType)];
; 1438 : 				if (ReadBits( ( unsigned char* ) output, sizeof(templateType) * 8, true ))

	push	1
	push	32					; 00000020H
	lea	eax, DWORD PTR _output$209999[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEI_N@Z ; RakNet::BitStream::ReadBits
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Read@5

; 1439 : 				{
; 1440 : 					ReverseBytes(output, (unsigned char*)&outTemplateVar, sizeof(templateType));

	push	4
	mov	eax, DWORD PTR _outTemplateVar$[ebp]
	push	eax
	lea	ecx, DWORD PTR _output$209999[ebp]
	push	ecx
	call	?ReverseBytes@BitStream@RakNet@@SAXPAE0I@Z ; RakNet::BitStream::ReverseBytes
	add	esp, 12					; 0000000cH

; 1441 : 					return true;

	mov	al, 1
	jmp	SHORT $LN6@Read@5
$LN2@Read@5:

; 1442 : 				}
; 1443 : 				return false;

	xor	al, al
	jmp	SHORT $LN6@Read@5

; 1444 : 			}
; 1445 : 			else

	jmp	SHORT $LN6@Read@5
$LN3@Read@5:

; 1446 : #endif
; 1447 : 				return ReadBits( ( unsigned char* ) & outTemplateVar, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	mov	eax, DWORD PTR _outTemplateVar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEI_N@Z ; RakNet::BitStream::ReadBits
$LN6@Read@5:

; 1448 : 		}
; 1449 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Read@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN10@Read@5:
	DD	1
	DD	$LN9@Read@5
$LN9@Read@5:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN8@Read@5
$LN8@Read@5:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
??$Read@J@BitStream@RakNet@@QAE_NAAJ@Z ENDP		; RakNet::BitStream::Read<long>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$Read@UVector3@@@BitStream@RakNet@@QAE_NAAUVector3@@@Z
_TEXT	SEGMENT
_output$210016 = -32					; size = 12
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_outTemplateVar$ = 8					; size = 4
??$Read@UVector3@@@BitStream@RakNet@@QAE_NAAUVector3@@@Z PROC ; RakNet::BitStream::Read<Vector3>, COMDAT
; _this$ = ecx

; 1423 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1424 : #ifdef _MSC_VER
; 1425 : #pragma warning(disable:4127)   // conditional expression is constant
; 1426 : #endif
; 1427 : 		if (sizeof(outTemplateVar)==1)

	xor	eax, eax
	je	SHORT $LN5@Read@6

; 1428 : 			return ReadBits( ( unsigned char* ) &outTemplateVar, sizeof(templateType) * 8, true );

	push	1
	push	96					; 00000060H
	mov	eax, DWORD PTR _outTemplateVar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEI_N@Z ; RakNet::BitStream::ReadBits
	jmp	SHORT $LN6@Read@6

; 1429 : 		else

	jmp	SHORT $LN6@Read@6
$LN5@Read@6:

; 1430 : 		{
; 1431 : #ifndef __BITSTREAM_NATIVE_END
; 1432 : #ifdef _MSC_VER
; 1433 : #pragma warning(disable:4244)   // '=' : conversion from 'unsigned long' to 'unsigned short', possible loss of data
; 1434 : #endif
; 1435 : 			if (DoEndianSwap())

	call	?DoEndianSwap@BitStream@RakNet@@SA_NXZ	; RakNet::BitStream::DoEndianSwap
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@Read@6

; 1436 : 			{
; 1437 : 				unsigned char output[sizeof(templateType)];
; 1438 : 				if (ReadBits( ( unsigned char* ) output, sizeof(templateType) * 8, true ))

	push	1
	push	96					; 00000060H
	lea	eax, DWORD PTR _output$210016[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEI_N@Z ; RakNet::BitStream::ReadBits
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Read@6

; 1439 : 				{
; 1440 : 					ReverseBytes(output, (unsigned char*)&outTemplateVar, sizeof(templateType));

	push	12					; 0000000cH
	mov	eax, DWORD PTR _outTemplateVar$[ebp]
	push	eax
	lea	ecx, DWORD PTR _output$210016[ebp]
	push	ecx
	call	?ReverseBytes@BitStream@RakNet@@SAXPAE0I@Z ; RakNet::BitStream::ReverseBytes
	add	esp, 12					; 0000000cH

; 1441 : 					return true;

	mov	al, 1
	jmp	SHORT $LN6@Read@6
$LN2@Read@6:

; 1442 : 				}
; 1443 : 				return false;

	xor	al, al
	jmp	SHORT $LN6@Read@6

; 1444 : 			}
; 1445 : 			else

	jmp	SHORT $LN6@Read@6
$LN3@Read@6:

; 1446 : #endif
; 1447 : 				return ReadBits( ( unsigned char* ) & outTemplateVar, sizeof(templateType) * 8, true );

	push	1
	push	96					; 00000060H
	mov	eax, DWORD PTR _outTemplateVar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEI_N@Z ; RakNet::BitStream::ReadBits
$LN6@Read@6:

; 1448 : 		}
; 1449 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Read@6
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN10@Read@6:
	DD	1
	DD	$LN9@Read@6
$LN9@Read@6:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN8@Read@6
$LN8@Read@6:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
??$Read@UVector3@@@BitStream@RakNet@@QAE_NAAUVector3@@@Z ENDP ; RakNet::BitStream::Read<Vector3>
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\client\game\common.h
_TEXT	ENDS
;	COMDAT ??0Vector3@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Vector3@@QAE@XZ PROC					; Vector3::Vector3, COMDAT
; _this$ = ecx

; 34   : 	Vector3()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 35   : 	{
; 36   : 		X = Y = Z = 0;

	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax+8]
	mov	ecx, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [edx]

; 37   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0Vector3@@QAE@XZ ENDP					; Vector3::Vector3
_TEXT	ENDS
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\client\game\ctext.h
;	COMDAT ?SetText@CText@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_szText$ = 8						; size = 4
?SetText@CText@@QAEXPBD@Z PROC				; CText::SetText, COMDAT
; _this$ = ecx

; 29   : 	void SetText(const char * szText) { m_szText = szText; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _szText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetText@CText@@QAEXPBD@Z ENDP				; CText::SetText
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetPosition@CText@@QAEXMM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_fPosX$ = 8						; size = 4
_fPosY$ = 12						; size = 4
?SetPosition@CText@@QAEXMM@Z PROC			; CText::SetPosition, COMDAT
; _this$ = ecx

; 30   : 	void SetPosition(float fPosX, float fPosY) { m_fRelativePosX = fPosX; m_fRelativePosY = fPosY; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _fPosX$[ebp]
	fstp	DWORD PTR [eax+40]
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _fPosY$[ebp]
	fstp	DWORD PTR [eax+44]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?SetPosition@CText@@QAEXMM@Z ENDP			; CText::SetPosition
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetColor@CText@@QAEXK@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_color$ = 8						; size = 4
?SetColor@CText@@QAEXK@Z PROC				; CText::SetColor, COMDAT
; _this$ = ecx

; 31   : 	void SetColor(DWORD color) { m_dwColor = color; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _color$[ebp]
	mov	DWORD PTR [eax+48], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetColor@CText@@QAEXK@Z ENDP				; CText::SetColor
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?Show@CText@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_show$ = 8						; size = 1
?Show@CText@@QAEX_N@Z PROC				; CText::Show, COMDAT
; _this$ = ecx

; 34   : 	void Show(bool show) { m_bShow = show; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _show$[ebp]
	mov	BYTE PTR [eax+52], cl
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?Show@CText@@QAEX_N@Z ENDP				; CText::Show
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??0CPlayerPed@@QAE@XZ:PROC			; CPlayerPed::CPlayerPed
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT xdata$x
; File d:\vice-players-master\client\game\cgame.h
xdata$x	SEGMENT
__unwindtable$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ$0
__ehfuncinfo$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
_TEXT	SEGMENT
tv74 = -244						; size = 4
$T210784 = -236						; size = 4
$T210785 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ PROC		; CGame::FindPlayerPed, COMDAT
; _this$ = ecx

; 101  : 	CPlayerPed  *FindPlayerPed() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 102  : 		if(m_pInternalPlayer==NULL)	m_pInternalPlayer = new CPlayerPed();

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN1@FindPlayer
	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T210785[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T210785[ebp], 0
	je	SHORT $LN4@FindPlayer
	mov	ecx, DWORD PTR $T210785[ebp]
	call	??0CPlayerPed@@QAE@XZ			; CPlayerPed::CPlayerPed
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN5@FindPlayer
$LN4@FindPlayer:
	mov	DWORD PTR tv74[ebp], 0
$LN5@FindPlayer:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T210784[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T210784[ebp]
	mov	DWORD PTR [ecx+4], edx
$LN1@FindPlayer:

; 103  : 		return m_pInternalPlayer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 104  : 	};

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ$0:
	mov	eax, DWORD PTR $T210785[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ENDP		; CGame::FindPlayerPed
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetCamera@CGame@@QAEPAVCCamera@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetCamera@CGame@@QAEPAVCCamera@@XZ PROC		; CGame::GetCamera, COMDAT
; _this$ = ecx

; 106  : 	CCamera     *GetCamera() {	return m_pInternalCamera; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCamera@CGame@@QAEPAVCCamera@@XZ ENDP		; CGame::GetCamera
_TEXT	ENDS
PUBLIC	?IsNetworkOrder@BitStream@RakNet@@SA_NXZ	; RakNet::BitStream::IsNetworkOrder
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\raknet\bitstream.h
;	COMDAT ?DoEndianSwap@BitStream@RakNet@@SA_NXZ
_TEXT	SEGMENT
?DoEndianSwap@BitStream@RakNet@@SA_NXZ PROC		; RakNet::BitStream::DoEndianSwap, COMDAT

; 863  : 		inline static bool DoEndianSwap(void) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 864  : #ifndef __BITSTREAM_NATIVE_END
; 865  : 			return IsNetworkOrder()==false;

	call	?IsNetworkOrder@BitStream@RakNet@@SA_NXZ ; RakNet::BitStream::IsNetworkOrder
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1

; 866  : #else
; 867  : 			return false;
; 868  : #endif
; 869  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DoEndianSwap@BitStream@RakNet@@SA_NXZ ENDP		; RakNet::BitStream::DoEndianSwap
_TEXT	ENDS
PUBLIC	?r@?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@4_NB ; `RakNet::BitStream::IsNetworkOrder'::`2'::r
PUBLIC	??_B?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@51 ; `RakNet::BitStream::IsNetworkOrder'::`2'::`local static guard'
EXTRN	?IsNetworkOrderInternal@BitStream@RakNet@@SA_NXZ:PROC ; RakNet::BitStream::IsNetworkOrderInternal
;	COMDAT ?r@?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@4_NB
_BSS	SEGMENT
?r@?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@4_NB DB 01H DUP (?) ; `RakNet::BitStream::IsNetworkOrder'::`2'::r
_BSS	ENDS
;	COMDAT ??_B?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@51
_BSS	SEGMENT
??_B?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@51 DD 01H DUP (?) ; `RakNet::BitStream::IsNetworkOrder'::`2'::`local static guard'
_BSS	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?IsNetworkOrder@BitStream@RakNet@@SA_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?IsNetworkOrder@BitStream@RakNet@@SA_NXZ$0
__ehfuncinfo$?IsNetworkOrder@BitStream@RakNet@@SA_NXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?IsNetworkOrder@BitStream@RakNet@@SA_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?IsNetworkOrder@BitStream@RakNet@@SA_NXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?IsNetworkOrder@BitStream@RakNet@@SA_NXZ PROC		; RakNet::BitStream::IsNetworkOrder, COMDAT

; 874  : 		inline static bool IsNetworkOrder(void) {static const bool r = IsNetworkOrderInternal(); return r;}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?IsNetworkOrder@BitStream@RakNet@@SA_NXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	eax, DWORD PTR ??_B?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@51
	and	eax, 1
	jne	SHORT $LN1@IsNetworkO
	mov	eax, DWORD PTR ??_B?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@51
	or	eax, 1
	mov	DWORD PTR ??_B?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@51, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	?IsNetworkOrderInternal@BitStream@RakNet@@SA_NXZ ; RakNet::BitStream::IsNetworkOrderInternal
	mov	BYTE PTR ?r@?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@4_NB, al ; `RakNet::BitStream::IsNetworkOrder'::`2'::r
	mov	DWORD PTR __$EHRec$[ebp+8], -1
$LN1@IsNetworkO:
	mov	al, BYTE PTR ?r@?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@4_NB ; `RakNet::BitStream::IsNetworkOrder'::`2'::r
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?IsNetworkOrder@BitStream@RakNet@@SA_NXZ$0:
	mov	eax, DWORD PTR ??_B?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@51
	and	eax, -2					; fffffffeH
	mov	DWORD PTR ??_B?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@51, eax
	ret	0
__ehhandler$?IsNetworkOrder@BitStream@RakNet@@SA_NXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?IsNetworkOrder@BitStream@RakNet@@SA_NXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?IsNetworkOrder@BitStream@RakNet@@SA_NXZ ENDP		; RakNet::BitStream::IsNetworkOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$Read@_N@BitStream@RakNet@@QAE_NAA_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_outTemplateVar$ = 8					; size = 4
??$Read@_N@BitStream@RakNet@@QAE_NAA_N@Z PROC		; RakNet::BitStream::Read<bool>, COMDAT
; _this$ = ecx

; 1485 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1486 : 		if ( readOffset + 1 > numberOfBitsUsed )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx]
	jbe	SHORT $LN3@Read@7

; 1487 : 			return false;

	xor	al, al
	jmp	SHORT $LN4@Read@7
$LN3@Read@7:

; 1488 : 
; 1489 : 		if ( data[ readOffset >> 3 ] & ( 0x80 >> ( readOffset & 7 ) ) )   // Is it faster to just write it out here?

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	shr	ecx, 3
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	movzx	edx, BYTE PTR [eax+ecx]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	and	ecx, 7
	mov	eax, 128				; 00000080H
	sar	eax, cl
	and	edx, eax
	je	SHORT $LN2@Read@7

; 1490 : 			outTemplateVar = true;

	mov	eax, DWORD PTR _outTemplateVar$[ebp]
	mov	BYTE PTR [eax], 1

; 1491 : 		else

	jmp	SHORT $LN1@Read@7
$LN2@Read@7:

; 1492 : 			outTemplateVar = false;

	mov	eax, DWORD PTR _outTemplateVar$[ebp]
	mov	BYTE PTR [eax], 0
$LN1@Read@7:

; 1493 : 
; 1494 : 		// Has to be on a different line for Mac
; 1495 : 		readOffset++;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 1496 : 
; 1497 : 		return true;

	mov	al, 1
$LN4@Read@7:

; 1498 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??$Read@_N@BitStream@RakNet@@QAE_NAA_N@Z ENDP		; RakNet::BitStream::Read<bool>
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\client\net\clocalplayer.h
_TEXT	ENDS
;	COMDAT ?GetPlayerPed@CLocalPlayer@@QAEPAVCPlayerPed@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetPlayerPed@CLocalPlayer@@QAEPAVCPlayerPed@@XZ PROC	; CLocalPlayer::GetPlayerPed, COMDAT
; _this$ = ecx

; 104  : 	CPlayerPed * GetPlayerPed() { return m_pPlayerPed; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPlayerPed@CLocalPlayer@@QAEPAVCPlayerPed@@XZ ENDP	; CLocalPlayer::GetPlayerPed
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\client\net\cremoteplayer.h
_TEXT	ENDS
;	COMDAT ?GetPlayerPed@CRemotePlayer@@QAEPAVCPlayerPed@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetPlayerPed@CRemotePlayer@@QAEPAVCPlayerPed@@XZ PROC	; CRemotePlayer::GetPlayerPed, COMDAT
; _this$ = ecx

; 80   : 	CPlayerPed * GetPlayerPed() { return m_pPlayerPed; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPlayerPed@CRemotePlayer@@QAEPAVCPlayerPed@@XZ ENDP	; CRemotePlayer::GetPlayerPed
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\client\net\cplayermanager.h
_TEXT	ENDS
;	COMDAT ?GetLocalPlayerName@CPlayerManager@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetLocalPlayerName@CPlayerManager@@QAEPADXZ PROC	; CPlayerManager::GetLocalPlayerName, COMDAT
; _this$ = ecx

; 36   : 	char * GetLocalPlayerName() { return m_szLocalPlayerName; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 408				; 00000198H
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLocalPlayerName@CPlayerManager@@QAEPADXZ ENDP	; CPlayerManager::GetLocalPlayerName
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetLocalPlayer@CPlayerManager@@QAEPAVCLocalPlayer@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetLocalPlayer@CPlayerManager@@QAEPAVCLocalPlayer@@XZ PROC ; CPlayerManager::GetLocalPlayer, COMDAT
; _this$ = ecx

; 39   : 	CLocalPlayer * GetLocalPlayer() { return m_pLocalPlayer; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+200]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLocalPlayer@CPlayerManager@@QAEPAVCLocalPlayer@@XZ ENDP ; CPlayerManager::GetLocalPlayer
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetAt@CPlayerManager@@QAEPAVCRemotePlayer@@E@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_playerID$ = 8						; size = 1
?GetAt@CPlayerManager@@QAEPAVCRemotePlayer@@E@Z PROC	; CPlayerManager::GetAt, COMDAT
; _this$ = ecx

; 45   : 	CRemotePlayer* GetAt(EntityId playerID) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 46   : 		if(playerID > MAX_PLAYERS) { return NULL; }

	movzx	eax, BYTE PTR _playerID$[ebp]
	cmp	eax, 50					; 00000032H
	jle	SHORT $LN1@GetAt
	xor	eax, eax
	jmp	SHORT $LN2@GetAt
$LN1@GetAt:

; 47   : 		return m_pPlayers[playerID];

	movzx	eax, BYTE PTR _playerID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+208]
$LN2@GetAt:

; 48   : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?GetAt@CPlayerManager@@QAEPAVCRemotePlayer@@E@Z ENDP	; CPlayerManager::GetAt
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetSlotState@CPlayerManager@@QAEHE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_playerID$ = 8						; size = 1
?GetSlotState@CPlayerManager@@QAEHE@Z PROC		; CPlayerManager::GetSlotState, COMDAT
; _this$ = ecx

; 50   : 	BOOL GetSlotState(EntityId playerID) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 51   : 		if(playerID > MAX_PLAYERS) { return FALSE; }

	movzx	eax, BYTE PTR _playerID$[ebp]
	cmp	eax, 50					; 00000032H
	jle	SHORT $LN1@GetSlotSta
	xor	eax, eax
	jmp	SHORT $LN2@GetSlotSta
$LN1@GetSlotSta:

; 52   : 		return m_bPlayerSlotState[playerID];

	movzx	eax, BYTE PTR _playerID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4]
$LN2@GetSlotSta:

; 53   : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?GetSlotState@CPlayerManager@@QAEHE@Z ENDP		; CPlayerManager::GetSlotState
_TEXT	ENDS
EXTRN	_strcpy:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetLocalPlayerID@CPlayerManager@@QAEXE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_playerID$ = 8						; size = 1
?SetLocalPlayerID@CPlayerManager@@QAEXE@Z PROC		; CPlayerManager::SetLocalPlayerID, COMDAT
; _this$ = ecx

; 55   : 	void SetLocalPlayerID(EntityId playerID) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 56   : 		strcpy(m_szPlayerNames[playerID],m_szLocalPlayerName);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 408				; 00000198H
	push	eax
	movzx	ecx, BYTE PTR _playerID$[ebp]
	imul	ecx, 25					; 00000019H
	mov	edx, DWORD PTR _this$[ebp]
	lea	eax, DWORD PTR [edx+ecx+433]
	push	eax
	call	_strcpy
	add	esp, 8

; 57   : 		m_localPlayerID = playerID;

	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _playerID$[ebp]
	mov	BYTE PTR [eax+204], cl

; 58   : 	};

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetLocalPlayerID@CPlayerManager@@QAEXE@Z ENDP		; CPlayerManager::SetLocalPlayerID
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?UpdatePing@CPlayerManager@@QAEXEH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_playerID$ = 8						; size = 1
_iPing$ = 12						; size = 4
?UpdatePing@CPlayerManager@@QAEXEH@Z PROC		; CPlayerManager::UpdatePing, COMDAT
; _this$ = ecx

; 60   : 	void UpdatePing(EntityId playerID, int iPing) { 

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 61   : 		if(playerID == m_localPlayerID) {

	movzx	eax, BYTE PTR _playerID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+204]
	cmp	eax, edx
	jne	SHORT $LN2@UpdatePing

; 62   : 			m_iLocalPlayerPing = iPing;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _iPing$[ebp]
	mov	DWORD PTR [eax+1888], ecx

; 63   : 		} else {

	jmp	SHORT $LN3@UpdatePing
$LN2@UpdatePing:

; 64   : 			m_iPing[playerID] = iPing;

	movzx	eax, BYTE PTR _playerID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _iPing$[ebp]
	mov	DWORD PTR [ecx+eax*4+2092], edx
$LN3@UpdatePing:

; 65   : 		}
; 66   : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?UpdatePing@CPlayerManager@@QAEXEH@Z ENDP		; CPlayerManager::UpdatePing
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?UpdateScore@CPlayerManager@@QAEXEH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_playerID$ = 8						; size = 1
_iScore$ = 12						; size = 4
?UpdateScore@CPlayerManager@@QAEXEH@Z PROC		; CPlayerManager::UpdateScore, COMDAT
; _this$ = ecx

; 68   : 	void UpdateScore(EntityId playerID, int iScore) { 

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 69   : 		if(playerID == m_localPlayerID) {

	movzx	eax, BYTE PTR _playerID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+204]
	cmp	eax, edx
	jne	SHORT $LN2@UpdateScor@2

; 70   : 			m_iLocalPlayerScore = iScore;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _iScore$[ebp]
	mov	DWORD PTR [eax+1884], ecx

; 71   : 		} else {

	jmp	SHORT $LN3@UpdateScor@2
$LN2@UpdateScor@2:

; 72   : 			m_iScore[playerID] = iScore;

	movzx	eax, BYTE PTR _playerID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _iScore$[ebp]
	mov	DWORD PTR [ecx+eax*4+1892], edx
$LN3@UpdateScor@2:

; 73   : 		}
; 74   : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?UpdateScore@CPlayerManager@@QAEXEH@Z ENDP		; CPlayerManager::UpdateScore
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?UpdateIPAddress@CPlayerManager@@QAEXEK@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_playerID$ = 8						; size = 1
_ip$ = 12						; size = 4
?UpdateIPAddress@CPlayerManager@@QAEXEK@Z PROC		; CPlayerManager::UpdateIPAddress, COMDAT
; _this$ = ecx

; 76   : 	void UpdateIPAddress(EntityId playerID, ULONG ip) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 77   : 		m_ulIPAddress[playerID] = ip;

	movzx	eax, BYTE PTR _playerID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _ip$[ebp]
	mov	DWORD PTR [ecx+eax*4+1684], edx

; 78   : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
?UpdateIPAddress@CPlayerManager@@QAEXEK@Z ENDP		; CPlayerManager::UpdateIPAddress
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetLocalPlayerID@CPlayerManager@@QAEEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetLocalPlayerID@CPlayerManager@@QAEEXZ PROC		; CPlayerManager::GetLocalPlayerID, COMDAT
; _this$ = ecx

; 84   : 	EntityId GetLocalPlayerID() { return m_localPlayerID; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+204]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLocalPlayerID@CPlayerManager@@QAEEXZ ENDP		; CPlayerManager::GetLocalPlayerID
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\client\net\cvehiclemanager.h
_TEXT	ENDS
;	COMDAT ?GetAt@CVehicleManager@@QAEPAVCVehicle@@E@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_vehicleID$ = 8						; size = 1
?GetAt@CVehicleManager@@QAEPAVCVehicle@@E@Z PROC	; CVehicleManager::GetAt, COMDAT
; _this$ = ecx

; 45   : 	CVehicle* GetAt(EntityId vehicleID) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 46   : 		if(vehicleID > MAX_VEHICLES) { return NULL; }

	movzx	eax, BYTE PTR _vehicleID$[ebp]
	cmp	eax, 200				; 000000c8H
	jle	SHORT $LN1@GetAt@2
	xor	eax, eax
	jmp	SHORT $LN2@GetAt@2
$LN1@GetAt@2:

; 47   : 		return m_pVehicles[vehicleID];

	movzx	eax, BYTE PTR _vehicleID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+800]
$LN2@GetAt@2:

; 48   : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?GetAt@CVehicleManager@@QAEPAVCVehicle@@E@Z ENDP	; CVehicleManager::GetAt
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetSlotState@CVehicleManager@@QAEHE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_vehicleID$ = 8						; size = 1
?GetSlotState@CVehicleManager@@QAEHE@Z PROC		; CVehicleManager::GetSlotState, COMDAT
; _this$ = ecx

; 50   : 	BOOL GetSlotState(EntityId vehicleID) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 51   : 		if(vehicleID > MAX_VEHICLES) { return FALSE; }

	movzx	eax, BYTE PTR _vehicleID$[ebp]
	cmp	eax, 200				; 000000c8H
	jle	SHORT $LN1@GetSlotSta@2
	xor	eax, eax
	jmp	SHORT $LN2@GetSlotSta@2
$LN1@GetSlotSta@2:

; 52   : 		return m_bVehicleSlotState[vehicleID];

	movzx	eax, BYTE PTR _vehicleID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4]
$LN2@GetSlotSta@2:

; 53   : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?GetSlotState@CVehicleManager@@QAEHE@Z ENDP		; CVehicleManager::GetSlotState
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\client\net\ctextmanager.h
_TEXT	ENDS
;	COMDAT ?GetAt@CTextManager@@QAEPAVCText@@E@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_TextID$ = 8						; size = 1
?GetAt@CTextManager@@QAEPAVCText@@E@Z PROC		; CTextManager::GetAt, COMDAT
; _this$ = ecx

; 25   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 26   : 		if(TextID > MAX_TEXTS) { return NULL; }

	movzx	eax, BYTE PTR _TextID$[ebp]
	cmp	eax, 128				; 00000080H
	jle	SHORT $LN1@GetAt@3
	xor	eax, eax
	jmp	SHORT $LN2@GetAt@3
$LN1@GetAt@3:

; 27   : 		return m_pTexts[TextID];

	movzx	eax, BYTE PTR _TextID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+512]
$LN2@GetAt@3:

; 28   : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?GetAt@CTextManager@@QAEPAVCText@@E@Z ENDP		; CTextManager::GetAt
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetSlotState@CTextManager@@QAEHE@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_TextID$ = 8						; size = 1
?GetSlotState@CTextManager@@QAEHE@Z PROC		; CTextManager::GetSlotState, COMDAT
; _this$ = ecx

; 31   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 32   : 		if(TextID > MAX_TEXTS) { return FALSE; }

	movzx	eax, BYTE PTR _TextID$[ebp]
	cmp	eax, 128				; 00000080H
	jle	SHORT $LN1@GetSlotSta@3
	xor	eax, eax
	jmp	SHORT $LN2@GetSlotSta@3
$LN1@GetSlotSta@3:

; 33   : 		return m_bTextSlotState[TextID];

	movzx	eax, BYTE PTR _TextID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4]
$LN2@GetSlotSta@3:

; 34   : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?GetSlotState@CTextManager@@QAEHE@Z ENDP		; CTextManager::GetSlotState
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\client\net\cnetworkmanager.h
_TEXT	ENDS
;	COMDAT ?SetGameState@CNetworkManager@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iGameState$ = 8					; size = 4
?SetGameState@CNetworkManager@@QAEXH@Z PROC		; CNetworkManager::SetGameState, COMDAT
; _this$ = ecx

; 77   : 	void SetGameState(int iGameState) { m_iGameState = iGameState; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _iGameState$[ebp]
	mov	DWORD PTR [eax+292], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetGameState@CNetworkManager@@QAEXH@Z ENDP		; CNetworkManager::SetGameState
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ PROC ; CNetworkManager::GetPlayerManager, COMDAT
; _this$ = ecx

; 79   : 	CPlayerManager * GetPlayerManager() { return m_pPlayerManager; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ENDP ; CNetworkManager::GetPlayerManager
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ PROC ; CNetworkManager::GetVehicleManager, COMDAT
; _this$ = ecx

; 80   : 	CVehicleManager * GetVehicleManager() { return m_pVehicleManager; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ ENDP ; CNetworkManager::GetVehicleManager
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetObjectManager@CNetworkManager@@QAEPAVCObjectManager@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetObjectManager@CNetworkManager@@QAEPAVCObjectManager@@XZ PROC ; CNetworkManager::GetObjectManager, COMDAT
; _this$ = ecx

; 81   : 	CObjectManager * GetObjectManager() { return m_pObjectManager; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetObjectManager@CNetworkManager@@QAEPAVCObjectManager@@XZ ENDP ; CNetworkManager::GetObjectManager
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetPickupManager@CNetworkManager@@QAEPAVCPickupManager@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetPickupManager@CNetworkManager@@QAEPAVCPickupManager@@XZ PROC ; CNetworkManager::GetPickupManager, COMDAT
; _this$ = ecx

; 82   : 	CPickupManager * GetPickupManager() { return m_pPickupManager; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+12]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPickupManager@CNetworkManager@@QAEPAVCPickupManager@@XZ ENDP ; CNetworkManager::GetPickupManager
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetTextManager@CNetworkManager@@QAEPAVCTextManager@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetTextManager@CNetworkManager@@QAEPAVCTextManager@@XZ PROC ; CNetworkManager::GetTextManager, COMDAT
; _this$ = ecx

; 83   : 	CTextManager * GetTextManager() { return m_pTextManager; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+16]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTextManager@CNetworkManager@@QAEPAVCTextManager@@XZ ENDP ; CNetworkManager::GetTextManager
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetCheckpoints@CNetworkManager@@QAEPAVCCheckpoints@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetCheckpoints@CNetworkManager@@QAEPAVCCheckpoints@@XZ PROC ; CNetworkManager::GetCheckpoints, COMDAT
; _this$ = ecx

; 84   : 	CCheckpoints * GetCheckpoints() { return m_pCheckpoints; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCheckpoints@CNetworkManager@@QAEPAVCCheckpoints@@XZ ENDP ; CNetworkManager::GetCheckpoints
_TEXT	ENDS
EXTRN	?m_pRPC4@CNetworkManager@@0PAVRPC4@RakNet@@A:DWORD ; CNetworkManager::m_pRPC4
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ PROC	; CNetworkManager::GetRPC4, COMDAT
; _this$ = ecx

; 86   : 	RPC4 * GetRPC4() { return m_pRPC4; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ?m_pRPC4@CNetworkManager@@0PAVRPC4@RakNet@@A ; CNetworkManager::m_pRPC4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ENDP	; CNetworkManager::GetRPC4
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetGameLogic@CNetworkManager@@QAEPAVCSpawnSelection@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetGameLogic@CNetworkManager@@QAEPAVCSpawnSelection@@XZ PROC ; CNetworkManager::GetGameLogic, COMDAT
; _this$ = ecx

; 87   : 	CSpawnSelection * GetGameLogic() { return m_pGameLogic; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+28]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGameLogic@CNetworkManager@@QAEPAVCSpawnSelection@@XZ ENDP ; CNetworkManager::GetGameLogic
_TEXT	ENDS
PUBLIC	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xstring
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
$T210860 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 651  : 		{	// construct from [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	ecx
	mov	ecx, esp
	mov	DWORD PTR $T210860[ebp], esp
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 652  : 		_Tidy();

	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 653  : 		assign(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 654  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0
__ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 905  : 		{	// destroy the string

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 906  : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 907  : 		}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ
__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = ecx

; 920  : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 921  : 		return (assign(_Ptr));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 922  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx

; 1650 : 		{	// return pointer to null-terminated nonmutable array

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1651 : 		return (_Myptr());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr

; 1652 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1665 : 		{	// return length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1666 : 		return (_Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]

; 1667 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
PUBLIC	??1_String_base@std@@QAE@XZ			; std::_String_base::~_String_base
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ PROC	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_String_base@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_String_val@DV?$allocator@D@std@@@std@@QAE@XZ ENDP	; std::_String_val<char,std::allocator<char> >::~_String_val<char,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??1_Container_base_secure@std@@QAE@XZ		; std::_Container_base_secure::~_Container_base_secure
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1_String_base@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_String_base@std@@QAE@XZ PROC			; std::_String_base::~_String_base, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Container_base_secure@std@@QAE@XZ	; std::_Container_base_secure::~_Container_base_secure
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_String_base@std@@QAE@XZ ENDP			; std::_String_base::~_String_base
_TEXT	ENDS
PUBLIC	?_Orphan_all@_Container_base_secure@std@@QBEXXZ	; std::_Container_base_secure::_Orphan_all
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
;	COMDAT ??1_Container_base_secure@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_Container_base_secure@std@@QAE@XZ PROC		; std::_Container_base_secure::~_Container_base_secure, COMDAT
; _this$ = ecx

; 113  : 		{	// destroy the container

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 114  : 		_Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base_secure@std@@QBEXXZ ; std::_Container_base_secure::_Orphan_all

; 115  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Container_base_secure@std@@QAE@XZ ENDP		; std::_Container_base_secure::~_Container_base_secure
_TEXT	ENDS
EXTRN	??1_Lockit@std@@QAE@XZ:PROC			; std::_Lockit::~_Lockit
EXTRN	??0_Lockit@std@@QAE@H@Z:PROC			; std::_Lockit::_Lockit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Orphan_all@_Container_base_secure@std@@QBEXXZ
_TEXT	SEGMENT
__Pnext$9026 = -32					; size = 4
__Lock$ = -20						; size = 4
_this$ = -8						; size = 4
?_Orphan_all@_Container_base_secure@std@@QBEXXZ PROC	; std::_Container_base_secure::_Orphan_all, COMDAT
; _this$ = ecx

; 217  : 	{	// orphan all iterators

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 218  : 	_Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit

; 219  : 	if (_Myfirstiter != _IGNORE_MYITERLIST)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], -3			; fffffffdH
	je	SHORT $LN4@Orphan_all

; 220  : 		{
; 221  : 		for (_Iterator_base **_Pnext = (_Iterator_base **)&_Myfirstiter;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __Pnext$9026[ebp], eax
	jmp	SHORT $LN3@Orphan_all
$LN2@Orphan_all:

; 222  : 			*_Pnext != 0; *_Pnext = (*_Pnext)->_Mynextiter)

	mov	eax, DWORD PTR __Pnext$9026[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pnext$9026[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax
$LN3@Orphan_all:
	mov	eax, DWORD PTR __Pnext$9026[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@Orphan_all

; 223  : 			(*_Pnext)->_Mycont = 0;

	mov	eax, DWORD PTR __Pnext$9026[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], 0
	jmp	SHORT $LN2@Orphan_all
$LN1@Orphan_all:

; 224  : 		*(_Iterator_base **)&_Myfirstiter = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN4@Orphan_all:

; 225  : 		}
; 226  : 	}

	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Orphan_all
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@Orphan_all:
	DD	1
	DD	$LN9@Orphan_all
$LN9@Orphan_all:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN8@Orphan_all
$LN8@Orphan_all:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?_Orphan_all@_Container_base_secure@std@@QBEXXZ ENDP	; std::_Container_base_secure::_Orphan_all
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1083 : 		{	// assign [_Ptr, <null>)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1084 : 		_DEBUG_POINTER(_Ptr);

	push	1084					; 0000043cH
	push	OFFSET ??_C@_1IM@EDGMOHHN@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH

; 1085 : 		return (assign(_Ptr, _Traits::length(_Ptr)));

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$char_traits@D@std@@SAIPBD@Z	; std::char_traits<char>::length
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1086 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT
__Ptr$196307 = -20					; size = 4
_this$ = -8						; size = 4
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 2148 : 		{	// initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2149 : 		if (!_Built)

	movzx	eax, BYTE PTR __Built$[ebp]
	test	eax, eax
	jne	SHORT $LN4@Tidy
	jmp	SHORT $LN3@Tidy
$LN4@Tidy:

; 2150 : 			;
; 2151 : 		else if (_BUF_SIZE <= _Myres)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 16			; 00000010H
	jb	SHORT $LN3@Tidy

; 2152 : 			{	// copy any leftovers to small buffer and deallocate
; 2153 : 			_Elem *_Ptr = _Bx._Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR __Ptr$196307[ebp], ecx

; 2154 : 			if (0 < _Newsize)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jbe	SHORT $LN1@Tidy

; 2155 : 				_Traits_helper::copy_s<_Traits>(_Bx._Buf, _BUF_SIZE, _Ptr, _Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$196307[ebp]
	push	ecx
	push	16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 8
	push	edx
	call	??$copy_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDI@Z ; std::_Traits_helper::copy_s<std::char_traits<char> >
	add	esp, 16					; 00000010H
$LN1@Tidy:

; 2156 : 			_Mybase::_Alval.deallocate(_Ptr, _Myres + 1);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$196307[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?deallocate@?$allocator@D@std@@QAEXPADI@Z ; std::allocator<char>::deallocate
$LN3@Tidy:

; 2157 : 			}
; 2158 : 		_Myres = _BUF_SIZE - 1;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 15			; 0000000fH

; 2159 : 		_Eos(_Newsize);

	mov	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos

; 2160 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IBEPBDXZ
_TEXT	SEGMENT
tv70 = -208						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 2174 : 		{	// determine current pointer to buffer for nonmutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2175 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 16			; 00000010H
	jb	SHORT $LN3@Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR tv70[ebp], edx
	jmp	SHORT $LN4@Myptr
$LN3@Myptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	mov	DWORD PTR tv70[ebp], eax
$LN4@Myptr:
	mov	eax, DWORD PTR tv70[ebp]

; 2176 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
PUBLIC	??0_String_base@std@@QAE@XZ			; std::_String_base::_String_base
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z PROC ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx

; 472  : 		{	// construct allocator from _Al

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_String_base@std@@QAE@XZ
	lea	eax, DWORD PTR __Al$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$allocator@D@std@@QAE@ABV01@@Z	; std::allocator<char>::allocator<char>

; 473  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 119  : 	allocator() _THROW0()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 120  : 		{	// construct default allocator (do nothing)
; 121  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 139  : 		{	// deallocate object at _Ptr, ignore size

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 140  : 		::operator delete(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 141  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
PUBLIC	??0_Container_base_secure@std@@QAE@XZ		; std::_Container_base_secure::_Container_base_secure
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_String_base@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_String_base@std@@QAE@XZ PROC			; std::_String_base::_String_base, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base_secure@std@@QAE@XZ	; std::_Container_base_secure::_Container_base_secure
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_String_base@std@@QAE@XZ ENDP			; std::_String_base::_String_base
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
_TEXT	ENDS
;	COMDAT ??0_Container_base_secure@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Container_base_secure@std@@QAE@XZ PROC		; std::_Container_base_secure::_Container_base_secure, COMDAT
; _this$ = ecx

; 99   : 		{	// construct childless container

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 100  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_base_secure@std@@QAE@XZ ENDP		; std::_Container_base_secure::_Container_base_secure
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1064 : 		{	// assign [_Ptr, _Ptr + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1065 : 
; 1066 :  #if _HAS_ITERATOR_DEBUGGING
; 1067 : 		if (_Count != 0)

	cmp	DWORD PTR __Count$[ebp], 0
	je	SHORT $LN3@assign

; 1068 : 			_DEBUG_POINTER(_Ptr);

	push	1068					; 0000042cH
	push	OFFSET ??_C@_1IM@EDGMOHHN@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z	; std::_Debug_pointer<char>
	add	esp, 12					; 0000000cH
$LN3@assign:

; 1069 :  #endif /* _HAS_ITERATOR_DEBUGGING */
; 1070 : 
; 1071 : 		if (_Inside(_Ptr))

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign

; 1072 : 			return (assign(*this, _Ptr - _Myptr(), _Count));	// substring

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR __Ptr$[ebp]
	sub	ecx, eax
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN4@assign
$LN2@assign:

; 1073 : 
; 1074 : 		if (_Grow(_Count))

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@assign

; 1075 : 			{	// make room and assign new stuff
; 1076 : 			_Traits_helper::copy_s<_Traits>(_Myptr(), _Myres, _Ptr, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	push	eax
	call	??$copy_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDI@Z ; std::_Traits_helper::copy_s<std::char_traits<char> >
	add	esp, 16					; 00000010H

; 1077 : 			_Eos(_Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@assign:

; 1078 : 			}
; 1079 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]
$LN4@assign:

; 1080 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
PUBLIC	?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT
?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB DD 0ffffffffH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Num$ = -20						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 1046 : 		{	// assign _Right [_Roff, _Roff + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1047 : 		if (_Right.size() < _Roff)

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	cmp	eax, DWORD PTR __Roff$[ebp]
	jae	SHORT $LN5@assign@2

; 1048 : 			_String_base::_Xran();	// _Roff off end

	call	?_Xran@_String_base@std@@SAXXZ		; std::_String_base::_Xran
$LN5@assign@2:

; 1049 : 		size_type _Num = _Right.size() - _Roff;

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	sub	eax, DWORD PTR __Roff$[ebp]
	mov	DWORD PTR __Num$[ebp], eax

; 1050 : 		if (_Count < _Num)

	mov	eax, DWORD PTR __Count$[ebp]
	cmp	eax, DWORD PTR __Num$[ebp]
	jae	SHORT $LN4@assign@2

; 1051 : 			_Num = _Count;	// trim _Num to size

	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Num$[ebp], eax
$LN4@assign@2:

; 1052 : 
; 1053 : 		if (this == &_Right)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR __Right$[ebp]
	jne	SHORT $LN3@assign@2

; 1054 : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

	mov	eax, DWORD PTR ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::npos
	push	eax
	mov	ecx, DWORD PTR __Roff$[ebp]
	add	ecx, DWORD PTR __Num$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	mov	edx, DWORD PTR __Roff$[ebp]
	push	edx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
	jmp	SHORT $LN2@assign@2
$LN3@assign@2:

; 1055 : 		else if (_Grow(_Num))

	push	0
	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@assign@2

; 1056 : 			{	// make room and assign new stuff
; 1057 : 			_Traits_helper::copy_s<_Traits>(_Myptr(), _Myres, _Right._Myptr() + _Roff, _Num);

	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Roff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	push	eax
	call	??$copy_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDI@Z ; std::_Traits_helper::copy_s<std::char_traits<char> >
	add	esp, 16					; 00000010H

; 1058 : 			_Eos(_Num);

	mov	eax, DWORD PTR __Num$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN2@assign@2:

; 1059 : 			}
; 1060 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 1061 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	??$move_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDI@Z ; std::_Traits_helper::move_s<std::char_traits<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Newsize$196290 = -20					; size = 4
_this$ = -8						; size = 4
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 1262 : 		{	// erase elements [_Off, _Off + _Count)

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1263 : 		if (_Mysize < _Off)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR __Off$[ebp]
	jae	SHORT $LN3@erase

; 1264 : 			_String_base::_Xran();	// _Off off end

	call	?_Xran@_String_base@std@@SAXXZ		; std::_String_base::_Xran
$LN3@erase:

; 1265 : 		if (_Mysize - _Off < _Count)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jae	SHORT $LN2@erase

; 1266 : 			_Count = _Mysize - _Off;	// trim _Count

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR __Count$[ebp], ecx
$LN2@erase:

; 1267 : 		if (0 < _Count)

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN1@erase

; 1268 : 			{	// move elements down
; 1269 : 			_Traits_helper::move_s<_Traits>(_Myptr() + _Off, _Myres - _Off, _Myptr() + _Off + _Count,
; 1270 : 				_Mysize - _Off - _Count);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, DWORD PTR __Off$[ebp]
	sub	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	sub	eax, DWORD PTR __Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Off$[ebp]
	push	eax
	call	??$move_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDI@Z ; std::_Traits_helper::move_s<std::char_traits<char> >
	add	esp, 16					; 00000010H

; 1271 : 			size_type _Newsize = _Mysize - _Count;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR __Newsize$196290[ebp], ecx

; 1272 : 			_Eos(_Newsize);

	mov	eax, DWORD PTR __Newsize$196290[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN1@erase:

; 1273 : 			}
; 1274 : 		return (*this);

	mov	eax, DWORD PTR _this$[ebp]

; 1275 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT
$T210925 = -209						; size = 1
_this$ = -8						; size = 4
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 2113 : 		{	// set new length and null terminator

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2114 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

	mov	BYTE PTR $T210925[ebp], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR [eax+24], ecx
	lea	edx, DWORD PTR $T210925[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	add	eax, DWORD PTR __Newsize$[ebp]
	push	eax
	call	?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
	add	esp, 8

; 2115 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\iosfwd
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 424  : 		{	// assign an element

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 425  : 		_Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 426  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT
tv80 = -208						; size = 4
_this$ = -8						; size = 4
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 2119 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2120 : 			if (max_size() < _Newsize)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN6@Grow

; 2121 : 			_String_base::_Xlen();	// result too long

	call	?_Xlen@_String_base@std@@SAXXZ		; std::_String_base::_Xlen
$LN6@Grow:

; 2122 : 		if (_Myres < _Newsize)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	ecx, DWORD PTR __Newsize$[ebp]
	jae	SHORT $LN5@Grow

; 2123 : 			_Copy(_Newsize, _Mysize);	// reallocate to grow

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR __Newsize$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
	jmp	SHORT $LN4@Grow
$LN5@Grow:

; 2124 : 		else if (_Trim && _Newsize < _BUF_SIZE)

	movzx	eax, BYTE PTR __Trim$[ebp]
	test	eax, eax
	je	SHORT $LN3@Grow
	cmp	DWORD PTR __Newsize$[ebp], 16		; 00000010H
	jae	SHORT $LN3@Grow

; 2125 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 2126 : 				_Newsize < _Mysize ? _Newsize : _Mysize);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newsize$[ebp]
	cmp	ecx, DWORD PTR [eax+24]
	jae	SHORT $LN9@Grow
	mov	edx, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR tv80[ebp], edx
	jmp	SHORT $LN10@Grow
$LN9@Grow:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR tv80[ebp], ecx
$LN10@Grow:
	mov	edx, DWORD PTR tv80[ebp]
	push	edx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
	jmp	SHORT $LN4@Grow
$LN3@Grow:

; 2127 : 		else if (_Newsize == 0)

	cmp	DWORD PTR __Newsize$[ebp], 0
	jne	SHORT $LN4@Grow

; 2128 : 			_Eos(0);	// new size is zero, just null terminate

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN4@Grow:

; 2129 : 		return (0 < _Newsize);	// return true only if more work to do

	xor	eax, eax
	cmp	eax, DWORD PTR __Newsize$[ebp]
	sbb	eax, eax
	neg	eax

; 2130 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEPADXZ
_TEXT	SEGMENT
tv70 = -208						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEPADXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 2169 : 		{	// determine current pointer to buffer for mutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2170 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 16			; 00000010H
	jb	SHORT $LN3@Myptr@2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR tv70[ebp], edx
	jmp	SHORT $LN4@Myptr@2
$LN3@Myptr@2:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	mov	DWORD PTR tv70[ebp], eax
$LN4@Myptr@2:
	mov	eax, DWORD PTR tv70[ebp]

; 2171 : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 123  : 	allocator(const allocator<_Ty>&) _THROW0()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 124  : 		{	// construct by copying (do nothing)
; 125  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
tv73 = -220						; size = 4
__Num$ = -20						; size = 4
_this$ = -8						; size = 4
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1670 : 		{	// return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1671 : 		size_type _Num = _Mybase::_Alval.max_size();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?max_size@?$allocator@D@std@@QBEIXZ	; std::allocator<char>::max_size
	mov	DWORD PTR __Num$[ebp], eax

; 1672 : 		return (_Num <= 1 ? 1 : _Num - 1);

	cmp	DWORD PTR __Num$[ebp], 1
	ja	SHORT $LN3@max_size
	mov	DWORD PTR tv73[ebp], 1
	jmp	SHORT $LN4@max_size
$LN3@max_size:
	mov	eax, DWORD PTR __Num$[ebp]
	sub	eax, 1
	mov	DWORD PTR tv73[ebp], eax
$LN4@max_size:
	mov	eax, DWORD PTR tv73[ebp]

; 1673 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
EXTRN	__CxxThrowException@8:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z$5 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z$0
__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z$4 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z$1
__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
__ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
	DD	02H
	DD	FLAT:__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z$4
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z$5
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT
tv157 = -248						; size = 4
tv156 = -248						; size = 4
__Ptr$ = -48						; size = 4
__Newres$ = -36						; size = 4
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 2083 : 		{	// copy _Oldlen elements to newly allocated buffer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	DWORD PTR _this$[ebp], ecx

; 2084 : 		size_type _Newres = _Newsize | _ALLOC_MASK;

	mov	eax, DWORD PTR __Newsize$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Newres$[ebp], eax

; 2085 : 		if (max_size() < _Newres)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	eax, DWORD PTR __Newres$[ebp]
	jae	SHORT $LN6@Copy

; 2086 : 			_Newres = _Newsize;	// undo roundup if too big

	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], eax

; 2087 : 		else if (_Newres / 3 < _Myres / 2

	jmp	SHORT $LN5@Copy
$LN6@Copy:

; 2088 : 			&& _Myres <= max_size() - _Myres / 2)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	shr	ecx, 1
	mov	eax, DWORD PTR __Newres$[ebp]
	xor	edx, edx
	mov	esi, 3
	div	esi
	cmp	eax, ecx
	jae	SHORT $LN5@Copy
	mov	eax, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [eax+28]
	shr	esi, 1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	sub	eax, esi
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+28], eax
	ja	SHORT $LN5@Copy

; 2089 : 			_Newres = _Myres + _Myres / 2;	// grow exponentially if possible

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	shr	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+28]
	mov	DWORD PTR __Newres$[ebp], ecx
$LN5@Copy:

; 2090 : 		_Elem *_Ptr = 0;

	mov	DWORD PTR __Ptr$[ebp], 0

; 2091 : 
; 2092 : 		_TRY_BEGIN

	mov	DWORD PTR __$EHRec$[ebp+12], 0

; 2093 : 			_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR tv156[ebp], eax
	mov	ecx, DWORD PTR tv156[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN9@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z$0:

; 2094 : 		_CATCH_ALL

	mov	DWORD PTR __$EHRec$[ebp], esp

; 2095 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

	mov	eax, DWORD PTR __Newsize$[ebp]
	mov	DWORD PTR __Newres$[ebp], eax

; 2096 : 			_TRY_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2

; 2097 : 				_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

	mov	eax, DWORD PTR __Newres$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR tv157[ebp], eax
	mov	ecx, DWORD PTR tv157[ebp]
	mov	DWORD PTR __Ptr$[ebp], ecx
	jmp	SHORT $LN11@Copy
__catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z$1:

; 2098 : 			_CATCH_ALL
; 2099 : 			_Tidy(true);	// failed again, discard storage and reraise

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2100 : 			_RERAISE;

	push	0
	push	0
	call	__CxxThrowException@8

; 2101 : 			_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z$2
	ret	0
$LN11@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], 1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z$2:

; 2102 : 		_CATCH_END

	mov	DWORD PTR __$EHRec$[ebp+12], 1
	mov	eax, __tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z$3
	ret	0
$LN9@Copy:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z$3:

; 2103 : 
; 2104 : 		if (0 < _Oldlen)

	cmp	DWORD PTR __Oldlen$[ebp], 0
	jbe	SHORT $LN1@Copy

; 2105 : 			_Traits_helper::copy_s<_Traits>(_Ptr, _Newres + 1, _Myptr(), _Oldlen);	// copy existing elements

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	push	eax
	mov	ecx, DWORD PTR __Newres$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	call	??$copy_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDI@Z ; std::_Traits_helper::copy_s<std::char_traits<char> >
	add	esp, 16					; 00000010H
$LN1@Copy:

; 2106 : 		_Tidy(true);

	push	0
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy

; 2107 : 		_Bx._Ptr = _Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 2108 : 		_Myres = _Newres;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newres$[ebp]
	mov	DWORD PTR [eax+28], ecx

; 2109 : 		_Eos(_Oldlen);

	mov	eax, DWORD PTR __Oldlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
$LN8@Copy:

; 2110 : 		}

	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-252]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 144  : 		{	// allocate array of _Count elements

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 145  : 		return (_Allocate(_Count, (pointer)0));

	push	0
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Allocate@D@std@@YAPADIPAD@Z		; std::_Allocate<char>
	add	esp, 8

; 146  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xstring
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 2133 : 		{	// test if _Ptr points inside string

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 2134 : 		if (_Ptr == 0 || _Ptr < _Myptr() || _Myptr() + _Mysize <= _Ptr)

	cmp	DWORD PTR __Ptr$[ebp], 0
	je	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	cmp	DWORD PTR __Ptr$[ebp], eax
	jb	SHORT $LN2@Inside
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+24]
	cmp	eax, DWORD PTR __Ptr$[ebp]
	ja	SHORT $LN3@Inside
$LN2@Inside:

; 2135 : 			return (false);	// don't ask

	xor	al, al
	jmp	SHORT $LN4@Inside

; 2136 : 		else

	jmp	SHORT $LN4@Inside
$LN3@Inside:

; 2137 : 			return (true);

	mov	al, 1
$LN4@Inside:

; 2138 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
tv65 = -220						; size = 4
__Count$ = -20						; size = 4
_this$ = -8						; size = 4
?max_size@?$allocator@D@std@@QBEIXZ PROC		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 164  : 		{	// estimate maximum array size

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 165  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);

	mov	DWORD PTR __Count$[ebp], -1

; 166  : 		return (0 < _Count ? _Count : 1);

	cmp	DWORD PTR __Count$[ebp], 0
	jbe	SHORT $LN3@max_size@2
	mov	eax, DWORD PTR __Count$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max_size@2
$LN3@max_size@2:
	mov	DWORD PTR tv65[ebp], 1
$LN4@max_size@2:
	mov	eax, DWORD PTR tv65[ebp]

; 167  : 		}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
PUBLIC	??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ ; `string'
EXTRN	?_Debug_message@std@@YAXPB_W0I@Z:PROC		; std::_Debug_message
;	COMDAT ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xutility
CONST	SEGMENT
??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'd', 00H
	DB	' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p'
	DB	00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	00H, 00H					; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__File$ = 12						; size = 4
__Line$ = 16						; size = 4
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z PROC		; std::_Debug_pointer<char>, COMDAT

; 1537 : 	{	// test iterator for non-singularity, const pointers

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1538 : 	if (_First == 0)

	cmp	DWORD PTR __First$[ebp], 0
	jne	SHORT $LN2@Debug_poin

; 1539 : 		_DEBUG_ERROR2("invalid null pointer", _File, _Line);

	mov	eax, DWORD PTR __Line$[ebp]
	push	eax
	mov	ecx, DWORD PTR __File$[ebp]
	push	ecx
	push	OFFSET ??_C@_1CK@EOPGIILJ@?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?$AA@
	call	?_Debug_message@std@@YAXPB_W0I@Z	; std::_Debug_message
	add	esp, 12					; 0000000cH
$LN2@Debug_poin:

; 1540 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Debug_pointer@D@std@@YAXPBDPB_WI@Z ENDP		; std::_Debug_pointer<char>
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\raknet\bitstream.h
_TEXT	ENDS
;	COMDAT ??$Read@K@BitStream@RakNet@@QAE_NAAK@Z
_TEXT	SEGMENT
_output$203619 = -20					; size = 4
_this$ = -8						; size = 4
_outTemplateVar$ = 8					; size = 4
??$Read@K@BitStream@RakNet@@QAE_NAAK@Z PROC		; RakNet::BitStream::Read<unsigned long>, COMDAT
; _this$ = ecx

; 1423 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1424 : #ifdef _MSC_VER
; 1425 : #pragma warning(disable:4127)   // conditional expression is constant
; 1426 : #endif
; 1427 : 		if (sizeof(outTemplateVar)==1)

	xor	eax, eax
	je	SHORT $LN5@Read@8

; 1428 : 			return ReadBits( ( unsigned char* ) &outTemplateVar, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	mov	eax, DWORD PTR _outTemplateVar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEI_N@Z ; RakNet::BitStream::ReadBits
	jmp	SHORT $LN6@Read@8

; 1429 : 		else

	jmp	SHORT $LN6@Read@8
$LN5@Read@8:

; 1430 : 		{
; 1431 : #ifndef __BITSTREAM_NATIVE_END
; 1432 : #ifdef _MSC_VER
; 1433 : #pragma warning(disable:4244)   // '=' : conversion from 'unsigned long' to 'unsigned short', possible loss of data
; 1434 : #endif
; 1435 : 			if (DoEndianSwap())

	call	?DoEndianSwap@BitStream@RakNet@@SA_NXZ	; RakNet::BitStream::DoEndianSwap
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@Read@8

; 1436 : 			{
; 1437 : 				unsigned char output[sizeof(templateType)];
; 1438 : 				if (ReadBits( ( unsigned char* ) output, sizeof(templateType) * 8, true ))

	push	1
	push	32					; 00000020H
	lea	eax, DWORD PTR _output$203619[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEI_N@Z ; RakNet::BitStream::ReadBits
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Read@8

; 1439 : 				{
; 1440 : 					ReverseBytes(output, (unsigned char*)&outTemplateVar, sizeof(templateType));

	push	4
	mov	eax, DWORD PTR _outTemplateVar$[ebp]
	push	eax
	lea	ecx, DWORD PTR _output$203619[ebp]
	push	ecx
	call	?ReverseBytes@BitStream@RakNet@@SAXPAE0I@Z ; RakNet::BitStream::ReverseBytes
	add	esp, 12					; 0000000cH

; 1441 : 					return true;

	mov	al, 1
	jmp	SHORT $LN6@Read@8
$LN2@Read@8:

; 1442 : 				}
; 1443 : 				return false;

	xor	al, al
	jmp	SHORT $LN6@Read@8

; 1444 : 			}
; 1445 : 			else

	jmp	SHORT $LN6@Read@8
$LN3@Read@8:

; 1446 : #endif
; 1447 : 				return ReadBits( ( unsigned char* ) & outTemplateVar, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	mov	eax, DWORD PTR _outTemplateVar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEI_N@Z ; RakNet::BitStream::ReadBits
$LN6@Read@8:

; 1448 : 		}
; 1449 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Read@8
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN10@Read@8:
	DD	1
	DD	$LN9@Read@8
$LN9@Read@8:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN8@Read@8
$LN8@Read@8:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
??$Read@K@BitStream@RakNet@@QAE_NAAK@Z ENDP		; RakNet::BitStream::Read<unsigned long>
_TEXT	ENDS
PUBLIC	??$copy_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDIU_Secure_char_traits_tag@1@@Z ; std::_Traits_helper::copy_s<std::char_traits<char> >
PUBLIC	??$_Char_traits_cat@U?$char_traits@D@std@@@std@@YA?AU_Secure_char_traits_tag@0@XZ ; std::_Char_traits_cat<std::char_traits<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\iosfwd
;	COMDAT ??$copy_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDI@Z
_TEXT	SEGMENT
$T210980 = -197						; size = 1
__First1$ = 8						; size = 4
__Size$ = 12						; size = 4
__First2$ = 16						; size = 4
__Count$ = 20						; size = 4
??$copy_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDI@Z PROC ; std::_Traits_helper::copy_s<std::char_traits<char> >, COMDAT

; 588  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 589  : 		return copy_s<_Traits>(_First1, _Size, _First2, _Count, _Char_traits_cat<_Traits>());

	call	??$_Char_traits_cat@U?$char_traits@D@std@@@std@@YA?AU_Secure_char_traits_tag@0@XZ ; std::_Char_traits_cat<std::char_traits<char> >
	mov	BYTE PTR $T210980[ebp], al
	movzx	eax, BYTE PTR $T210980[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __Size$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First1$[ebp]
	push	ecx
	call	??$copy_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDIU_Secure_char_traits_tag@1@@Z ; std::_Traits_helper::copy_s<std::char_traits<char> >
	add	esp, 20					; 00000014H

; 590  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$copy_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDI@Z ENDP ; std::_Traits_helper::copy_s<std::char_traits<char> >
_TEXT	ENDS
PUBLIC	??$move_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDIU_Secure_char_traits_tag@1@@Z ; std::_Traits_helper::move_s<std::char_traits<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$move_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDI@Z
_TEXT	SEGMENT
$T210983 = -197						; size = 1
__First1$ = 8						; size = 4
__Size$ = 12						; size = 4
__First2$ = 16						; size = 4
__Count$ = 20						; size = 4
??$move_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDI@Z PROC ; std::_Traits_helper::move_s<std::char_traits<char> >, COMDAT

; 615  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 616  : 		return move_s<_Traits>(_First1, _Size, _First2, _Count, _Char_traits_cat<_Traits>());

	call	??$_Char_traits_cat@U?$char_traits@D@std@@@std@@YA?AU_Secure_char_traits_tag@0@XZ ; std::_Char_traits_cat<std::char_traits<char> >
	mov	BYTE PTR $T210983[ebp], al
	movzx	eax, BYTE PTR $T210983[ebp]
	push	eax
	mov	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First2$[ebp]
	push	edx
	mov	eax, DWORD PTR __Size$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First1$[ebp]
	push	ecx
	call	??$move_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDIU_Secure_char_traits_tag@1@@Z ; std::_Traits_helper::move_s<std::char_traits<char> >
	add	esp, 20					; 00000014H

; 617  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$move_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDI@Z ENDP ; std::_Traits_helper::move_s<std::char_traits<char> >
_TEXT	ENDS
PUBLIC	__TI2?AVbad_alloc@std@@
PUBLIC	??0bad_alloc@std@@QAE@PBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	__CTA2?AVbad_alloc@std@@
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??0exception@std@@QAE@ABV01@@Z:PROC		; std::exception::exception
;	COMDAT ??_R0?AVexception@std@@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\xmemory
_DATA	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
_DATA	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AVbad_alloc@std@@
xdata$x	SEGMENT
__CTA2?AVbad_alloc@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVbad_alloc@std@@
xdata$x	SEGMENT
__TI2?AVbad_alloc@std@@ DD 00H
	DD	FLAT:??1bad_alloc@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVbad_alloc@std@@
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
$T210986 = -208						; size = 12
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC			; std::_Allocate<char>, COMDAT

; 36   : 	{	// check for integer overflow

	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 37   : 	if (_Count <= 0)

	cmp	DWORD PTR __Count$[ebp], 0
	ja	SHORT $LN3@Allocate

; 38   : 		_Count = 0;

	mov	DWORD PTR __Count$[ebp], 0
	jmp	SHORT $LN2@Allocate
$LN3@Allocate:

; 39   : 	else if (((_SIZT)(-1) / _Count) < sizeof (_Ty))

	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Count$[ebp]
	cmp	eax, 1
	jae	SHORT $LN2@Allocate

; 40   : 		_THROW_NCEE(std::bad_alloc, NULL);

	push	0
	lea	ecx, DWORD PTR $T210986[ebp]
	call	??0bad_alloc@std@@QAE@PBD@Z		; std::bad_alloc::bad_alloc
	push	OFFSET __TI2?AVbad_alloc@std@@
	lea	eax, DWORD PTR $T210986[ebp]
	push	eax
	call	__CxxThrowException@8
$LN2@Allocate:

; 41   : 
; 42   : 		// allocate storage for _Count elements of type _Ty
; 43   : 	return ((_Ty _FARQ *)::operator new(_Count * sizeof (_Ty)));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
$LN5@Allocate:

; 44   : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
EXTRN	??0exception@std@@QAE@ABQBD@Z:PROC		; std::exception::exception
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	?what@exception@std@@UBEPBDXZ:PROC		; std::exception::what
;	COMDAT ??_R2exception@std@@8
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\exception
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Message$ = 8						; size = 4
??0bad_alloc@std@@QAE@PBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 371  : 		{	// construct from message string

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABQBD@Z		; std::exception::exception
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@

; 372  : 		}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@PBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
EXTRN	??1exception@std@@UAE@XZ:PROC			; std::exception::~exception
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx

; 380  : 		{	// destroy the object

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@

; 381  : 		}

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_alloc@std@@UAE@XZ		; std::bad_alloc::~bad_alloc
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\iosfwd
_TEXT	ENDS
;	COMDAT ??$_Char_traits_cat@U?$char_traits@D@std@@@std@@YA?AU_Secure_char_traits_tag@0@XZ
_TEXT	SEGMENT
__Secure$ = -5						; size = 1
??$_Char_traits_cat@U?$char_traits@D@std@@@std@@YA?AU_Secure_char_traits_tag@0@XZ PROC ; std::_Char_traits_cat<std::char_traits<char> >, COMDAT

; 575  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 576  : 		typename _Char_traits_category<_Traits>::_Secure_char_traits _Secure;
; 577  : 		return (_Secure);

	mov	al, BYTE PTR __Secure$[ebp]

; 578  : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Char_trait
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@Char_trait:
	DD	1
	DD	$LN4@Char_trait
$LN4@Char_trait:
	DD	-5					; fffffffbH
	DD	1
	DD	$LN3@Char_trait
$LN3@Char_trait:
	DB	95					; 0000005fH
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	0
??$_Char_traits_cat@U?$char_traits@D@std@@@std@@YA?AU_Secure_char_traits_tag@0@XZ ENDP ; std::_Char_traits_cat<std::char_traits<char> >
_TEXT	ENDS
PUBLIC	?_Copy_s@?$char_traits@D@std@@SAPADPADIPBDI@Z	; std::char_traits<char>::_Copy_s
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$copy_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDIU_Secure_char_traits_tag@1@@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__Size$ = 12						; size = 4
__First2$ = 16						; size = 4
__Count$ = 20						; size = 4
___formal$ = 24						; size = 1
??$copy_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDIU_Secure_char_traits_tag@1@@Z PROC ; std::_Traits_helper::copy_s<std::char_traits<char> >, COMDAT

; 596  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 597  : 		return _Traits::_Copy_s(_First1, _Size, _First2, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Size$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	?_Copy_s@?$char_traits@D@std@@SAPADPADIPBDI@Z ; std::char_traits<char>::_Copy_s
	add	esp, 16					; 00000010H

; 598  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$copy_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDIU_Secure_char_traits_tag@1@@Z ENDP ; std::_Traits_helper::copy_s<std::char_traits<char> >
_TEXT	ENDS
EXTRN	_memcpy_s:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Copy_s@?$char_traits@D@std@@SAPADPADIPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__Size_in_bytes$ = 12					; size = 4
__First2$ = 16						; size = 4
__Count$ = 20						; size = 4
?_Copy_s@?$char_traits@D@std@@SAPADPADIPBDI@Z PROC	; std::char_traits<char>::_Copy_s, COMDAT

; 462  : 		{	// copy [_First1, _First1 + _Count) to [_First2, ...)

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 463  : //		_DEBUG_POINTER(_First1);
; 464  : //		_DEBUG_POINTER(_First2);
; 465  : 		_CRT_SECURE_MEMCPY(_First1, _Size_in_bytes, _First2, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Size_in_bytes$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memcpy_s
	add	esp, 16					; 00000010H

; 466  : 		return _First1;

	mov	eax, DWORD PTR __First1$[ebp]

; 467  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Copy_s@?$char_traits@D@std@@SAPADPADIPBDI@Z ENDP	; std::char_traits<char>::_Copy_s
_TEXT	ENDS
PUBLIC	?_Move_s@?$char_traits@D@std@@SAPADPADIPBDI@Z	; std::char_traits<char>::_Move_s
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$move_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDIU_Secure_char_traits_tag@1@@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__Size$ = 12						; size = 4
__First2$ = 16						; size = 4
__Count$ = 20						; size = 4
___formal$ = 24						; size = 1
??$move_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDIU_Secure_char_traits_tag@1@@Z PROC ; std::_Traits_helper::move_s<std::char_traits<char> >, COMDAT

; 623  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 624  : 		return _Traits::_Move_s(_First1, _Size, _First2, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Size$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	?_Move_s@?$char_traits@D@std@@SAPADPADIPBDI@Z ; std::char_traits<char>::_Move_s
	add	esp, 16					; 00000010H

; 625  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$move_s@U?$char_traits@D@std@@@_Traits_helper@std@@YAPADPADIPBDIU_Secure_char_traits_tag@1@@Z ENDP ; std::_Traits_helper::move_s<std::char_traits<char> >
_TEXT	ENDS
EXTRN	_memmove_s:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Move_s@?$char_traits@D@std@@SAPADPADIPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__Size_in_bytes$ = 12					; size = 4
__First2$ = 16						; size = 4
__Count$ = 20						; size = 4
?_Move_s@?$char_traits@D@std@@SAPADPADIPBDI@Z PROC	; std::char_traits<char>::_Move_s, COMDAT

; 486  : 		{	// move [_First1, _First1 + _Count) to [_First2, ...)

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 487  : //		_DEBUG_POINTER(_First1);
; 488  : //		_DEBUG_POINTER(_First2);
; 489  : 		_CRT_SECURE_MEMMOVE(_First1, _Size_in_bytes, _First2, _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Size_in_bytes$[ebp]
	push	edx
	mov	eax, DWORD PTR __First1$[ebp]
	push	eax
	call	_memmove_s
	add	esp, 16					; 00000010H

; 490  : 		return _First1;

	mov	eax, DWORD PTR __First1$[ebp]

; 491  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Move_s@?$char_traits@D@std@@SAPADPADIPBDI@Z ENDP	; std::char_traits<char>::_Move_s
_TEXT	ENDS
END
