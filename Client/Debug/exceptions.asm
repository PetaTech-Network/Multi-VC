; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	d:\vice-players-master\Client\exceptions.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?pContextRecord@@3PAU_CONTEXT@@A		; pContextRecord
_BSS	SEGMENT
?pContextRecord@@3PAU_CONTEXT@@A DD 01H DUP (?)		; pContextRecord
_BSS	ENDS
PUBLIC	??_C@_08LMFCBPOD@0x?$CF08X?$AN?6?$AA@		; `string'
PUBLIC	??_C@_0KJ@MMBKJMP@Exception?5At?5Address?3?50x?$CF08X?$AN?6?$AN?6@ ; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?GuiDlgProcMain@@YGHPAUHWND__@@IIJ@Z		; GuiDlgProcMain
EXTRN	__imp__EndDialog@8:PROC
EXTRN	__imp__SetFocus@4:PROC
EXTRN	__imp__SetForegroundWindow@4:PROC
EXTRN	__imp__GetDlgItem@8:PROC
EXTRN	__imp__SetDlgItemTextA@12:PROC
EXTRN	_strcat:PROC
EXTRN	_sprintf:PROC
EXTRN	__imp__ShowCursor@4:PROC
EXTRN	__imp__SetCursor@4:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT ??_C@_08LMFCBPOD@0x?$CF08X?$AN?6?$AA@
; File d:\vice-players-master\client\exceptions.cpp
CONST	SEGMENT
??_C@_08LMFCBPOD@0x?$CF08X?$AN?6?$AA@ DB '0x%08X', 0dH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0KJ@MMBKJMP@Exception?5At?5Address?3?50x?$CF08X?$AN?6?$AN?6@
CONST	SEGMENT
??_C@_0KJ@MMBKJMP@Exception?5At?5Address?3?50x?$CF08X?$AN?6?$AN?6@ DB 'Ex'
	DB	'ception At Address: 0x%08X', 0dH, 0aH, 0dH, 0aH, 'Registers:', 0dH
	DB	0aH, 'EAX: 0x%08X', 09H, 'EBX: 0x%08X', 09H, 'ECX: 0x%08X', 09H
	DB	'EDX: 0x%08X', 0dH, 0aH, 'ESI: 0x%08X', 09H, 'EDI: 0x%08X', 09H
	DB	'EBP: 0x%08X', 09H, 'ESP: 0x%08X', 0dH, 0aH, 'EFLAGS: 0x%08X', 0dH
	DB	0aH, 0dH, 0aH, 'Stack:', 0dH, 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ?GuiDlgProcMain@@YGHPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
tv148 = -1520						; size = 4
tv64 = -1520						; size = 4
_x$ = -1320						; size = 4
_pdwStack$ = -1308					; size = 4
_s$ = -1296						; size = 256
_szErrorString$ = -1032					; size = 1024
__$ArrayPad$ = -4					; size = 4
_hDlg$ = 8						; size = 4
_uMsg$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?GuiDlgProcMain@@YGHPAUHWND__@@IIJ@Z PROC		; GuiDlgProcMain, COMDAT

; 23   : {	

	push	ebp
	mov	ebp, esp
	sub	esp, 1520				; 000005f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1520]
	mov	ecx, 380				; 0000017cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 24   : 	CHAR szErrorString[1024];
; 25   : 	CHAR s[256];
; 26   : 	DWORD *pdwStack;
; 27   : 	int x=0;

	mov	DWORD PTR _x$[ebp], 0

; 28   : 		
; 29   : 	SetCursor(0);

	mov	esi, esp
	push	0
	call	DWORD PTR __imp__SetCursor@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 30   : 	ShowCursor(TRUE);

	mov	esi, esp
	push	1
	call	DWORD PTR __imp__ShowCursor@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 31   : 
; 32   : 	switch(uMsg)

	mov	eax, DWORD PTR _uMsg$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	ja	SHORT $LN14@GuiDlgProc
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	je	$LN4@GuiDlgProc
	cmp	DWORD PTR tv64[ebp], 2
	je	$LN5@GuiDlgProc
	cmp	DWORD PTR tv64[ebp], 272		; 00000110H
	je	SHORT $LN8@GuiDlgProc
	jmp	$LN10@GuiDlgProc
$LN14@GuiDlgProc:
	cmp	DWORD PTR tv64[ebp], 512		; 00000200H
	je	SHORT $LN9@GuiDlgProc
	jmp	$LN10@GuiDlgProc
$LN9@GuiDlgProc:

; 33   : 	{
; 34   : 		case WM_MOUSEMOVE:
; 35   : 			ShowCursor(TRUE);

	mov	esi, esp
	push	1
	call	DWORD PTR __imp__ShowCursor@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 36   : 			break;

	jmp	$LN10@GuiDlgProc
$LN8@GuiDlgProc:

; 37   : 
; 38   : 		case WM_INITDIALOG:		
; 39   : 
; 40   : 			sprintf(szErrorString,
; 41   : 				"Exception At Address: 0x%08X\r\n\r\n"
; 42   : 				"Registers:\r\n"
; 43   : 				"EAX: 0x%08X\tEBX: 0x%08X\tECX: 0x%08X\tEDX: 0x%08X\r\n"
; 44   : 				"ESI: 0x%08X\tEDI: 0x%08X\tEBP: 0x%08X\tESP: 0x%08X\r\n"
; 45   : 				"EFLAGS: 0x%08X\r\n\r\nStack:\r\n",
; 46   : 				pContextRecord->Eip,
; 47   : 				pContextRecord->Eax,
; 48   : 				pContextRecord->Ebx,
; 49   : 				pContextRecord->Ecx,
; 50   : 				pContextRecord->Edx,
; 51   : 				pContextRecord->Esi,
; 52   : 				pContextRecord->Edi,
; 53   : 				pContextRecord->Ebp,
; 54   : 				pContextRecord->Esp,
; 55   : 				pContextRecord->EFlags);

	mov	eax, DWORD PTR ?pContextRecord@@3PAU_CONTEXT@@A ; pContextRecord
	mov	ecx, DWORD PTR [eax+192]
	push	ecx
	mov	edx, DWORD PTR ?pContextRecord@@3PAU_CONTEXT@@A ; pContextRecord
	mov	eax, DWORD PTR [edx+196]
	push	eax
	mov	ecx, DWORD PTR ?pContextRecord@@3PAU_CONTEXT@@A ; pContextRecord
	mov	edx, DWORD PTR [ecx+180]
	push	edx
	mov	eax, DWORD PTR ?pContextRecord@@3PAU_CONTEXT@@A ; pContextRecord
	mov	ecx, DWORD PTR [eax+156]
	push	ecx
	mov	edx, DWORD PTR ?pContextRecord@@3PAU_CONTEXT@@A ; pContextRecord
	mov	eax, DWORD PTR [edx+160]
	push	eax
	mov	ecx, DWORD PTR ?pContextRecord@@3PAU_CONTEXT@@A ; pContextRecord
	mov	edx, DWORD PTR [ecx+168]
	push	edx
	mov	eax, DWORD PTR ?pContextRecord@@3PAU_CONTEXT@@A ; pContextRecord
	mov	ecx, DWORD PTR [eax+172]
	push	ecx
	mov	edx, DWORD PTR ?pContextRecord@@3PAU_CONTEXT@@A ; pContextRecord
	mov	eax, DWORD PTR [edx+164]
	push	eax
	mov	ecx, DWORD PTR ?pContextRecord@@3PAU_CONTEXT@@A ; pContextRecord
	mov	edx, DWORD PTR [ecx+176]
	push	edx
	mov	eax, DWORD PTR ?pContextRecord@@3PAU_CONTEXT@@A ; pContextRecord
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	push	OFFSET ??_C@_0KJ@MMBKJMP@Exception?5At?5Address?3?50x?$CF08X?$AN?6?$AN?6@
	lea	edx, DWORD PTR _szErrorString$[ebp]
	push	edx
	call	_sprintf
	add	esp, 48					; 00000030H

; 56   : 
; 57   : 			// grab the last 25 stack values
; 58   : 			pdwStack = (DWORD *)pContextRecord->Esp;

	mov	eax, DWORD PTR ?pContextRecord@@3PAU_CONTEXT@@A ; pContextRecord
	mov	ecx, DWORD PTR [eax+196]
	mov	DWORD PTR _pdwStack$[ebp], ecx
$LN7@GuiDlgProc:

; 59   : 			while(x!=25) {

	cmp	DWORD PTR _x$[ebp], 25			; 00000019H
	je	SHORT $LN6@GuiDlgProc

; 60   : 				sprintf(s,"0x%08X\r\n",pdwStack[x]);

	mov	eax, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _pdwStack$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	push	OFFSET ??_C@_08LMFCBPOD@0x?$CF08X?$AN?6?$AA@
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH

; 61   : 				strcat(szErrorString,s);

	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	lea	ecx, DWORD PTR _szErrorString$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8

; 62   : 				x++;

	mov	eax, DWORD PTR _x$[ebp]
	add	eax, 1
	mov	DWORD PTR _x$[ebp], eax

; 63   : 			}

	jmp	SHORT $LN7@GuiDlgProc
$LN6@GuiDlgProc:

; 64   : 
; 65   : 			SetDlgItemText(hDlg,IDC_EDIT1,szErrorString);

	mov	esi, esp
	lea	eax, DWORD PTR _szErrorString$[ebp]
	push	eax
	push	1000					; 000003e8H
	mov	ecx, DWORD PTR _hDlg$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetDlgItemTextA@12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 66   : 			SetForegroundWindow(GetDlgItem(hDlg,IDD_DIALOG1));

	mov	esi, esp
	push	101					; 00000065H
	mov	eax, DWORD PTR _hDlg$[ebp]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__SetForegroundWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 67   : 			SetFocus(GetDlgItem(hDlg,IDC_BUTTON1));

	mov	esi, esp
	push	1001					; 000003e9H
	mov	eax, DWORD PTR _hDlg$[ebp]
	push	eax
	call	DWORD PTR __imp__GetDlgItem@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__SetFocus@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 68   : 			break;

	jmp	SHORT $LN10@GuiDlgProc
$LN5@GuiDlgProc:

; 69   : 
; 70   : 		case WM_DESTROY:
; 71   : 			EndDialog(hDlg,TRUE);

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _hDlg$[ebp]
	push	eax
	call	DWORD PTR __imp__EndDialog@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 72   : 			//ExitProcess(1);
; 73   : 			break;

	jmp	SHORT $LN10@GuiDlgProc
$LN4@GuiDlgProc:

; 74   : 
; 75   : 		case WM_COMMAND:
; 76   : 			switch(LOWORD(wParam))

	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	mov	DWORD PTR tv148[ebp], ecx
	cmp	DWORD PTR tv148[ebp], 1001		; 000003e9H
	je	SHORT $LN1@GuiDlgProc
	jmp	SHORT $LN10@GuiDlgProc
$LN1@GuiDlgProc:

; 77   : 			{
; 78   : 			case IDC_BUTTON1:
; 79   : 				EndDialog(hDlg,TRUE);

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _hDlg$[ebp]
	push	eax
	call	DWORD PTR __imp__EndDialog@8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@GuiDlgProc:

; 80   : 				//ExitProcess(1);
; 81   : 			}
; 82   : 			break;
; 83   : 	}
; 84   : 
; 85   : 	return FALSE;

	xor	eax, eax

; 86   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@GuiDlgProc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1520				; 000005f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	3
$LN18@GuiDlgProc:
	DD	2
	DD	$LN17@GuiDlgProc
$LN17@GuiDlgProc:
	DD	-1032					; fffffbf8H
	DD	1024					; 00000400H
	DD	$LN15@GuiDlgProc
	DD	-1296					; fffffaf0H
	DD	256					; 00000100H
	DD	$LN16@GuiDlgProc
$LN16@GuiDlgProc:
	DB	115					; 00000073H
	DB	0
$LN15@GuiDlgProc:
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	69					; 00000045H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
?GuiDlgProcMain@@YGHPAUHWND__@@IIJ@Z ENDP		; GuiDlgProcMain
_TEXT	ENDS
PUBLIC	?GetMainWindowHwnd@CGame@@QAEPAUHWND__@@XZ	; CGame::GetMainWindowHwnd
PUBLIC	?exc_handler@@YGJPAU_EXCEPTION_POINTERS@@@Z	; exc_handler
EXTRN	__imp__DialogBoxParamA@20:PROC
EXTRN	?g_hInstance@@3PAXA:DWORD			; g_hInstance
EXTRN	__imp__ShowWindow@8:PROC
EXTRN	?pGame@@3PAVCGame@@A:DWORD			; pGame
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?exc_handler@@YGJPAU_EXCEPTION_POINTERS@@@Z
_TEXT	SEGMENT
_exc_inf$ = 8						; size = 4
?exc_handler@@YGJPAU_EXCEPTION_POINTERS@@@Z PROC	; exc_handler, COMDAT

; 91   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 92   : 	pContextRecord = exc_inf->ContextRecord;

	mov	eax, DWORD PTR _exc_inf$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR ?pContextRecord@@3PAU_CONTEXT@@A, ecx ; pContextRecord

; 93   : 	
; 94   : 	ShowWindow(pGame->GetMainWindowHwnd(),SW_HIDE);

	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?GetMainWindowHwnd@CGame@@QAEPAUHWND__@@XZ ; CGame::GetMainWindowHwnd
	push	eax
	call	DWORD PTR __imp__ShowWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 95   : 	DialogBox((HINSTANCE)g_hInstance,MAKEINTRESOURCE(IDD_DIALOG1),pGame->GetMainWindowHwnd(),(DLGPROC)GuiDlgProcMain);

	mov	esi, esp
	push	0
	push	OFFSET ?GuiDlgProcMain@@YGHPAUHWND__@@IIJ@Z ; GuiDlgProcMain
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?GetMainWindowHwnd@CGame@@QAEPAUHWND__@@XZ ; CGame::GetMainWindowHwnd
	push	eax
	push	101					; 00000065H
	mov	eax, DWORD PTR ?g_hInstance@@3PAXA	; g_hInstance
	push	eax
	call	DWORD PTR __imp__DialogBoxParamA@20
	cmp	esi, esp
	call	__RTC_CheckEsp

; 96   : 
; 97   : 	return EXCEPTION_CONTINUE_SEARCH;

	xor	eax, eax

; 98   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?exc_handler@@YGJPAU_EXCEPTION_POINTERS@@@Z ENDP	; exc_handler
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\client\game\cgame.h
_TEXT	ENDS
;	COMDAT ?GetMainWindowHwnd@CGame@@QAEPAUHWND__@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetMainWindowHwnd@CGame@@QAEPAUHWND__@@XZ PROC		; CGame::GetMainWindowHwnd, COMDAT
; _this$ = ecx

; 97   : 	HWND	GetMainWindowHwnd() { return *(HWND *)ADDR_HWND; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ds:7903140
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetMainWindowHwnd@CGame@@QAEPAUHWND__@@XZ ENDP		; CGame::GetMainWindowHwnd
_TEXT	ENDS
END
