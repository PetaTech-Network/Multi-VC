; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	d:\vice-players-master\Client\scripting\sq_graphic_natives.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?sq_drawText@@YAHPAUSQVM@@@Z			; sq_drawText
EXTRN	?DrawTextA@CD3DFont@@QAEJMMKPBDKH@Z:PROC	; CD3DFont::DrawTextA
EXTRN	?pChatWindow@@3PAVCChatWindow@@A:DWORD		; pChatWindow
EXTRN	_sq_getinteger:PROC
EXTRN	_sq_getstring:PROC
EXTRN	_sq_getfloat:PROC
EXTRN	__fltused:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\vice-players-master\client\scripting\sq_graphic_natives.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ?sq_drawText@@YAHPAUSQVM@@@Z
_TEXT	SEGMENT
_y$ = -80						; size = 4
_x$ = -68						; size = 4
_b$ = -56						; size = 4
_g$ = -44						; size = 4
_r$ = -32						; size = 4
_a$ = -20						; size = 4
_message$ = -8						; size = 4
_pVM$ = 8						; size = 4
?sq_drawText@@YAHPAUSQVM@@@Z PROC			; sq_drawText, COMDAT

; 23   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 24   : 	const char * message;
; 25   : 	SQInteger a,r,g,b;
; 26   : 	float x,y;
; 27   : 	sq_getfloat(pVM, -7, &x);

	lea	eax, DWORD PTR _x$[ebp]
	push	eax
	push	-7					; fffffff9H
	mov	ecx, DWORD PTR _pVM$[ebp]
	push	ecx
	call	_sq_getfloat
	add	esp, 12					; 0000000cH

; 28   : 	sq_getfloat(pVM, -6, &y);

	lea	eax, DWORD PTR _y$[ebp]
	push	eax
	push	-6					; fffffffaH
	mov	ecx, DWORD PTR _pVM$[ebp]
	push	ecx
	call	_sq_getfloat
	add	esp, 12					; 0000000cH

; 29   : 	sq_getstring(pVM, -5, &message);

	lea	eax, DWORD PTR _message$[ebp]
	push	eax
	push	-5					; fffffffbH
	mov	ecx, DWORD PTR _pVM$[ebp]
	push	ecx
	call	_sq_getstring
	add	esp, 12					; 0000000cH

; 30   : 	sq_getinteger(pVM, -4, &a);

	lea	eax, DWORD PTR _a$[ebp]
	push	eax
	push	-4					; fffffffcH
	mov	ecx, DWORD PTR _pVM$[ebp]
	push	ecx
	call	_sq_getinteger
	add	esp, 12					; 0000000cH

; 31   : 	sq_getinteger(pVM, -3, &r);

	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	push	-3					; fffffffdH
	mov	ecx, DWORD PTR _pVM$[ebp]
	push	ecx
	call	_sq_getinteger
	add	esp, 12					; 0000000cH

; 32   : 	sq_getinteger(pVM, -2, &g);

	lea	eax, DWORD PTR _g$[ebp]
	push	eax
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _pVM$[ebp]
	push	ecx
	call	_sq_getinteger
	add	esp, 12					; 0000000cH

; 33   : 	sq_getinteger(pVM, -1, &b);

	lea	eax, DWORD PTR _b$[ebp]
	push	eax
	push	-1
	mov	ecx, DWORD PTR _pVM$[ebp]
	push	ecx
	call	_sq_getinteger
	add	esp, 12					; 0000000cH

; 34   : 	pChatWindow->m_pD3DFont->DrawTextA(x, y, D3DCOLOR_ARGB(a,r,g,b), message, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR _message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a$[ebp]
	and	ecx, 255				; 000000ffH
	shl	ecx, 24					; 00000018H
	mov	edx, DWORD PTR _r$[ebp]
	and	edx, 255				; 000000ffH
	shl	edx, 16					; 00000010H
	or	ecx, edx
	mov	eax, DWORD PTR _g$[ebp]
	and	eax, 255				; 000000ffH
	shl	eax, 8
	or	ecx, eax
	mov	edx, DWORD PTR _b$[ebp]
	and	edx, 255				; 000000ffH
	or	ecx, edx
	push	ecx
	push	ecx
	fld	DWORD PTR _y$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _x$[ebp]
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A ; pChatWindow
	mov	ecx, DWORD PTR [eax+968]
	call	?DrawTextA@CD3DFont@@QAEJMMKPBDKH@Z	; CD3DFont::DrawTextA

; 35   : 	return 1;

	mov	eax, 1

; 36   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@sq_drawTex
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN11@sq_drawTex:
	DD	7
	DD	$LN10@sq_drawTex
$LN10@sq_drawTex:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@sq_drawTex
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@sq_drawTex
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN5@sq_drawTex
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN6@sq_drawTex
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN7@sq_drawTex
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN8@sq_drawTex
	DD	-80					; ffffffb0H
	DD	4
	DD	$LN9@sq_drawTex
$LN9@sq_drawTex:
	DB	121					; 00000079H
	DB	0
$LN8@sq_drawTex:
	DB	120					; 00000078H
	DB	0
$LN7@sq_drawTex:
	DB	98					; 00000062H
	DB	0
$LN6@sq_drawTex:
	DB	103					; 00000067H
	DB	0
$LN5@sq_drawTex:
	DB	114					; 00000072H
	DB	0
$LN4@sq_drawTex:
	DB	97					; 00000061H
	DB	0
$LN3@sq_drawTex:
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	0
?sq_drawText@@YAHPAUSQVM@@@Z ENDP			; sq_drawText
_TEXT	ENDS
PUBLIC	__real@00000000
PUBLIC	?sq_drawBox@@YAHPAUSQVM@@@Z			; sq_drawBox
EXTRN	?DrawBox@CD3DFont@@QAEJMMMMMK@Z:PROC		; CD3DFont::DrawBox
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?sq_drawBox@@YAHPAUSQVM@@@Z
_TEXT	SEGMENT
_b$ = -92						; size = 4
_g$ = -80						; size = 4
_r$ = -68						; size = 4
_a$ = -56						; size = 4
_height$ = -44						; size = 4
_width$ = -32						; size = 4
_y$ = -20						; size = 4
_x$ = -8						; size = 4
_pVM$ = 8						; size = 4
?sq_drawBox@@YAHPAUSQVM@@@Z PROC			; sq_drawBox, COMDAT

; 39   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 40   : 	float x, y;
; 41   : 	float width, height;
; 42   : 	SQInteger a,r,g,b;
; 43   : 	sq_getfloat(pVM, -8, &x);

	lea	eax, DWORD PTR _x$[ebp]
	push	eax
	push	-8					; fffffff8H
	mov	ecx, DWORD PTR _pVM$[ebp]
	push	ecx
	call	_sq_getfloat
	add	esp, 12					; 0000000cH

; 44   : 	sq_getfloat(pVM, -7, &y);

	lea	eax, DWORD PTR _y$[ebp]
	push	eax
	push	-7					; fffffff9H
	mov	ecx, DWORD PTR _pVM$[ebp]
	push	ecx
	call	_sq_getfloat
	add	esp, 12					; 0000000cH

; 45   : 	sq_getfloat(pVM, -6, &width);

	lea	eax, DWORD PTR _width$[ebp]
	push	eax
	push	-6					; fffffffaH
	mov	ecx, DWORD PTR _pVM$[ebp]
	push	ecx
	call	_sq_getfloat
	add	esp, 12					; 0000000cH

; 46   : 	sq_getfloat(pVM, -5, &height);

	lea	eax, DWORD PTR _height$[ebp]
	push	eax
	push	-5					; fffffffbH
	mov	ecx, DWORD PTR _pVM$[ebp]
	push	ecx
	call	_sq_getfloat
	add	esp, 12					; 0000000cH

; 47   : 	sq_getinteger(pVM, -4, &a);

	lea	eax, DWORD PTR _a$[ebp]
	push	eax
	push	-4					; fffffffcH
	mov	ecx, DWORD PTR _pVM$[ebp]
	push	ecx
	call	_sq_getinteger
	add	esp, 12					; 0000000cH

; 48   : 	sq_getinteger(pVM, -3, &r);

	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	push	-3					; fffffffdH
	mov	ecx, DWORD PTR _pVM$[ebp]
	push	ecx
	call	_sq_getinteger
	add	esp, 12					; 0000000cH

; 49   : 	sq_getinteger(pVM, -2, &g);

	lea	eax, DWORD PTR _g$[ebp]
	push	eax
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _pVM$[ebp]
	push	ecx
	call	_sq_getinteger
	add	esp, 12					; 0000000cH

; 50   : 	sq_getinteger(pVM, -1, &b);

	lea	eax, DWORD PTR _b$[ebp]
	push	eax
	push	-1
	mov	ecx, DWORD PTR _pVM$[ebp]
	push	ecx
	call	_sq_getinteger
	add	esp, 12					; 0000000cH

; 51   : 	pChatWindow->m_pD3DFont->DrawBox(x, y, width, height, 0, D3DCOLOR_ARGB(a, r, g, b));

	mov	eax, DWORD PTR _a$[ebp]
	and	eax, 255				; 000000ffH
	shl	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _r$[ebp]
	and	ecx, 255				; 000000ffH
	shl	ecx, 16					; 00000010H
	or	eax, ecx
	mov	edx, DWORD PTR _g$[ebp]
	and	edx, 255				; 000000ffH
	shl	edx, 8
	or	eax, edx
	mov	ecx, DWORD PTR _b$[ebp]
	and	ecx, 255				; 000000ffH
	or	eax, ecx
	push	eax
	push	ecx
	fldz
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _height$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _width$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _y$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _x$[ebp]
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A ; pChatWindow
	mov	ecx, DWORD PTR [edx+968]
	call	?DrawBox@CD3DFont@@QAEJMMMMMK@Z		; CD3DFont::DrawBox

; 52   : 	return 1;

	mov	eax, 1

; 53   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@sq_drawBox
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN12@sq_drawBox:
	DD	8
	DD	$LN11@sq_drawBox
$LN11@sq_drawBox:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@sq_drawBox
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@sq_drawBox
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN5@sq_drawBox
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN6@sq_drawBox
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN7@sq_drawBox
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN8@sq_drawBox
	DD	-80					; ffffffb0H
	DD	4
	DD	$LN9@sq_drawBox
	DD	-92					; ffffffa4H
	DD	4
	DD	$LN10@sq_drawBox
$LN10@sq_drawBox:
	DB	98					; 00000062H
	DB	0
$LN9@sq_drawBox:
	DB	103					; 00000067H
	DB	0
$LN8@sq_drawBox:
	DB	114					; 00000072H
	DB	0
$LN7@sq_drawBox:
	DB	97					; 00000061H
	DB	0
$LN6@sq_drawBox:
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	104					; 00000068H
	DB	116					; 00000074H
	DB	0
$LN5@sq_drawBox:
	DB	119					; 00000077H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN4@sq_drawBox:
	DB	121					; 00000079H
	DB	0
$LN3@sq_drawBox:
	DB	120					; 00000078H
	DB	0
?sq_drawBox@@YAHPAUSQVM@@@Z ENDP			; sq_drawBox
_TEXT	ENDS
PUBLIC	?sq_getResolution@@YAHPAUSQVM@@@Z		; sq_getResolution
EXTRN	_sq_push:PROC
EXTRN	_sq_arrayappend:PROC
EXTRN	_sq_pushinteger:PROC
EXTRN	_sq_newarray:PROC
EXTRN	?pD3DDevice@@3PAUIDirect3DDevice8@@A:DWORD	; pD3DDevice
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?sq_getResolution@@YAHPAUSQVM@@@Z
_TEXT	SEGMENT
_mode$ = -20						; size = 16
_pVM$ = 8						; size = 4
?sq_getResolution@@YAHPAUSQVM@@@Z PROC			; sq_getResolution, COMDAT

; 56   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 57   : 	D3DDISPLAYMODE mode;
; 58   : 	pD3DDevice->GetDisplayMode(&mode);

	mov	esi, esp
	lea	eax, DWORD PTR _mode$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice8@@A ; pD3DDevice
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice8@@A ; pD3DDevice
	push	eax
	mov	ecx, DWORD PTR [edx+32]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 59   : 	sq_newarray(pVM, 0);

	push	0
	mov	eax, DWORD PTR _pVM$[ebp]
	push	eax
	call	_sq_newarray
	add	esp, 8

; 60   : 	sq_pushinteger(pVM, mode.Width);

	mov	eax, DWORD PTR _mode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pVM$[ebp]
	push	ecx
	call	_sq_pushinteger
	add	esp, 8

; 61   : 	sq_arrayappend(pVM, -2);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _pVM$[ebp]
	push	eax
	call	_sq_arrayappend
	add	esp, 8

; 62   : 	sq_pushinteger(pVM, mode.Height);

	mov	eax, DWORD PTR _mode$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _pVM$[ebp]
	push	ecx
	call	_sq_pushinteger
	add	esp, 8

; 63   : 	sq_arrayappend(pVM, -2);

	push	-2					; fffffffeH
	mov	eax, DWORD PTR _pVM$[ebp]
	push	eax
	call	_sq_arrayappend
	add	esp, 8

; 64   : 	sq_push(pVM, -1);

	push	-1
	mov	eax, DWORD PTR _pVM$[ebp]
	push	eax
	call	_sq_push
	add	esp, 8

; 65   : 	return 1;

	mov	eax, 1

; 66   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@sq_getReso
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@sq_getReso:
	DD	1
	DD	$LN4@sq_getReso
$LN4@sq_getReso:
	DD	-20					; ffffffecH
	DD	16					; 00000010H
	DD	$LN3@sq_getReso
$LN3@sq_getReso:
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
?sq_getResolution@@YAHPAUSQVM@@@Z ENDP			; sq_getResolution
_TEXT	ENDS
PUBLIC	?SetInputsEnabled@CGame@@QAEX_N@Z		; CGame::SetInputsEnabled
PUBLIC	?sq_showCursor@@YAHPAUSQVM@@@Z			; sq_showCursor
EXTRN	_sq_pushbool:PROC
EXTRN	?pGame@@3PAVCGame@@A:DWORD			; pGame
EXTRN	?SetCursorVisible@CGUI@@QAEX_N@Z:PROC		; CGUI::SetCursorVisible
EXTRN	?pGUI@@3PAVCGUI@@A:DWORD			; pGUI
EXTRN	_sq_getbool:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?sq_showCursor@@YAHPAUSQVM@@@Z
_TEXT	SEGMENT
_show$ = -8						; size = 4
_pVM$ = 8						; size = 4
?sq_showCursor@@YAHPAUSQVM@@@Z PROC			; sq_showCursor, COMDAT

; 69   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 70   : 	SQBool show;
; 71   : 	sq_getbool(pVM, -1, &show);

	lea	eax, DWORD PTR _show$[ebp]
	push	eax
	push	-1
	mov	ecx, DWORD PTR _pVM$[ebp]
	push	ecx
	call	_sq_getbool
	add	esp, 12					; 0000000cH

; 72   : 
; 73   : 	pGUI->SetCursorVisible(show != 0);

	cmp	DWORD PTR _show$[ebp], 0
	setne	al
	movzx	ecx, al
	push	ecx
	mov	ecx, DWORD PTR ?pGUI@@3PAVCGUI@@A	; pGUI
	call	?SetCursorVisible@CGUI@@QAEX_N@Z	; CGUI::SetCursorVisible

; 74   : 	pGame->SetInputsEnabled(!show != 0);

	xor	eax, eax
	cmp	DWORD PTR _show$[ebp], 0
	sete	al
	test	eax, eax
	setne	cl
	movzx	edx, cl
	push	edx
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?SetInputsEnabled@CGame@@QAEX_N@Z	; CGame::SetInputsEnabled

; 75   : 
; 76   : 	sq_pushbool(pVM, true);

	push	1
	mov	eax, DWORD PTR _pVM$[ebp]
	push	eax
	call	_sq_pushbool
	add	esp, 8

; 77   : 	return 1;

	mov	eax, 1

; 78   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@sq_showCur
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@sq_showCur:
	DD	1
	DD	$LN4@sq_showCur
$LN4@sq_showCur:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@sq_showCur
$LN3@sq_showCur:
	DB	115					; 00000073H
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	0
?sq_showCursor@@YAHPAUSQVM@@@Z ENDP			; sq_showCursor
_TEXT	ENDS
PUBLIC	??0String@CEGUI@@QAE@PBD@Z			; CEGUI::String::String
PUBLIC	?sq_showMessage@@YAHPAUSQVM@@@Z			; sq_showMessage
EXTRN	??1String@CEGUI@@QAE@XZ:PROC			; CEGUI::String::~String
EXTRN	?ShowMessageBox@CGUI@@QAEXABVString@CEGUI@@0PAVSubscriberSlot@3@@Z:PROC ; CGUI::ShowMessageBox
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?sq_showMessage@@YAHPAUSQVM@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?sq_showMessage@@YAHPAUSQVM@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?sq_showMessage@@YAHPAUSQVM@@@Z$1
__ehfuncinfo$?sq_showMessage@@YAHPAUSQVM@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?sq_showMessage@@YAHPAUSQVM@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?sq_showMessage@@YAHPAUSQVM@@@Z
_TEXT	SEGMENT
$T209353 = -544						; size = 152
$T209354 = -384						; size = 152
_title$ = -32						; size = 4
_message$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_pVM$ = 8						; size = 4
?sq_showMessage@@YAHPAUSQVM@@@Z PROC			; sq_showMessage, COMDAT

; 81   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?sq_showMessage@@YAHPAUSQVM@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 536				; 00000218H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-548]
	mov	ecx, 134				; 00000086H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 82   : 	const char * message;
; 83   : 	const char * title;
; 84   : 	sq_getstring(pVM, -2, &title);

	lea	eax, DWORD PTR _title$[ebp]
	push	eax
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _pVM$[ebp]
	push	ecx
	call	_sq_getstring
	add	esp, 12					; 0000000cH

; 85   : 	sq_getstring(pVM, -1, &message);

	lea	eax, DWORD PTR _message$[ebp]
	push	eax
	push	-1
	mov	ecx, DWORD PTR _pVM$[ebp]
	push	ecx
	call	_sq_getstring
	add	esp, 12					; 0000000cH

; 86   : 
; 87   : 	pGUI->ShowMessageBox(message, title);

	mov	eax, DWORD PTR _title$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T209353[ebp]
	call	??0String@CEGUI@@QAE@PBD@Z		; CEGUI::String::String
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _message$[ebp]
	push	ecx
	lea	ecx, DWORD PTR $T209354[ebp]
	call	??0String@CEGUI@@QAE@PBD@Z		; CEGUI::String::String
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	push	0
	lea	edx, DWORD PTR $T209353[ebp]
	push	edx
	lea	eax, DWORD PTR $T209354[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pGUI@@3PAVCGUI@@A	; pGUI
	call	?ShowMessageBox@CGUI@@QAEXABVString@CEGUI@@0PAVSubscriberSlot@3@@Z ; CGUI::ShowMessageBox
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T209354[ebp]
	call	??1String@CEGUI@@QAE@XZ			; CEGUI::String::~String
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T209353[ebp]
	call	??1String@CEGUI@@QAE@XZ			; CEGUI::String::~String

; 88   : 
; 89   : 	sq_pushbool(pVM, true);

	push	1
	mov	eax, DWORD PTR _pVM$[ebp]
	push	eax
	call	_sq_pushbool
	add	esp, 8

; 90   : 	return 1;

	mov	eax, 1

; 91   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@sq_showMes
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 548				; 00000224H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@sq_showMes:
	DD	2
	DD	$LN8@sq_showMes
$LN8@sq_showMes:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN5@sq_showMes
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN6@sq_showMes
$LN6@sq_showMes:
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN5@sq_showMes:
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?sq_showMessage@@YAHPAUSQVM@@@Z$0:
	lea	ecx, DWORD PTR $T209353[ebp]
	jmp	??1String@CEGUI@@QAE@XZ			; CEGUI::String::~String
__unwindfunclet$?sq_showMessage@@YAHPAUSQVM@@@Z$1:
	lea	ecx, DWORD PTR $T209354[ebp]
	jmp	??1String@CEGUI@@QAE@XZ			; CEGUI::String::~String
__ehhandler$?sq_showMessage@@YAHPAUSQVM@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-552]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?sq_showMessage@@YAHPAUSQVM@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?sq_showMessage@@YAHPAUSQVM@@@Z ENDP			; sq_showMessage
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\client\game\cgame.h
;	COMDAT ?SetInputsEnabled@CGame@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_bEnabled$ = 8						; size = 1
?SetInputsEnabled@CGame@@QAEX_N@Z PROC			; CGame::SetInputsEnabled, COMDAT
; _this$ = ecx

; 63   : 	void	SetInputsEnabled(bool bEnabled) { m_bInputsEnabled = bEnabled; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _bEnabled$[ebp]
	mov	BYTE PTR [eax+8], cl
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetInputsEnabled@CGame@@QAEX_N@Z ENDP			; CGame::SetInputsEnabled
_TEXT	ENDS
PUBLIC	?assign@String@CEGUI@@QAEAAV12@PBD@Z		; CEGUI::String::assign
PUBLIC	?init@String@CEGUI@@AAEXXZ			; CEGUI::String::init
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\vendor\cegui\cegui\include\ceguistring.h
;	COMDAT ??0String@CEGUI@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_cstr$ = 8						; size = 4
??0String@CEGUI@@QAE@PBD@Z PROC				; CEGUI::String::String, COMDAT
; _this$ = ecx

; 606  : 	String(const char* cstr)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 607  : 	{
; 608  : 		init();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@String@CEGUI@@AAEXXZ		; CEGUI::String::init

; 609  : 		assign(cstr);

	mov	eax, DWORD PTR _cstr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@String@CEGUI@@QAEAAV12@PBD@Z	; CEGUI::String::assign

; 610  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0String@CEGUI@@QAE@PBD@Z ENDP				; CEGUI::String::String
_TEXT	ENDS
PUBLIC	?assign@String@CEGUI@@QAEAAV12@PBDI@Z		; CEGUI::String::assign
EXTRN	_strlen:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?assign@String@CEGUI@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_cstr$ = 8						; size = 4
?assign@String@CEGUI@@QAEAAV12@PBD@Z PROC		; CEGUI::String::assign, COMDAT
; _this$ = ecx

; 1554 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1555 : 		return assign(cstr, strlen(cstr));

	mov	eax, DWORD PTR _cstr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _cstr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@String@CEGUI@@QAEAAV12@PBDI@Z	; CEGUI::String::assign

; 1556 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@String@CEGUI@@QAEAAV12@PBD@Z ENDP		; CEGUI::String::assign
_TEXT	ENDS
PUBLIC	?setlen@String@CEGUI@@AAEXI@Z			; CEGUI::String::setlen
PUBLIC	?ptr@String@CEGUI@@QAEPAIXZ			; CEGUI::String::ptr
EXTRN	?grow@String@CEGUI@@AAE_NI@Z:PROC		; CEGUI::String::grow
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?assign@String@CEGUI@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
_i$129839 = -32						; size = 4
_pt$ = -20						; size = 4
_this$ = -8						; size = 4
_chars$ = 8						; size = 4
_chars_len$ = 12					; size = 4
?assign@String@CEGUI@@QAEAAV12@PBDI@Z PROC		; CEGUI::String::assign, COMDAT
; _this$ = ecx

; 1575 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1576 : 		grow(chars_len);

	mov	eax, DWORD PTR _chars_len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?grow@String@CEGUI@@AAE_NI@Z		; CEGUI::String::grow

; 1577 : 		utf32* pt = ptr();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ptr@String@CEGUI@@QAEPAIXZ		; CEGUI::String::ptr
	mov	DWORD PTR _pt$[ebp], eax

; 1578 : 
; 1579 : 		for (size_type i = 0; i < chars_len; ++i)

	mov	DWORD PTR _i$129839[ebp], 0
	jmp	SHORT $LN3@assign
$LN2@assign:
	mov	eax, DWORD PTR _i$129839[ebp]
	add	eax, 1
	mov	DWORD PTR _i$129839[ebp], eax
$LN3@assign:
	mov	eax, DWORD PTR _i$129839[ebp]
	cmp	eax, DWORD PTR _chars_len$[ebp]
	jae	SHORT $LN1@assign

; 1580 : 		{
; 1581 : 			*pt++ = static_cast<utf32>(static_cast<unsigned char>(*chars++));

	mov	eax, DWORD PTR _chars$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _pt$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _pt$[ebp]
	add	eax, 4
	mov	DWORD PTR _pt$[ebp], eax
	mov	ecx, DWORD PTR _chars$[ebp]
	add	ecx, 1
	mov	DWORD PTR _chars$[ebp], ecx

; 1582 : 		}

	jmp	SHORT $LN2@assign
$LN1@assign:

; 1583 : 
; 1584 : 		setlen(chars_len);

	mov	eax, DWORD PTR _chars_len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setlen@String@CEGUI@@AAEXI@Z		; CEGUI::String::setlen

; 1585 : 		return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1586 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@String@CEGUI@@QAEAAV12@PBDI@Z ENDP		; CEGUI::String::assign
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ptr@String@CEGUI@@QAEPAIXZ
_TEXT	SEGMENT
tv68 = -208						; size = 4
_this$ = -8						; size = 4
?ptr@String@CEGUI@@QAEPAIXZ PROC			; CEGUI::String::ptr, COMDAT
; _this$ = ecx

; 1206 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1207 : 		return (d_reserve > STR_QUICKBUFF_SIZE) ? d_buffer : d_quickbuff;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 32			; 00000020H
	jbe	SHORT $LN3@ptr
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+148]
	mov	DWORD PTR tv68[ebp], edx
	jmp	SHORT $LN4@ptr
$LN3@ptr:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	mov	DWORD PTR tv68[ebp], eax
$LN4@ptr:
	mov	eax, DWORD PTR tv68[ebp]

; 1208 : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ptr@String@CEGUI@@QAEPAIXZ ENDP			; CEGUI::String::ptr
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?setlen@String@CEGUI@@AAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_len$ = 8						; size = 4
?setlen@String@CEGUI@@AAEXI@Z PROC			; CEGUI::String::setlen, COMDAT
; _this$ = ecx

; 4797 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 4798 : 		d_cplength = len;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax], ecx

; 4799 : 		ptr()[len] = (utf32)(0);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ptr@String@CEGUI@@QAEPAIXZ		; CEGUI::String::ptr
	mov	ecx, DWORD PTR _len$[ebp]
	mov	DWORD PTR [eax+ecx*4], 0

; 4800 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setlen@String@CEGUI@@AAEXI@Z ENDP			; CEGUI::String::setlen
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?init@String@CEGUI@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?init@String@CEGUI@@AAEXXZ PROC				; CEGUI::String::init, COMDAT
; _this$ = ecx

; 4804 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 4805 : 		d_reserve			= STR_QUICKBUFF_SIZE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 32			; 00000020H

; 4806 : 		d_encodedbuff		= 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 4807 : 		d_encodedbufflen	= 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 4808 : 		d_encodeddatlen		= 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 4809 :         d_buffer            = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+148], 0

; 4810 : 		setlen(0);

	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setlen@String@CEGUI@@AAEXI@Z		; CEGUI::String::setlen

; 4811 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?init@String@CEGUI@@AAEXXZ ENDP				; CEGUI::String::init
_TEXT	ENDS
END
