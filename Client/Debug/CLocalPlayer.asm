; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	d:\vice-players-master\Client\net\CLocalPlayer.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ	; CGame::FindPlayerPed
PUBLIC	??0_PLAYER_SPAWN_INFO@@QAE@XZ			; _PLAYER_SPAWN_INFO::_PLAYER_SPAWN_INFO
PUBLIC	??0CLocalPlayer@@QAE@XZ				; CLocalPlayer::CLocalPlayer
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	?pGame@@3PAVCGame@@A:DWORD			; pGame
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\vice-players-master\client\net\clocalplayer.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??0CLocalPlayer@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0CLocalPlayer@@QAE@XZ PROC				; CLocalPlayer::CLocalPlayer, COMDAT
; _this$ = ecx

; 29   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0_PLAYER_SPAWN_INFO@@QAE@XZ

; 30   : 	m_bHasSpawnInfo = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 0

; 31   : 	m_pPlayerPed = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax

; 32   : 	m_bIsActive = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0

; 33   : 	m_bIsWasted = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], 0

; 34   : 	m_wLastKeys = 0;

	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+320], ax

; 35   : 	m_dwLastSendTick = GetTickCount();

	mov	esi, esp
	call	DWORD PTR __imp__GetTickCount@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+324], eax

; 36   : 	m_dwLastPassengerSendTick = GetTickCount();

	mov	esi, esp
	call	DWORD PTR __imp__GetTickCount@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+328], eax

; 37   : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0CLocalPlayer@@QAE@XZ ENDP				; CLocalPlayer::CLocalPlayer
_TEXT	ENDS
PUBLIC	??0Vector3@@QAE@XZ				; Vector3::Vector3
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_PLAYER_SPAWN_INFO@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_PLAYER_SPAWN_INFO@@QAE@XZ PROC			; _PLAYER_SPAWN_INFO::_PLAYER_SPAWN_INFO, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_PLAYER_SPAWN_INFO@@QAE@XZ ENDP			; _PLAYER_SPAWN_INFO::_PLAYER_SPAWN_INFO
_TEXT	ENDS
PUBLIC	?DestroyPlayer@CLocalPlayer@@QAEHXZ		; CLocalPlayer::DestroyPlayer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DestroyPlayer@CLocalPlayer@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?DestroyPlayer@CLocalPlayer@@QAEHXZ PROC		; CLocalPlayer::DestroyPlayer, COMDAT
; _this$ = ecx

; 42   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 43   : 	return TRUE;

	mov	eax, 1

; 44   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?DestroyPlayer@CLocalPlayer@@QAEHXZ ENDP		; CLocalPlayer::DestroyPlayer
_TEXT	ENDS
PUBLIC	?SendPauseNotification@CLocalPlayer@@QAEXH@Z	; CLocalPlayer::SendPauseNotification
PUBLIC	?GetGameLogic@CNetworkManager@@QAEPAVCSpawnSelection@@XZ ; CNetworkManager::GetGameLogic
PUBLIC	?SendOnFootFullSyncData@CLocalPlayer@@QAEXXZ	; CLocalPlayer::SendOnFootFullSyncData
PUBLIC	?GetOptimumOnFootSendRate@CLocalPlayer@@QAEHXZ	; CLocalPlayer::GetOptimumOnFootSendRate
PUBLIC	?EnablePassengerEngineAudio@CGame@@QAEXXZ	; CGame::EnablePassengerEngineAudio
PUBLIC	?SendInCarPassengerData@CLocalPlayer@@QAEXXZ	; CLocalPlayer::SendInCarPassengerData
PUBLIC	?DisablePassengerEngineAudio@CGame@@QAEXXZ	; CGame::DisablePassengerEngineAudio
PUBLIC	?SendInCarFullSyncData@CLocalPlayer@@QAEXXZ	; CLocalPlayer::SendInCarFullSyncData
PUBLIC	?GetOptimumInCarSendRate@CLocalPlayer@@QAEHXZ	; CLocalPlayer::GetOptimumInCarSendRate
PUBLIC	?GetAt@CVehicleManager@@QAEPAVCVehicle@@E@Z	; CVehicleManager::GetAt
PUBLIC	?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ ; CNetworkManager::GetVehicleManager
PUBLIC	?SendWastedNotification@CLocalPlayer@@QAEXXZ	; CLocalPlayer::SendWastedNotification
PUBLIC	?Process@CLocalPlayer@@QAEHXZ			; CLocalPlayer::Process
EXTRN	?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z:PROC ; CSpawnSelection::ProcessLocalPlayer
EXTRN	?IsMenuActive@CGame@@QAEHXZ:PROC		; CGame::IsMenuActive
EXTRN	?HandleClassSelection@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z:PROC ; CSpawnSelection::HandleClassSelection
EXTRN	?EnforceWorldBoundries@CVehicle@@QAEXMMMM@Z:PROC ; CVehicle::EnforceWorldBoundries
EXTRN	?FindIDFromGtaPtr@CVehicleManager@@QAEEPAU_VEHICLE_TYPE@@@Z:PROC ; CVehicleManager::FindIDFromGtaPtr
EXTRN	?GetGtaVehicle@CPlayerPed@@QAEPAU_VEHICLE_TYPE@@XZ:PROC ; CPlayerPed::GetGtaVehicle
EXTRN	?pNetowkManager@@3PAVCNetworkManager@@A:DWORD	; pNetowkManager
EXTRN	?IsAPassenger@CPlayerPed@@QAEHXZ:PROC		; CPlayerPed::IsAPassenger
EXTRN	?GetAction@CPlayerPed@@QAEEXZ:PROC		; CPlayerPed::GetAction
EXTRN	?SetDead@CPlayerPed@@QAEXXZ:PROC		; CPlayerPed::SetDead
EXTRN	?IsDead@CPlayerPed@@QAEHXZ:PROC			; CPlayerPed::IsDead
EXTRN	?IsInVehicle@CPlayerPed@@QAEHXZ:PROC		; CPlayerPed::IsInVehicle
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Process@CLocalPlayer@@QAEHXZ
_TEXT	SEGMENT
_dwThisTick$ = -68					; size = 4
_vehicleID$ = -53					; size = 1
_pVehicleManager$ = -44					; size = 4
_pGameVehicle$ = -32					; size = 4
_pGameLogic$ = -20					; size = 4
_this$ = -8						; size = 4
?Process@CLocalPlayer@@QAEHXZ PROC			; CLocalPlayer::Process, COMDAT
; _this$ = ecx

; 49   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 50   : 	CSpawnSelection *pGameLogic;
; 51   : 	CVehicle *pGameVehicle;
; 52   : 	CVehicleManager *pVehicleManager;
; 53   : 
; 54   : 	EntityId vehicleID;
; 55   : 
; 56   : 	DWORD dwThisTick;
; 57   : 
; 58   : 	if(m_bIsActive && !m_bIsWasted && (NULL != m_pPlayerPed))

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+56], 0
	je	$LN18@Process
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+60], 0
	jne	$LN18@Process
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	$LN18@Process

; 59   : 	{
; 60   : 		// If they're in a vehicle and their health reaches 0 we need to
; 61   : 		// kill them manually or they don't actually die
; 62   : 		if(m_pPlayerPed->IsInVehicle() && m_pPlayerPed->IsDead()) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?IsInVehicle@CPlayerPed@@QAEHXZ		; CPlayerPed::IsInVehicle
	test	eax, eax
	je	SHORT $LN17@Process
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?IsDead@CPlayerPed@@QAEHXZ		; CPlayerPed::IsDead
	test	eax, eax
	je	SHORT $LN17@Process

; 63   : 			m_pPlayerPed->SetDead();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?SetDead@CPlayerPed@@QAEXXZ		; CPlayerPed::SetDead
$LN17@Process:

; 64   : 		}
; 65   : 
; 66   : 		if((m_pPlayerPed->GetAction() == ACTION_WASTED) && !m_bIsWasted)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?GetAction@CPlayerPed@@QAEEXZ		; CPlayerPed::GetAction
	movzx	ecx, al
	cmp	ecx, 55					; 00000037H
	jne	SHORT $LN16@Process
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+60], 0
	jne	SHORT $LN16@Process

; 67   : 		{
; 68   : 			m_bIsWasted = TRUE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], 1

; 69   : 			m_bIsActive = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0

; 70   : 			SendWastedNotification();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SendWastedNotification@CLocalPlayer@@QAEXXZ ; CLocalPlayer::SendWastedNotification

; 71   : 		}
; 72   : 		else

	jmp	$LN7@Process
$LN16@Process:

; 73   : 		{
; 74   : 			dwThisTick = GetTickCount();

	mov	esi, esp
	call	DWORD PTR __imp__GetTickCount@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _dwThisTick$[ebp], eax

; 75   : 
; 76   : 			if(m_pPlayerPed->IsInVehicle())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?IsInVehicle@CPlayerPed@@QAEHXZ		; CPlayerPed::IsInVehicle
	test	eax, eax
	je	$LN14@Process

; 77   : 			{
; 78   : 				if(!m_pPlayerPed->IsAPassenger())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?IsAPassenger@CPlayerPed@@QAEHXZ	; CPlayerPed::IsAPassenger
	test	eax, eax
	jne	$LN13@Process

; 79   : 				{
; 80   : 					// DRIVING VEHICLE
; 81   : 
; 82   : 					// VEHICLE WORLD BOUNDS STUFF
; 83   : 					pVehicleManager = pNetowkManager->GetVehicleManager();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ ; CNetworkManager::GetVehicleManager
	mov	DWORD PTR _pVehicleManager$[ebp], eax

; 84   : 					vehicleID = pVehicleManager->FindIDFromGtaPtr(m_pPlayerPed->GetGtaVehicle());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?GetGtaVehicle@CPlayerPed@@QAEPAU_VEHICLE_TYPE@@XZ ; CPlayerPed::GetGtaVehicle
	push	eax
	mov	ecx, DWORD PTR _pVehicleManager$[ebp]
	call	?FindIDFromGtaPtr@CVehicleManager@@QAEEPAU_VEHICLE_TYPE@@@Z ; CVehicleManager::FindIDFromGtaPtr
	mov	BYTE PTR _vehicleID$[ebp], al

; 85   : 					if(vehicleID != INVALID_ENTITY_ID) {

	movzx	eax, BYTE PTR _vehicleID$[ebp]
	cmp	eax, 255				; 000000ffH
	je	SHORT $LN12@Process

; 86   : 						pGameVehicle = pVehicleManager->GetAt(vehicleID);

	movzx	eax, BYTE PTR _vehicleID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pVehicleManager$[ebp]
	call	?GetAt@CVehicleManager@@QAEPAVCVehicle@@E@Z ; CVehicleManager::GetAt
	mov	DWORD PTR _pGameVehicle$[ebp], eax

; 87   : 						pGameVehicle->EnforceWorldBoundries(
; 88   : 							pNetowkManager->m_WorldBounds[0],pNetowkManager->m_WorldBounds[1],
; 89   : 							pNetowkManager->m_WorldBounds[2],pNetowkManager->m_WorldBounds[3]);

	mov	eax, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	push	ecx
	fld	DWORD PTR [eax+352]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	push	ecx
	fld	DWORD PTR [ecx+348]
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	push	ecx
	fld	DWORD PTR [edx+344]
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	push	ecx
	fld	DWORD PTR [eax+340]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _pGameVehicle$[ebp]
	call	?EnforceWorldBoundries@CVehicle@@QAEXMMMM@Z ; CVehicle::EnforceWorldBoundries
$LN12@Process:

; 90   : 					}
; 91   : 
; 92   : 					if((dwThisTick - m_dwLastSendTick) > (UINT)GetOptimumInCarSendRate()) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _dwThisTick$[ebp]
	sub	esi, DWORD PTR [eax+324]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetOptimumInCarSendRate@CLocalPlayer@@QAEHXZ ; CLocalPlayer::GetOptimumInCarSendRate
	cmp	esi, eax
	jbe	SHORT $LN10@Process

; 93   : 						m_dwLastSendTick = GetTickCount();

	mov	esi, esp
	call	DWORD PTR __imp__GetTickCount@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+324], eax

; 94   : 					
; 95   : 						// send nothing while we're getting out.
; 96   : 						if(m_pPlayerPed->GetAction() != ACTION_EXITING_VEHICLE) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?GetAction@CPlayerPed@@QAEEXZ		; CPlayerPed::GetAction
	movzx	ecx, al
	cmp	ecx, 60					; 0000003cH
	je	SHORT $LN10@Process

; 97   : 							SendInCarFullSyncData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SendInCarFullSyncData@CLocalPlayer@@QAEXXZ ; CLocalPlayer::SendInCarFullSyncData
$LN10@Process:

; 98   : 						}
; 99   : 					}
; 100  : 
; 101  : 					pGame->DisablePassengerEngineAudio();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?DisablePassengerEngineAudio@CGame@@QAEXXZ ; CGame::DisablePassengerEngineAudio

; 102  : 				}
; 103  : 				else

	jmp	SHORT $LN9@Process
$LN13@Process:

; 104  : 				{
; 105  : 					// PASSENGER
; 106  : 
; 107  : 					if((dwThisTick - m_dwLastPassengerSendTick) > 1000) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _dwThisTick$[ebp]
	sub	ecx, DWORD PTR [eax+328]
	cmp	ecx, 1000				; 000003e8H
	jbe	SHORT $LN8@Process

; 108  : 						m_dwLastPassengerSendTick = GetTickCount();

	mov	esi, esp
	call	DWORD PTR __imp__GetTickCount@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+328], eax

; 109  : 						SendInCarPassengerData();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SendInCarPassengerData@CLocalPlayer@@QAEXXZ ; CLocalPlayer::SendInCarPassengerData
$LN8@Process:

; 110  : 					}
; 111  : 
; 112  : 					pGame->EnablePassengerEngineAudio();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?EnablePassengerEngineAudio@CGame@@QAEXXZ ; CGame::EnablePassengerEngineAudio
$LN9@Process:

; 113  : 				}
; 114  : 			}
; 115  : 			else

	jmp	SHORT $LN7@Process
$LN14@Process:

; 116  : 			{
; 117  : 				// ONFOOT
; 118  : 
; 119  : 				if((dwThisTick - m_dwLastSendTick) > (UINT)GetOptimumOnFootSendRate()) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR _dwThisTick$[ebp]
	sub	esi, DWORD PTR [eax+324]
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetOptimumOnFootSendRate@CLocalPlayer@@QAEHXZ ; CLocalPlayer::GetOptimumOnFootSendRate
	cmp	esi, eax
	jbe	SHORT $LN5@Process

; 120  : 					m_dwLastSendTick = GetTickCount();

	mov	esi, esp
	call	DWORD PTR __imp__GetTickCount@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+324], eax

; 121  : 
; 122  : 					// send nothing while we're getting in
; 123  : 					if(m_pPlayerPed->GetAction() != ACTION_DRIVING_VEHICLE)

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?GetAction@CPlayerPed@@QAEEXZ		; CPlayerPed::GetAction
	movzx	ecx, al
	cmp	ecx, 50					; 00000032H
	je	SHORT $LN5@Process

; 124  : 					{
; 125  : 						SendOnFootFullSyncData(); 

	mov	ecx, DWORD PTR _this$[ebp]
	call	?SendOnFootFullSyncData@CLocalPlayer@@QAEXXZ ; CLocalPlayer::SendOnFootFullSyncData
$LN5@Process:

; 126  : 					}
; 127  : 				}
; 128  : 
; 129  : 				pGame->DisablePassengerEngineAudio();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?DisablePassengerEngineAudio@CGame@@QAEXXZ ; CGame::DisablePassengerEngineAudio
$LN7@Process:

; 130  : 			}			
; 131  : 		}
; 132  : 	}
; 133  : 	else if ((m_bIsWasted == TRUE) && 

	jmp	SHORT $LN3@Process
$LN18@Process:

; 134  : 			(m_pPlayerPed->GetAction() != ACTION_WASTED))

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+60], 1
	jne	SHORT $LN3@Process
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?GetAction@CPlayerPed@@QAEEXZ		; CPlayerPed::GetAction
	movzx	ecx, al
	cmp	ecx, 55					; 00000037H
	je	SHORT $LN3@Process

; 135  : 	{
; 136  : 		m_bIsWasted = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], 0

; 137  : 		pNetowkManager->GetGameLogic()->HandleClassSelection(this);

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetGameLogic@CNetworkManager@@QAEPAVCSpawnSelection@@XZ ; CNetworkManager::GetGameLogic
	mov	ecx, eax
	call	?HandleClassSelection@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z ; CSpawnSelection::HandleClassSelection

; 138  : 		return TRUE;

	mov	eax, 1
	jmp	SHORT $LN19@Process
$LN3@Process:

; 139  : 	}
; 140  : 	if (pGame->IsMenuActive() != m_iPause)

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?IsMenuActive@CGame@@QAEHXZ		; CGame::IsMenuActive
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+332]
	je	SHORT $LN2@Process

; 141  : 	{
; 142  : 		m_iPause = pGame->IsMenuActive();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?IsMenuActive@CGame@@QAEHXZ		; CGame::IsMenuActive
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+332], eax

; 143  : 		SendPauseNotification(m_iPause);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+332]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SendPauseNotification@CLocalPlayer@@QAEXH@Z ; CLocalPlayer::SendPauseNotification
$LN2@Process:

; 144  : 	}
; 145  : 
; 146  : 	pGameLogic = pNetowkManager->GetGameLogic();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetGameLogic@CNetworkManager@@QAEPAVCSpawnSelection@@XZ ; CNetworkManager::GetGameLogic
	mov	DWORD PTR _pGameLogic$[ebp], eax

; 147  : 
; 148  : 	if(pGameLogic) pGameLogic->ProcessLocalPlayer(this);

	cmp	DWORD PTR _pGameLogic$[ebp], 0
	je	SHORT $LN1@Process
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pGameLogic$[ebp]
	call	?ProcessLocalPlayer@CSpawnSelection@@QAEXPAVCLocalPlayer@@@Z ; CSpawnSelection::ProcessLocalPlayer
$LN1@Process:

; 149  : 
; 150  : 	return TRUE;

	mov	eax, 1
$LN19@Process:

; 151  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Process@CLocalPlayer@@QAEHXZ ENDP			; CLocalPlayer::Process
_TEXT	ENDS
PUBLIC	??0AddressOrGUID@RakNet@@QAE@ABUSystemAddress@1@@Z ; RakNet::AddressOrGUID::AddressOrGUID
PUBLIC	?GetRakPeer@CNetworkManager@@QAEPAVRakPeerInterface@RakNet@@XZ ; CNetworkManager::GetRakPeer
PUBLIC	?GetCamera@CGame@@QAEPAVCCamera@@XZ		; CGame::GetCamera
PUBLIC	??$Write@E@BitStream@RakNet@@QAEXABE@Z		; RakNet::BitStream::Write<unsigned char>
PUBLIC	??0_PLAYER_SYNC_DATA@@QAE@XZ			; _PLAYER_SYNC_DATA::_PLAYER_SYNC_DATA
PUBLIC	__$ArrayPad$
EXTRN	??1BitStream@RakNet@@QAE@XZ:PROC		; RakNet::BitStream::~BitStream
EXTRN	?Write0@BitStream@RakNet@@QAEXXZ:PROC		; RakNet::BitStream::Write0
EXTRN	?GetCamera@CCamera@@QAEPAU_CAMERA_TYPE@@XZ:PROC	; CCamera::GetCamera
EXTRN	?Write1@BitStream@RakNet@@QAEXXZ:PROC		; RakNet::BitStream::Write1
EXTRN	?HasAmmoForCurrentWeapon@CPlayerPed@@QAEHXZ:PROC ; CPlayerPed::HasAmmoForCurrentWeapon
EXTRN	?IsFiring@CPlayerPed@@QAE_NXZ:PROC		; CPlayerPed::IsFiring
EXTRN	?Write@BitStream@RakNet@@QAEXPBDI@Z:PROC	; RakNet::BitStream::Write
EXTRN	?GetArmour@CPlayerPed@@QAEMXZ:PROC		; CPlayerPed::GetArmour
EXTRN	?GetHealth@CPlayerPed@@QAEMXZ:PROC		; CPlayerPed::GetHealth
EXTRN	?GetShootingFlags@CPlayerPed@@QAEEXZ:PROC	; CPlayerPed::GetShootingFlags
EXTRN	?GetCurrentWeapon@CPlayerPed@@QAEHXZ:PROC	; CPlayerPed::GetCurrentWeapon
EXTRN	?GetRotation@CPlayerPed@@QAEMXZ:PROC		; CPlayerPed::GetRotation
EXTRN	?GetPosition@CEntity@@QAEXPAUVector3@@@Z:PROC	; CEntity::GetPosition
EXTRN	?GetKeys@CPlayerPed@@QAEGXZ:PROC		; CPlayerPed::GetKeys
EXTRN	??0BitStream@RakNet@@QAE@XZ:PROC		; RakNet::BitStream::BitStream
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SendOnFootFullSyncData@CLocalPlayer@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SendOnFootFullSyncData@CLocalPlayer@@QAEXXZ$0
__ehfuncinfo$?SendOnFootFullSyncData@CLocalPlayer@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SendOnFootFullSyncData@CLocalPlayer@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?SendOnFootFullSyncData@CLocalPlayer@@QAEXXZ
_TEXT	SEGMENT
tv200 = -584						; size = 4
tv190 = -584						; size = 4
tv198 = -580						; size = 4
tv188 = -580						; size = 4
tv147 = -576						; size = 4
tv195 = -574						; size = 2
tv185 = -574						; size = 2
$T209602 = -565						; size = 1
$T209603 = -556						; size = 4
_pCamera$209305 = -352					; size = 4
_playerSyncData$209294 = -340				; size = 24
_bsPlayerSync$209293 = -308				; size = 276
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?SendOnFootFullSyncData@CLocalPlayer@@QAEXXZ PROC	; CLocalPlayer::SendOnFootFullSyncData, COMDAT
; _this$ = ecx

; 156  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SendOnFootFullSyncData@CLocalPlayer@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 572				; 0000023cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-584]
	mov	ecx, 143				; 0000008fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 157  : 	if(m_pPlayerPed)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	$LN3@SendOnFoot

; 158  : 	{
; 159  : 		RakNet::BitStream bsPlayerSync;

	lea	ecx, DWORD PTR _bsPlayerSync$209293[ebp]
	call	??0BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 160  : 		PLAYER_SYNC_DATA playerSyncData;

	lea	ecx, DWORD PTR _playerSyncData$209294[ebp]
	call	??0_PLAYER_SYNC_DATA@@QAE@XZ

; 161  : 
; 162  : 		// write packet id
; 163  : 		bsPlayerSync.Write((MessageID)ID_PLAYER_SYNC);

	mov	BYTE PTR $T209602[ebp], 114		; 00000072H
	lea	eax, DWORD PTR $T209602[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsPlayerSync$209293[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXABE@Z	; RakNet::BitStream::Write<unsigned char>

; 164  : 
; 165  : 		// get the player keys
; 166  : 		playerSyncData.wKeys = m_pPlayerPed->GetKeys();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?GetKeys@CPlayerPed@@QAEGXZ		; CPlayerPed::GetKeys
	mov	WORD PTR _playerSyncData$209294[ebp], ax

; 167  : 
; 168  : 		// get the player position
; 169  : 		m_pPlayerPed->GetPosition(&playerSyncData.vecPos);

	lea	eax, DWORD PTR _playerSyncData$209294[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?GetPosition@CEntity@@QAEXPAUVector3@@@Z ; CEntity::GetPosition

; 170  : 
; 171  : 		// get the player rotation
; 172  : 		playerSyncData.fRotation = m_pPlayerPed->GetRotation();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?GetRotation@CPlayerPed@@QAEMXZ		; CPlayerPed::GetRotation
	fstp	DWORD PTR _playerSyncData$209294[ebp+16]

; 173  : 		
; 174  : 		// get player current weapon (casted to a byte to save space)
; 175  : 		playerSyncData.byteCurrentWeapon = m_pPlayerPed->GetCurrentWeapon();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?GetCurrentWeapon@CPlayerPed@@QAEHXZ	; CPlayerPed::GetCurrentWeapon
	mov	BYTE PTR _playerSyncData$209294[ebp+20], al

; 176  : 		
; 177  : 		// get player shooting flags
; 178  : 		playerSyncData.byteShootingFlags = m_pPlayerPed->GetShootingFlags();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?GetShootingFlags@CPlayerPed@@QAEEXZ	; CPlayerPed::GetShootingFlags
	mov	BYTE PTR _playerSyncData$209294[ebp+21], al

; 179  : 		
; 180  : 		// get player health (casted to a byte to save space)
; 181  : 		playerSyncData.byteHealth = (BYTE)m_pPlayerPed->GetHealth();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?GetHealth@CPlayerPed@@QAEMXZ		; CPlayerPed::GetHealth
	fnstcw	WORD PTR tv185[ebp]
	movzx	eax, WORD PTR tv185[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv188[ebp], eax
	fldcw	WORD PTR tv188[ebp]
	fistp	DWORD PTR tv190[ebp]
	fldcw	WORD PTR tv185[ebp]
	mov	cl, BYTE PTR tv190[ebp]
	mov	BYTE PTR _playerSyncData$209294[ebp+22], cl

; 182  : 
; 183  : 		// get player armour (casted to a byte to save space)
; 184  : 		playerSyncData.byteArmour = (BYTE)m_pPlayerPed->GetArmour();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?GetArmour@CPlayerPed@@QAEMXZ		; CPlayerPed::GetArmour
	fnstcw	WORD PTR tv195[ebp]
	movzx	eax, WORD PTR tv195[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv198[ebp], eax
	fldcw	WORD PTR tv198[ebp]
	fistp	DWORD PTR tv200[ebp]
	fldcw	WORD PTR tv195[ebp]
	mov	cl, BYTE PTR tv200[ebp]
	mov	BYTE PTR _playerSyncData$209294[ebp+23], cl

; 185  : 
; 186  : 		// write player sync data struct
; 187  : 		bsPlayerSync.Write((char *)&playerSyncData, sizeof(PLAYER_SYNC_DATA));

	push	24					; 00000018H
	lea	eax, DWORD PTR _playerSyncData$209294[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsPlayerSync$209293[ebp]
	call	?Write@BitStream@RakNet@@QAEXPBDI@Z	; RakNet::BitStream::Write

; 188  : 
; 189  : 		// send aiming data if player has fire key held down and we have ammo
; 190  : 		if(m_pPlayerPed->IsFiring() && m_pPlayerPed->HasAmmoForCurrentWeapon())

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?IsFiring@CPlayerPed@@QAE_NXZ		; CPlayerPed::IsFiring
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@SendOnFoot
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?HasAmmoForCurrentWeapon@CPlayerPed@@QAEHXZ ; CPlayerPed::HasAmmoForCurrentWeapon
	test	eax, eax
	je	SHORT $LN2@SendOnFoot

; 191  : 		{
; 192  : 			// write a 1 bit to say the bit stream has aim sync data
; 193  : 			bsPlayerSync.Write1();

	lea	ecx, DWORD PTR _bsPlayerSync$209293[ebp]
	call	?Write1@BitStream@RakNet@@QAEXXZ	; RakNet::BitStream::Write1

; 194  : 
; 195  : 			// get the camera pointer
; 196  : 			CAMERA_TYPE * pCamera = pGame->GetCamera()->GetCamera();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?GetCamera@CGame@@QAEPAVCCamera@@XZ	; CGame::GetCamera
	mov	ecx, eax
	call	?GetCamera@CCamera@@QAEPAU_CAMERA_TYPE@@XZ ; CCamera::GetCamera
	mov	DWORD PTR _pCamera$209305[ebp], eax

; 197  : 
; 198  : 			// write the aim sync data
; 199  : 			bsPlayerSync.Write((char *)&pCamera->aim, sizeof(CAMERA_AIM));

	push	48					; 00000030H
	mov	eax, DWORD PTR _pCamera$209305[ebp]
	add	eax, 752				; 000002f0H
	push	eax
	lea	ecx, DWORD PTR _bsPlayerSync$209293[ebp]
	call	?Write@BitStream@RakNet@@QAEXPBDI@Z	; RakNet::BitStream::Write

; 200  : 		}
; 201  : 		else

	jmp	SHORT $LN1@SendOnFoot
$LN2@SendOnFoot:

; 202  : 		{
; 203  : 			// write a 0 bit to say the bit stream has no aim sync data
; 204  : 			bsPlayerSync.Write0();

	lea	ecx, DWORD PTR _bsPlayerSync$209293[ebp]
	call	?Write0@BitStream@RakNet@@QAEXXZ	; RakNet::BitStream::Write0
$LN1@SendOnFoot:

; 205  : 		}
; 206  : 
; 207  : 		// send sync data
; 208  : 		pNetowkManager->GetRakPeer()->Send(&bsPlayerSync,HIGH_PRIORITY,UNRELIABLE_SEQUENCED,0,UNASSIGNED_SYSTEM_ADDRESS,TRUE);

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRakPeer@CNetworkManager@@QAEPAVRakPeerInterface@RakNet@@XZ ; CNetworkManager::GetRakPeer
	mov	DWORD PTR tv147[ebp], eax
	push	0
	push	1
	sub	esp, 24					; 00000018H
	mov	ecx, esp
	mov	DWORD PTR $T209603[ebp], esp
	push	OFFSET _UNASSIGNED_SYSTEM_ADDRESS
	call	??0AddressOrGUID@RakNet@@QAE@ABUSystemAddress@1@@Z ; RakNet::AddressOrGUID::AddressOrGUID
	push	0
	push	1
	push	1
	lea	eax, DWORD PTR _bsPlayerSync$209293[ebp]
	push	eax
	mov	ecx, DWORD PTR tv147[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv147[ebp]
	mov	eax, DWORD PTR [edx+76]
	call	eax

; 209  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _bsPlayerSync$209293[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
$LN3@SendOnFoot:

; 210  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@SendOnFoot
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 584				; 00000248H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN11@SendOnFoot:
	DD	2
	DD	$LN10@SendOnFoot
$LN10@SendOnFoot:
	DD	-308					; fffffeccH
	DD	276					; 00000114H
	DD	$LN7@SendOnFoot
	DD	-340					; fffffeacH
	DD	24					; 00000018H
	DD	$LN8@SendOnFoot
$LN8@SendOnFoot:
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN7@SendOnFoot:
	DB	98					; 00000062H
	DB	115					; 00000073H
	DB	80					; 00000050H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SendOnFootFullSyncData@CLocalPlayer@@QAEXXZ$0:
	lea	ecx, DWORD PTR _bsPlayerSync$209293[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__ehhandler$?SendOnFootFullSyncData@CLocalPlayer@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-588]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SendOnFootFullSyncData@CLocalPlayer@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?SendOnFootFullSyncData@CLocalPlayer@@QAEXXZ ENDP	; CLocalPlayer::SendOnFootFullSyncData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_PLAYER_SYNC_DATA@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_PLAYER_SYNC_DATA@@QAE@XZ PROC			; _PLAYER_SYNC_DATA::_PLAYER_SYNC_DATA, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_PLAYER_SYNC_DATA@@QAE@XZ ENDP			; _PLAYER_SYNC_DATA::_PLAYER_SYNC_DATA
_TEXT	ENDS
PUBLIC	__real@4010000000000000
PUBLIC	??0_MATRIX4X4@@QAE@XZ				; _MATRIX4X4::_MATRIX4X4
PUBLIC	??0_VEHICLE_SYNC_DATA@@QAE@XZ			; _VEHICLE_SYNC_DATA::_VEHICLE_SYNC_DATA
PUBLIC	__$ArrayPad$
EXTRN	?GetHealth@CVehicle@@QAEMXZ:PROC		; CVehicle::GetHealth
EXTRN	?GetTurnSpeed@CPhysical@@QAEXPAUVector3@@@Z:PROC ; CPhysical::GetTurnSpeed
EXTRN	?GetMoveSpeed@CPhysical@@QAEXPAUVector3@@@Z:PROC ; CPhysical::GetMoveSpeed
EXTRN	_memcpy:PROC
EXTRN	?GetMatrix@CEntity@@QAEXPAU_MATRIX4X4@@@Z:PROC	; CEntity::GetMatrix
;	COMDAT __real@4010000000000000
CONST	SEGMENT
__real@4010000000000000 DQ 04010000000000000r	; 4
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SendInCarFullSyncData@CLocalPlayer@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SendInCarFullSyncData@CLocalPlayer@@QAEXXZ$0
__ehfuncinfo$?SendInCarFullSyncData@CLocalPlayer@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SendInCarFullSyncData@CLocalPlayer@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?SendInCarFullSyncData@CLocalPlayer@@QAEXXZ
_TEXT	SEGMENT
tv235 = -712						; size = 4
tv225 = -712						; size = 4
tv215 = -712						; size = 4
tv233 = -708						; size = 4
tv223 = -708						; size = 4
tv213 = -708						; size = 4
tv164 = -704						; size = 4
tv230 = -702						; size = 2
tv220 = -702						; size = 2
tv210 = -702						; size = 2
$T209626 = -693						; size = 1
$T209627 = -684						; size = 4
_pGameVehicle$209320 = -480				; size = 4
_pVehicleManager$209319 = -468				; size = 4
_matVehicle$209318 = -456				; size = 64
_vehicleSyncData$209317 = -384				; size = 68
_bsVehicleSync$209316 = -308				; size = 276
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?SendInCarFullSyncData@CLocalPlayer@@QAEXXZ PROC	; CLocalPlayer::SendInCarFullSyncData, COMDAT
; _this$ = ecx

; 215  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SendInCarFullSyncData@CLocalPlayer@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 700				; 000002bcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-712]
	mov	ecx, 175				; 000000afH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 216  : 	if(m_pPlayerPed)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	$LN3@SendInCarF

; 217  : 	{
; 218  : 		RakNet::BitStream bsVehicleSync;

	lea	ecx, DWORD PTR _bsVehicleSync$209316[ebp]
	call	??0BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 219  : 		VEHICLE_SYNC_DATA vehicleSyncData;

	lea	ecx, DWORD PTR _vehicleSyncData$209317[ebp]
	call	??0_VEHICLE_SYNC_DATA@@QAE@XZ

; 220  : 		MATRIX4X4 matVehicle;

	lea	ecx, DWORD PTR _matVehicle$209318[ebp]
	call	??0_MATRIX4X4@@QAE@XZ

; 221  : 		CVehicleManager * pVehicleManager = pNetowkManager->GetVehicleManager();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ ; CNetworkManager::GetVehicleManager
	mov	DWORD PTR _pVehicleManager$209319[ebp], eax

; 222  : 		CVehicle * pGameVehicle = NULL;

	mov	DWORD PTR _pGameVehicle$209320[ebp], 0

; 223  : 
; 224  : 		// write packet id
; 225  : 		bsVehicleSync.Write((MessageID)ID_VEHICLE_SYNC);

	mov	BYTE PTR $T209626[ebp], 115		; 00000073H
	lea	eax, DWORD PTR $T209626[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsVehicleSync$209316[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXABE@Z	; RakNet::BitStream::Write<unsigned char>

; 226  : 
; 227  : 		vehicleSyncData.vehicleID = pVehicleManager->FindIDFromGtaPtr(m_pPlayerPed->GetGtaVehicle());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?GetGtaVehicle@CPlayerPed@@QAEPAU_VEHICLE_TYPE@@XZ ; CPlayerPed::GetGtaVehicle
	push	eax
	mov	ecx, DWORD PTR _pVehicleManager$209319[ebp]
	call	?FindIDFromGtaPtr@CVehicleManager@@QAEEPAU_VEHICLE_TYPE@@@Z ; CVehicleManager::FindIDFromGtaPtr
	mov	BYTE PTR _vehicleSyncData$209317[ebp], al

; 228  : 
; 229  : 		// make sure we have a valid vehicle
; 230  : 		if(vehicleSyncData.vehicleID == INVALID_ENTITY_ID)

	movzx	eax, BYTE PTR _vehicleSyncData$209317[ebp]
	cmp	eax, 255				; 000000ffH
	jne	SHORT $LN2@SendInCarF

; 231  : 		{
; 232  : 			return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _bsVehicleSync$209316[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	jmp	$LN4@SendInCarF
$LN2@SendInCarF:

; 233  : 		}
; 234  : 
; 235  : 		// get the player keys
; 236  : 		vehicleSyncData.wKeys = m_pPlayerPed->GetKeys();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?GetKeys@CPlayerPed@@QAEGXZ		; CPlayerPed::GetKeys
	mov	WORD PTR _vehicleSyncData$209317[ebp+2], ax

; 237  : 
; 238  : 		// get the vehicle pointer
; 239  : 		pGameVehicle = pVehicleManager->GetAt(vehicleSyncData.vehicleID);

	movzx	eax, BYTE PTR _vehicleSyncData$209317[ebp]
	push	eax
	mov	ecx, DWORD PTR _pVehicleManager$209319[ebp]
	call	?GetAt@CVehicleManager@@QAEPAVCVehicle@@E@Z ; CVehicleManager::GetAt
	mov	DWORD PTR _pGameVehicle$209320[ebp], eax

; 240  : 
; 241  : 		// make sure the vehicle pointer is valid
; 242  : 		if(!pGameVehicle)

	cmp	DWORD PTR _pGameVehicle$209320[ebp], 0
	jne	SHORT $LN1@SendInCarF

; 243  : 		{
; 244  : 			return;

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _bsVehicleSync$209316[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	jmp	$LN4@SendInCarF
$LN1@SendInCarF:

; 245  : 		}
; 246  : 
; 247  : 		// get the vehicle matrix
; 248  : 		pGameVehicle->GetMatrix(&matVehicle);

	lea	eax, DWORD PTR _matVehicle$209318[ebp]
	push	eax
	mov	ecx, DWORD PTR _pGameVehicle$209320[ebp]
	call	?GetMatrix@CEntity@@QAEXPAU_MATRIX4X4@@@Z ; CEntity::GetMatrix

; 249  : 
; 250  : 		// copy the roll and direction vectors
; 251  : 		memcpy(&vehicleSyncData.vecRoll, &matVehicle.vLookRight, sizeof(Vector3));

	push	12					; 0000000cH
	lea	eax, DWORD PTR _matVehicle$209318[ebp]
	push	eax
	lea	ecx, DWORD PTR _vehicleSyncData$209317[ebp+4]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 252  : 		memcpy(&vehicleSyncData.vecDirection, &matVehicle.vLookUp, sizeof(Vector3));

	push	12					; 0000000cH
	lea	eax, DWORD PTR _matVehicle$209318[ebp+16]
	push	eax
	lea	ecx, DWORD PTR _vehicleSyncData$209317[ebp+16]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 253  : 		// pack the roll and direction vectors
; 254  : 		//CompressVector1(&matVehicle.vLookRight, &vehicleSyncData.cvecRoll);
; 255  : 		//CompressVector1(&matVehicle.vLookUp, &vehicleSyncData.cvecDirection);
; 256  : 
; 257  : 		// copy the vehicle position
; 258  : 		memcpy(&vehicleSyncData.vecPos, &matVehicle.vPos, sizeof(Vector3));

	push	12					; 0000000cH
	lea	eax, DWORD PTR _matVehicle$209318[ebp+48]
	push	eax
	lea	ecx, DWORD PTR _vehicleSyncData$209317[ebp+28]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 259  : 
; 260  : 		// get the vehicle move speed
; 261  : 		pGameVehicle->GetMoveSpeed(&vehicleSyncData.vecMoveSpeed);

	lea	eax, DWORD PTR _vehicleSyncData$209317[ebp+40]
	push	eax
	mov	ecx, DWORD PTR _pGameVehicle$209320[ebp]
	call	?GetMoveSpeed@CPhysical@@QAEXPAUVector3@@@Z ; CPhysical::GetMoveSpeed

; 262  : 
; 263  : 		// get the vehicle turn speed
; 264  : 		pGameVehicle->GetTurnSpeed(&vehicleSyncData.vecTurnSpeed);

	lea	eax, DWORD PTR _vehicleSyncData$209317[ebp+52]
	push	eax
	mov	ecx, DWORD PTR _pGameVehicle$209320[ebp]
	call	?GetTurnSpeed@CPhysical@@QAEXPAUVector3@@@Z ; CPhysical::GetTurnSpeed

; 265  : 
; 266  : 		// pack the vehicle health
; 267  : 		vehicleSyncData.byteVehicleHealth = PACK_VEHICLE_HEALTH(pGameVehicle->GetHealth());

	mov	ecx, DWORD PTR _pGameVehicle$209320[ebp]
	call	?GetHealth@CVehicle@@QAEMXZ		; CVehicle::GetHealth
	fdiv	QWORD PTR __real@4010000000000000
	fnstcw	WORD PTR tv210[ebp]
	movzx	eax, WORD PTR tv210[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv213[ebp], eax
	fldcw	WORD PTR tv213[ebp]
	fistp	DWORD PTR tv215[ebp]
	fldcw	WORD PTR tv210[ebp]
	mov	al, BYTE PTR tv215[ebp]
	mov	BYTE PTR _vehicleSyncData$209317[ebp+64], al

; 268  : 
; 269  : 		// get the player health (casted to a byte to save space)
; 270  : 		vehicleSyncData.bytePlayerHealth = (BYTE)m_pPlayerPed->GetHealth();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?GetHealth@CPlayerPed@@QAEMXZ		; CPlayerPed::GetHealth
	fnstcw	WORD PTR tv220[ebp]
	movzx	eax, WORD PTR tv220[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv223[ebp], eax
	fldcw	WORD PTR tv223[ebp]
	fistp	DWORD PTR tv225[ebp]
	fldcw	WORD PTR tv220[ebp]
	mov	cl, BYTE PTR tv225[ebp]
	mov	BYTE PTR _vehicleSyncData$209317[ebp+65], cl

; 271  : 
; 272  : 		// get the player armour (casted to a byte to save space)
; 273  : 		vehicleSyncData.bytePlayerArmour = (BYTE)m_pPlayerPed->GetArmour();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?GetArmour@CPlayerPed@@QAEMXZ		; CPlayerPed::GetArmour
	fnstcw	WORD PTR tv230[ebp]
	movzx	eax, WORD PTR tv230[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv233[ebp], eax
	fldcw	WORD PTR tv233[ebp]
	fistp	DWORD PTR tv235[ebp]
	fldcw	WORD PTR tv230[ebp]
	mov	cl, BYTE PTR tv235[ebp]
	mov	BYTE PTR _vehicleSyncData$209317[ebp+66], cl

; 274  : 
; 275  : 		// write vehicle sync struct to bit stream
; 276  : 		bsVehicleSync.Write((char *)&vehicleSyncData, sizeof(VEHICLE_SYNC_DATA));

	push	68					; 00000044H
	lea	eax, DWORD PTR _vehicleSyncData$209317[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsVehicleSync$209316[ebp]
	call	?Write@BitStream@RakNet@@QAEXPBDI@Z	; RakNet::BitStream::Write

; 277  : 
; 278  : 		// send sync data
; 279  : 		pNetowkManager->GetRakPeer()->Send(&bsVehicleSync,HIGH_PRIORITY,UNRELIABLE_SEQUENCED,0,UNASSIGNED_SYSTEM_ADDRESS,TRUE);

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRakPeer@CNetworkManager@@QAEPAVRakPeerInterface@RakNet@@XZ ; CNetworkManager::GetRakPeer
	mov	DWORD PTR tv164[ebp], eax
	push	0
	push	1
	sub	esp, 24					; 00000018H
	mov	ecx, esp
	mov	DWORD PTR $T209627[ebp], esp
	push	OFFSET _UNASSIGNED_SYSTEM_ADDRESS
	call	??0AddressOrGUID@RakNet@@QAE@ABUSystemAddress@1@@Z ; RakNet::AddressOrGUID::AddressOrGUID
	push	0
	push	1
	push	1
	lea	eax, DWORD PTR _bsVehicleSync$209316[ebp]
	push	eax
	mov	ecx, DWORD PTR tv164[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv164[ebp]
	mov	eax, DWORD PTR [edx+76]
	call	eax

; 280  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _bsVehicleSync$209316[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
$LN3@SendInCarF:
$LN4@SendInCarF:

; 281  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@SendInCarF
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 712				; 000002c8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN12@SendInCarF:
	DD	3
	DD	$LN11@SendInCarF
$LN11@SendInCarF:
	DD	-308					; fffffeccH
	DD	276					; 00000114H
	DD	$LN7@SendInCarF
	DD	-384					; fffffe80H
	DD	68					; 00000044H
	DD	$LN8@SendInCarF
	DD	-456					; fffffe38H
	DD	64					; 00000040H
	DD	$LN9@SendInCarF
$LN9@SendInCarF:
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	86					; 00000056H
	DB	101					; 00000065H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN8@SendInCarF:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN7@SendInCarF:
	DB	98					; 00000062H
	DB	115					; 00000073H
	DB	86					; 00000056H
	DB	101					; 00000065H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SendInCarFullSyncData@CLocalPlayer@@QAEXXZ$0:
	lea	ecx, DWORD PTR _bsVehicleSync$209316[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__ehhandler$?SendInCarFullSyncData@CLocalPlayer@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-716]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SendInCarFullSyncData@CLocalPlayer@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?SendInCarFullSyncData@CLocalPlayer@@QAEXXZ ENDP	; CLocalPlayer::SendInCarFullSyncData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_VEHICLE_SYNC_DATA@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_VEHICLE_SYNC_DATA@@QAE@XZ PROC			; _VEHICLE_SYNC_DATA::_VEHICLE_SYNC_DATA, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_VEHICLE_SYNC_DATA@@QAE@XZ ENDP			; _VEHICLE_SYNC_DATA::_VEHICLE_SYNC_DATA
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0_MATRIX4X4@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_MATRIX4X4@@QAE@XZ PROC				; _MATRIX4X4::_MATRIX4X4, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_MATRIX4X4@@QAE@XZ ENDP				; _MATRIX4X4::_MATRIX4X4
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?GetPassengerSeat@CPlayerPed@@QAEEXZ:PROC	; CPlayerPed::GetPassengerSeat
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SendInCarPassengerData@CLocalPlayer@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SendInCarPassengerData@CLocalPlayer@@QAEXXZ$0
__ehfuncinfo$?SendInCarPassengerData@CLocalPlayer@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SendInCarPassengerData@CLocalPlayer@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?SendInCarPassengerData@CLocalPlayer@@QAEXXZ
_TEXT	SEGMENT
tv129 = -588						; size = 4
$T209649 = -577						; size = 1
$T209650 = -568						; size = 4
_bytePassengerSeat$ = -361				; size = 1
_vehicleID$ = -349					; size = 1
_pVehicleManager$ = -340				; size = 4
_vPos$ = -328						; size = 12
_bsPassengerSync$ = -308				; size = 276
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?SendInCarPassengerData@CLocalPlayer@@QAEXXZ PROC	; CLocalPlayer::SendInCarPassengerData, COMDAT
; _this$ = ecx

; 286  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SendInCarPassengerData@CLocalPlayer@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 576				; 00000240H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-588]
	mov	ecx, 144				; 00000090H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 287  : 	RakNet::BitStream bsPassengerSync;

	lea	ecx, DWORD PTR _bsPassengerSync$[ebp]
	call	??0BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 288  : 	Vector3 vPos;

	lea	ecx, DWORD PTR _vPos$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 289  : 	CVehicleManager *pVehicleManager = pNetowkManager->GetVehicleManager();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ ; CNetworkManager::GetVehicleManager
	mov	DWORD PTR _pVehicleManager$[ebp], eax

; 290  : 
; 291  : 	EntityId vehicleID = pVehicleManager->FindIDFromGtaPtr(m_pPlayerPed->GetGtaVehicle());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?GetGtaVehicle@CPlayerPed@@QAEPAU_VEHICLE_TYPE@@XZ ; CPlayerPed::GetGtaVehicle
	push	eax
	mov	ecx, DWORD PTR _pVehicleManager$[ebp]
	call	?FindIDFromGtaPtr@CVehicleManager@@QAEEPAU_VEHICLE_TYPE@@@Z ; CVehicleManager::FindIDFromGtaPtr
	mov	BYTE PTR _vehicleID$[ebp], al

; 292  : 	if(vehicleID == INVALID_ENTITY_ID) return;

	movzx	eax, BYTE PTR _vehicleID$[ebp]
	cmp	eax, 255				; 000000ffH
	jne	SHORT $LN1@SendInCarP
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _bsPassengerSync$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	jmp	$LN2@SendInCarP
$LN1@SendInCarP:

; 293  : 
; 294  : 	BYTE bytePassengerSeat = m_pPlayerPed->GetPassengerSeat();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?GetPassengerSeat@CPlayerPed@@QAEEXZ	; CPlayerPed::GetPassengerSeat
	mov	BYTE PTR _bytePassengerSeat$[ebp], al

; 295  : 	
; 296  : 	m_pPlayerPed->GetPosition(&vPos);

	lea	eax, DWORD PTR _vPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?GetPosition@CEntity@@QAEXPAUVector3@@@Z ; CEntity::GetPosition

; 297  : 	
; 298  : 	bsPassengerSync.Write((MessageID)ID_PASSENGER_SYNC);

	mov	BYTE PTR $T209649[ebp], 116		; 00000074H
	lea	eax, DWORD PTR $T209649[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsPassengerSync$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXABE@Z	; RakNet::BitStream::Write<unsigned char>

; 299  : 	bsPassengerSync.Write(vehicleID);

	lea	eax, DWORD PTR _vehicleID$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsPassengerSync$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXABE@Z	; RakNet::BitStream::Write<unsigned char>

; 300  : 	bsPassengerSync.Write(bytePassengerSeat);

	lea	eax, DWORD PTR _bytePassengerSeat$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsPassengerSync$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXABE@Z	; RakNet::BitStream::Write<unsigned char>

; 301  : 	bsPassengerSync.Write((char *)&vPos, sizeof(Vector3));

	push	12					; 0000000cH
	lea	eax, DWORD PTR _vPos$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsPassengerSync$[ebp]
	call	?Write@BitStream@RakNet@@QAEXPBDI@Z	; RakNet::BitStream::Write

; 302  : 	pNetowkManager->GetRakPeer()->Send(&bsPassengerSync, HIGH_PRIORITY, UNRELIABLE_SEQUENCED, 0, UNASSIGNED_SYSTEM_ADDRESS, true);

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRakPeer@CNetworkManager@@QAEPAVRakPeerInterface@RakNet@@XZ ; CNetworkManager::GetRakPeer
	mov	DWORD PTR tv129[ebp], eax
	push	0
	push	1
	sub	esp, 24					; 00000018H
	mov	ecx, esp
	mov	DWORD PTR $T209650[ebp], esp
	push	OFFSET _UNASSIGNED_SYSTEM_ADDRESS
	call	??0AddressOrGUID@RakNet@@QAE@ABUSystemAddress@1@@Z ; RakNet::AddressOrGUID::AddressOrGUID
	push	0
	push	1
	push	1
	lea	eax, DWORD PTR _bsPassengerSync$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv129[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR tv129[ebp]
	mov	eax, DWORD PTR [edx+76]
	call	eax

; 303  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _bsPassengerSync$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
$LN2@SendInCarP:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@SendInCarP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 588				; 0000024cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN11@SendInCarP:
	DD	4
	DD	$LN10@SendInCarP
$LN10@SendInCarP:
	DD	-308					; fffffeccH
	DD	276					; 00000114H
	DD	$LN5@SendInCarP
	DD	-328					; fffffeb8H
	DD	12					; 0000000cH
	DD	$LN6@SendInCarP
	DD	-349					; fffffea3H
	DD	1
	DD	$LN7@SendInCarP
	DD	-361					; fffffe97H
	DD	1
	DD	$LN8@SendInCarP
$LN8@SendInCarP:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
$LN7@SendInCarP:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
$LN6@SendInCarP:
	DB	118					; 00000076H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN5@SendInCarP:
	DB	98					; 00000062H
	DB	115					; 00000073H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SendInCarPassengerData@CLocalPlayer@@QAEXXZ$0:
	lea	ecx, DWORD PTR _bsPassengerSync$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__ehhandler$?SendInCarPassengerData@CLocalPlayer@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-592]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SendInCarPassengerData@CLocalPlayer@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?SendInCarPassengerData@CLocalPlayer@@QAEXXZ ENDP	; CLocalPlayer::SendInCarPassengerData
PUBLIC	__real@0000000000000000
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?GetOptimumInCarSendRate@CLocalPlayer@@QAEHXZ
_TEXT	SEGMENT
_vehicleID$ = -61					; size = 1
_vecMoveSpeed$ = -52					; size = 12
_pGameVehicle$ = -32					; size = 4
_pVehicleManager$ = -20					; size = 4
_this$ = -8						; size = 4
?GetOptimumInCarSendRate@CLocalPlayer@@QAEHXZ PROC	; CLocalPlayer::GetOptimumInCarSendRate, COMDAT
; _this$ = ecx

; 308  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 309  : 	CVehicleManager *pVehicleManager = pNetowkManager->GetVehicleManager();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ ; CNetworkManager::GetVehicleManager
	mov	DWORD PTR _pVehicleManager$[ebp], eax

; 310  : 	CVehicle	 *pGameVehicle=NULL;

	mov	DWORD PTR _pGameVehicle$[ebp], 0

; 311  : 	Vector3		 vecMoveSpeed;

	lea	ecx, DWORD PTR _vecMoveSpeed$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 312  : 	EntityId		 vehicleID=0;

	mov	BYTE PTR _vehicleID$[ebp], 0

; 313  : 
; 314  : 	if(m_pPlayerPed)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@GetOptimum

; 315  : 	{
; 316  : 		vehicleID = pVehicleManager->FindIDFromGtaPtr(m_pPlayerPed->GetGtaVehicle());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?GetGtaVehicle@CPlayerPed@@QAEPAU_VEHICLE_TYPE@@XZ ; CPlayerPed::GetGtaVehicle
	push	eax
	mov	ecx, DWORD PTR _pVehicleManager$[ebp]
	call	?FindIDFromGtaPtr@CVehicleManager@@QAEEPAU_VEHICLE_TYPE@@@Z ; CVehicleManager::FindIDFromGtaPtr
	mov	BYTE PTR _vehicleID$[ebp], al

; 317  : 		pGameVehicle = pVehicleManager->GetAt(vehicleID);

	movzx	eax, BYTE PTR _vehicleID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pVehicleManager$[ebp]
	call	?GetAt@CVehicleManager@@QAEPAVCVehicle@@E@Z ; CVehicleManager::GetAt
	mov	DWORD PTR _pGameVehicle$[ebp], eax

; 318  : 
; 319  : 		if(pGameVehicle)

	cmp	DWORD PTR _pGameVehicle$[ebp], 0
	je	SHORT $LN2@GetOptimum

; 320  : 		{
; 321  : 			pGameVehicle->GetMoveSpeed(&vecMoveSpeed);

	lea	eax, DWORD PTR _vecMoveSpeed$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pGameVehicle$[ebp]
	call	?GetMoveSpeed@CPhysical@@QAEXPAUVector3@@@Z ; CPhysical::GetMoveSpeed

; 322  : 
; 323  : 			// is the vehicle moving?
; 324  : 			if(!((vecMoveSpeed.X == 0.0f) && (vecMoveSpeed.Y == 0.0f)))

	fld	DWORD PTR _vecMoveSpeed$[ebp]
	fcomp	QWORD PTR __real@0000000000000000
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN1@GetOptimum
	fld	DWORD PTR _vecMoveSpeed$[ebp+4]
	fcomp	QWORD PTR __real@0000000000000000
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN2@GetOptimum
$LN1@GetOptimum:

; 325  : 			{
; 326  : 				return INCAR_SENDRATE_ACTIVE;

	mov	eax, 66					; 00000042H
	jmp	SHORT $LN5@GetOptimum
$LN2@GetOptimum:

; 327  : 			}
; 328  : 		}
; 329  : 	}
; 330  : 
; 331  : 	return INCAR_SENDRATE_IDLE;

	mov	eax, 200				; 000000c8H
$LN5@GetOptimum:

; 332  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@GetOptimum
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@GetOptimum:
	DD	1
	DD	$LN8@GetOptimum
$LN8@GetOptimum:
	DD	-52					; ffffffccH
	DD	12					; 0000000cH
	DD	$LN7@GetOptimum
$LN7@GetOptimum:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	77					; 0000004dH
	DB	111					; 0000006fH
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
?GetOptimumInCarSendRate@CLocalPlayer@@QAEHXZ ENDP	; CLocalPlayer::GetOptimumInCarSendRate
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetOptimumOnFootSendRate@CLocalPlayer@@QAEHXZ
_TEXT	SEGMENT
_vecMoveSpeed$ = -28					; size = 12
_this$ = -8						; size = 4
?GetOptimumOnFootSendRate@CLocalPlayer@@QAEHXZ PROC	; CLocalPlayer::GetOptimumOnFootSendRate, COMDAT
; _this$ = ecx

; 337  : {	

	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 338  : 	Vector3	 vecMoveSpeed;

	lea	ecx, DWORD PTR _vecMoveSpeed$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 339  : 
; 340  : 	if(m_pPlayerPed)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@GetOptimum@2

; 341  : 	{
; 342  : 		m_pPlayerPed->GetMoveSpeed(&vecMoveSpeed);

	lea	eax, DWORD PTR _vecMoveSpeed$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?GetMoveSpeed@CPhysical@@QAEXPAUVector3@@@Z ; CPhysical::GetMoveSpeed

; 343  : 
; 344  : 		// is the player moving?
; 345  : 		if(!((vecMoveSpeed.X == 0.0f) && (vecMoveSpeed.Y == 0.0f)))

	fld	DWORD PTR _vecMoveSpeed$[ebp]
	fcomp	QWORD PTR __real@0000000000000000
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN1@GetOptimum@2
	fld	DWORD PTR _vecMoveSpeed$[ebp+4]
	fcomp	QWORD PTR __real@0000000000000000
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN2@GetOptimum@2
$LN1@GetOptimum@2:

; 346  : 		{
; 347  : 			return ONFOOT_SENDRATE_ACTIVE;

	mov	eax, 30					; 0000001eH
	jmp	SHORT $LN4@GetOptimum@2
$LN2@GetOptimum@2:

; 348  : 		}
; 349  : 	}
; 350  : 
; 351  : 	return ONFOOT_SENDRATE_IDLE;

	mov	eax, 60					; 0000003cH
$LN4@GetOptimum@2:

; 352  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@GetOptimum@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN8@GetOptimum@2:
	DD	1
	DD	$LN7@GetOptimum@2
$LN7@GetOptimum@2:
	DD	-28					; ffffffe4H
	DD	12					; 0000000cH
	DD	$LN6@GetOptimum@2
$LN6@GetOptimum@2:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	77					; 0000004dH
	DB	111					; 0000006fH
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
?GetOptimumOnFootSendRate@CLocalPlayer@@QAEHXZ ENDP	; CLocalPlayer::GetOptimumOnFootSendRate
_TEXT	ENDS
PUBLIC	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ	; CNetworkManager::GetRPC4
PUBLIC	??_C@_05PGGAFPFO@Death?$AA@			; `string'
PUBLIC	__$ArrayPad$
EXTRN	?Call@RPC4@RakNet@@QAEXPBDPAVBitStream@2@W4PacketPriority@@W4PacketReliability@@DUAddressOrGUID@2@_N@Z:PROC ; RakNet::RPC4::Call
EXTRN	?FindDeathReasonAndResponsiblePlayer@CPlayerPed@@QAEEPAE@Z:PROC ; CPlayerPed::FindDeathReasonAndResponsiblePlayer
;	COMDAT ??_C@_05PGGAFPFO@Death?$AA@
CONST	SEGMENT
??_C@_05PGGAFPFO@Death?$AA@ DB 'Death', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SendWastedNotification@CLocalPlayer@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SendWastedNotification@CLocalPlayer@@QAEXXZ$0
__ehfuncinfo$?SendWastedNotification@CLocalPlayer@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SendWastedNotification@CLocalPlayer@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?SendWastedNotification@CLocalPlayer@@QAEXXZ
_TEXT	SEGMENT
$T209679 = -548						; size = 4
_byteWhoWasResponsible$ = -341				; size = 1
_byteDeathReason$ = -329				; size = 1
_bsPlayerDeath$ = -320					; size = 276
_pGameLogic$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?SendWastedNotification@CLocalPlayer@@QAEXXZ PROC	; CLocalPlayer::SendWastedNotification, COMDAT
; _this$ = ecx

; 357  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SendWastedNotification@CLocalPlayer@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 540				; 0000021cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-552]
	mov	ecx, 135				; 00000087H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 358  : 	CSpawnSelection *pGameLogic;
; 359  : 	RakNet::BitStream bsPlayerDeath;

	lea	ecx, DWORD PTR _bsPlayerDeath$[ebp]
	call	??0BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 360  : 	BYTE byteDeathReason;
; 361  : 	BYTE byteWhoWasResponsible;
; 362  : 
; 363  : 	byteDeathReason = m_pPlayerPed->FindDeathReasonAndResponsiblePlayer(&byteWhoWasResponsible);

	lea	eax, DWORD PTR _byteWhoWasResponsible$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?FindDeathReasonAndResponsiblePlayer@CPlayerPed@@QAEEPAE@Z ; CPlayerPed::FindDeathReasonAndResponsiblePlayer
	mov	BYTE PTR _byteDeathReason$[ebp], al

; 364  : 	
; 365  : 	bsPlayerDeath.Write(byteDeathReason);

	lea	eax, DWORD PTR _byteDeathReason$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsPlayerDeath$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXABE@Z	; RakNet::BitStream::Write<unsigned char>

; 366  : 	bsPlayerDeath.Write(byteWhoWasResponsible);

	lea	eax, DWORD PTR _byteWhoWasResponsible$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsPlayerDeath$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXABE@Z	; RakNet::BitStream::Write<unsigned char>

; 367  : 	pNetowkManager->GetRPC4()->Call("Death",&bsPlayerDeath,HIGH_PRIORITY,RELIABLE_SEQUENCED,0,UNASSIGNED_SYSTEM_ADDRESS,TRUE);

	push	1
	sub	esp, 24					; 00000018H
	mov	ecx, esp
	mov	DWORD PTR $T209679[ebp], esp
	push	OFFSET _UNASSIGNED_SYSTEM_ADDRESS
	call	??0AddressOrGUID@RakNet@@QAE@ABUSystemAddress@1@@Z ; RakNet::AddressOrGUID::AddressOrGUID
	push	0
	push	4
	push	1
	lea	eax, DWORD PTR _bsPlayerDeath$[ebp]
	push	eax
	push	OFFSET ??_C@_05PGGAFPFO@Death?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?Call@RPC4@RakNet@@QAEXPBDPAVBitStream@2@W4PacketPriority@@W4PacketReliability@@DUAddressOrGUID@2@_N@Z ; RakNet::RPC4::Call

; 368  : 	
; 369  : 	pGameLogic = pNetowkManager->GetGameLogic();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetGameLogic@CNetworkManager@@QAEPAVCSpawnSelection@@XZ ; CNetworkManager::GetGameLogic
	mov	DWORD PTR _pGameLogic$[ebp], eax

; 370  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _bsPlayerDeath$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@SendWasted
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 552				; 00000228H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@SendWasted:
	DD	3
	DD	$LN8@SendWasted
$LN8@SendWasted:
	DD	-320					; fffffec0H
	DD	276					; 00000114H
	DD	$LN4@SendWasted
	DD	-329					; fffffeb7H
	DD	1
	DD	$LN5@SendWasted
	DD	-341					; fffffeabH
	DD	1
	DD	$LN6@SendWasted
$LN6@SendWasted:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	87					; 00000057H
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	87					; 00000057H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN5@SendWasted:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN4@SendWasted:
	DB	98					; 00000062H
	DB	115					; 00000073H
	DB	80					; 00000050H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SendWastedNotification@CLocalPlayer@@QAEXXZ$0:
	lea	ecx, DWORD PTR _bsPlayerDeath$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__ehhandler$?SendWastedNotification@CLocalPlayer@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-556]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SendWastedNotification@CLocalPlayer@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?SendWastedNotification@CLocalPlayer@@QAEXXZ ENDP	; CLocalPlayer::SendWastedNotification
PUBLIC	??_C@_0N@COFNMLME@RequestClass?$AA@		; `string'
PUBLIC	??$Write@H@BitStream@RakNet@@QAEXABH@Z		; RakNet::BitStream::Write<int>
PUBLIC	__$ArrayPad$
PUBLIC	?RequestClass@CLocalPlayer@@QAEXH@Z		; CLocalPlayer::RequestClass
;	COMDAT ??_C@_0N@COFNMLME@RequestClass?$AA@
CONST	SEGMENT
??_C@_0N@COFNMLME@RequestClass?$AA@ DB 'RequestClass', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RequestClass@CLocalPlayer@@QAEXH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RequestClass@CLocalPlayer@@QAEXH@Z$0
__ehfuncinfo$?RequestClass@CLocalPlayer@@QAEXH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RequestClass@CLocalPlayer@@QAEXH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?RequestClass@CLocalPlayer@@QAEXH@Z
_TEXT	SEGMENT
$T209695 = -512						; size = 4
_bsSpawnRequest$ = -308					; size = 276
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_iClass$ = 8						; size = 4
?RequestClass@CLocalPlayer@@QAEXH@Z PROC		; CLocalPlayer::RequestClass, COMDAT
; _this$ = ecx

; 375  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RequestClass@CLocalPlayer@@QAEXH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 504				; 000001f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-516]
	mov	ecx, 126				; 0000007eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 376  : 	RakNet::BitStream bsSpawnRequest;

	lea	ecx, DWORD PTR _bsSpawnRequest$[ebp]
	call	??0BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 377  : 	bsSpawnRequest.Write(iClass);

	lea	eax, DWORD PTR _iClass$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsSpawnRequest$[ebp]
	call	??$Write@H@BitStream@RakNet@@QAEXABH@Z	; RakNet::BitStream::Write<int>

; 378  : 	pNetowkManager->GetRPC4()->Call("RequestClass",&bsSpawnRequest,HIGH_PRIORITY,RELIABLE,0,UNASSIGNED_SYSTEM_ADDRESS,TRUE);

	push	1
	sub	esp, 24					; 00000018H
	mov	ecx, esp
	mov	DWORD PTR $T209695[ebp], esp
	push	OFFSET _UNASSIGNED_SYSTEM_ADDRESS
	call	??0AddressOrGUID@RakNet@@QAE@ABUSystemAddress@1@@Z ; RakNet::AddressOrGUID::AddressOrGUID
	push	0
	push	2
	push	1
	lea	eax, DWORD PTR _bsSpawnRequest$[ebp]
	push	eax
	push	OFFSET ??_C@_0N@COFNMLME@RequestClass?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?Call@RPC4@RakNet@@QAEXPBDPAVBitStream@2@W4PacketPriority@@W4PacketReliability@@DUAddressOrGUID@2@_N@Z ; RakNet::RPC4::Call

; 379  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _bsSpawnRequest$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@RequestCla
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 516				; 00000204H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN7@RequestCla:
	DD	1
	DD	$LN6@RequestCla
$LN6@RequestCla:
	DD	-308					; fffffeccH
	DD	276					; 00000114H
	DD	$LN4@RequestCla
$LN4@RequestCla:
	DB	98					; 00000062H
	DB	115					; 00000073H
	DB	83					; 00000053H
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	119					; 00000077H
	DB	110					; 0000006eH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	113					; 00000071H
	DB	117					; 00000075H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RequestClass@CLocalPlayer@@QAEXH@Z$0:
	lea	ecx, DWORD PTR _bsSpawnRequest$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__ehhandler$?RequestClass@CLocalPlayer@@QAEXH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-520]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RequestClass@CLocalPlayer@@QAEXH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?RequestClass@CLocalPlayer@@QAEXH@Z ENDP		; CLocalPlayer::RequestClass
PUBLIC	?SetSpawnInfo@CLocalPlayer@@QAEXPAU_PLAYER_SPAWN_INFO@@@Z ; CLocalPlayer::SetSpawnInfo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetSpawnInfo@CLocalPlayer@@QAEXPAU_PLAYER_SPAWN_INFO@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pSpawnInfo$ = 8					; size = 4
?SetSpawnInfo@CLocalPlayer@@QAEXPAU_PLAYER_SPAWN_INFO@@@Z PROC ; CLocalPlayer::SetSpawnInfo, COMDAT
; _this$ = ecx

; 384  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 385  : 	memcpy(&m_SpawnInfo, pSpawnInfo, sizeof(PLAYER_SPAWN_INFO));

	push	48					; 00000030H
	mov	eax, DWORD PTR _pSpawnInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 386  : 	m_bHasSpawnInfo = TRUE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+52], 1

; 387  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetSpawnInfo@CLocalPlayer@@QAEXPAU_PLAYER_SPAWN_INFO@@@Z ENDP ; CLocalPlayer::SetSpawnInfo
_TEXT	ENDS
PUBLIC	?SpawnPlayer@CLocalPlayer@@QAEHPAU_PLAYER_SPAWN_INFO@@@Z ; CLocalPlayer::SpawnPlayer
PUBLIC	?SpawnPlayer@CLocalPlayer@@QAEHXZ		; CLocalPlayer::SpawnPlayer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SpawnPlayer@CLocalPlayer@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?SpawnPlayer@CLocalPlayer@@QAEHXZ PROC			; CLocalPlayer::SpawnPlayer, COMDAT
; _this$ = ecx

; 392  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 393  : 	return SpawnPlayer(&m_SpawnInfo);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SpawnPlayer@CLocalPlayer@@QAEHPAU_PLAYER_SPAWN_INFO@@@Z ; CLocalPlayer::SpawnPlayer

; 394  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?SpawnPlayer@CLocalPlayer@@QAEHXZ ENDP			; CLocalPlayer::SpawnPlayer
_TEXT	ENDS
PUBLIC	??_C@_05BEKPGMFA@Spawn?$AA@			; `string'
PUBLIC	__$ArrayPad$
EXTRN	?SetInitialState@CPlayerPed@@QAEXXZ:PROC	; CPlayerPed::SetInitialState
EXTRN	?SetRotation@CPlayerPed@@QAEXM@Z:PROC		; CPlayerPed::SetRotation
EXTRN	?Teleport@CEntity@@QAEXMMM@Z:PROC		; CEntity::Teleport
EXTRN	?GiveWeapon@CPlayerPed@@QAEHHH@Z:PROC		; CPlayerPed::GiveWeapon
EXTRN	?ClearAllWeapons@CPlayerPed@@QAEXXZ:PROC	; CPlayerPed::ClearAllWeapons
EXTRN	?SetModel@CPlayerPed@@QAEXH@Z:PROC		; CPlayerPed::SetModel
EXTRN	__imp__Sleep@4:PROC
EXTRN	?LoadRequestedModels@CGame@@QAEXXZ:PROC		; CGame::LoadRequestedModels
EXTRN	?RequestModel@CGame@@QAEXH@Z:PROC		; CGame::RequestModel
EXTRN	?IsModelLoaded@CGame@@QAEHH@Z:PROC		; CGame::IsModelLoaded
EXTRN	?GetModelIndex@CEntity@@QAEGXZ:PROC		; CEntity::GetModelIndex
EXTRN	?RestartIfWastedAt@CPlayerPed@@QAEXPAUVector3@@M@Z:PROC ; CPlayerPed::RestartIfWastedAt
;	COMDAT ??_C@_05BEKPGMFA@Spawn?$AA@
CONST	SEGMENT
??_C@_05BEKPGMFA@Spawn?$AA@ DB 'Spawn', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SpawnPlayer@CLocalPlayer@@QAEHPAU_PLAYER_SPAWN_INFO@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SpawnPlayer@CLocalPlayer@@QAEHPAU_PLAYER_SPAWN_INFO@@@Z$0
__ehfuncinfo$?SpawnPlayer@CLocalPlayer@@QAEHPAU_PLAYER_SPAWN_INFO@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SpawnPlayer@CLocalPlayer@@QAEHPAU_PLAYER_SPAWN_INFO@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?SpawnPlayer@CLocalPlayer@@QAEHPAU_PLAYER_SPAWN_INFO@@@Z
_TEXT	SEGMENT
$T209713 = -536						; size = 4
$T209714 = -524						; size = 4
_bsSendSpawn$ = -320					; size = 276
_pGamePlayer$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pSpawnInfo$ = 8					; size = 4
?SpawnPlayer@CLocalPlayer@@QAEHPAU_PLAYER_SPAWN_INFO@@@Z PROC ; CLocalPlayer::SpawnPlayer, COMDAT
; _this$ = ecx

; 399  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SpawnPlayer@CLocalPlayer@@QAEHPAU_PLAYER_SPAWN_INFO@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 528				; 00000210H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-540]
	mov	ecx, 132				; 00000084H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 400  : 	CPlayerPed *pGamePlayer = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pGamePlayer$[ebp], eax

; 401  : 
; 402  : 	if(!pGamePlayer) return FALSE;	

	cmp	DWORD PTR _pGamePlayer$[ebp], 0
	jne	SHORT $LN9@SpawnPlaye
	xor	eax, eax
	jmp	$LN10@SpawnPlaye
$LN9@SpawnPlaye:

; 403  : 
; 404  : 	if(pGamePlayer)

	cmp	DWORD PTR _pGamePlayer$[ebp], 0
	je	$LN8@SpawnPlaye

; 405  : 	{
; 406  : 		pGamePlayer->RestartIfWastedAt(&pSpawnInfo->vecPos, pSpawnInfo->fRotation);

	mov	eax, DWORD PTR _pSpawnInfo$[ebp]
	push	ecx
	fld	DWORD PTR [eax+16]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _pSpawnInfo$[ebp]
	add	ecx, 4
	push	ecx
	mov	ecx, DWORD PTR _pGamePlayer$[ebp]
	call	?RestartIfWastedAt@CPlayerPed@@QAEXPAUVector3@@M@Z ; CPlayerPed::RestartIfWastedAt

; 407  : 
; 408  : 		m_pPlayerPed = pGamePlayer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pGamePlayer$[ebp]
	mov	DWORD PTR [eax], ecx

; 409  : 
; 410  : 		// Set skin stuff.. logic is because of temperament
; 411  : 		if(pGamePlayer->GetModelIndex() != pSpawnInfo->byteSkin && (pSpawnInfo->byteSkin < 107)) {

	mov	ecx, DWORD PTR _pGamePlayer$[ebp]
	call	?GetModelIndex@CEntity@@QAEGXZ		; CEntity::GetModelIndex
	movzx	eax, ax
	mov	ecx, DWORD PTR _pSpawnInfo$[ebp]
	movzx	edx, BYTE PTR [ecx+1]
	cmp	eax, edx
	je	SHORT $LN7@SpawnPlaye
	mov	eax, DWORD PTR _pSpawnInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	cmp	ecx, 107				; 0000006bH
	jge	SHORT $LN7@SpawnPlaye

; 412  : 			if(!pGame->IsModelLoaded(pSpawnInfo->byteSkin)) {

	mov	eax, DWORD PTR _pSpawnInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	push	ecx
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?IsModelLoaded@CGame@@QAEHH@Z		; CGame::IsModelLoaded
	test	eax, eax
	jne	SHORT $LN4@SpawnPlaye

; 413  : 				pGame->RequestModel(pSpawnInfo->byteSkin);

	mov	eax, DWORD PTR _pSpawnInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	push	ecx
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?RequestModel@CGame@@QAEXH@Z		; CGame::RequestModel

; 414  : 				pGame->LoadRequestedModels();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?LoadRequestedModels@CGame@@QAEXXZ	; CGame::LoadRequestedModels
$LN5@SpawnPlaye:

; 415  : 				while(!pGame->IsModelLoaded(pSpawnInfo->byteSkin)) { Sleep(1); }

	mov	eax, DWORD PTR _pSpawnInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	push	ecx
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?IsModelLoaded@CGame@@QAEHH@Z		; CGame::IsModelLoaded
	test	eax, eax
	jne	SHORT $LN4@SpawnPlaye
	mov	esi, esp
	push	1
	call	DWORD PTR __imp__Sleep@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN5@SpawnPlaye
$LN4@SpawnPlaye:

; 416  : 			}
; 417  : 			pGamePlayer->SetModel(pSpawnInfo->byteSkin);

	mov	eax, DWORD PTR _pSpawnInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	push	ecx
	mov	ecx, DWORD PTR _pGamePlayer$[ebp]
	call	?SetModel@CPlayerPed@@QAEXH@Z		; CPlayerPed::SetModel
$LN7@SpawnPlaye:

; 418  : 		}
; 419  : 
; 420  : 		pGamePlayer->ClearAllWeapons();

	mov	ecx, DWORD PTR _pGamePlayer$[ebp]
	call	?ClearAllWeapons@CPlayerPed@@QAEXXZ	; CPlayerPed::ClearAllWeapons

; 421  : 
; 422  : 		if(pSpawnInfo->iSpawnWeapons[3] != -1) {

	mov	eax, DWORD PTR _pSpawnInfo$[ebp]
	cmp	DWORD PTR [eax+32], -1
	je	SHORT $LN3@SpawnPlaye

; 423  : 			pGamePlayer->GiveWeapon(pSpawnInfo->iSpawnWeapons[3], pSpawnInfo->iSpawnWeaponsAmmo[3]);

	mov	eax, DWORD PTR _pSpawnInfo$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	mov	edx, DWORD PTR _pSpawnInfo$[ebp]
	mov	eax, DWORD PTR [edx+32]
	push	eax
	mov	ecx, DWORD PTR _pGamePlayer$[ebp]
	call	?GiveWeapon@CPlayerPed@@QAEHHH@Z	; CPlayerPed::GiveWeapon
$LN3@SpawnPlaye:

; 424  : 		}
; 425  : 		if(pSpawnInfo->iSpawnWeapons[2] != -1) {

	mov	eax, DWORD PTR _pSpawnInfo$[ebp]
	cmp	DWORD PTR [eax+28], -1
	je	SHORT $LN2@SpawnPlaye

; 426  : 			pGamePlayer->GiveWeapon(pSpawnInfo->iSpawnWeapons[2], pSpawnInfo->iSpawnWeaponsAmmo[2]);

	mov	eax, DWORD PTR _pSpawnInfo$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _pSpawnInfo$[ebp]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	mov	ecx, DWORD PTR _pGamePlayer$[ebp]
	call	?GiveWeapon@CPlayerPed@@QAEHHH@Z	; CPlayerPed::GiveWeapon
$LN2@SpawnPlaye:

; 427  : 		}		
; 428  : 		if(pSpawnInfo->iSpawnWeapons[1] != -1) {

	mov	eax, DWORD PTR _pSpawnInfo$[ebp]
	cmp	DWORD PTR [eax+24], -1
	je	SHORT $LN1@SpawnPlaye

; 429  : 			pGamePlayer->GiveWeapon(pSpawnInfo->iSpawnWeapons[1], pSpawnInfo->iSpawnWeaponsAmmo[1]);

	mov	eax, DWORD PTR _pSpawnInfo$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	mov	edx, DWORD PTR _pSpawnInfo$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR _pGamePlayer$[ebp]
	call	?GiveWeapon@CPlayerPed@@QAEHHH@Z	; CPlayerPed::GiveWeapon
$LN1@SpawnPlaye:

; 430  : 		}
; 431  : 
; 432  : 		pGamePlayer->Teleport(pSpawnInfo->vecPos.X, pSpawnInfo->vecPos.Y, pSpawnInfo->vecPos.Z);

	mov	eax, DWORD PTR _pSpawnInfo$[ebp]
	push	ecx
	fld	DWORD PTR [eax+12]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _pSpawnInfo$[ebp]
	push	ecx
	fld	DWORD PTR [ecx+8]
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR _pSpawnInfo$[ebp]
	push	ecx
	fld	DWORD PTR [edx+4]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _pGamePlayer$[ebp]
	call	?Teleport@CEntity@@QAEXMMM@Z		; CEntity::Teleport

; 433  : 		pGamePlayer->SetRotation(pSpawnInfo->fRotation);

	mov	eax, DWORD PTR _pSpawnInfo$[ebp]
	push	ecx
	fld	DWORD PTR [eax+16]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _pGamePlayer$[ebp]
	call	?SetRotation@CPlayerPed@@QAEXM@Z	; CPlayerPed::SetRotation

; 434  : 		pGamePlayer->SetInitialState();

	mov	ecx, DWORD PTR _pGamePlayer$[ebp]
	call	?SetInitialState@CPlayerPed@@QAEXXZ	; CPlayerPed::SetInitialState

; 435  : 
; 436  : 		m_bIsWasted = FALSE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+60], 0

; 437  : 		m_bIsActive = TRUE;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 1
$LN8@SpawnPlaye:

; 438  : 	}
; 439  : 
; 440  : 	// Let the rest of the network know we're spawning.
; 441  : 	RakNet::BitStream bsSendSpawn;

	lea	ecx, DWORD PTR _bsSendSpawn$[ebp]
	call	??0BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 442  : 	pNetowkManager->GetRPC4()->Call("Spawn",&bsSendSpawn,HIGH_PRIORITY,RELIABLE_SEQUENCED,0,UNASSIGNED_SYSTEM_ADDRESS,TRUE);

	push	1
	sub	esp, 24					; 00000018H
	mov	ecx, esp
	mov	DWORD PTR $T209713[ebp], esp
	push	OFFSET _UNASSIGNED_SYSTEM_ADDRESS
	call	??0AddressOrGUID@RakNet@@QAE@ABUSystemAddress@1@@Z ; RakNet::AddressOrGUID::AddressOrGUID
	push	0
	push	4
	push	1
	lea	eax, DWORD PTR _bsSendSpawn$[ebp]
	push	eax
	push	OFFSET ??_C@_05BEKPGMFA@Spawn?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?Call@RPC4@RakNet@@QAEXPBDPAVBitStream@2@W4PacketPriority@@W4PacketReliability@@DUAddressOrGUID@2@_N@Z ; RakNet::RPC4::Call

; 443  : 	
; 444  : 	return TRUE;

	mov	DWORD PTR $T209714[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _bsSendSpawn$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	mov	eax, DWORD PTR $T209714[ebp]
$LN10@SpawnPlaye:

; 445  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@SpawnPlaye
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 540				; 0000021cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN16@SpawnPlaye:
	DD	1
	DD	$LN15@SpawnPlaye
$LN15@SpawnPlaye:
	DD	-320					; fffffec0H
	DD	276					; 00000114H
	DD	$LN13@SpawnPlaye
$LN13@SpawnPlaye:
	DB	98					; 00000062H
	DB	115					; 00000073H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	119					; 00000077H
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SpawnPlayer@CLocalPlayer@@QAEHPAU_PLAYER_SPAWN_INFO@@@Z$0:
	lea	ecx, DWORD PTR _bsSendSpawn$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__ehhandler$?SpawnPlayer@CLocalPlayer@@QAEHPAU_PLAYER_SPAWN_INFO@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-544]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SpawnPlayer@CLocalPlayer@@QAEHPAU_PLAYER_SPAWN_INFO@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SpawnPlayer@CLocalPlayer@@QAEHPAU_PLAYER_SPAWN_INFO@@@Z ENDP ; CLocalPlayer::SpawnPlayer
PUBLIC	??_C@_04NKFKOIHC@Chat?$AA@			; `string'
PUBLIC	??_C@_0O@KGKMGJJO@Not?5connected?$AA@		; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?Say@CLocalPlayer@@QAEXPAD@Z			; CLocalPlayer::Say
EXTRN	_strlen:PROC
EXTRN	?AddInfoMessage@CChatWindow@@QAAXPADZZ:PROC	; CChatWindow::AddInfoMessage
EXTRN	?pChatWindow@@3PAVCChatWindow@@A:DWORD		; pChatWindow
EXTRN	?IsConnected@CNetworkManager@@QAE_NXZ:PROC	; CNetworkManager::IsConnected
;	COMDAT ??_C@_04NKFKOIHC@Chat?$AA@
CONST	SEGMENT
??_C@_04NKFKOIHC@Chat?$AA@ DB 'Chat', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KGKMGJJO@Not?5connected?$AA@
CONST	SEGMENT
??_C@_0O@KGKMGJJO@Not?5connected?$AA@ DB 'Not connected', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Say@CLocalPlayer@@QAEXPAD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Say@CLocalPlayer@@QAEXPAD@Z$0
__ehfuncinfo$?Say@CLocalPlayer@@QAEXPAD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Say@CLocalPlayer@@QAEXPAD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?Say@CLocalPlayer@@QAEXPAD@Z
_TEXT	SEGMENT
$T209728 = -524						; size = 4
_bsSend$ = -320						; size = 276
_byteTextLen$ = -33					; size = 1
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_szText$ = 8						; size = 4
?Say@CLocalPlayer@@QAEXPAD@Z PROC			; CLocalPlayer::Say, COMDAT
; _this$ = ecx

; 450  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Say@CLocalPlayer@@QAEXPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 516				; 00000204H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-528]
	mov	ecx, 129				; 00000081H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 451  : 	if(!pNetowkManager->IsConnected()) {

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?IsConnected@CNetworkManager@@QAE_NXZ	; CNetworkManager::IsConnected
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@Say

; 452  : 		pChatWindow->AddInfoMessage("Not connected");

	push	OFFSET ??_C@_0O@KGKMGJJO@Not?5connected?$AA@
	mov	eax, DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A ; pChatWindow
	push	eax
	call	?AddInfoMessage@CChatWindow@@QAAXPADZZ	; CChatWindow::AddInfoMessage
	add	esp, 8

; 453  : 		return;

	jmp	$LN2@Say
$LN1@Say:

; 454  : 	}
; 455  : 
; 456  : 	BYTE byteTextLen = strlen(szText);

	mov	eax, DWORD PTR _szText$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	BYTE PTR _byteTextLen$[ebp], al

; 457  : 
; 458  : 	RakNet::BitStream bsSend;

	lea	ecx, DWORD PTR _bsSend$[ebp]
	call	??0BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 459  : 	bsSend.Write(byteTextLen);

	lea	eax, DWORD PTR _byteTextLen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsSend$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXABE@Z	; RakNet::BitStream::Write<unsigned char>

; 460  : 	bsSend.Write(szText,byteTextLen);

	movzx	eax, BYTE PTR _byteTextLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _szText$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _bsSend$[ebp]
	call	?Write@BitStream@RakNet@@QAEXPBDI@Z	; RakNet::BitStream::Write

; 461  : 
; 462  : 	pNetowkManager->GetRPC4()->Call("Chat",&bsSend,HIGH_PRIORITY,RELIABLE,0,UNASSIGNED_SYSTEM_ADDRESS,TRUE);

	push	1
	sub	esp, 24					; 00000018H
	mov	ecx, esp
	mov	DWORD PTR $T209728[ebp], esp
	push	OFFSET _UNASSIGNED_SYSTEM_ADDRESS
	call	??0AddressOrGUID@RakNet@@QAE@ABUSystemAddress@1@@Z ; RakNet::AddressOrGUID::AddressOrGUID
	push	0
	push	2
	push	1
	lea	eax, DWORD PTR _bsSend$[ebp]
	push	eax
	push	OFFSET ??_C@_04NKFKOIHC@Chat?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?Call@RPC4@RakNet@@QAEXPBDPAVBitStream@2@W4PacketPriority@@W4PacketReliability@@DUAddressOrGUID@2@_N@Z ; RakNet::RPC4::Call

; 463  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _bsSend$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
$LN2@Say:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Say
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 528				; 00000210H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN9@Say:
	DD	2
	DD	$LN8@Say
$LN8@Say:
	DD	-33					; ffffffdfH
	DD	1
	DD	$LN5@Say
	DD	-320					; fffffec0H
	DD	276					; 00000114H
	DD	$LN6@Say
$LN6@Say:
	DB	98					; 00000062H
	DB	115					; 00000073H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$LN5@Say:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Say@CLocalPlayer@@QAEXPAD@Z$0:
	lea	ecx, DWORD PTR _bsSend$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__ehhandler$?Say@CLocalPlayer@@QAEXPAD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-532]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Say@CLocalPlayer@@QAEXPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Say@CLocalPlayer@@QAEXPAD@Z ENDP			; CLocalPlayer::Say
PUBLIC	??_C@_0N@HMLMNFIG@EnterVehicle?$AA@		; `string'
PUBLIC	??$Write@_N@BitStream@RakNet@@QAEXAB_N@Z	; RakNet::BitStream::Write<bool>
PUBLIC	__$ArrayPad$
PUBLIC	?SendEnterVehicleNotification@CLocalPlayer@@QAEXE_N@Z ; CLocalPlayer::SendEnterVehicleNotification
;	COMDAT ??_C@_0N@HMLMNFIG@EnterVehicle?$AA@
CONST	SEGMENT
??_C@_0N@HMLMNFIG@EnterVehicle?$AA@ DB 'EnterVehicle', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SendEnterVehicleNotification@CLocalPlayer@@QAEXE_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SendEnterVehicleNotification@CLocalPlayer@@QAEXE_N@Z$0
__ehfuncinfo$?SendEnterVehicleNotification@CLocalPlayer@@QAEXE_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SendEnterVehicleNotification@CLocalPlayer@@QAEXE_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?SendEnterVehicleNotification@CLocalPlayer@@QAEXE_N@Z
_TEXT	SEGMENT
$T209743 = -512						; size = 4
_bsSend$ = -308						; size = 276
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_vehicleID$ = 8						; size = 1
_bPassenger$ = 12					; size = 1
?SendEnterVehicleNotification@CLocalPlayer@@QAEXE_N@Z PROC ; CLocalPlayer::SendEnterVehicleNotification, COMDAT
; _this$ = ecx

; 468  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SendEnterVehicleNotification@CLocalPlayer@@QAEXE_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 504				; 000001f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-516]
	mov	ecx, 126				; 0000007eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 469  : 	RakNet::BitStream bsSend;

	lea	ecx, DWORD PTR _bsSend$[ebp]
	call	??0BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 470  : 	bsSend.Write(vehicleID);

	lea	eax, DWORD PTR _vehicleID$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsSend$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXABE@Z	; RakNet::BitStream::Write<unsigned char>

; 471  : 	bsSend.Write(bPassenger);

	lea	eax, DWORD PTR _bPassenger$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsSend$[ebp]
	call	??$Write@_N@BitStream@RakNet@@QAEXAB_N@Z ; RakNet::BitStream::Write<bool>

; 472  : 	pNetowkManager->GetRPC4()->Call("EnterVehicle",&bsSend,HIGH_PRIORITY,RELIABLE_SEQUENCED,0,UNASSIGNED_SYSTEM_ADDRESS,TRUE);

	push	1
	sub	esp, 24					; 00000018H
	mov	ecx, esp
	mov	DWORD PTR $T209743[ebp], esp
	push	OFFSET _UNASSIGNED_SYSTEM_ADDRESS
	call	??0AddressOrGUID@RakNet@@QAE@ABUSystemAddress@1@@Z ; RakNet::AddressOrGUID::AddressOrGUID
	push	0
	push	4
	push	1
	lea	eax, DWORD PTR _bsSend$[ebp]
	push	eax
	push	OFFSET ??_C@_0N@HMLMNFIG@EnterVehicle?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?Call@RPC4@RakNet@@QAEXPBDPAVBitStream@2@W4PacketPriority@@W4PacketReliability@@DUAddressOrGUID@2@_N@Z ; RakNet::RPC4::Call

; 473  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _bsSend$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@SendEnterV
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 516				; 00000204H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN7@SendEnterV:
	DD	1
	DD	$LN6@SendEnterV
$LN6@SendEnterV:
	DD	-308					; fffffeccH
	DD	276					; 00000114H
	DD	$LN4@SendEnterV
$LN4@SendEnterV:
	DB	98					; 00000062H
	DB	115					; 00000073H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SendEnterVehicleNotification@CLocalPlayer@@QAEXE_N@Z$0:
	lea	ecx, DWORD PTR _bsSend$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__ehhandler$?SendEnterVehicleNotification@CLocalPlayer@@QAEXE_N@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-520]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SendEnterVehicleNotification@CLocalPlayer@@QAEXE_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SendEnterVehicleNotification@CLocalPlayer@@QAEXE_N@Z ENDP ; CLocalPlayer::SendEnterVehicleNotification
PUBLIC	??_C@_0M@KCCAADOG@ExitVehicle?$AA@		; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?SendExitVehicleNotification@CLocalPlayer@@QAEXE@Z ; CLocalPlayer::SendExitVehicleNotification
;	COMDAT ??_C@_0M@KCCAADOG@ExitVehicle?$AA@
CONST	SEGMENT
??_C@_0M@KCCAADOG@ExitVehicle?$AA@ DB 'ExitVehicle', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SendExitVehicleNotification@CLocalPlayer@@QAEXE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SendExitVehicleNotification@CLocalPlayer@@QAEXE@Z$0
__ehfuncinfo$?SendExitVehicleNotification@CLocalPlayer@@QAEXE@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SendExitVehicleNotification@CLocalPlayer@@QAEXE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?SendExitVehicleNotification@CLocalPlayer@@QAEXE@Z
_TEXT	SEGMENT
$T209757 = -512						; size = 4
_bsSend$ = -308						; size = 276
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_vehicleID$ = 8						; size = 1
?SendExitVehicleNotification@CLocalPlayer@@QAEXE@Z PROC	; CLocalPlayer::SendExitVehicleNotification, COMDAT
; _this$ = ecx

; 478  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SendExitVehicleNotification@CLocalPlayer@@QAEXE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 504				; 000001f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-516]
	mov	ecx, 126				; 0000007eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 479  : 	RakNet::BitStream bsSend;

	lea	ecx, DWORD PTR _bsSend$[ebp]
	call	??0BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 480  : 	bsSend.Write(vehicleID);

	lea	eax, DWORD PTR _vehicleID$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsSend$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXABE@Z	; RakNet::BitStream::Write<unsigned char>

; 481  : 	pNetowkManager->GetRPC4()->Call("ExitVehicle",&bsSend,HIGH_PRIORITY,RELIABLE_SEQUENCED,0,UNASSIGNED_SYSTEM_ADDRESS,TRUE);

	push	1
	sub	esp, 24					; 00000018H
	mov	ecx, esp
	mov	DWORD PTR $T209757[ebp], esp
	push	OFFSET _UNASSIGNED_SYSTEM_ADDRESS
	call	??0AddressOrGUID@RakNet@@QAE@ABUSystemAddress@1@@Z ; RakNet::AddressOrGUID::AddressOrGUID
	push	0
	push	4
	push	1
	lea	eax, DWORD PTR _bsSend$[ebp]
	push	eax
	push	OFFSET ??_C@_0M@KCCAADOG@ExitVehicle?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?Call@RPC4@RakNet@@QAEXPBDPAVBitStream@2@W4PacketPriority@@W4PacketReliability@@DUAddressOrGUID@2@_N@Z ; RakNet::RPC4::Call

; 482  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _bsSend$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@SendExitVe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 516				; 00000204H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN7@SendExitVe:
	DD	1
	DD	$LN6@SendExitVe
$LN6@SendExitVe:
	DD	-308					; fffffeccH
	DD	276					; 00000114H
	DD	$LN4@SendExitVe
$LN4@SendExitVe:
	DB	98					; 00000062H
	DB	115					; 00000073H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SendExitVehicleNotification@CLocalPlayer@@QAEXE@Z$0:
	lea	ecx, DWORD PTR _bsSend$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__ehhandler$?SendExitVehicleNotification@CLocalPlayer@@QAEXE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-520]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SendExitVehicleNotification@CLocalPlayer@@QAEXE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SendExitVehicleNotification@CLocalPlayer@@QAEXE@Z ENDP	; CLocalPlayer::SendExitVehicleNotification
PUBLIC	?GetTeamColorAsRGBA@CLocalPlayer@@QAEKXZ	; CLocalPlayer::GetTeamColorAsRGBA
EXTRN	?TranslateColorCodeToRGBA@@YGKH@Z:PROC		; TranslateColorCodeToRGBA
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetTeamColorAsRGBA@CLocalPlayer@@QAEKXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetTeamColorAsRGBA@CLocalPlayer@@QAEKXZ PROC		; CLocalPlayer::GetTeamColorAsRGBA, COMDAT
; _this$ = ecx

; 487  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 488  : 	return TranslateColorCodeToRGBA(m_SpawnInfo.byteTeam);

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	push	ecx
	call	?TranslateColorCodeToRGBA@@YGKH@Z	; TranslateColorCodeToRGBA

; 489  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTeamColorAsRGBA@CLocalPlayer@@QAEKXZ ENDP		; CLocalPlayer::GetTeamColorAsRGBA
_TEXT	ENDS
PUBLIC	?GetTeamColorAsARGB@CLocalPlayer@@QAEKXZ	; CLocalPlayer::GetTeamColorAsARGB
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetTeamColorAsARGB@CLocalPlayer@@QAEKXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetTeamColorAsARGB@CLocalPlayer@@QAEKXZ PROC		; CLocalPlayer::GetTeamColorAsARGB, COMDAT
; _this$ = ecx

; 494  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 495  : 	return (TranslateColorCodeToRGBA(m_SpawnInfo.byteTeam) >> 8) | 0xFF000000;	

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	push	ecx
	call	?TranslateColorCodeToRGBA@@YGKH@Z	; TranslateColorCodeToRGBA
	shr	eax, 8
	or	eax, -16777216				; ff000000H

; 496  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTeamColorAsARGB@CLocalPlayer@@QAEKXZ ENDP		; CLocalPlayer::GetTeamColorAsARGB
_TEXT	ENDS
PUBLIC	??$Write@M@BitStream@RakNet@@QAEXABM@Z		; RakNet::BitStream::Write<float>
PUBLIC	__$ArrayPad$
PUBLIC	?SendInflictedDamageNotification@CLocalPlayer@@QAEXEEHMHE@Z ; CLocalPlayer::SendInflictedDamageNotification
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SendInflictedDamageNotification@CLocalPlayer@@QAEXEEHMHE@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SendInflictedDamageNotification@CLocalPlayer@@QAEXEEHMHE@Z$0
__ehfuncinfo$?SendInflictedDamageNotification@CLocalPlayer@@QAEXEEHMHE@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SendInflictedDamageNotification@CLocalPlayer@@QAEXEEHMHE@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?SendInflictedDamageNotification@CLocalPlayer@@QAEXEEHMHE@Z
_TEXT	SEGMENT
_bPlayerVehicleDamager$ = -317				; size = 1
_bsSend$ = -308						; size = 276
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_playerID$ = 8						; size = 1
_vehicleID$ = 12					; size = 1
_iWeapon$ = 16						; size = 4
_fUnk$ = 20						; size = 4
_iPedPieces$ = 24					; size = 4
_byteUnk$ = 28						; size = 1
?SendInflictedDamageNotification@CLocalPlayer@@QAEXEEHMHE@Z PROC ; CLocalPlayer::SendInflictedDamageNotification, COMDAT
; _this$ = ecx

; 501  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SendInflictedDamageNotification@CLocalPlayer@@QAEXEEHMHE@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 504				; 000001f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-516]
	mov	ecx, 126				; 0000007eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 502  : 	BitStream bsSend;

	lea	ecx, DWORD PTR _bsSend$[ebp]
	call	??0BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 503  : 
; 504  : 	// Is the damager a player or a vehicle?
; 505  : 	bool bPlayerVehicleDamager = (playerID != INVALID_ENTITY_ID) ? true : false;

	movzx	eax, BYTE PTR _playerID$[ebp]
	cmp	eax, 255				; 000000ffH
	setne	cl
	mov	BYTE PTR _bPlayerVehicleDamager$[ebp], cl

; 506  : 
; 507  : 	// If its a player damager write a 1 and the player id
; 508  : 	if(bPlayerVehicleDamager)

	movzx	eax, BYTE PTR _bPlayerVehicleDamager$[ebp]
	test	eax, eax
	je	SHORT $LN2@SendInflic

; 509  : 	{
; 510  : 		bsSend.Write1();

	lea	ecx, DWORD PTR _bsSend$[ebp]
	call	?Write1@BitStream@RakNet@@QAEXXZ	; RakNet::BitStream::Write1

; 511  : 		bsSend.Write(playerID);

	lea	eax, DWORD PTR _playerID$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsSend$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXABE@Z	; RakNet::BitStream::Write<unsigned char>

; 512  : 	}
; 513  : 	else

	jmp	SHORT $LN1@SendInflic
$LN2@SendInflic:

; 514  : 	{
; 515  : 		// If its a vehicle damager write a 0 and the vehicle id
; 516  : 		bsSend.Write0();

	lea	ecx, DWORD PTR _bsSend$[ebp]
	call	?Write0@BitStream@RakNet@@QAEXXZ	; RakNet::BitStream::Write0

; 517  : 		bsSend.Write(vehicleID);

	lea	eax, DWORD PTR _vehicleID$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsSend$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXABE@Z	; RakNet::BitStream::Write<unsigned char>
$LN1@SendInflic:

; 518  : 	}
; 519  : 
; 520  : 	bsSend.Write(iWeapon);

	lea	eax, DWORD PTR _iWeapon$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsSend$[ebp]
	call	??$Write@H@BitStream@RakNet@@QAEXABH@Z	; RakNet::BitStream::Write<int>

; 521  : 	bsSend.Write(fUnk);

	lea	eax, DWORD PTR _fUnk$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsSend$[ebp]
	call	??$Write@M@BitStream@RakNet@@QAEXABM@Z	; RakNet::BitStream::Write<float>

; 522  : 	bsSend.Write(iPedPieces);

	lea	eax, DWORD PTR _iPedPieces$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsSend$[ebp]
	call	??$Write@H@BitStream@RakNet@@QAEXABH@Z	; RakNet::BitStream::Write<int>

; 523  : 	bsSend.Write(byteUnk);

	lea	eax, DWORD PTR _byteUnk$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsSend$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXABE@Z	; RakNet::BitStream::Write<unsigned char>

; 524  : 	//pNetowkManager->GetRPC4()->Call("InflictDamage", &bsSend, HIGH_PRIORITY, RELIABLE_ORDERED, 0, UNASSIGNED_SYSTEM_ADDRESS, true);
; 525  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _bsSend$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@SendInflic
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 516				; 00000204H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
$LN9@SendInflic:
	DD	1
	DD	$LN8@SendInflic
$LN8@SendInflic:
	DD	-308					; fffffeccH
	DD	276					; 00000114H
	DD	$LN6@SendInflic
$LN6@SendInflic:
	DB	98					; 00000062H
	DB	115					; 00000073H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SendInflictedDamageNotification@CLocalPlayer@@QAEXEEHMHE@Z$0:
	lea	ecx, DWORD PTR _bsSend$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__ehhandler$?SendInflictedDamageNotification@CLocalPlayer@@QAEXEEHMHE@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-520]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SendInflictedDamageNotification@CLocalPlayer@@QAEXEEHMHE@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SendInflictedDamageNotification@CLocalPlayer@@QAEXEEHMHE@Z ENDP ; CLocalPlayer::SendInflictedDamageNotification
PUBLIC	??_C@_05PEDNBBBD@Pause?$AA@			; `string'
PUBLIC	__$ArrayPad$
;	COMDAT ??_C@_05PEDNBBBD@Pause?$AA@
CONST	SEGMENT
??_C@_05PEDNBBBD@Pause?$AA@ DB 'Pause', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SendPauseNotification@CLocalPlayer@@QAEXH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SendPauseNotification@CLocalPlayer@@QAEXH@Z$0
__ehfuncinfo$?SendPauseNotification@CLocalPlayer@@QAEXH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SendPauseNotification@CLocalPlayer@@QAEXH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?SendPauseNotification@CLocalPlayer@@QAEXH@Z
_TEXT	SEGMENT
$T209788 = -512						; size = 4
_bsSend$ = -308						; size = 276
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_bPause$ = 8						; size = 4
?SendPauseNotification@CLocalPlayer@@QAEXH@Z PROC	; CLocalPlayer::SendPauseNotification, COMDAT
; _this$ = ecx

; 530  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SendPauseNotification@CLocalPlayer@@QAEXH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 504				; 000001f8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-516]
	mov	ecx, 126				; 0000007eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 531  : 	RakNet::BitStream bsSend;

	lea	ecx, DWORD PTR _bsSend$[ebp]
	call	??0BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 532  : 	bsSend.Write(bPause);

	lea	eax, DWORD PTR _bPause$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsSend$[ebp]
	call	??$Write@H@BitStream@RakNet@@QAEXABH@Z	; RakNet::BitStream::Write<int>

; 533  : 	pNetowkManager->GetRPC4()->Call("Pause",&bsSend,HIGH_PRIORITY,RELIABLE_SEQUENCED,0,UNASSIGNED_SYSTEM_ADDRESS,TRUE);

	push	1
	sub	esp, 24					; 00000018H
	mov	ecx, esp
	mov	DWORD PTR $T209788[ebp], esp
	push	OFFSET _UNASSIGNED_SYSTEM_ADDRESS
	call	??0AddressOrGUID@RakNet@@QAE@ABUSystemAddress@1@@Z ; RakNet::AddressOrGUID::AddressOrGUID
	push	0
	push	4
	push	1
	lea	eax, DWORD PTR _bsSend$[ebp]
	push	eax
	push	OFFSET ??_C@_05PEDNBBBD@Pause?$AA@
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ; CNetworkManager::GetRPC4
	mov	ecx, eax
	call	?Call@RPC4@RakNet@@QAEXPBDPAVBitStream@2@W4PacketPriority@@W4PacketReliability@@DUAddressOrGUID@2@_N@Z ; RakNet::RPC4::Call

; 534  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _bsSend$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@SendPauseN
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 516				; 00000204H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN7@SendPauseN:
	DD	1
	DD	$LN6@SendPauseN
$LN6@SendPauseN:
	DD	-308					; fffffeccH
	DD	276					; 00000114H
	DD	$LN4@SendPauseN
$LN4@SendPauseN:
	DB	98					; 00000062H
	DB	115					; 00000073H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SendPauseNotification@CLocalPlayer@@QAEXH@Z$0:
	lea	ecx, DWORD PTR _bsSend$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__ehhandler$?SendPauseNotification@CLocalPlayer@@QAEXH@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-520]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SendPauseNotification@CLocalPlayer@@QAEXH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SendPauseNotification@CLocalPlayer@@QAEXH@Z ENDP	; CLocalPlayer::SendPauseNotification
PUBLIC	?DoEndianSwap@BitStream@RakNet@@SA_NXZ		; RakNet::BitStream::DoEndianSwap
EXTRN	?ReverseBytes@BitStream@RakNet@@SAXPAE0I@Z:PROC	; RakNet::BitStream::ReverseBytes
EXTRN	?WriteBits@BitStream@RakNet@@QAEXPBEI_N@Z:PROC	; RakNet::BitStream::WriteBits
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\raknet\bitstream.h
;	COMDAT ??$Write@E@BitStream@RakNet@@QAEXABE@Z
_TEXT	SEGMENT
_output$209478 = -17					; size = 1
_this$ = -8						; size = 4
_inTemplateVar$ = 8					; size = 4
??$Write@E@BitStream@RakNet@@QAEXABE@Z PROC		; RakNet::BitStream::Write<unsigned char>, COMDAT
; _this$ = ecx

; 1055 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1056 : #ifdef _MSC_VER
; 1057 : #pragma warning(disable:4127)   // conditional expression is constant
; 1058 : #endif
; 1059 : 		if (sizeof(inTemplateVar)==1)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN4@Write

; 1060 : 			WriteBits( ( unsigned char* ) & inTemplateVar, sizeof( templateType ) * 8, true );

	push	1
	push	8
	mov	eax, DWORD PTR _inTemplateVar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEI_N@Z ; RakNet::BitStream::WriteBits

; 1061 : 		else

	jmp	SHORT $LN5@Write
$LN4@Write:

; 1062 : 		{
; 1063 : #ifndef __BITSTREAM_NATIVE_END
; 1064 : 			if (DoEndianSwap())

	call	?DoEndianSwap@BitStream@RakNet@@SA_NXZ	; RakNet::BitStream::DoEndianSwap
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Write

; 1065 : 			{
; 1066 : 				unsigned char output[sizeof(templateType)];
; 1067 : 				ReverseBytes((unsigned char*)&inTemplateVar, output, sizeof(templateType));

	push	1
	lea	eax, DWORD PTR _output$209478[ebp]
	push	eax
	mov	ecx, DWORD PTR _inTemplateVar$[ebp]
	push	ecx
	call	?ReverseBytes@BitStream@RakNet@@SAXPAE0I@Z ; RakNet::BitStream::ReverseBytes
	add	esp, 12					; 0000000cH

; 1068 : 				WriteBits( ( unsigned char* ) output, sizeof(templateType) * 8, true );

	push	1
	push	8
	lea	eax, DWORD PTR _output$209478[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEI_N@Z ; RakNet::BitStream::WriteBits

; 1069 : 			}
; 1070 : 			else

	jmp	SHORT $LN5@Write
$LN2@Write:

; 1071 : #endif
; 1072 : 				WriteBits( ( unsigned char* ) & inTemplateVar, sizeof(templateType) * 8, true );

	push	1
	push	8
	mov	eax, DWORD PTR _inTemplateVar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEI_N@Z ; RakNet::BitStream::WriteBits
$LN5@Write:

; 1073 : 		}
; 1074 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Write
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN9@Write:
	DD	1
	DD	$LN8@Write
$LN8@Write:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN7@Write
$LN7@Write:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
??$Write@E@BitStream@RakNet@@QAEXABE@Z ENDP		; RakNet::BitStream::Write<unsigned char>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$Write@H@BitStream@RakNet@@QAEXABH@Z
_TEXT	SEGMENT
_output$209494 = -20					; size = 4
_this$ = -8						; size = 4
_inTemplateVar$ = 8					; size = 4
??$Write@H@BitStream@RakNet@@QAEXABH@Z PROC		; RakNet::BitStream::Write<int>, COMDAT
; _this$ = ecx

; 1055 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1056 : #ifdef _MSC_VER
; 1057 : #pragma warning(disable:4127)   // conditional expression is constant
; 1058 : #endif
; 1059 : 		if (sizeof(inTemplateVar)==1)

	xor	eax, eax
	je	SHORT $LN4@Write@2

; 1060 : 			WriteBits( ( unsigned char* ) & inTemplateVar, sizeof( templateType ) * 8, true );

	push	1
	push	32					; 00000020H
	mov	eax, DWORD PTR _inTemplateVar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEI_N@Z ; RakNet::BitStream::WriteBits

; 1061 : 		else

	jmp	SHORT $LN5@Write@2
$LN4@Write@2:

; 1062 : 		{
; 1063 : #ifndef __BITSTREAM_NATIVE_END
; 1064 : 			if (DoEndianSwap())

	call	?DoEndianSwap@BitStream@RakNet@@SA_NXZ	; RakNet::BitStream::DoEndianSwap
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Write@2

; 1065 : 			{
; 1066 : 				unsigned char output[sizeof(templateType)];
; 1067 : 				ReverseBytes((unsigned char*)&inTemplateVar, output, sizeof(templateType));

	push	4
	lea	eax, DWORD PTR _output$209494[ebp]
	push	eax
	mov	ecx, DWORD PTR _inTemplateVar$[ebp]
	push	ecx
	call	?ReverseBytes@BitStream@RakNet@@SAXPAE0I@Z ; RakNet::BitStream::ReverseBytes
	add	esp, 12					; 0000000cH

; 1068 : 				WriteBits( ( unsigned char* ) output, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	lea	eax, DWORD PTR _output$209494[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEI_N@Z ; RakNet::BitStream::WriteBits

; 1069 : 			}
; 1070 : 			else

	jmp	SHORT $LN5@Write@2
$LN2@Write@2:

; 1071 : #endif
; 1072 : 				WriteBits( ( unsigned char* ) & inTemplateVar, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	mov	eax, DWORD PTR _inTemplateVar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEI_N@Z ; RakNet::BitStream::WriteBits
$LN5@Write@2:

; 1073 : 		}
; 1074 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Write@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN9@Write@2:
	DD	1
	DD	$LN8@Write@2
$LN8@Write@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN7@Write@2
$LN7@Write@2:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
??$Write@H@BitStream@RakNet@@QAEXABH@Z ENDP		; RakNet::BitStream::Write<int>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$Write@M@BitStream@RakNet@@QAEXABM@Z
_TEXT	SEGMENT
_output$209510 = -20					; size = 4
_this$ = -8						; size = 4
_inTemplateVar$ = 8					; size = 4
??$Write@M@BitStream@RakNet@@QAEXABM@Z PROC		; RakNet::BitStream::Write<float>, COMDAT
; _this$ = ecx

; 1055 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1056 : #ifdef _MSC_VER
; 1057 : #pragma warning(disable:4127)   // conditional expression is constant
; 1058 : #endif
; 1059 : 		if (sizeof(inTemplateVar)==1)

	xor	eax, eax
	je	SHORT $LN4@Write@3

; 1060 : 			WriteBits( ( unsigned char* ) & inTemplateVar, sizeof( templateType ) * 8, true );

	push	1
	push	32					; 00000020H
	mov	eax, DWORD PTR _inTemplateVar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEI_N@Z ; RakNet::BitStream::WriteBits

; 1061 : 		else

	jmp	SHORT $LN5@Write@3
$LN4@Write@3:

; 1062 : 		{
; 1063 : #ifndef __BITSTREAM_NATIVE_END
; 1064 : 			if (DoEndianSwap())

	call	?DoEndianSwap@BitStream@RakNet@@SA_NXZ	; RakNet::BitStream::DoEndianSwap
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Write@3

; 1065 : 			{
; 1066 : 				unsigned char output[sizeof(templateType)];
; 1067 : 				ReverseBytes((unsigned char*)&inTemplateVar, output, sizeof(templateType));

	push	4
	lea	eax, DWORD PTR _output$209510[ebp]
	push	eax
	mov	ecx, DWORD PTR _inTemplateVar$[ebp]
	push	ecx
	call	?ReverseBytes@BitStream@RakNet@@SAXPAE0I@Z ; RakNet::BitStream::ReverseBytes
	add	esp, 12					; 0000000cH

; 1068 : 				WriteBits( ( unsigned char* ) output, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	lea	eax, DWORD PTR _output$209510[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEI_N@Z ; RakNet::BitStream::WriteBits

; 1069 : 			}
; 1070 : 			else

	jmp	SHORT $LN5@Write@3
$LN2@Write@3:

; 1071 : #endif
; 1072 : 				WriteBits( ( unsigned char* ) & inTemplateVar, sizeof(templateType) * 8, true );

	push	1
	push	32					; 00000020H
	mov	eax, DWORD PTR _inTemplateVar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEI_N@Z ; RakNet::BitStream::WriteBits
$LN5@Write@3:

; 1073 : 		}
; 1074 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Write@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN9@Write@3:
	DD	1
	DD	$LN8@Write@3
$LN8@Write@3:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN7@Write@3
$LN7@Write@3:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
??$Write@M@BitStream@RakNet@@QAEXABM@Z ENDP		; RakNet::BitStream::Write<float>
_TEXT	ENDS
PUBLIC	__real@00000000
;	COMDAT __real@00000000
; File d:\vice-players-master\client\game\common.h
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0Vector3@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Vector3@@QAE@XZ PROC					; Vector3::Vector3, COMDAT
; _this$ = ecx

; 34   : 	Vector3()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 35   : 	{
; 36   : 		X = Y = Z = 0;

	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax+8]
	mov	ecx, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [edx]

; 37   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0Vector3@@QAE@XZ ENDP					; Vector3::Vector3
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??0CPlayerPed@@QAE@XZ:PROC			; CPlayerPed::CPlayerPed
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT xdata$x
; File d:\vice-players-master\client\game\cgame.h
xdata$x	SEGMENT
__unwindtable$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ$0
__ehfuncinfo$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
_TEXT	SEGMENT
tv74 = -244						; size = 4
$T209820 = -236						; size = 4
$T209821 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ PROC		; CGame::FindPlayerPed, COMDAT
; _this$ = ecx

; 101  : 	CPlayerPed  *FindPlayerPed() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 102  : 		if(m_pInternalPlayer==NULL)	m_pInternalPlayer = new CPlayerPed();

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN1@FindPlayer
	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T209821[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T209821[ebp], 0
	je	SHORT $LN4@FindPlayer
	mov	ecx, DWORD PTR $T209821[ebp]
	call	??0CPlayerPed@@QAE@XZ			; CPlayerPed::CPlayerPed
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN5@FindPlayer
$LN4@FindPlayer:
	mov	DWORD PTR tv74[ebp], 0
$LN5@FindPlayer:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T209820[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T209820[ebp]
	mov	DWORD PTR [ecx+4], edx
$LN1@FindPlayer:

; 103  : 		return m_pInternalPlayer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 104  : 	};

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ$0:
	mov	eax, DWORD PTR $T209821[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ENDP		; CGame::FindPlayerPed
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetCamera@CGame@@QAEPAVCCamera@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetCamera@CGame@@QAEPAVCCamera@@XZ PROC		; CGame::GetCamera, COMDAT
; _this$ = ecx

; 106  : 	CCamera     *GetCamera() {	return m_pInternalCamera; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCamera@CGame@@QAEPAVCCamera@@XZ ENDP		; CGame::GetCamera
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?EnablePassengerEngineAudio@CGame@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?EnablePassengerEngineAudio@CGame@@QAEXXZ PROC		; CGame::EnablePassengerEngineAudio, COMDAT
; _this$ = ecx

; 110  : 	void EnablePassengerEngineAudio() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 111  : 		*(BYTE *)0x5F2175 = 0x3B;

	mov	BYTE PTR ds:6234485, 59			; 0000003bH

; 112  : 		*(BYTE *)0x5F2176 = 0xC2;

	mov	BYTE PTR ds:6234486, 194		; 000000c2H

; 113  : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?EnablePassengerEngineAudio@CGame@@QAEXXZ ENDP		; CGame::EnablePassengerEngineAudio
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?DisablePassengerEngineAudio@CGame@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?DisablePassengerEngineAudio@CGame@@QAEXXZ PROC		; CGame::DisablePassengerEngineAudio, COMDAT
; _this$ = ecx

; 115  : 	void DisablePassengerEngineAudio() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 116  : 		*(BYTE *)0x5F2175 = 0x39;

	mov	BYTE PTR ds:6234485, 57			; 00000039H

; 117  : 		*(BYTE *)0x5F2176 = 0xF0;

	mov	BYTE PTR ds:6234486, 240		; 000000f0H

; 118  : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?DisablePassengerEngineAudio@CGame@@QAEXXZ ENDP		; CGame::DisablePassengerEngineAudio
_TEXT	ENDS
PUBLIC	??4SystemAddress@RakNet@@QAEAAU01@ABU01@@Z	; RakNet::SystemAddress::operator=
PUBLIC	??4RakNetGUID@RakNet@@QAEAAU01@ABU01@@Z		; RakNet::RakNetGUID::operator=
PUBLIC	??0RakNetGUID@RakNet@@QAE@XZ			; RakNet::RakNetGUID::RakNetGUID
EXTRN	??0SystemAddress@RakNet@@QAE@XZ:PROC		; RakNet::SystemAddress::SystemAddress
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\raknet\raknettypes.h
;	COMDAT ??0AddressOrGUID@RakNet@@QAE@ABUSystemAddress@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_input$ = 8						; size = 4
??0AddressOrGUID@RakNet@@QAE@ABUSystemAddress@1@@Z PROC	; RakNet::AddressOrGUID::AddressOrGUID, COMDAT
; _this$ = ecx

; 220  : 	AddressOrGUID( const SystemAddress& input )

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0RakNetGUID@RakNet@@QAE@XZ		; RakNet::RakNetGUID::RakNetGUID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0SystemAddress@RakNet@@QAE@XZ		; RakNet::SystemAddress::SystemAddress

; 221  : 	{
; 222  : 		rakNetGuid=UNASSIGNED_RAKNET_GUID;

	push	OFFSET _UNASSIGNED_RAKNET_GUID
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4RakNetGUID@RakNet@@QAEAAU01@ABU01@@Z	; RakNet::RakNetGUID::operator=

; 223  : 		systemAddress=input;

	mov	eax, DWORD PTR _input$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??4SystemAddress@RakNet@@QAEAAU01@ABU01@@Z ; RakNet::SystemAddress::operator=

; 224  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0AddressOrGUID@RakNet@@QAE@ABUSystemAddress@1@@Z ENDP	; RakNet::AddressOrGUID::AddressOrGUID
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??4SystemAddress@RakNet@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_input$ = 8						; size = 4
??4SystemAddress@RakNet@@QAEAAU01@ABU01@@Z PROC		; RakNet::SystemAddress::operator=, COMDAT
; _this$ = ecx

; 139  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 140  : 		binaryAddress = input.binaryAddress;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 141  : 		port = input.port;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	dx, WORD PTR [ecx+4]
	mov	WORD PTR [eax+4], dx

; 142  : 		systemIndex = input.systemIndex;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	dx, WORD PTR [ecx+6]
	mov	WORD PTR [eax+6], dx

; 143  : 		return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 144  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4SystemAddress@RakNet@@QAEAAU01@ABU01@@Z ENDP		; RakNet::SystemAddress::operator=
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0RakNetGUID@RakNet@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0RakNetGUID@RakNet@@QAE@XZ PROC			; RakNet::RakNetGUID::RakNetGUID, COMDAT
; _this$ = ecx

; 156  : 	RakNetGUID() {systemIndex=(SystemIndex)-1;}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 65535				; 0000ffffH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+8], ax
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RakNetGUID@RakNet@@QAE@XZ ENDP			; RakNet::RakNetGUID::RakNetGUID
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??4RakNetGUID@RakNet@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_input$ = 8						; size = 4
??4RakNetGUID@RakNet@@QAEAAU01@ABU01@@Z PROC		; RakNet::RakNetGUID::operator=, COMDAT
; _this$ = ecx

; 174  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 175  : 		g=input.g;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx

; 176  : 		systemIndex=input.systemIndex;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	dx, WORD PTR [ecx+8]
	mov	WORD PTR [eax+8], dx

; 177  : 		return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 178  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4RakNetGUID@RakNet@@QAEAAU01@ABU01@@Z ENDP		; RakNet::RakNetGUID::operator=
_TEXT	ENDS
PUBLIC	?IsNetworkOrder@BitStream@RakNet@@SA_NXZ	; RakNet::BitStream::IsNetworkOrder
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\raknet\bitstream.h
;	COMDAT ?DoEndianSwap@BitStream@RakNet@@SA_NXZ
_TEXT	SEGMENT
?DoEndianSwap@BitStream@RakNet@@SA_NXZ PROC		; RakNet::BitStream::DoEndianSwap, COMDAT

; 863  : 		inline static bool DoEndianSwap(void) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 864  : #ifndef __BITSTREAM_NATIVE_END
; 865  : 			return IsNetworkOrder()==false;

	call	?IsNetworkOrder@BitStream@RakNet@@SA_NXZ ; RakNet::BitStream::IsNetworkOrder
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1

; 866  : #else
; 867  : 			return false;
; 868  : #endif
; 869  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DoEndianSwap@BitStream@RakNet@@SA_NXZ ENDP		; RakNet::BitStream::DoEndianSwap
_TEXT	ENDS
PUBLIC	?r@?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@4_NB ; `RakNet::BitStream::IsNetworkOrder'::`2'::r
PUBLIC	??_B?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@51 ; `RakNet::BitStream::IsNetworkOrder'::`2'::`local static guard'
EXTRN	?IsNetworkOrderInternal@BitStream@RakNet@@SA_NXZ:PROC ; RakNet::BitStream::IsNetworkOrderInternal
;	COMDAT ?r@?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@4_NB
_BSS	SEGMENT
?r@?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@4_NB DB 01H DUP (?) ; `RakNet::BitStream::IsNetworkOrder'::`2'::r
_BSS	ENDS
;	COMDAT ??_B?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@51
_BSS	SEGMENT
??_B?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@51 DD 01H DUP (?) ; `RakNet::BitStream::IsNetworkOrder'::`2'::`local static guard'
_BSS	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?IsNetworkOrder@BitStream@RakNet@@SA_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?IsNetworkOrder@BitStream@RakNet@@SA_NXZ$0
__ehfuncinfo$?IsNetworkOrder@BitStream@RakNet@@SA_NXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?IsNetworkOrder@BitStream@RakNet@@SA_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?IsNetworkOrder@BitStream@RakNet@@SA_NXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?IsNetworkOrder@BitStream@RakNet@@SA_NXZ PROC		; RakNet::BitStream::IsNetworkOrder, COMDAT

; 874  : 		inline static bool IsNetworkOrder(void) {static const bool r = IsNetworkOrderInternal(); return r;}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?IsNetworkOrder@BitStream@RakNet@@SA_NXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	eax, DWORD PTR ??_B?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@51
	and	eax, 1
	jne	SHORT $LN1@IsNetworkO
	mov	eax, DWORD PTR ??_B?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@51
	or	eax, 1
	mov	DWORD PTR ??_B?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@51, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	?IsNetworkOrderInternal@BitStream@RakNet@@SA_NXZ ; RakNet::BitStream::IsNetworkOrderInternal
	mov	BYTE PTR ?r@?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@4_NB, al ; `RakNet::BitStream::IsNetworkOrder'::`2'::r
	mov	DWORD PTR __$EHRec$[ebp+8], -1
$LN1@IsNetworkO:
	mov	al, BYTE PTR ?r@?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@4_NB ; `RakNet::BitStream::IsNetworkOrder'::`2'::r
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?IsNetworkOrder@BitStream@RakNet@@SA_NXZ$0:
	mov	eax, DWORD PTR ??_B?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@51
	and	eax, -2					; fffffffeH
	mov	DWORD PTR ??_B?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@51, eax
	ret	0
__ehhandler$?IsNetworkOrder@BitStream@RakNet@@SA_NXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?IsNetworkOrder@BitStream@RakNet@@SA_NXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?IsNetworkOrder@BitStream@RakNet@@SA_NXZ ENDP		; RakNet::BitStream::IsNetworkOrder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$Write@_N@BitStream@RakNet@@QAEXAB_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_inTemplateVar$ = 8					; size = 4
??$Write@_N@BitStream@RakNet@@QAEXAB_N@Z PROC		; RakNet::BitStream::Write<bool>, COMDAT
; _this$ = ecx

; 1103 : 		{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1104 : 			if ( inTemplateVar )

	mov	eax, DWORD PTR _inTemplateVar$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN2@Write@4

; 1105 : 				Write1();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write1@BitStream@RakNet@@QAEXXZ	; RakNet::BitStream::Write1

; 1106 : 			else

	jmp	SHORT $LN3@Write@4
$LN2@Write@4:

; 1107 : 				Write0();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Write0@BitStream@RakNet@@QAEXXZ	; RakNet::BitStream::Write0
$LN3@Write@4:

; 1108 : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$Write@_N@BitStream@RakNet@@QAEXAB_N@Z ENDP		; RakNet::BitStream::Write<bool>
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\client\net\cvehiclemanager.h
_TEXT	ENDS
;	COMDAT ?GetAt@CVehicleManager@@QAEPAVCVehicle@@E@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_vehicleID$ = 8						; size = 1
?GetAt@CVehicleManager@@QAEPAVCVehicle@@E@Z PROC	; CVehicleManager::GetAt, COMDAT
; _this$ = ecx

; 45   : 	CVehicle* GetAt(EntityId vehicleID) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 46   : 		if(vehicleID > MAX_VEHICLES) { return NULL; }

	movzx	eax, BYTE PTR _vehicleID$[ebp]
	cmp	eax, 200				; 000000c8H
	jle	SHORT $LN1@GetAt
	xor	eax, eax
	jmp	SHORT $LN2@GetAt
$LN1@GetAt:

; 47   : 		return m_pVehicles[vehicleID];

	movzx	eax, BYTE PTR _vehicleID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+800]
$LN2@GetAt:

; 48   : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?GetAt@CVehicleManager@@QAEPAVCVehicle@@E@Z ENDP	; CVehicleManager::GetAt
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\client\net\cnetworkmanager.h
_TEXT	ENDS
;	COMDAT ?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ PROC ; CNetworkManager::GetVehicleManager, COMDAT
; _this$ = ecx

; 80   : 	CVehicleManager * GetVehicleManager() { return m_pVehicleManager; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ ENDP ; CNetworkManager::GetVehicleManager
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetRakPeer@CNetworkManager@@QAEPAVRakPeerInterface@RakNet@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetRakPeer@CNetworkManager@@QAEPAVRakPeerInterface@RakNet@@XZ PROC ; CNetworkManager::GetRakPeer, COMDAT
; _this$ = ecx

; 85   : 	RakPeerInterface * GetRakPeer() { return m_pRakPeer; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRakPeer@CNetworkManager@@QAEPAVRakPeerInterface@RakNet@@XZ ENDP ; CNetworkManager::GetRakPeer
_TEXT	ENDS
EXTRN	?m_pRPC4@CNetworkManager@@0PAVRPC4@RakNet@@A:DWORD ; CNetworkManager::m_pRPC4
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ PROC	; CNetworkManager::GetRPC4, COMDAT
; _this$ = ecx

; 86   : 	RPC4 * GetRPC4() { return m_pRPC4; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ?m_pRPC4@CNetworkManager@@0PAVRPC4@RakNet@@A ; CNetworkManager::m_pRPC4
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetRPC4@CNetworkManager@@QAEPAVRPC4@RakNet@@XZ ENDP	; CNetworkManager::GetRPC4
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetGameLogic@CNetworkManager@@QAEPAVCSpawnSelection@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetGameLogic@CNetworkManager@@QAEPAVCSpawnSelection@@XZ PROC ; CNetworkManager::GetGameLogic, COMDAT
; _this$ = ecx

; 87   : 	CSpawnSelection * GetGameLogic() { return m_pGameLogic; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+28]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGameLogic@CNetworkManager@@QAEPAVCSpawnSelection@@XZ ENDP ; CNetworkManager::GetGameLogic
_TEXT	ENDS
EXTRN	??0SystemAddress@RakNet@@QAE@IG@Z:PROC		; RakNet::SystemAddress::SystemAddress
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\raknet\raknettypes.h
;	COMDAT ??__EUNASSIGNED_SYSTEM_ADDRESS@RakNet@@YAXXZ
text$yc	SEGMENT
??__EUNASSIGNED_SYSTEM_ADDRESS@RakNet@@YAXXZ PROC	; RakNet::`dynamic initializer for 'UNASSIGNED_SYSTEM_ADDRESS'', COMDAT

; 196  : const SystemAddress UNASSIGNED_SYSTEM_ADDRESS(0xFFFFFFFF, 0xFFFF);

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	65535					; 0000ffffH
	push	-1
	mov	ecx, OFFSET _UNASSIGNED_SYSTEM_ADDRESS
	call	??0SystemAddress@RakNet@@QAE@IG@Z	; RakNet::SystemAddress::SystemAddress
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EUNASSIGNED_SYSTEM_ADDRESS@RakNet@@YAXXZ ENDP	; RakNet::`dynamic initializer for 'UNASSIGNED_SYSTEM_ADDRESS''
text$yc	ENDS
PUBLIC	??0RakNetGUID@RakNet@@QAE@_K@Z			; RakNet::RakNetGUID::RakNetGUID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__EUNASSIGNED_RAKNET_GUID@RakNet@@YAXXZ
text$yc	SEGMENT
??__EUNASSIGNED_RAKNET_GUID@RakNet@@YAXXZ PROC		; RakNet::`dynamic initializer for 'UNASSIGNED_RAKNET_GUID'', COMDAT

; 197  : const RakNetGUID UNASSIGNED_RAKNET_GUID((uint64_t)-1);

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	-1
	push	-1
	mov	ecx, OFFSET _UNASSIGNED_RAKNET_GUID
	call	??0RakNetGUID@RakNet@@QAE@_K@Z		; RakNet::RakNetGUID::RakNetGUID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EUNASSIGNED_RAKNET_GUID@RakNet@@YAXXZ ENDP		; RakNet::`dynamic initializer for 'UNASSIGNED_RAKNET_GUID''
; Function compile flags: /Odtp /RTCsu /ZI
text$yc	ENDS
;	COMDAT ??0RakNetGUID@RakNet@@QAE@_K@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__g$ = 8						; size = 8
??0RakNetGUID@RakNet@@QAE@_K@Z PROC			; RakNet::RakNetGUID::RakNetGUID, COMDAT
; _this$ = ecx

; 157  : 	explicit RakNetGUID(uint64_t _g) {g=_g; systemIndex=(SystemIndex)-1;}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __g$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __g$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, 65535				; 0000ffffH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+8], ax
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0RakNetGUID@RakNet@@QAE@_K@Z ENDP			; RakNet::RakNetGUID::RakNetGUID
_TEXT	ENDS
_BSS	SEGMENT
_UNASSIGNED_SYSTEM_ADDRESS DQ 01H DUP (?)
_UNASSIGNED_RAKNET_GUID DB 010H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_UNASSIGNED_SYSTEM_ADDRESS$initializer$ DD FLAT:??__EUNASSIGNED_SYSTEM_ADDRESS@RakNet@@YAXXZ
_UNASSIGNED_RAKNET_GUID$initializer$ DD FLAT:??__EUNASSIGNED_RAKNET_GUID@RakNet@@YAXXZ
CRT$XCU	ENDS
END
