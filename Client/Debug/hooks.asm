; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	d:\vice-players-master\Client\game\hooks.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?bScriptInited@@3HA				; bScriptInited
PUBLIC	?_pPlayer@@3PAU_PED_TYPE@@A			; _pPlayer
PUBLIC	?_pVehicle@@3PAU_VEHICLE_TYPE@@A		; _pVehicle
PUBLIC	?_pEntity@@3PAKA				; _pEntity
PUBLIC	?_iWeapon@@3HA					; _iWeapon
PUBLIC	?_fUnk@@3MA					; _fUnk
PUBLIC	?_iPedPieces@@3HA				; _iPedPieces
PUBLIC	?_byteUnk@@3EA					; _byteUnk
PUBLIC	?dwStackFrame@@3KA				; dwStackFrame
PUBLIC	?dwCurPlayerActor@@3KA				; dwCurPlayerActor
PUBLIC	?byteCurPlayer@@3EA				; byteCurPlayer
PUBLIC	?dwRGBARadar@@3KA				; dwRGBARadar
PUBLIC	?iRadarColor1@@3HA				; iRadarColor1
PUBLIC	?byteSavedCameraMode@@3EA			; byteSavedCameraMode
PUBLIC	?pbyteCameraMode@@3PAEA				; pbyteCameraMode
PUBLIC	?pbyteCurrentPlayer@@3PAEA			; pbyteCurrentPlayer
PUBLIC	?byteUnkSave@@3EA				; byteUnkSave
PUBLIC	?dwVFTable@@3KA					; dwVFTable
PUBLIC	?dwFunc@@3KA					; dwFunc
PUBLIC	?dwObjectiveActor@@3KA				; dwObjectiveActor
PUBLIC	?dwObjectiveType@@3KA				; dwObjectiveType
PUBLIC	?dwObjectiveEntity@@3KA				; dwObjectiveEntity
PUBLIC	?dwLastObjectiveVehicle@@3KA			; dwLastObjectiveVehicle
PUBLIC	?bDamageDisabled@@3_NA				; bDamageDisabled
_BSS	SEGMENT
?bScriptInited@@3HA DD 01H DUP (?)			; bScriptInited
?_pPlayer@@3PAU_PED_TYPE@@A DD 01H DUP (?)		; _pPlayer
?_pVehicle@@3PAU_VEHICLE_TYPE@@A DD 01H DUP (?)		; _pVehicle
?_pEntity@@3PAKA DD 01H DUP (?)				; _pEntity
?_iWeapon@@3HA DD 01H DUP (?)				; _iWeapon
?_fUnk@@3MA DD	01H DUP (?)				; _fUnk
?_iPedPieces@@3HA DD 01H DUP (?)			; _iPedPieces
?_byteUnk@@3EA DB 01H DUP (?)				; _byteUnk
	ALIGN	4

?dwStackFrame@@3KA DD 01H DUP (?)			; dwStackFrame
?dwCurPlayerActor@@3KA DD 01H DUP (?)			; dwCurPlayerActor
?byteCurPlayer@@3EA DB 01H DUP (?)			; byteCurPlayer
	ALIGN	4

?dwRGBARadar@@3KA DD 01H DUP (?)			; dwRGBARadar
?iRadarColor1@@3HA DD 01H DUP (?)			; iRadarColor1
?byteSavedCameraMode@@3EA DB 01H DUP (?)		; byteSavedCameraMode
	ALIGN	4

?byteUnkSave@@3EA DB 01H DUP (?)			; byteUnkSave
	ALIGN	4

?dwVFTable@@3KA DD 01H DUP (?)				; dwVFTable
?dwFunc@@3KA DD	01H DUP (?)				; dwFunc
?dwObjectiveActor@@3KA DD 01H DUP (?)			; dwObjectiveActor
?dwObjectiveType@@3KA DD 01H DUP (?)			; dwObjectiveType
?dwObjectiveEntity@@3KA DD 01H DUP (?)			; dwObjectiveEntity
?dwLastObjectiveVehicle@@3KA DD 01H DUP (?)		; dwLastObjectiveVehicle
_BSS	ENDS
CONST	SEGMENT
_fade	DW	016aH
	DB	'ii', 00H
	ORG $+10
	ORG $+1
_name_thread DW	03a4H
	DB	's', 00H
	ORG $+11
	ORG $+1
_set_max_wanted_level DW 01f0H
	DB	'i', 00H
	ORG $+11
	ORG $+1
_set_current_time DW 0c0H
	DB	'ii', 00H
	ORG $+10
	ORG $+1
_create_player DW 053H
	DB	'vfffv', 00H
	ORG $+7
	ORG $+1
_create_actor_from_player DW 01f5H
	DB	'vv', 00H
	ORG $+10
	ORG $+1
_toggle_player_controllable DW 01b4H
	DB	'ii', 00H
	ORG $+10
	ORG $+1
_create_forbidden_for_peds_cube DW 022bH
	DB	'ffffff', 00H
	ORG $+6
	ORG $+1
_create_forbidden_for_cars_cube DW 01e8H
	DB	'ffffff', 00H
	ORG $+6
	ORG $+1
_force_weather DW 01b5H
	DB	'i', 00H
	ORG $+11
	ORG $+1
CONST	ENDS
_DATA	SEGMENT
?pbyteCameraMode@@3PAEA DD 07e481cH			; pbyteCameraMode
?pbyteCurrentPlayer@@3PAEA DD 0a10afbH			; pbyteCurrentPlayer
?bDamageDisabled@@3_NA DB 01H				; bDamageDisabled
_DATA	ENDS
PUBLIC	?IsActive@CLocalPlayer@@QAEHXZ			; CLocalPlayer::IsActive
PUBLIC	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ	; CGame::FindPlayerPed
PUBLIC	?GetLocalPlayer@CPlayerManager@@QAEPAVCLocalPlayer@@XZ ; CPlayerManager::GetLocalPlayer
PUBLIC	?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ; CNetworkManager::GetPlayerManager
PUBLIC	?DoOnFootWorldBoundsStuff@@YGXXZ		; DoOnFootWorldBoundsStuff
EXTRN	?SetArmedWeapon@CPlayerPed@@QAEHH@Z:PROC	; CPlayerPed::SetArmedWeapon
EXTRN	?pGcsInternalKeys@@3PAU_GTA_CONTROLSET@@A:DWORD	; pGcsInternalKeys
EXTRN	?EnforceWorldBoundries@CPlayerPed@@QAEHMMMM@Z:PROC ; CPlayerPed::EnforceWorldBoundries
EXTRN	?IsInVehicle@CPlayerPed@@QAEHXZ:PROC		; CPlayerPed::IsInVehicle
EXTRN	?pGame@@3PAVCGame@@A:DWORD			; pGame
EXTRN	?pNetowkManager@@3PAVCNetworkManager@@A:DWORD	; pNetowkManager
EXTRN	__fltused:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\vice-players-master\client\game\hooks.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ?DoOnFootWorldBoundsStuff@@YGXXZ
_TEXT	SEGMENT
_pPlayerPed$209290 = -20				; size = 4
_pLocalPlayer$209289 = -8				; size = 4
?DoOnFootWorldBoundsStuff@@YGXXZ PROC			; DoOnFootWorldBoundsStuff, COMDAT

; 64   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 65   : 	if(pNetowkManager) {

	cmp	DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A, 0 ; pNetowkManager
	je	$LN1@DoOnFootWo

; 66   : 		CLocalPlayer *pLocalPlayer = pNetowkManager->GetPlayerManager()->GetLocalPlayer();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ; CNetworkManager::GetPlayerManager
	mov	ecx, eax
	call	?GetLocalPlayer@CPlayerManager@@QAEPAVCLocalPlayer@@XZ ; CPlayerManager::GetLocalPlayer
	mov	DWORD PTR _pLocalPlayer$209289[ebp], eax

; 67   : 		CPlayerPed *pPlayerPed = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pPlayerPed$209290[ebp], eax

; 68   : 
; 69   : 		// Make sure they don't leave their worldy confines.
; 70   : 		if(pLocalPlayer->IsActive() && !pPlayerPed->IsInVehicle()) {

	mov	ecx, DWORD PTR _pLocalPlayer$209289[ebp]
	call	?IsActive@CLocalPlayer@@QAEHXZ		; CLocalPlayer::IsActive
	test	eax, eax
	je	SHORT $LN1@DoOnFootWo
	mov	ecx, DWORD PTR _pPlayerPed$209290[ebp]
	call	?IsInVehicle@CPlayerPed@@QAEHXZ		; CPlayerPed::IsInVehicle
	test	eax, eax
	jne	SHORT $LN1@DoOnFootWo

; 71   : 			if(pPlayerPed->EnforceWorldBoundries(
; 72   : 				pNetowkManager->m_WorldBounds[0],pNetowkManager->m_WorldBounds[1],
; 73   : 				pNetowkManager->m_WorldBounds[2],pNetowkManager->m_WorldBounds[3]))

	mov	eax, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	push	ecx
	fld	DWORD PTR [eax+352]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	push	ecx
	fld	DWORD PTR [ecx+348]
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	push	ecx
	fld	DWORD PTR [edx+344]
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	push	ecx
	fld	DWORD PTR [eax+340]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _pPlayerPed$209290[ebp]
	call	?EnforceWorldBoundries@CPlayerPed@@QAEHMMMM@Z ; CPlayerPed::EnforceWorldBoundries
	test	eax, eax
	je	SHORT $LN1@DoOnFootWo

; 74   : 			{
; 75   : 				pGcsInternalKeys->wKeys1[KEY_ONFOOT_JUMP] = 0xFF;

	mov	eax, 255				; 000000ffH
	mov	ecx, DWORD PTR ?pGcsInternalKeys@@3PAU_GTA_CONTROLSET@@A ; pGcsInternalKeys
	mov	WORD PTR [ecx+28], ax

; 76   : 				pGcsInternalKeys->wKeys2[KEY_ONFOOT_JUMP] = 0xFF;

	mov	eax, 255				; 000000ffH
	mov	ecx, DWORD PTR ?pGcsInternalKeys@@3PAU_GTA_CONTROLSET@@A ; pGcsInternalKeys
	mov	WORD PTR [ecx+72], ax

; 77   : 				pPlayerPed->SetArmedWeapon(0);

	push	0
	mov	ecx, DWORD PTR _pPlayerPed$209290[ebp]
	call	?SetArmedWeapon@CPlayerPed@@QAEHH@Z	; CPlayerPed::SetArmedWeapon
$LN1@DoOnFootWo:

; 78   : 				//pGame->DisplayTextMessage("Stay within the world boundries");
; 79   : 			}
; 80   : 		}
; 81   : 	}
; 82   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DoOnFootWorldBoundsStuff@@YGXXZ ENDP			; DoOnFootWorldBoundsStuff
_TEXT	ENDS
PUBLIC	?SwitchContext@@YGXK_N@Z			; SwitchContext
EXTRN	?GameSetLocalPlayerKeys@@YAXXZ:PROC		; GameSetLocalPlayerKeys
EXTRN	?GameSetLocalPlayerAim@@YAXXZ:PROC		; GameSetLocalPlayerAim
EXTRN	?GameSetRemotePlayerAim@@YAXH@Z:PROC		; GameSetRemotePlayerAim
EXTRN	?GameStoreLocalPlayerAim@@YAXXZ:PROC		; GameStoreLocalPlayerAim
EXTRN	?GameSetRemotePlayerKeys@@YAXH@Z:PROC		; GameSetRemotePlayerKeys
EXTRN	?GameStoreLocalPlayerKeys@@YAXXZ:PROC		; GameStoreLocalPlayerKeys
EXTRN	?FindPlayerNumFromPedPtr@@YGEK@Z:PROC		; FindPlayerNumFromPedPtr
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SwitchContext@@YGXK_N@Z
_TEXT	SEGMENT
_dwPedPtr$ = 8						; size = 4
_bPrePost$ = 12						; size = 1
?SwitchContext@@YGXK_N@Z PROC				; SwitchContext, COMDAT

; 87   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 88   : 	if(dwPedPtr)

	cmp	DWORD PTR _dwPedPtr$[ebp], 0
	je	$LN6@SwitchCont

; 89   : 	{
; 90   : 		byteCurPlayer = FindPlayerNumFromPedPtr(dwPedPtr);

	mov	eax, DWORD PTR _dwPedPtr$[ebp]
	push	eax
	call	?FindPlayerNumFromPedPtr@@YGEK@Z	; FindPlayerNumFromPedPtr
	mov	BYTE PTR ?byteCurPlayer@@3EA, al	; byteCurPlayer

; 91   : 
; 92   : 		// Is this player not the local player?
; 93   : 		if(byteCurPlayer != 0)

	movzx	eax, BYTE PTR ?byteCurPlayer@@3EA	; byteCurPlayer
	test	eax, eax
	je	SHORT $LN6@SwitchCont

; 94   : 		{
; 95   : 			// Is this before the ProcessControl call or after?
; 96   : 			if(bPrePost)

	movzx	eax, BYTE PTR _bPrePost$[ebp]
	test	eax, eax
	je	SHORT $LN3@SwitchCont

; 97   : 			{
; 98   : 				// Key switching
; 99   : 				GameStoreLocalPlayerKeys(); // Save local player's keys

	call	?GameStoreLocalPlayerKeys@@YAXXZ	; GameStoreLocalPlayerKeys

; 100  : 				GameSetRemotePlayerKeys(byteCurPlayer); // Set remote player's keys

	movzx	eax, BYTE PTR ?byteCurPlayer@@3EA	; byteCurPlayer
	push	eax
	call	?GameSetRemotePlayerKeys@@YAXH@Z	; GameSetRemotePlayerKeys
	add	esp, 4

; 101  : 
; 102  : 				// Camera mode switching
; 103  : 				byteSavedCameraMode = *pbyteCameraMode; // Save the local player's camera mode

	mov	eax, DWORD PTR ?pbyteCameraMode@@3PAEA	; pbyteCameraMode
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR ?byteSavedCameraMode@@3EA, cl	; byteSavedCameraMode

; 104  : 				*pbyteCameraMode = 4; // Set the current camera mode to onfoot mouse looking mode

	mov	eax, DWORD PTR ?pbyteCameraMode@@3PAEA	; pbyteCameraMode
	mov	BYTE PTR [eax], 4

; 105  : 
; 106  : 				// Aim switching
; 107  : 				GameStoreLocalPlayerAim(); // Save local player's aim

	call	?GameStoreLocalPlayerAim@@YAXXZ		; GameStoreLocalPlayerAim

; 108  : 				GameSetRemotePlayerAim(byteCurPlayer); // Set remote player's aim

	movzx	eax, BYTE PTR ?byteCurPlayer@@3EA	; byteCurPlayer
	push	eax
	call	?GameSetRemotePlayerAim@@YAXH@Z		; GameSetRemotePlayerAim
	add	esp, 4

; 109  : 
; 110  : 				// Current player index switching
; 111  : 				*pbyteCurrentPlayer = byteCurPlayer; // Set the player index to the current player

	mov	eax, DWORD PTR ?pbyteCurrentPlayer@@3PAEA ; pbyteCurrentPlayer
	mov	cl, BYTE PTR ?byteCurPlayer@@3EA	; byteCurPlayer
	mov	BYTE PTR [eax], cl

; 112  : 			}
; 113  : 			else

	jmp	SHORT $LN6@SwitchCont
$LN3@SwitchCont:

; 114  : 			{
; 115  : 				// Current player index switching
; 116  : 				*pbyteCurrentPlayer = 0; // Set the player index to the local player

	mov	eax, DWORD PTR ?pbyteCurrentPlayer@@3PAEA ; pbyteCurrentPlayer
	mov	BYTE PTR [eax], 0

; 117  : 
; 118  : 				// Aim switching
; 119  : 				GameSetLocalPlayerAim(); // Restore the local player's aim

	call	?GameSetLocalPlayerAim@@YAXXZ		; GameSetLocalPlayerAim

; 120  : 
; 121  : 				// Camera mode switching
; 122  : 				*pbyteCameraMode = byteSavedCameraMode; // Restore the local player's camera mode

	mov	eax, DWORD PTR ?pbyteCameraMode@@3PAEA	; pbyteCameraMode
	mov	cl, BYTE PTR ?byteSavedCameraMode@@3EA	; byteSavedCameraMode
	mov	BYTE PTR [eax], cl

; 123  : 					
; 124  : 				// Key switching
; 125  : 				GameSetLocalPlayerKeys(); // Restore the local player's keys

	call	?GameSetLocalPlayerKeys@@YAXXZ		; GameSetLocalPlayerKeys
$LN6@SwitchCont:

; 126  : 			}
; 127  : 		}
; 128  : 		else
; 129  : 		{
; 130  : 			// Its the local player
; 131  : 		}
; 132  : 	}
; 133  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SwitchContext@@YGXK_N@Z ENDP				; SwitchContext
_TEXT	ENDS
PUBLIC	?CPlayerPed__ProcessControl_Hook@@YAXXZ		; CPlayerPed__ProcessControl_Hook
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CPlayerPed__ProcessControl_Hook@@YAXXZ
_TEXT	SEGMENT
?CPlayerPed__ProcessControl_Hook@@YAXXZ PROC		; CPlayerPed__ProcessControl_Hook, COMDAT

; 141  : 	_asm
; 142  : 	{
; 143  : 		mov dwCurPlayerActor, ecx

	mov	DWORD PTR ?dwCurPlayerActor@@3KA, ecx	; dwCurPlayerActor

; 144  : 		pushad

	pushad

; 145  : 	}
; 146  : 
; 147  : 	SwitchContext(dwCurPlayerActor, true);

	push	1
	mov	eax, DWORD PTR ?dwCurPlayerActor@@3KA	; dwCurPlayerActor
	push	eax
	call	?SwitchContext@@YGXK_N@Z		; SwitchContext

; 148  : 
; 149  : 	// call the internal CPlayerPed::ProcessControl
; 150  : 	dwFunc = FUNC_CPlayerPed__ProcessControl;

	mov	DWORD PTR ?dwFunc@@3KA, 5468784		; dwFunc, 00537270H

; 151  : 	_asm
; 152  : 	{
; 153  : 		popad

	popad

; 154  : 		call dwFunc

	call	DWORD PTR ?dwFunc@@3KA			; dwFunc

; 155  : 		pushad

	pushad

; 156  : 	}
; 157  : 
; 158  : 	SwitchContext(dwCurPlayerActor, false);

	push	0
	mov	eax, DWORD PTR ?dwCurPlayerActor@@3KA	; dwCurPlayerActor
	push	eax
	call	?SwitchContext@@YGXK_N@Z		; SwitchContext

; 159  : 
; 160  : 	_asm
; 161  : 	{
; 162  : 		popad

	popad

; 163  : 		ret

	ret	0
?CPlayerPed__ProcessControl_Hook@@YAXXZ ENDP		; CPlayerPed__ProcessControl_Hook
_TEXT	ENDS
PUBLIC	?Vehicle_ProcessControl_Hook@@YAXXZ		; Vehicle_ProcessControl_Hook
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Vehicle_ProcessControl_Hook@@YAXXZ
_TEXT	SEGMENT
?Vehicle_ProcessControl_Hook@@YAXXZ PROC		; Vehicle_ProcessControl_Hook, COMDAT

; 172  : 	_asm
; 173  : 	{
; 174  : 		mov _pVehicle, ecx

	mov	DWORD PTR ?_pVehicle@@3PAU_VEHICLE_TYPE@@A, ecx ; _pVehicle

; 175  : 		mov eax, [ecx]

	mov	eax, DWORD PTR [ecx]

; 176  : 		mov dwVFTable, eax

	mov	DWORD PTR ?dwVFTable@@3KA, eax		; dwVFTable

; 177  : 		pushad

	pushad

; 178  : 	}
; 179  : 	
; 180  : 	if(dwVFTable == VAR_CBike__VFTable)

	cmp	DWORD PTR ?dwVFTable@@3KA, 7174964	; dwVFTable, 006d7b34H
	jne	SHORT $LN8@Vehicle_Pr

; 181  : 	{
; 182  : 		dwFunc = FUNC_CBike__ProcessControl;

	mov	DWORD PTR ?dwFunc@@3KA, 6349792		; dwFunc, 0060e3e0H
	jmp	SHORT $LN7@Vehicle_Pr
$LN8@Vehicle_Pr:

; 183  : 	}
; 184  : 	else if(dwVFTable == VAR_CBoat__VFTable)

	cmp	DWORD PTR ?dwVFTable@@3KA, 6926516	; dwVFTable, 0069b0b4H
	jne	SHORT $LN6@Vehicle_Pr

; 185  : 	{
; 186  : 		dwFunc = FUNC_CBoat__ProcessControl;

	mov	DWORD PTR ?dwFunc@@3KA, 5897872		; dwFunc, 0059fe90H
	jmp	SHORT $LN7@Vehicle_Pr
$LN6@Vehicle_Pr:

; 187  : 	}
; 188  : 	else if(dwVFTable == VAR_CAutomobile__VFTable)

	cmp	DWORD PTR ?dwVFTable@@3KA, 6925712	; dwVFTable, 0069ad90H
	jne	SHORT $LN4@Vehicle_Pr

; 189  : 	{
; 190  : 		dwFunc = FUNC_CAutomobile__ProcessControl;

	mov	DWORD PTR ?dwFunc@@3KA, 5845040		; dwFunc, 00593030H

; 191  : 	}
; 192  : 	else

	jmp	SHORT $LN7@Vehicle_Pr
$LN4@Vehicle_Pr:

; 193  : 	{
; 194  : 		_asm
; 195  : 		{
; 196  : 			popad

	popad

; 197  : 			ret

	ret	0
$LN7@Vehicle_Pr:

; 198  : 		}
; 199  : 	}
; 200  : 
; 201  : 	if(_pVehicle)

	cmp	DWORD PTR ?_pVehicle@@3PAU_VEHICLE_TYPE@@A, 0 ; _pVehicle
	je	SHORT $LN2@Vehicle_Pr

; 202  : 	{
; 203  : 		SwitchContext((DWORD)_pVehicle->pDriver, true);

	push	1
	mov	eax, DWORD PTR ?_pVehicle@@3PAU_VEHICLE_TYPE@@A ; _pVehicle
	mov	ecx, DWORD PTR [eax+424]
	push	ecx
	call	?SwitchContext@@YGXK_N@Z		; SwitchContext
$LN2@Vehicle_Pr:

; 204  : 	}
; 205  : 
; 206  : 	// call C*::ProcessControl
; 207  : 	_asm
; 208  : 	{
; 209  : 		popad

	popad

; 210  : 		call dwFunc

	call	DWORD PTR ?dwFunc@@3KA			; dwFunc

; 211  : 		pushad

	pushad

; 212  : 	}
; 213  : 
; 214  : 	if(_pVehicle)

	cmp	DWORD PTR ?_pVehicle@@3PAU_VEHICLE_TYPE@@A, 0 ; _pVehicle
	je	SHORT $LN1@Vehicle_Pr

; 215  : 	{
; 216  : 		SwitchContext((DWORD)_pVehicle->pDriver, false);

	push	0
	mov	eax, DWORD PTR ?_pVehicle@@3PAU_VEHICLE_TYPE@@A ; _pVehicle
	mov	ecx, DWORD PTR [eax+424]
	push	ecx
	call	?SwitchContext@@YGXK_N@Z		; SwitchContext
$LN1@Vehicle_Pr:

; 217  : 	}
; 218  : 
; 219  : 	_asm
; 220  : 	{
; 221  : 		popad

	popad

; 222  : 		ret

	ret	0
?Vehicle_ProcessControl_Hook@@YAXXZ ENDP		; Vehicle_ProcessControl_Hook
_TEXT	ENDS
PUBLIC	?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ ; CNetworkManager::GetVehicleManager
PUBLIC	?DoVehicleEntryExitNotification@@YGX_NK0@Z	; DoVehicleEntryExitNotification
EXTRN	?SendExitVehicleNotification@CLocalPlayer@@QAEXE@Z:PROC ; CLocalPlayer::SendExitVehicleNotification
EXTRN	?SendEnterVehicleNotification@CLocalPlayer@@QAEXE_N@Z:PROC ; CLocalPlayer::SendEnterVehicleNotification
EXTRN	?FindIDFromGtaPtr@CVehicleManager@@QAEEPAU_VEHICLE_TYPE@@@Z:PROC ; CVehicleManager::FindIDFromGtaPtr
EXTRN	?GetAction@CPlayerPed@@QAEEXZ:PROC		; CPlayerPed::GetAction
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DoVehicleEntryExitNotification@@YGX_NK0@Z
_TEXT	SEGMENT
_pLocalPlayer$209330 = -44				; size = 4
_vehicleID$209327 = -29					; size = 1
_pVehicleManager$209326 = -20				; size = 4
_pPlayerPed$209322 = -8					; size = 4
_bEnterExit$ = 8					; size = 1
_dwVehicle$ = 12					; size = 4
_bPassenger$ = 16					; size = 1
?DoVehicleEntryExitNotification@@YGX_NK0@Z PROC		; DoVehicleEntryExitNotification, COMDAT

; 229  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 230  : 	// Do we have a valid net game instance?
; 231  : 	if(pNetowkManager)

	cmp	DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A, 0 ; pNetowkManager
	je	$LN8@DoVehicleE

; 232  : 	{
; 233  : 		// Get a pointer to the local player ped
; 234  : 		CPlayerPed * pPlayerPed = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pPlayerPed$209322[ebp], eax

; 235  : 
; 236  : 		// Make sure we are not currently entering exiting a vehicle
; 237  : 		if((bEnterExit && dwLastObjectiveVehicle == dwVehicle && pPlayerPed->GetAction() == ACTION_GETTING_IN_VEHICLE) || (!bEnterExit && pPlayerPed->GetAction() == ACTION_EXITING_VEHICLE))

	movzx	eax, BYTE PTR _bEnterExit$[ebp]
	test	eax, eax
	je	SHORT $LN4@DoVehicleE
	mov	eax, DWORD PTR ?dwLastObjectiveVehicle@@3KA ; dwLastObjectiveVehicle
	cmp	eax, DWORD PTR _dwVehicle$[ebp]
	jne	SHORT $LN4@DoVehicleE
	mov	ecx, DWORD PTR _pPlayerPed$209322[ebp]
	call	?GetAction@CPlayerPed@@QAEEXZ		; CPlayerPed::GetAction
	movzx	eax, al
	cmp	eax, 58					; 0000003aH
	je	SHORT $LN5@DoVehicleE
$LN4@DoVehicleE:
	movzx	eax, BYTE PTR _bEnterExit$[ebp]
	test	eax, eax
	jne	SHORT $LN6@DoVehicleE
	mov	ecx, DWORD PTR _pPlayerPed$209322[ebp]
	call	?GetAction@CPlayerPed@@QAEEXZ		; CPlayerPed::GetAction
	movzx	eax, al
	cmp	eax, 60					; 0000003cH
	jne	SHORT $LN6@DoVehicleE
$LN5@DoVehicleE:

; 238  : 		{
; 239  : 			// Already entering or exiting a vehicle
; 240  : 			return;

	jmp	SHORT $LN8@DoVehicleE
$LN6@DoVehicleE:

; 241  : 		}
; 242  : 
; 243  : 		// Get a pointer to the vehicle pool
; 244  : 		CVehicleManager * pVehicleManager = pNetowkManager->GetVehicleManager();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ ; CNetworkManager::GetVehicleManager
	mov	DWORD PTR _pVehicleManager$209326[ebp], eax

; 245  : 
; 246  : 		// Get the vehicle's pool id
; 247  : 		EntityId vehicleID = pVehicleManager->FindIDFromGtaPtr((VEHICLE_TYPE *)dwVehicle);

	mov	eax, DWORD PTR _dwVehicle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pVehicleManager$209326[ebp]
	call	?FindIDFromGtaPtr@CVehicleManager@@QAEEPAU_VEHICLE_TYPE@@@Z ; CVehicleManager::FindIDFromGtaPtr
	mov	BYTE PTR _vehicleID$209327[ebp], al

; 248  : 
; 249  : 		// Is the vehicle valid?
; 250  : 		if(vehicleID != INVALID_ENTITY_ID)

	movzx	eax, BYTE PTR _vehicleID$209327[ebp]
	cmp	eax, 255				; 000000ffH
	je	SHORT $LN8@DoVehicleE

; 251  : 		{
; 252  : 			// Get a pointer to the local player
; 253  : 			CLocalPlayer * pLocalPlayer = pNetowkManager->GetPlayerManager()->GetLocalPlayer();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ; CNetworkManager::GetPlayerManager
	mov	ecx, eax
	call	?GetLocalPlayer@CPlayerManager@@QAEPAVCLocalPlayer@@XZ ; CPlayerManager::GetLocalPlayer
	mov	DWORD PTR _pLocalPlayer$209330[ebp], eax

; 254  : 
; 255  : 			// Are we entering the vehicle or exiting it?
; 256  : 			if(bEnterExit)

	movzx	eax, BYTE PTR _bEnterExit$[ebp]
	test	eax, eax
	je	SHORT $LN2@DoVehicleE

; 257  : 			{
; 258  : 				// Send the enter vehicle notification
; 259  : 				pLocalPlayer->SendEnterVehicleNotification(vehicleID, bPassenger);

	movzx	eax, BYTE PTR _bPassenger$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _vehicleID$209327[ebp]
	push	ecx
	mov	ecx, DWORD PTR _pLocalPlayer$209330[ebp]
	call	?SendEnterVehicleNotification@CLocalPlayer@@QAEXE_N@Z ; CLocalPlayer::SendEnterVehicleNotification

; 260  : 
; 261  : 				// Set the last objective vehicle pointer to this vehicle to avoid spamming enter vehicle objectives
; 262  : 				dwLastObjectiveVehicle = dwVehicle;

	mov	eax, DWORD PTR _dwVehicle$[ebp]
	mov	DWORD PTR ?dwLastObjectiveVehicle@@3KA, eax ; dwLastObjectiveVehicle

; 263  : 			}
; 264  : 			else

	jmp	SHORT $LN8@DoVehicleE
$LN2@DoVehicleE:

; 265  : 			{
; 266  : 				// Send the exit vehicle notification
; 267  : 				pLocalPlayer->SendExitVehicleNotification(vehicleID);

	movzx	eax, BYTE PTR _vehicleID$209327[ebp]
	push	eax
	mov	ecx, DWORD PTR _pLocalPlayer$209330[ebp]
	call	?SendExitVehicleNotification@CLocalPlayer@@QAEXE@Z ; CLocalPlayer::SendExitVehicleNotification
$LN8@DoVehicleE:

; 268  : 			}
; 269  : 		}
; 270  : 	}
; 271  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?DoVehicleEntryExitNotification@@YGX_NK0@Z ENDP		; DoVehicleEntryExitNotification
_TEXT	ENDS
PUBLIC	?CPed__SetObjective_Hook@@YAXXZ			; CPed__SetObjective_Hook
EXTRN	?GamePool_FindPlayerPed@@YGPAU_PED_TYPE@@XZ:PROC ; GamePool_FindPlayerPed
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CPed__SetObjective_Hook@@YAXXZ
_TEXT	SEGMENT
?CPed__SetObjective_Hook@@YAXXZ PROC			; CPed__SetObjective_Hook, COMDAT

; 278  : 	_asm
; 279  : 	{
; 280  : 		mov dwObjectiveActor, ecx

	mov	DWORD PTR ?dwObjectiveActor@@3KA, ecx	; dwObjectiveActor

; 281  : 		mov eax, [esp+4]

	mov	eax, DWORD PTR [esp+4]

; 282  : 		mov dwObjectiveType, eax

	mov	DWORD PTR ?dwObjectiveType@@3KA, eax	; dwObjectiveType

; 283  : 		mov eax, [esp+8]

	mov	eax, DWORD PTR [esp+8]

; 284  : 		mov dwObjectiveEntity, eax

	mov	DWORD PTR ?dwObjectiveEntity@@3KA, eax	; dwObjectiveEntity

; 285  : 		pushad

	pushad

; 286  : 	}
; 287  : 
; 288  : 	// TODO: If entering vehicle and vehicle is not in pool don't let them enter it
; 289  : 	if((PED_TYPE *)dwObjectiveActor == GamePool_FindPlayerPed())

	call	?GamePool_FindPlayerPed@@YGPAU_PED_TYPE@@XZ ; GamePool_FindPlayerPed
	cmp	DWORD PTR ?dwObjectiveActor@@3KA, eax	; dwObjectiveActor
	jne	SHORT $LN6@CPed__SetO

; 290  : 	{
; 291  : 		if(dwObjectiveType == OBJECTIVE_TYPE_ENTER_CAR_AS_DRIVER)

	cmp	DWORD PTR ?dwObjectiveType@@3KA, 18	; dwObjectiveType, 00000012H
	jne	SHORT $LN5@CPed__SetO

; 292  : 		{
; 293  : 			DoVehicleEntryExitNotification(true, dwObjectiveEntity, false);

	push	0
	mov	eax, DWORD PTR ?dwObjectiveEntity@@3KA	; dwObjectiveEntity
	push	eax
	push	1
	call	?DoVehicleEntryExitNotification@@YGX_NK0@Z ; DoVehicleEntryExitNotification
	jmp	SHORT $LN6@CPed__SetO
$LN5@CPed__SetO:

; 294  : 		}
; 295  : 		else if(dwObjectiveType == OBJECTIVE_TYPE_ENTER_CAR_AS_PASSENGER)

	cmp	DWORD PTR ?dwObjectiveType@@3KA, 17	; dwObjectiveType, 00000011H
	jne	SHORT $LN3@CPed__SetO

; 296  : 		{
; 297  : 			DoVehicleEntryExitNotification(true, dwObjectiveEntity, true);

	push	1
	mov	eax, DWORD PTR ?dwObjectiveEntity@@3KA	; dwObjectiveEntity
	push	eax
	push	1
	call	?DoVehicleEntryExitNotification@@YGX_NK0@Z ; DoVehicleEntryExitNotification
	jmp	SHORT $LN6@CPed__SetO
$LN3@CPed__SetO:

; 298  : 		}
; 299  : 		else if(dwObjectiveType == OBJECTIVE_TYPE_EXIT_CAR)

	cmp	DWORD PTR ?dwObjectiveType@@3KA, 16	; dwObjectiveType, 00000010H
	jne	SHORT $LN6@CPed__SetO

; 300  : 		{
; 301  : 			DoVehicleEntryExitNotification(false, dwObjectiveEntity, false);

	push	0
	mov	eax, DWORD PTR ?dwObjectiveEntity@@3KA	; dwObjectiveEntity
	push	eax
	push	0
	call	?DoVehicleEntryExitNotification@@YGX_NK0@Z ; DoVehicleEntryExitNotification
$LN6@CPed__SetO:

; 302  : 		}
; 303  : 	}
; 304  : 
; 305  : 	dwFunc = (FUNC_CPed__SetObjective + 9);

	mov	DWORD PTR ?dwFunc@@3KA, 5381913		; dwFunc, 00521f19H

; 306  : 	_asm
; 307  : 	{
; 308  : 		popad

	popad

; 309  : 		push ebx

	push	ebx

; 310  : 		mov ebx, ecx

	mov	ebx, ecx

; 311  : 		mov eax, [ebx+244h]

	mov	eax, DWORD PTR [ebx+580]

; 312  : 		jmp dwFunc

	jmp	DWORD PTR ?dwFunc@@3KA			; dwFunc
?CPed__SetObjective_Hook@@YAXXZ ENDP			; CPed__SetObjective_Hook
_TEXT	ENDS
PUBLIC	?RadarTranslateColor@@YAXXZ			; RadarTranslateColor
EXTRN	?TranslateColorCodeToRGBA@@YGKH@Z:PROC		; TranslateColorCodeToRGBA
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RadarTranslateColor@@YAXXZ
_TEXT	SEGMENT
?RadarTranslateColor@@YAXXZ PROC			; RadarTranslateColor, COMDAT

; 320  : 	_asm
; 321  : 	{
; 322  : 		mov eax, [esp+4]

	mov	eax, DWORD PTR [esp+4]

; 323  : 		mov iRadarColor1, eax

	mov	DWORD PTR ?iRadarColor1@@3HA, eax	; iRadarColor1

; 324  : 	}
; 325  : 
; 326  : 	TranslateColorCodeToRGBA(iRadarColor1); // return will still be in eax.

	mov	eax, DWORD PTR ?iRadarColor1@@3HA	; iRadarColor1
	push	eax
	call	?TranslateColorCodeToRGBA@@YGKH@Z	; TranslateColorCodeToRGBA

; 327  : 
; 328  : 	_asm
; 329  : 	{
; 330  : 		ret

	ret	0
?RadarTranslateColor@@YAXXZ ENDP			; RadarTranslateColor
_TEXT	ENDS
PUBLIC	?EnterCarAnimCallback_Hook@@YAXXZ		; EnterCarAnimCallback_Hook
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?EnterCarAnimCallback_Hook@@YAXXZ
_TEXT	SEGMENT
?EnterCarAnimCallback_Hook@@YAXXZ PROC			; EnterCarAnimCallback_Hook, COMDAT

; 340  : 	_asm
; 341  : 	{
; 342  : 		mov _pPlayer, eax

	mov	DWORD PTR ?_pPlayer@@3PAU_PED_TYPE@@A, eax ; _pPlayer

; 343  : 		pushad

	pushad

; 344  : 	}
; 345  : 
; 346  : 	if(_pPlayer->pVehicle == 0 && _pPlayer != GamePool_FindPlayerPed())

	mov	eax, DWORD PTR ?_pPlayer@@3PAU_PED_TYPE@@A ; _pPlayer
	cmp	DWORD PTR [eax+936], 0
	jne	SHORT $LN1@EnterCarAn
	call	?GamePool_FindPlayerPed@@YGPAU_PED_TYPE@@XZ ; GamePool_FindPlayerPed
	cmp	DWORD PTR ?_pPlayer@@3PAU_PED_TYPE@@A, eax ; _pPlayer
	je	SHORT $LN1@EnterCarAn

; 347  : 	{
; 348  : 		_asm
; 349  : 		{
; 350  : 			popad

	popad

; 351  : 			ret

	ret	0
$LN1@EnterCarAn:

; 352  : 		}
; 353  : 	}
; 354  : 
; 355  : 	dwFunc = (FUNC_EnterCarAnimCallback + 8);

	mov	DWORD PTR ?dwFunc@@3KA, 5318888		; dwFunc, 005128e8H

; 356  : 	_asm
; 357  : 	{
; 358  : 		popad

	popad

; 359  : 		mov edx, [esp+4]

	mov	edx, DWORD PTR [esp+4]

; 360  : 		mov eax, [esp+8]

	mov	eax, DWORD PTR [esp+8]

; 361  : 		jmp dwFunc

	jmp	DWORD PTR ?dwFunc@@3KA			; dwFunc
?EnterCarAnimCallback_Hook@@YAXXZ ENDP			; EnterCarAnimCallback_Hook
_TEXT	ENDS
PUBLIC	?GetAt@CVehicleManager@@QAEPAVCVehicle@@E@Z	; CVehicleManager::GetAt
PUBLIC	?GetTeam@CRemotePlayer@@QAEEXZ			; CRemotePlayer::GetTeam
PUBLIC	?GetAt@CPlayerManager@@QAEPAVCRemotePlayer@@E@Z	; CPlayerManager::GetAt
PUBLIC	?IsWasted@CLocalPlayer@@QAEHXZ			; CLocalPlayer::IsWasted
PUBLIC	?GetTeam@CLocalPlayer@@QAEEXZ			; CLocalPlayer::GetTeam
PUBLIC	?GetFriendlyFire@CNetworkManager@@QAEEXZ	; CNetworkManager::GetFriendlyFire
PUBLIC	?IsFriendlyFire@@YGHPAU_PED_TYPE@@PAKHMHE@Z	; IsFriendlyFire
EXTRN	?GetDriver@CVehicle@@QAEPAU_PED_TYPE@@XZ:PROC	; CVehicle::GetDriver
EXTRN	?FindPlayerIDFromGtaPtr@CPlayerManager@@QAEEPAU_PED_TYPE@@@Z:PROC ; CPlayerManager::FindPlayerIDFromGtaPtr
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsFriendlyFire@@YGHPAU_PED_TYPE@@PAKHMHE@Z
_TEXT	SEGMENT
_vehicleID$209370 = -89					; size = 1
_byteLocalPlayerTeam$ = -77				; size = 1
_remotePlayerID$ = -65					; size = 1
_pLocalPlayer$ = -56					; size = 4
_pVehicle$ = -44					; size = 4
_pRemotePlayer$ = -32					; size = 4
_pVehicleManager$ = -20					; size = 4
_pPlayerManager$ = -8					; size = 4
_pPlayer$ = 8						; size = 4
_pdwEnt$ = 12						; size = 4
_iWeapon$ = 16						; size = 4
_fUnk$ = 20						; size = 4
_PedPiece$ = 24						; size = 4
_byteUnk$ = 28						; size = 1
?IsFriendlyFire@@YGHPAU_PED_TYPE@@PAKHMHE@Z PROC	; IsFriendlyFire, COMDAT

; 370  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 371  : 	CPlayerManager *pPlayerManager;
; 372  : 	CVehicleManager *pVehicleManager;
; 373  : 	CRemotePlayer *pRemotePlayer;
; 374  : 	CVehicle *pVehicle;
; 375  : 	CLocalPlayer *pLocalPlayer;
; 376  : 	EntityId remotePlayerID;
; 377  : 	BYTE byteLocalPlayerTeam;
; 378  : 
; 379  : 	if(pPlayer == GamePool_FindPlayerPed()) {

	call	?GamePool_FindPlayerPed@@YGPAU_PED_TYPE@@XZ ; GamePool_FindPlayerPed
	cmp	DWORD PTR _pPlayer$[ebp], eax
	jne	$LN12@IsFriendly

; 380  : 		if(pNetowkManager && pNetowkManager->GetFriendlyFire()) {

	cmp	DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A, 0 ; pNetowkManager
	je	$LN12@IsFriendly
	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetFriendlyFire@CNetworkManager@@QAEEXZ ; CNetworkManager::GetFriendlyFire
	movzx	eax, al
	test	eax, eax
	je	$LN12@IsFriendly

; 381  : 			pPlayerManager = pNetowkManager->GetPlayerManager();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ; CNetworkManager::GetPlayerManager
	mov	DWORD PTR _pPlayerManager$[ebp], eax

; 382  : 			pLocalPlayer = pPlayerManager->GetLocalPlayer();

	mov	ecx, DWORD PTR _pPlayerManager$[ebp]
	call	?GetLocalPlayer@CPlayerManager@@QAEPAVCLocalPlayer@@XZ ; CPlayerManager::GetLocalPlayer
	mov	DWORD PTR _pLocalPlayer$[ebp], eax

; 383  : 			byteLocalPlayerTeam = pLocalPlayer->GetTeam();

	mov	ecx, DWORD PTR _pLocalPlayer$[ebp]
	call	?GetTeam@CLocalPlayer@@QAEEXZ		; CLocalPlayer::GetTeam
	mov	BYTE PTR _byteLocalPlayerTeam$[ebp], al

; 384  : 
; 385  : 			if(pLocalPlayer->IsWasted() || (byteLocalPlayerTeam == NO_TEAM)) return FALSE;

	mov	ecx, DWORD PTR _pLocalPlayer$[ebp]
	call	?IsWasted@CLocalPlayer@@QAEHXZ		; CLocalPlayer::IsWasted
	test	eax, eax
	jne	SHORT $LN9@IsFriendly
	movzx	eax, BYTE PTR _byteLocalPlayerTeam$[ebp]
	cmp	eax, 255				; 000000ffH
	jne	SHORT $LN10@IsFriendly
$LN9@IsFriendly:
	xor	eax, eax
	jmp	$LN13@IsFriendly
$LN10@IsFriendly:

; 386  : 
; 387  : 			remotePlayerID = pPlayerManager->FindPlayerIDFromGtaPtr((PED_TYPE *)pdwEnt);

	mov	eax, DWORD PTR _pdwEnt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayerManager$[ebp]
	call	?FindPlayerIDFromGtaPtr@CPlayerManager@@QAEEPAU_PED_TYPE@@@Z ; CPlayerManager::FindPlayerIDFromGtaPtr
	mov	BYTE PTR _remotePlayerID$[ebp], al

; 388  : 
; 389  : 			if(remotePlayerID != INVALID_ENTITY_ID) {

	movzx	eax, BYTE PTR _remotePlayerID$[ebp]
	cmp	eax, 255				; 000000ffH
	je	SHORT $LN8@IsFriendly

; 390  : 				pRemotePlayer = pPlayerManager->GetAt(remotePlayerID);

	movzx	eax, BYTE PTR _remotePlayerID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayerManager$[ebp]
	call	?GetAt@CPlayerManager@@QAEPAVCRemotePlayer@@E@Z ; CPlayerManager::GetAt
	mov	DWORD PTR _pRemotePlayer$[ebp], eax

; 391  : 				if(pRemotePlayer->GetTeam() == byteLocalPlayerTeam) {

	mov	ecx, DWORD PTR _pRemotePlayer$[ebp]
	call	?GetTeam@CRemotePlayer@@QAEEXZ		; CRemotePlayer::GetTeam
	movzx	eax, al
	movzx	ecx, BYTE PTR _byteLocalPlayerTeam$[ebp]
	cmp	eax, ecx
	jne	SHORT $LN7@IsFriendly

; 392  : 					return TRUE;

	mov	eax, 1
	jmp	$LN13@IsFriendly

; 393  : 				} else {

	jmp	SHORT $LN8@IsFriendly
$LN7@IsFriendly:

; 394  : 					return FALSE;

	xor	eax, eax
	jmp	$LN13@IsFriendly
$LN8@IsFriendly:

; 395  : 				}
; 396  : 			}
; 397  : 
; 398  : 			pVehicleManager = pNetowkManager->GetVehicleManager();

	mov	ecx, DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A ; pNetowkManager
	call	?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ ; CNetworkManager::GetVehicleManager
	mov	DWORD PTR _pVehicleManager$[ebp], eax

; 399  : 
; 400  : 			EntityId vehicleID = pVehicleManager->FindIDFromGtaPtr((VEHICLE_TYPE *)pdwEnt);

	mov	eax, DWORD PTR _pdwEnt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pVehicleManager$[ebp]
	call	?FindIDFromGtaPtr@CVehicleManager@@QAEEPAU_VEHICLE_TYPE@@@Z ; CVehicleManager::FindIDFromGtaPtr
	mov	BYTE PTR _vehicleID$209370[ebp], al

; 401  : 
; 402  : 			if(vehicleID != INVALID_ENTITY_ID) {

	movzx	eax, BYTE PTR _vehicleID$209370[ebp]
	cmp	eax, 255				; 000000ffH
	je	SHORT $LN12@IsFriendly

; 403  : 				pVehicle = pVehicleManager->GetAt(vehicleID);

	movzx	eax, BYTE PTR _vehicleID$209370[ebp]
	push	eax
	mov	ecx, DWORD PTR _pVehicleManager$[ebp]
	call	?GetAt@CVehicleManager@@QAEPAVCVehicle@@E@Z ; CVehicleManager::GetAt
	mov	DWORD PTR _pVehicle$[ebp], eax

; 404  : 				if(pVehicle->GetDriver()) {

	mov	ecx, DWORD PTR _pVehicle$[ebp]
	call	?GetDriver@CVehicle@@QAEPAU_PED_TYPE@@XZ ; CVehicle::GetDriver
	test	eax, eax
	je	SHORT $LN4@IsFriendly

; 405  : 					remotePlayerID = pPlayerManager->FindPlayerIDFromGtaPtr((PED_TYPE *)pdwEnt);

	mov	eax, DWORD PTR _pdwEnt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayerManager$[ebp]
	call	?FindPlayerIDFromGtaPtr@CPlayerManager@@QAEEPAU_PED_TYPE@@@Z ; CPlayerManager::FindPlayerIDFromGtaPtr
	mov	BYTE PTR _remotePlayerID$[ebp], al

; 406  : 					if(remotePlayerID != INVALID_ENTITY_ID) {

	movzx	eax, BYTE PTR _remotePlayerID$[ebp]
	cmp	eax, 255				; 000000ffH
	je	SHORT $LN3@IsFriendly

; 407  : 						pRemotePlayer = pPlayerManager->GetAt(remotePlayerID);

	movzx	eax, BYTE PTR _remotePlayerID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayerManager$[ebp]
	call	?GetAt@CPlayerManager@@QAEPAVCRemotePlayer@@E@Z ; CPlayerManager::GetAt
	mov	DWORD PTR _pRemotePlayer$[ebp], eax

; 408  : 						if(pRemotePlayer->GetTeam() == byteLocalPlayerTeam) {

	mov	ecx, DWORD PTR _pRemotePlayer$[ebp]
	call	?GetTeam@CRemotePlayer@@QAEEXZ		; CRemotePlayer::GetTeam
	movzx	eax, al
	movzx	ecx, BYTE PTR _byteLocalPlayerTeam$[ebp]
	cmp	eax, ecx
	jne	SHORT $LN3@IsFriendly

; 409  : 							return TRUE;

	mov	eax, 1
	jmp	SHORT $LN13@IsFriendly
$LN3@IsFriendly:

; 410  : 						}
; 411  : 					}
; 412  : 				} else {

	jmp	SHORT $LN12@IsFriendly
$LN4@IsFriendly:

; 413  : 					return FALSE;

	xor	eax, eax
	jmp	SHORT $LN13@IsFriendly
$LN12@IsFriendly:

; 414  : 				}
; 415  : 			}
; 416  : 		}
; 417  : 	}
; 418  : 
; 419  : 	return FALSE;	

	xor	eax, eax
$LN13@IsFriendly:

; 420  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?IsFriendlyFire@@YGHPAU_PED_TYPE@@PAKHMHE@Z ENDP	; IsFriendlyFire
_TEXT	ENDS
PUBLIC	?CPed__InflictDamage_Hook@@YAXXZ		; CPed__InflictDamage_Hook
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CPed__InflictDamage_Hook@@YAXXZ
_TEXT	SEGMENT
?CPed__InflictDamage_Hook@@YAXXZ PROC			; CPed__InflictDamage_Hook, COMDAT

; 470  : 	_asm
; 471  : 	{
; 472  : 		mov dwStackFrame, esp

	mov	DWORD PTR ?dwStackFrame@@3KA, esp	; dwStackFrame

; 473  : #ifdef DAMAGE_SYNC
; 474  : 		mov eax, [esp]
; 475  : 		mov dwRet, eax
; 476  : #endif
; 477  : 		mov _pPlayer, ecx

	mov	DWORD PTR ?_pPlayer@@3PAU_PED_TYPE@@A, ecx ; _pPlayer

; 478  : 		mov eax, [esp+4]

	mov	eax, DWORD PTR [esp+4]

; 479  : 		mov _pEntity, eax

	mov	DWORD PTR ?_pEntity@@3PAKA, eax		; _pEntity

; 480  : 		mov eax, [esp+8]

	mov	eax, DWORD PTR [esp+8]

; 481  : 		mov _iWeapon, eax

	mov	DWORD PTR ?_iWeapon@@3HA, eax		; _iWeapon

; 482  : 		mov eax, [esp+12]

	mov	eax, DWORD PTR [esp+12]

; 483  : 		mov _fUnk, eax

	mov	DWORD PTR ?_fUnk@@3MA, eax

; 484  : 		mov eax, [esp+16]

	mov	eax, DWORD PTR [esp+16]

; 485  : 		mov _iPedPieces, eax

	mov	DWORD PTR ?_iPedPieces@@3HA, eax	; _iPedPieces

; 486  : 		mov al, [esp+20]

	mov	al, BYTE PTR [esp+20]

; 487  : 		mov _byteUnk, al

	mov	BYTE PTR ?_byteUnk@@3EA, al		; _byteUnk

; 488  : 		pushad

	pushad

; 489  : 	}
; 490  : 
; 491  : 	// TODO: Move this to DoInflictedDamageNotification then if DoInflictedDamageNotification returns false
; 492  : 	// cancel the damage infliction
; 493  : 	if(pNetowkManager)

	cmp	DWORD PTR ?pNetowkManager@@3PAVCNetworkManager@@A, 0 ; pNetowkManager
	je	SHORT $LN1@CPed__Infl

; 494  : 	{
; 495  : #ifdef DAMAGE_SYNC
; 496  : 		// Get weather or not the inflicted player is ourself
; 497  : 		bSelf = (_pPlayer == GamePool_FindPlayerPed());
; 498  : #endif
; 499  : 
; 500  : 		// If its ourselves and friendly fire or not ourselves and damage is disabled, don't inflict the damage
; 501  : #ifdef DAMAGE_SYNC
; 502  : 		if((bSelf && IsFriendlyFire(_pPlayer, _pEntity, _iWeapon, _fUnk, _iPedPieces, _byteUnk)) || (!bSelf && bDamageDisabled))
; 503  : #else
; 504  : 		if(IsFriendlyFire(_pPlayer, _pEntity, _iWeapon, _fUnk, _iPedPieces, _byteUnk))

	movzx	eax, BYTE PTR ?_byteUnk@@3EA		; _byteUnk
	push	eax
	mov	ecx, DWORD PTR ?_iPedPieces@@3HA	; _iPedPieces
	push	ecx
	push	ecx
	fld	DWORD PTR ?_fUnk@@3MA			; _fUnk
	fstp	DWORD PTR [esp]
	mov	edx, DWORD PTR ?_iWeapon@@3HA		; _iWeapon
	push	edx
	mov	eax, DWORD PTR ?_pEntity@@3PAKA		; _pEntity
	push	eax
	mov	ecx, DWORD PTR ?_pPlayer@@3PAU_PED_TYPE@@A ; _pPlayer
	push	ecx
	call	?IsFriendlyFire@@YGHPAU_PED_TYPE@@PAKHMHE@Z ; IsFriendlyFire
	test	eax, eax
	je	SHORT $LN1@CPed__Infl

; 505  : #endif
; 506  : 		{
; 507  : 			//pChatWindow->AddDebugMessage("Not inflicting damage (ret: 0x%p, wep: %d, self?: %d, disabled?: %d)", dwRet, _iWeapon, bSelf, bDamageDisabled);
; 508  : 			_asm
; 509  : 			{
; 510  : 				popad

	popad

; 511  : 				mov esp, dwStackFrame

	mov	esp, DWORD PTR ?dwStackFrame@@3KA	; dwStackFrame

; 512  : 				xor al, al

	xor	al, al

; 513  : 				retn 14h

	ret	20					; 00000014H
$LN1@CPed__Infl:

; 514  : 			}
; 515  : 		}
; 516  : #ifdef DAMAGE_SYNC
; 517  : 		else
; 518  : 		{
; 519  : 			// Is it ourself?
; 520  : 			if(bSelf)
; 521  : 			{
; 522  : 				// Its ourself, notify the server of the inflicted damage
; 523  : 				DoInflictedDamageNotification(_pEntity, _iWeapon, _fUnk, _iPedPieces, _byteUnk);
; 524  : 			}
; 525  : 		}
; 526  : #endif
; 527  : 	}
; 528  : 
; 529  : 	dwFunc = (FUNC_CPed__InflictDamage + 6);

	mov	DWORD PTR ?dwFunc@@3KA, 5397286		; dwFunc, 00525b26H

; 530  : 	_asm
; 531  : 	{
; 532  : 		popad

	popad

; 533  : 		mov esp, dwStackFrame

	mov	esp, DWORD PTR ?dwStackFrame@@3KA	; dwStackFrame

; 534  : 		fld ds:[0x694170]

	fld	DWORD PTR ds:6898032

; 535  : 		jmp dwFunc

	jmp	DWORD PTR ?dwFunc@@3KA			; dwFunc
?CPed__InflictDamage_Hook@@YAXXZ ENDP			; CPed__InflictDamage_Hook
_TEXT	ENDS
PUBLIC	__real@c0f86a0000000000
PUBLIC	__real@40f86a0000000000
PUBLIC	__real@c08f400000000000
PUBLIC	__real@4068700000000000
PUBLIC	__real@4026000000000000
PUBLIC	??_C@_04KLKHHPIG@MAIN?$AA@			; `string'
PUBLIC	?CRunningScript__Process@@YAXXZ			; CRunningScript__Process
EXTRN	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ:PROC	; ScriptCommand
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT __real@c0f86a0000000000
CONST	SEGMENT
__real@c0f86a0000000000 DQ 0c0f86a0000000000r	; -100000
CONST	ENDS
;	COMDAT __real@40f86a0000000000
CONST	SEGMENT
__real@40f86a0000000000 DQ 040f86a0000000000r	; 100000
CONST	ENDS
;	COMDAT __real@c08f400000000000
CONST	SEGMENT
__real@c08f400000000000 DQ 0c08f400000000000r	; -1000
CONST	ENDS
;	COMDAT __real@4068700000000000
CONST	SEGMENT
__real@4068700000000000 DQ 04068700000000000r	; 195.5
CONST	ENDS
;	COMDAT __real@4026000000000000
CONST	SEGMENT
__real@4026000000000000 DQ 04026000000000000r	; 11
CONST	ENDS
;	COMDAT ??_C@_04KLKHHPIG@MAIN?$AA@
CONST	SEGMENT
??_C@_04KLKHHPIG@MAIN?$AA@ DB 'MAIN', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?CRunningScript__Process@@YAXXZ
_TEXT	SEGMENT
_iPlayerNumber$209387 = -32				; size = 4
_PLAYER_CHAR$209386 = -20				; size = 4
_PLAYER_ACTOR$209385 = -8				; size = 4
?CRunningScript__Process@@YAXXZ PROC			; CRunningScript__Process, COMDAT

; 542  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 543  : 	if(!bScriptInited)

	cmp	DWORD PTR ?bScriptInited@@3HA, 0	; bScriptInited
	jne	$LN1@CRunningSc

; 544  : 	{
; 545  : 		// Code from VCMP.SCM (Minus the pickups and teleports)
; 546  : 		DWORD PLAYER_ACTOR = 0;

	mov	DWORD PTR _PLAYER_ACTOR$209385[ebp], 0

; 547  : 		DWORD PLAYER_CHAR = 0;

	mov	DWORD PTR _PLAYER_CHAR$209386[ebp], 0

; 548  : 		int iPlayerNumber = 0;

	mov	DWORD PTR _iPlayerNumber$209387[ebp], 0

; 549  : 		ScriptCommand(&name_thread, "MAIN");

	push	OFFSET ??_C@_04KLKHHPIG@MAIN?$AA@
	push	OFFSET _name_thread
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 8

; 550  : 		ScriptCommand(&set_current_time, 12, 0);

	push	0
	push	12					; 0000000cH
	push	OFFSET _set_current_time
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 12					; 0000000cH

; 551  : 		ScriptCommand(&create_player, &iPlayerNumber, -1000.0, 195.5, 11.0, &PLAYER_ACTOR);

	lea	eax, DWORD PTR _PLAYER_ACTOR$209385[ebp]
	push	eax
	sub	esp, 8
	fld	QWORD PTR __real@4026000000000000
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR __real@4068700000000000
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR __real@c08f400000000000
	fstp	QWORD PTR [esp]
	lea	ecx, DWORD PTR _iPlayerNumber$209387[ebp]
	push	ecx
	push	OFFSET _create_player
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 36					; 00000024H

; 552  : 		ScriptCommand(&create_actor_from_player, &PLAYER_ACTOR, &PLAYER_CHAR);

	lea	eax, DWORD PTR _PLAYER_CHAR$209386[ebp]
	push	eax
	lea	ecx, DWORD PTR _PLAYER_ACTOR$209385[ebp]
	push	ecx
	push	OFFSET _create_actor_from_player
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 12					; 0000000cH

; 553  : 		ScriptCommand(&create_forbidden_for_peds_cube, -100000.0f, -100000.0f, -100000.0f, 100000.0f, 100000.0f, 100000.0f);

	sub	esp, 8
	fld	QWORD PTR __real@40f86a0000000000
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR __real@40f86a0000000000
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR __real@40f86a0000000000
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR __real@c0f86a0000000000
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR __real@c0f86a0000000000
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR __real@c0f86a0000000000
	fstp	QWORD PTR [esp]
	push	OFFSET _create_forbidden_for_peds_cube
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 52					; 00000034H

; 554  : 		ScriptCommand(&create_forbidden_for_cars_cube, -100000.0f, -100000.0f, -100000.0f, 100000.0f, 100000.0f, 100000.0f);

	sub	esp, 8
	fld	QWORD PTR __real@40f86a0000000000
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR __real@40f86a0000000000
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR __real@40f86a0000000000
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR __real@c0f86a0000000000
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR __real@c0f86a0000000000
	fstp	QWORD PTR [esp]
	sub	esp, 8
	fld	QWORD PTR __real@c0f86a0000000000
	fstp	QWORD PTR [esp]
	push	OFFSET _create_forbidden_for_cars_cube
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 52					; 00000034H

; 555  : 		ScriptCommand(&set_max_wanted_level, 0);

	push	0
	push	OFFSET _set_max_wanted_level
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 8

; 556  : 		ScriptCommand(&toggle_player_controllable, PLAYER_ACTOR, 1);

	push	1
	mov	eax, DWORD PTR _PLAYER_ACTOR$209385[ebp]
	push	eax
	push	OFFSET _toggle_player_controllable
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 12					; 0000000cH

; 557  : 		ScriptCommand(&force_weather, 0);

	push	0
	push	OFFSET _force_weather
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 8

; 558  : 		ScriptCommand(&fade, 0, 0);

	push	0
	push	0
	push	OFFSET _fade
	call	?ScriptCommand@@YAHPBUSCRIPT_COMMAND@@ZZ ; ScriptCommand
	add	esp, 12					; 0000000cH

; 559  : 		bScriptInited = TRUE;

	mov	DWORD PTR ?bScriptInited@@3HA, 1	; bScriptInited
$LN1@CRunningSc:

; 560  : 	}
; 561  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@CRunningSc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@CRunningSc:
	DD	3
	DD	$LN7@CRunningSc
$LN7@CRunningSc:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@CRunningSc
	DD	-20					; ffffffecH
	DD	4
	DD	$LN5@CRunningSc
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN6@CRunningSc
$LN6@CRunningSc:
	DB	105					; 00000069H
	DB	80					; 00000050H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	78					; 0000004eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	98					; 00000062H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN5@CRunningSc:
	DB	80					; 00000050H
	DB	76					; 0000004cH
	DB	65					; 00000041H
	DB	89					; 00000059H
	DB	69					; 00000045H
	DB	82					; 00000052H
	DB	95					; 0000005fH
	DB	67					; 00000043H
	DB	72					; 00000048H
	DB	65					; 00000041H
	DB	82					; 00000052H
	DB	0
$LN4@CRunningSc:
	DB	80					; 00000050H
	DB	76					; 0000004cH
	DB	65					; 00000041H
	DB	89					; 00000059H
	DB	69					; 00000045H
	DB	82					; 00000052H
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	67					; 00000043H
	DB	84					; 00000054H
	DB	79					; 0000004fH
	DB	82					; 00000052H
	DB	0
?CRunningScript__Process@@YAXXZ ENDP			; CRunningScript__Process
_TEXT	ENDS
PUBLIC	?CRunningScript__Process_Hook@@YAXXZ		; CRunningScript__Process_Hook
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CRunningScript__Process_Hook@@YAXXZ
_TEXT	SEGMENT
?CRunningScript__Process_Hook@@YAXXZ PROC		; CRunningScript__Process_Hook, COMDAT

; 567  : 	_asm
; 568  : 	{
; 569  : 		pushad

	pushad

; 570  : 	}
; 571  : 
; 572  : 	CRunningScript__Process();

	call	?CRunningScript__Process@@YAXXZ		; CRunningScript__Process

; 573  : 
; 574  : 	_asm
; 575  : 	{
; 576  : 		popad

	popad

; 577  : 		retn

	ret	0
?CRunningScript__Process_Hook@@YAXXZ ENDP		; CRunningScript__Process_Hook
_TEXT	ENDS
PUBLIC	?SetGameState@CGame@@QAEXW4eGameState@@@Z	; CGame::SetGameState
PUBLIC	?StartGame@@YAXXZ				; StartGame
EXTRN	?StartGame@CGame@@QAEXXZ:PROC			; CGame::StartGame
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?StartGame@@YAXXZ
_TEXT	SEGMENT
?StartGame@@YAXXZ PROC					; StartGame, COMDAT

; 584  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 585  : 	pGame->StartGame();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?StartGame@CGame@@QAEXXZ		; CGame::StartGame

; 586  : 	pGame->SetGameState(GS_MENUPROCESS);

	push	7
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?SetGameState@CGame@@QAEXW4eGameState@@@Z ; CGame::SetGameState

; 587  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?StartGame@@YAXXZ ENDP					; StartGame
_TEXT	ENDS
PUBLIC	?InstallMethodHook@@YAXKK@Z			; InstallMethodHook
EXTRN	?Unprotect@@YAXKI@Z:PROC			; Unprotect
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InstallMethodHook@@YAXKK@Z
_TEXT	SEGMENT
_dwInstallAddress$ = 8					; size = 4
_dwHookFunction$ = 12					; size = 4
?InstallMethodHook@@YAXKK@Z PROC			; InstallMethodHook, COMDAT

; 592  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 593  : 	Unprotect(dwInstallAddress, 4);

	push	4
	mov	eax, DWORD PTR _dwInstallAddress$[ebp]
	push	eax
	call	?Unprotect@@YAXKI@Z			; Unprotect
	add	esp, 8

; 594  : 	*(DWORD *)dwInstallAddress = (DWORD)dwHookFunction;

	mov	eax, DWORD PTR _dwInstallAddress$[ebp]
	mov	ecx, DWORD PTR _dwHookFunction$[ebp]
	mov	DWORD PTR [eax], ecx

; 595  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InstallMethodHook@@YAXKK@Z ENDP			; InstallMethodHook
_TEXT	ENDS
PUBLIC	?InstallHook@@YAXKKKPAEH@Z			; InstallHook
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InstallHook@@YAXKKKPAEH@Z
_TEXT	SEGMENT
_dwInstallAddress$ = 8					; size = 4
_dwHookFunction$ = 12					; size = 4
_dwHookStorage$ = 16					; size = 4
_pbyteJmpCode$ = 20					; size = 4
_iJmpCodeSize$ = 24					; size = 4
?InstallHook@@YAXKKKPAEH@Z PROC				; InstallHook, COMDAT

; 600  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 601  : 	// Install the pointer to procaddr.
; 602  : 	Unprotect(dwHookStorage, 4);

	push	4
	mov	eax, DWORD PTR _dwHookStorage$[ebp]
	push	eax
	call	?Unprotect@@YAXKI@Z			; Unprotect
	add	esp, 8

; 603  : 	*(PDWORD)dwHookStorage = (DWORD)dwHookFunction;

	mov	eax, DWORD PTR _dwHookStorage$[ebp]
	mov	ecx, DWORD PTR _dwHookFunction$[ebp]
	mov	DWORD PTR [eax], ecx

; 604  : 
; 605  : 	// Install the Jmp code.
; 606  : 	Unprotect(dwInstallAddress, iJmpCodeSize);

	mov	eax, DWORD PTR _iJmpCodeSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dwInstallAddress$[ebp]
	push	ecx
	call	?Unprotect@@YAXKI@Z			; Unprotect
	add	esp, 8

; 607  : 	memcpy((PVOID)dwInstallAddress, pbyteJmpCode, iJmpCodeSize);

	mov	eax, DWORD PTR _iJmpCodeSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pbyteJmpCode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dwInstallAddress$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 608  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InstallHook@@YAXKKKPAEH@Z ENDP				; InstallHook
_TEXT	ENDS
PUBLIC	?InstallCallHook@@YAXKK@Z			; InstallCallHook
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InstallCallHook@@YAXKK@Z
_TEXT	SEGMENT
_dwInstallAddress$ = 8					; size = 4
_dwHookFunction$ = 12					; size = 4
?InstallCallHook@@YAXKK@Z PROC				; InstallCallHook, COMDAT

; 613  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 614  : 	Unprotect(dwInstallAddress, 5);

	push	5
	mov	eax, DWORD PTR _dwInstallAddress$[ebp]
	push	eax
	call	?Unprotect@@YAXKI@Z			; Unprotect
	add	esp, 8

; 615  : 	*(BYTE *)dwInstallAddress = 0xE8;

	mov	eax, DWORD PTR _dwInstallAddress$[ebp]
	mov	BYTE PTR [eax], 232			; 000000e8H

; 616  : 	*(DWORD *)(dwInstallAddress + 1) = (dwHookFunction - (dwInstallAddress + 5));

	mov	eax, DWORD PTR _dwInstallAddress$[ebp]
	add	eax, 5
	mov	ecx, DWORD PTR _dwHookFunction$[ebp]
	sub	ecx, eax
	mov	edx, DWORD PTR _dwInstallAddress$[ebp]
	mov	DWORD PTR [edx+1], ecx

; 617  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InstallCallHook@@YAXKK@Z ENDP				; InstallCallHook
_TEXT	ENDS
PUBLIC	?InstallJmpHook@@YAXKK@Z			; InstallJmpHook
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InstallJmpHook@@YAXKK@Z
_TEXT	SEGMENT
_dwInstallAddress$ = 8					; size = 4
_dwHookFunction$ = 12					; size = 4
?InstallJmpHook@@YAXKK@Z PROC				; InstallJmpHook, COMDAT

; 622  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 623  : 	Unprotect(dwInstallAddress, 5);

	push	5
	mov	eax, DWORD PTR _dwInstallAddress$[ebp]
	push	eax
	call	?Unprotect@@YAXKI@Z			; Unprotect
	add	esp, 8

; 624  : 	*(BYTE *)dwInstallAddress = 0xE9;

	mov	eax, DWORD PTR _dwInstallAddress$[ebp]
	mov	BYTE PTR [eax], 233			; 000000e9H

; 625  : 	*(DWORD *)(dwInstallAddress + 1) = (dwHookFunction - (dwInstallAddress + 5));

	mov	eax, DWORD PTR _dwInstallAddress$[ebp]
	add	eax, 5
	mov	ecx, DWORD PTR _dwHookFunction$[ebp]
	sub	ecx, eax
	mov	edx, DWORD PTR _dwInstallAddress$[ebp]
	mov	DWORD PTR [edx+1], ecx

; 626  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InstallJmpHook@@YAXKK@Z ENDP				; InstallJmpHook
_TEXT	ENDS
PUBLIC	?GameInstallHooks@@YAXXZ			; GameInstallHooks
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GameInstallHooks@@YAXXZ
_TEXT	SEGMENT
?GameInstallHooks@@YAXXZ PROC				; GameInstallHooks, COMDAT

; 631  : {	

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 632  : 	// Install hook for CPlayerPed::ProcessControl
; 633  : 	InstallMethodHook((VAR_CPlayerPed__VFTable + 0x20), (DWORD)CPlayerPed__ProcessControl_Hook);

	push	OFFSET ?CPlayerPed__ProcessControl_Hook@@YAXXZ ; CPlayerPed__ProcessControl_Hook
	push	6901136					; 00694d90H
	call	?InstallMethodHook@@YAXKK@Z		; InstallMethodHook
	add	esp, 8

; 634  : 
; 635  : 	// Install hook for CBike::ProcessControl
; 636  : 	InstallMethodHook((VAR_CBike__VFTable + 0x20), (DWORD)Vehicle_ProcessControl_Hook);

	push	OFFSET ?Vehicle_ProcessControl_Hook@@YAXXZ ; Vehicle_ProcessControl_Hook
	push	7174996					; 006d7b54H
	call	?InstallMethodHook@@YAXKK@Z		; InstallMethodHook
	add	esp, 8

; 637  : 
; 638  : 	// Install hook for CBoat::ProcessControl
; 639  : 	InstallMethodHook((VAR_CBoat__VFTable + 0x20), (DWORD)Vehicle_ProcessControl_Hook);

	push	OFFSET ?Vehicle_ProcessControl_Hook@@YAXXZ ; Vehicle_ProcessControl_Hook
	push	6926548					; 0069b0d4H
	call	?InstallMethodHook@@YAXKK@Z		; InstallMethodHook
	add	esp, 8

; 640  : 
; 641  : 	// Install hook for CAutomobile::ProcessControl
; 642  : 	InstallMethodHook((VAR_CAutomobile__VFTable + 0x20), (DWORD)Vehicle_ProcessControl_Hook);

	push	OFFSET ?Vehicle_ProcessControl_Hook@@YAXXZ ; Vehicle_ProcessControl_Hook
	push	6925744					; 0069adb0H
	call	?InstallMethodHook@@YAXKK@Z		; InstallMethodHook
	add	esp, 8

; 643  : 
; 644  : 	// Install hook for CPed::SetObjective
; 645  : 	InstallJmpHook(FUNC_CPed__SetObjective, (DWORD)CPed__SetObjective_Hook);

	push	OFFSET ?CPed__SetObjective_Hook@@YAXXZ	; CPed__SetObjective_Hook
	push	5381904					; 00521f10H
	call	?InstallJmpHook@@YAXKK@Z		; InstallJmpHook
	add	esp, 8

; 646  : 								
; 647  : 	// Install hook for RadarTranslateColor
; 648  : 	InstallJmpHook(FUNC_RadarTranslateColor, (DWORD)RadarTranslateColor);

	push	OFFSET ?RadarTranslateColor@@YAXXZ	; RadarTranslateColor
	push	4993104					; 004c3050H
	call	?InstallJmpHook@@YAXKK@Z		; InstallJmpHook
	add	esp, 8

; 649  : 	
; 650  : 	// Install hook for CPed::InflictDamage
; 651  : 	InstallJmpHook(FUNC_CPed__InflictDamage, (DWORD)CPed__InflictDamage_Hook);

	push	OFFSET ?CPed__InflictDamage_Hook@@YAXXZ	; CPed__InflictDamage_Hook
	push	5397280					; 00525b20H
	call	?InstallJmpHook@@YAXKK@Z		; InstallJmpHook
	add	esp, 8

; 652  : 
; 653  : 	// Install hook for EnterCarAnimCallback
; 654  : 	// Update: Causing even more problems.
; 655  : 	InstallJmpHook(FUNC_EnterCarAnimCallback, (DWORD)EnterCarAnimCallback_Hook);

	push	OFFSET ?EnterCarAnimCallback_Hook@@YAXXZ ; EnterCarAnimCallback_Hook
	push	5318880					; 005128e0H
	call	?InstallJmpHook@@YAXKK@Z		; InstallJmpHook
	add	esp, 8

; 656  : 
; 657  : 	// Install hook for CRunningScript::Process (thx Merlin)
; 658  : 	InstallCallHook(CALLBACK_CRunningScript__Process, (DWORD)CRunningScript__Process_Hook);

	push	OFFSET ?CRunningScript__Process_Hook@@YAXXZ ; CRunningScript__Process_Hook
	push	4522565					; 00450245H
	call	?InstallCallHook@@YAXKK@Z		; InstallCallHook
	add	esp, 8

; 659  : 
; 660  : 	// Install hook for menu process game state setting
; 661  : 	InstallCallHook(0x6003B3, (DWORD)StartGame);

	push	OFFSET ?StartGame@@YAXXZ		; StartGame
	push	6292403					; 006003b3H
	call	?InstallCallHook@@YAXKK@Z		; InstallCallHook
	add	esp, 8

; 662  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GameInstallHooks@@YAXXZ ENDP				; GameInstallHooks
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??0CPlayerPed@@QAE@XZ:PROC			; CPlayerPed::CPlayerPed
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
; File d:\vice-players-master\client\game\cgame.h
xdata$x	SEGMENT
__unwindtable$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ$0
__ehfuncinfo$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
_TEXT	SEGMENT
tv74 = -244						; size = 4
$T209532 = -236						; size = 4
$T209533 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ PROC		; CGame::FindPlayerPed, COMDAT
; _this$ = ecx

; 101  : 	CPlayerPed  *FindPlayerPed() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 102  : 		if(m_pInternalPlayer==NULL)	m_pInternalPlayer = new CPlayerPed();

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN1@FindPlayer
	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T209533[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T209533[ebp], 0
	je	SHORT $LN4@FindPlayer
	mov	ecx, DWORD PTR $T209533[ebp]
	call	??0CPlayerPed@@QAE@XZ			; CPlayerPed::CPlayerPed
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN5@FindPlayer
$LN4@FindPlayer:
	mov	DWORD PTR tv74[ebp], 0
$LN5@FindPlayer:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T209532[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T209532[ebp]
	mov	DWORD PTR [ecx+4], edx
$LN1@FindPlayer:

; 103  : 		return m_pInternalPlayer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 104  : 	};

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ$0:
	mov	eax, DWORD PTR $T209533[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ENDP		; CGame::FindPlayerPed
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetGameState@CGame@@QAEXW4eGameState@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_state$ = 8						; size = 4
?SetGameState@CGame@@QAEXW4eGameState@@@Z PROC		; CGame::SetGameState, COMDAT
; _this$ = ecx

; 126  : 	void SetGameState(eGameState state) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 127  : 		*(eGameState *)VAR_GameState = state;

	mov	eax, DWORD PTR _state$[ebp]
	mov	DWORD PTR ds:10182408, eax

; 128  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetGameState@CGame@@QAEXW4eGameState@@@Z ENDP		; CGame::SetGameState
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\client\net\clocalplayer.h
_TEXT	ENDS
;	COMDAT ?IsActive@CLocalPlayer@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IsActive@CLocalPlayer@@QAEHXZ PROC			; CLocalPlayer::IsActive, COMDAT
; _this$ = ecx

; 76   : 	BOOL IsActive() { return m_bIsActive; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+56]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?IsActive@CLocalPlayer@@QAEHXZ ENDP			; CLocalPlayer::IsActive
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?IsWasted@CLocalPlayer@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IsWasted@CLocalPlayer@@QAEHXZ PROC			; CLocalPlayer::IsWasted, COMDAT
; _this$ = ecx

; 77   : 	BOOL IsWasted() { return m_bIsWasted; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+60]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?IsWasted@CLocalPlayer@@QAEHXZ ENDP			; CLocalPlayer::IsWasted
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetTeam@CLocalPlayer@@QAEEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetTeam@CLocalPlayer@@QAEEXZ PROC			; CLocalPlayer::GetTeam, COMDAT
; _this$ = ecx

; 89   : 	BYTE GetTeam() { 

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 90   : 		if(m_bHasSpawnInfo) return m_SpawnInfo.byteTeam;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+52], 0
	je	SHORT $LN2@GetTeam
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+4]
	jmp	SHORT $LN3@GetTeam
	jmp	SHORT $LN3@GetTeam
$LN2@GetTeam:

; 91   : 		else return NO_TEAM;

	or	al, 255					; 000000ffH
$LN3@GetTeam:

; 92   : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTeam@CLocalPlayer@@QAEEXZ ENDP			; CLocalPlayer::GetTeam
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\client\net\cremoteplayer.h
_TEXT	ENDS
;	COMDAT ?GetTeam@CRemotePlayer@@QAEEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetTeam@CRemotePlayer@@QAEEXZ PROC			; CRemotePlayer::GetTeam, COMDAT
; _this$ = ecx

; 78   : 	BYTE GetTeam() { return m_byteTeam; };	

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+16]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetTeam@CRemotePlayer@@QAEEXZ ENDP			; CRemotePlayer::GetTeam
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\client\net\cplayermanager.h
_TEXT	ENDS
;	COMDAT ?GetLocalPlayer@CPlayerManager@@QAEPAVCLocalPlayer@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetLocalPlayer@CPlayerManager@@QAEPAVCLocalPlayer@@XZ PROC ; CPlayerManager::GetLocalPlayer, COMDAT
; _this$ = ecx

; 39   : 	CLocalPlayer * GetLocalPlayer() { return m_pLocalPlayer; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+200]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLocalPlayer@CPlayerManager@@QAEPAVCLocalPlayer@@XZ ENDP ; CPlayerManager::GetLocalPlayer
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetAt@CPlayerManager@@QAEPAVCRemotePlayer@@E@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_playerID$ = 8						; size = 1
?GetAt@CPlayerManager@@QAEPAVCRemotePlayer@@E@Z PROC	; CPlayerManager::GetAt, COMDAT
; _this$ = ecx

; 45   : 	CRemotePlayer* GetAt(EntityId playerID) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 46   : 		if(playerID > MAX_PLAYERS) { return NULL; }

	movzx	eax, BYTE PTR _playerID$[ebp]
	cmp	eax, 50					; 00000032H
	jle	SHORT $LN1@GetAt
	xor	eax, eax
	jmp	SHORT $LN2@GetAt
$LN1@GetAt:

; 47   : 		return m_pPlayers[playerID];

	movzx	eax, BYTE PTR _playerID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+208]
$LN2@GetAt:

; 48   : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?GetAt@CPlayerManager@@QAEPAVCRemotePlayer@@E@Z ENDP	; CPlayerManager::GetAt
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\client\net\cvehiclemanager.h
_TEXT	ENDS
;	COMDAT ?GetAt@CVehicleManager@@QAEPAVCVehicle@@E@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_vehicleID$ = 8						; size = 1
?GetAt@CVehicleManager@@QAEPAVCVehicle@@E@Z PROC	; CVehicleManager::GetAt, COMDAT
; _this$ = ecx

; 45   : 	CVehicle* GetAt(EntityId vehicleID) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 46   : 		if(vehicleID > MAX_VEHICLES) { return NULL; }

	movzx	eax, BYTE PTR _vehicleID$[ebp]
	cmp	eax, 200				; 000000c8H
	jle	SHORT $LN1@GetAt@2
	xor	eax, eax
	jmp	SHORT $LN2@GetAt@2
$LN1@GetAt@2:

; 47   : 		return m_pVehicles[vehicleID];

	movzx	eax, BYTE PTR _vehicleID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+800]
$LN2@GetAt@2:

; 48   : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?GetAt@CVehicleManager@@QAEPAVCVehicle@@E@Z ENDP	; CVehicleManager::GetAt
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\client\net\cnetworkmanager.h
_TEXT	ENDS
;	COMDAT ?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ PROC ; CNetworkManager::GetPlayerManager, COMDAT
; _this$ = ecx

; 79   : 	CPlayerManager * GetPlayerManager() { return m_pPlayerManager; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ENDP ; CNetworkManager::GetPlayerManager
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ PROC ; CNetworkManager::GetVehicleManager, COMDAT
; _this$ = ecx

; 80   : 	CVehicleManager * GetVehicleManager() { return m_pVehicleManager; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetVehicleManager@CNetworkManager@@QAEPAVCVehicleManager@@XZ ENDP ; CNetworkManager::GetVehicleManager
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetFriendlyFire@CNetworkManager@@QAEEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetFriendlyFire@CNetworkManager@@QAEEXZ PROC		; CNetworkManager::GetFriendlyFire, COMDAT
; _this$ = ecx

; 88   : 	BYTE GetFriendlyFire() { return m_byteFriendlyFire; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+356]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetFriendlyFire@CNetworkManager@@QAEEXZ ENDP		; CNetworkManager::GetFriendlyFire
_TEXT	ENDS
END
