; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	d:\vice-players-master\Client\anticheat.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?MemoryModificationCheck@@YAHXZ			; MemoryModificationCheck
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\vice-players-master\client\anticheat.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ?MemoryModificationCheck@@YAHXZ
_TEXT	SEGMENT
?MemoryModificationCheck@@YAHXZ PROC			; MemoryModificationCheck, COMDAT

; 18   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 19   : 	return TRUE;

	mov	eax, 1

; 20   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?MemoryModificationCheck@@YAHXZ ENDP			; MemoryModificationCheck
_TEXT	ENDS
PUBLIC	??_C@_0BC@PALMPHNA@data?1pedstats?4dat?$AA@	; `string'
PUBLIC	??_C@_0BA@MPJOKCGM@data?1weapon?4dat?$AA@	; `string'
PUBLIC	??_C@_0BC@FMAAGMHC@data?1handling?4cfg?$AA@	; `string'
PUBLIC	?CheckFile@@YAHPAUmdFile@@@Z			; CheckFile
PUBLIC	??_C@_0BB@GCIAICFI@data?1default?4ide?$AA@	; `string'
PUBLIC	?FileCheckSum@@YAHXZ				; FileCheckSum
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	?bGameInited@@3HA:DWORD				; bGameInited
EXTRN	_sprintf:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	?bAntiCheat@@3HA:DWORD				; bAntiCheat
EXTRN	__RTC_CheckEsp:PROC
;	COMDAT ??_C@_0BC@PALMPHNA@data?1pedstats?4dat?$AA@
CONST	SEGMENT
??_C@_0BC@PALMPHNA@data?1pedstats?4dat?$AA@ DB 'data/pedstats.dat', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MPJOKCGM@data?1weapon?4dat?$AA@
CONST	SEGMENT
??_C@_0BA@MPJOKCGM@data?1weapon?4dat?$AA@ DB 'data/weapon.dat', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FMAAGMHC@data?1handling?4cfg?$AA@
CONST	SEGMENT
??_C@_0BC@FMAAGMHC@data?1handling?4cfg?$AA@ DB 'data/handling.cfg', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GCIAICFI@data?1default?4ide?$AA@
CONST	SEGMENT
??_C@_0BB@GCIAICFI@data?1default?4ide?$AA@ DB 'data/default.ide', 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?FileCheckSum@@YAHXZ
_TEXT	SEGMENT
$T209320 = -296						; size = 4
$T209321 = -284						; size = 4
$T209322 = -272						; size = 4
$T209323 = -260						; size = 4
$T209324 = -248						; size = 4
$T209325 = -236						; size = 4
$T209326 = -224						; size = 4
$T209327 = -212						; size = 4
_mdCheckSumFile$209253 = -8				; size = 4
?FileCheckSum@@YAHXZ PROC				; FileCheckSum, COMDAT

; 23   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 24   : 	if(bAntiCheat)

	cmp	DWORD PTR ?bAntiCheat@@3HA, 0		; bAntiCheat
	je	$LN5@FileCheckS

; 25   : 	{
; 26   : 		mdFile* mdCheckSumFile;
; 27   : 
; 28   : 		mdCheckSumFile = new mdFile;

	push	160					; 000000a0H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T209320[ebp], eax
	mov	eax, DWORD PTR $T209320[ebp]
	mov	DWORD PTR _mdCheckSumFile$209253[ebp], eax

; 29   : 
; 30   : 		sprintf(mdCheckSumFile->szFileLocation, "data/default.ide");

	push	OFFSET ??_C@_0BB@GCIAICFI@data?1default?4ide?$AA@
	mov	eax, DWORD PTR _mdCheckSumFile$209253[ebp]
	push	eax
	call	_sprintf
	add	esp, 8

; 31   : 		mdCheckSumFile->iCorrectDigestArray[0] = 0;

	mov	eax, DWORD PTR _mdCheckSumFile$209253[ebp]
	mov	DWORD PTR [eax+128], 0

; 32   : 		mdCheckSumFile->iCorrectDigestArray[1] = 1981298251;

	mov	eax, DWORD PTR _mdCheckSumFile$209253[ebp]
	mov	DWORD PTR [eax+132], 1981298251		; 7618364bH

; 33   : 		mdCheckSumFile->iCorrectDigestArray[2] = 1376643526;

	mov	eax, DWORD PTR _mdCheckSumFile$209253[ebp]
	mov	DWORD PTR [eax+136], 1376643526		; 520de9c6H

; 34   : 		mdCheckSumFile->iCorrectDigestArray[3] = 3101585329;

	mov	eax, DWORD PTR _mdCheckSumFile$209253[ebp]
	mov	DWORD PTR [eax+140], -1193381967	; b8de6fb1H

; 35   : 
; 36   : 		if (!CheckFile(mdCheckSumFile))

	mov	eax, DWORD PTR _mdCheckSumFile$209253[ebp]
	push	eax
	call	?CheckFile@@YAHPAUmdFile@@@Z		; CheckFile
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN4@FileCheckS

; 37   : 		{
; 38   : 			bGameInited = TRUE;

	mov	DWORD PTR ?bGameInited@@3HA, 1		; bGameInited

; 39   : 			return FALSE;

	xor	eax, eax
	jmp	$LN6@FileCheckS
$LN4@FileCheckS:

; 40   : 		}
; 41   : 		
; 42   : 		delete mdCheckSumFile;

	mov	eax, DWORD PTR _mdCheckSumFile$209253[ebp]
	mov	DWORD PTR $T209321[ebp], eax
	mov	ecx, DWORD PTR $T209321[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 43   : 
; 44   : 		mdCheckSumFile = new mdFile;

	push	160					; 000000a0H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T209322[ebp], eax
	mov	eax, DWORD PTR $T209322[ebp]
	mov	DWORD PTR _mdCheckSumFile$209253[ebp], eax

; 45   : 
; 46   : 		sprintf(mdCheckSumFile->szFileLocation, "data/handling.cfg");

	push	OFFSET ??_C@_0BC@FMAAGMHC@data?1handling?4cfg?$AA@
	mov	eax, DWORD PTR _mdCheckSumFile$209253[ebp]
	push	eax
	call	_sprintf
	add	esp, 8

; 47   : 		mdCheckSumFile->iCorrectDigestArray[0] = 0;

	mov	eax, DWORD PTR _mdCheckSumFile$209253[ebp]
	mov	DWORD PTR [eax+128], 0

; 48   : 		mdCheckSumFile->iCorrectDigestArray[1] = 3465663929;

	mov	eax, DWORD PTR _mdCheckSumFile$209253[ebp]
	mov	DWORD PTR [eax+132], -829303367		; ce91d5b9H

; 49   : 		mdCheckSumFile->iCorrectDigestArray[2] = 1196138439;

	mov	eax, DWORD PTR _mdCheckSumFile$209253[ebp]
	mov	DWORD PTR [eax+136], 1196138439		; 474b9fc7H

; 50   : 		mdCheckSumFile->iCorrectDigestArray[3] = 3152470125;

	mov	eax, DWORD PTR _mdCheckSumFile$209253[ebp]
	mov	DWORD PTR [eax+140], -1142497171	; bbe6e06dH

; 51   : 
; 52   : 		if (!CheckFile(mdCheckSumFile))

	mov	eax, DWORD PTR _mdCheckSumFile$209253[ebp]
	push	eax
	call	?CheckFile@@YAHPAUmdFile@@@Z		; CheckFile
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN3@FileCheckS

; 53   : 		{
; 54   : 			bGameInited = TRUE;

	mov	DWORD PTR ?bGameInited@@3HA, 1		; bGameInited

; 55   : 			return FALSE;

	xor	eax, eax
	jmp	$LN6@FileCheckS
$LN3@FileCheckS:

; 56   : 		}
; 57   : 		
; 58   : 		delete mdCheckSumFile;

	mov	eax, DWORD PTR _mdCheckSumFile$209253[ebp]
	mov	DWORD PTR $T209323[ebp], eax
	mov	ecx, DWORD PTR $T209323[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 59   : 
; 60   : 		mdCheckSumFile = new mdFile;

	push	160					; 000000a0H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T209324[ebp], eax
	mov	eax, DWORD PTR $T209324[ebp]
	mov	DWORD PTR _mdCheckSumFile$209253[ebp], eax

; 61   : 
; 62   : 		sprintf(mdCheckSumFile->szFileLocation, "data/weapon.dat");

	push	OFFSET ??_C@_0BA@MPJOKCGM@data?1weapon?4dat?$AA@
	mov	eax, DWORD PTR _mdCheckSumFile$209253[ebp]
	push	eax
	call	_sprintf
	add	esp, 8

; 63   : 		mdCheckSumFile->iCorrectDigestArray[0] = 0;

	mov	eax, DWORD PTR _mdCheckSumFile$209253[ebp]
	mov	DWORD PTR [eax+128], 0

; 64   : 		mdCheckSumFile->iCorrectDigestArray[1] = 1559786538;

	mov	eax, DWORD PTR _mdCheckSumFile$209253[ebp]
	mov	DWORD PTR [eax+132], 1559786538		; 5cf8742aH

; 65   : 		mdCheckSumFile->iCorrectDigestArray[2] = 4059666828;

	mov	eax, DWORD PTR _mdCheckSumFile$209253[ebp]
	mov	DWORD PTR [eax+136], -235300468		; f1f9998cH

; 66   : 		mdCheckSumFile->iCorrectDigestArray[3] = 1862227152;

	mov	eax, DWORD PTR _mdCheckSumFile$209253[ebp]
	mov	DWORD PTR [eax+140], 1862227152		; 6eff54d0H

; 67   : 
; 68   : 		if (!CheckFile(mdCheckSumFile))

	mov	eax, DWORD PTR _mdCheckSumFile$209253[ebp]
	push	eax
	call	?CheckFile@@YAHPAUmdFile@@@Z		; CheckFile
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN2@FileCheckS

; 69   : 		{
; 70   : 			bGameInited = TRUE;

	mov	DWORD PTR ?bGameInited@@3HA, 1		; bGameInited

; 71   : 			return FALSE;

	xor	eax, eax
	jmp	$LN6@FileCheckS
$LN2@FileCheckS:

; 72   : 		}
; 73   : 		
; 74   : 		delete mdCheckSumFile;

	mov	eax, DWORD PTR _mdCheckSumFile$209253[ebp]
	mov	DWORD PTR $T209325[ebp], eax
	mov	ecx, DWORD PTR $T209325[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4

; 75   : 
; 76   : 		mdCheckSumFile = new mdFile;

	push	160					; 000000a0H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T209326[ebp], eax
	mov	eax, DWORD PTR $T209326[ebp]
	mov	DWORD PTR _mdCheckSumFile$209253[ebp], eax

; 77   : 
; 78   : 		sprintf(mdCheckSumFile->szFileLocation, "data/pedstats.dat");

	push	OFFSET ??_C@_0BC@PALMPHNA@data?1pedstats?4dat?$AA@
	mov	eax, DWORD PTR _mdCheckSumFile$209253[ebp]
	push	eax
	call	_sprintf
	add	esp, 8

; 79   : 		mdCheckSumFile->iCorrectDigestArray[0] = 0;

	mov	eax, DWORD PTR _mdCheckSumFile$209253[ebp]
	mov	DWORD PTR [eax+128], 0

; 80   : 		mdCheckSumFile->iCorrectDigestArray[1] = 1903937073;

	mov	eax, DWORD PTR _mdCheckSumFile$209253[ebp]
	mov	DWORD PTR [eax+132], 1903937073		; 717bc631H

; 81   : 		mdCheckSumFile->iCorrectDigestArray[2] = 2707443107;

	mov	eax, DWORD PTR _mdCheckSumFile$209253[ebp]
	mov	DWORD PTR [eax+136], -1587524189	; a1604da3H

; 82   : 		mdCheckSumFile->iCorrectDigestArray[3] = 385086949;

	mov	eax, DWORD PTR _mdCheckSumFile$209253[ebp]
	mov	DWORD PTR [eax+140], 385086949		; 16f3f5e5H

; 83   : 
; 84   : 		if (!CheckFile(mdCheckSumFile))

	mov	eax, DWORD PTR _mdCheckSumFile$209253[ebp]
	push	eax
	call	?CheckFile@@YAHPAUmdFile@@@Z		; CheckFile
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@FileCheckS

; 85   : 		{
; 86   : 			bGameInited = TRUE;

	mov	DWORD PTR ?bGameInited@@3HA, 1		; bGameInited

; 87   : 			return FALSE;

	xor	eax, eax
	jmp	SHORT $LN6@FileCheckS
$LN1@FileCheckS:

; 88   : 		}
; 89   : 		
; 90   : 		delete mdCheckSumFile;

	mov	eax, DWORD PTR _mdCheckSumFile$209253[ebp]
	mov	DWORD PTR $T209327[ebp], eax
	mov	ecx, DWORD PTR $T209327[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN5@FileCheckS:

; 91   : 	}
; 92   : 
; 93   : 	return TRUE;

	mov	eax, 1
$LN6@FileCheckS:

; 94   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FileCheckSum@@YAHXZ ENDP				; FileCheckSum
_TEXT	ENDS
PUBLIC	??_C@_0BN@MFDAHPCD@CRC32?5checksum?5failed?3?5?8?$CFs?8?4?$AA@ ; `string'
PUBLIC	??_C@_0DI@IINOMOK@CRC32?5checksum?5failed?3?5an?5error?5@ ; `string'
PUBLIC	??_C@_0BI@PLMGKMDO@Error?5trying?5to?5load?5?$CFs?$AA@ ; `string'
PUBLIC	??_C@_01KDCPPGHE@r?$AA@				; `string'
PUBLIC	__$ArrayPad$
EXTRN	_fclose:PROC
EXTRN	_ferror:PROC
EXTRN	?MD5Final@@YAXQAEPAUMD5Context@@@Z:PROC		; MD5Final
EXTRN	?MD5Update@@YAXPAUMD5Context@@PBEI@Z:PROC	; MD5Update
EXTRN	_fread:PROC
EXTRN	?MD5Init@@YAXPAUMD5Context@@@Z:PROC		; MD5Init
EXTRN	?AddDebugMessage@CChatWindow@@QAAXPADZZ:PROC	; CChatWindow::AddDebugMessage
EXTRN	?pChatWindow@@3PAVCChatWindow@@A:DWORD		; pChatWindow
EXTRN	_fopen:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT ??_C@_0BN@MFDAHPCD@CRC32?5checksum?5failed?3?5?8?$CFs?8?4?$AA@
CONST	SEGMENT
??_C@_0BN@MFDAHPCD@CRC32?5checksum?5failed?3?5?8?$CFs?8?4?$AA@ DB 'CRC32 '
	DB	'checksum failed: ''%s''.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@IINOMOK@CRC32?5checksum?5failed?3?5an?5error?5@
CONST	SEGMENT
??_C@_0DI@IINOMOK@CRC32?5checksum?5failed?3?5an?5error?5@ DB 'CRC32 check'
	DB	'sum failed: an error occurred checking ''%s''.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@PLMGKMDO@Error?5trying?5to?5load?5?$CFs?$AA@
CONST	SEGMENT
??_C@_0BI@PLMGKMDO@Error?5trying?5to?5load?5?$CFs?$AA@ DB 'Error trying t'
	DB	'o load %s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r?$AA@
CONST	SEGMENT
??_C@_01KDCPPGHE@r?$AA@ DB 'r', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?CheckFile@@YAHPAUmdFile@@@Z
_TEXT	SEGMENT
_mdCTX$209284 = -1152					; size = 88
_szBuffer$ = -1056					; size = 1024
_x$ = -24						; size = 4
_fLocalFile$ = -12					; size = 4
__$ArrayPad$ = -4					; size = 4
_mdChkFile$ = 8						; size = 4
?CheckFile@@YAHPAUmdFile@@@Z PROC			; CheckFile, COMDAT

; 97   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 1348				; 00000544H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1348]
	mov	ecx, 337				; 00000151H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 98   : 	FILE* fLocalFile;
; 99   : 	fLocalFile = fopen(mdChkFile->szFileLocation, "r");

	push	OFFSET ??_C@_01KDCPPGHE@r?$AA@
	mov	eax, DWORD PTR _mdChkFile$[ebp]
	push	eax
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _fLocalFile$[ebp], eax

; 100  : 	int x;
; 101  : 	unsigned char szBuffer[1024];
; 102  : 
; 103  : 	if(!fLocalFile)

	cmp	DWORD PTR _fLocalFile$[ebp], 0
	jne	SHORT $LN7@CheckFile

; 104  : 	{
; 105  : 		pChatWindow->AddDebugMessage("Error trying to load %s", mdChkFile->szFileLocation);

	mov	eax, DWORD PTR _mdChkFile$[ebp]
	push	eax
	push	OFFSET ??_C@_0BI@PLMGKMDO@Error?5trying?5to?5load?5?$CFs?$AA@
	mov	ecx, DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A ; pChatWindow
	push	ecx
	call	?AddDebugMessage@CChatWindow@@QAAXPADZZ	; CChatWindow::AddDebugMessage
	add	esp, 12					; 0000000cH

; 106  : 		return FALSE;

	xor	eax, eax
	jmp	$LN8@CheckFile

; 107  : 	}
; 108  : 	else

	jmp	$LN6@CheckFile
$LN7@CheckFile:

; 109  : 	{
; 110  : 		MD5_CTX mdCTX;
; 111  : 		MD5Init(&mdCTX);

	lea	eax, DWORD PTR _mdCTX$209284[ebp]
	push	eax
	call	?MD5Init@@YAXPAUMD5Context@@@Z		; MD5Init
	add	esp, 4
$LN5@CheckFile:

; 112  : 		while((x = fread(szBuffer, 1, sizeof(szBuffer), fLocalFile) > 0)) MD5Update(&mdCTX, szBuffer, x);

	mov	eax, DWORD PTR _fLocalFile$[ebp]
	push	eax
	push	1024					; 00000400H
	push	1
	lea	ecx, DWORD PTR _szBuffer$[ebp]
	push	ecx
	call	_fread
	add	esp, 16					; 00000010H
	xor	edx, edx
	cmp	edx, eax
	sbb	eax, eax
	neg	eax
	mov	DWORD PTR _x$[ebp], eax
	je	SHORT $LN4@CheckFile
	mov	eax, DWORD PTR _x$[ebp]
	push	eax
	lea	ecx, DWORD PTR _szBuffer$[ebp]
	push	ecx
	lea	edx, DWORD PTR _mdCTX$209284[ebp]
	push	edx
	call	?MD5Update@@YAXPAUMD5Context@@PBEI@Z	; MD5Update
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN5@CheckFile
$LN4@CheckFile:

; 113  : 		MD5Final(mdChkFile->szRawLocalDigest, &mdCTX);

	lea	eax, DWORD PTR _mdCTX$209284[ebp]
	push	eax
	mov	ecx, DWORD PTR _mdChkFile$[ebp]
	add	ecx, 144				; 00000090H
	push	ecx
	call	?MD5Final@@YAXQAEPAUMD5Context@@@Z	; MD5Final
	add	esp, 8

; 114  : 
; 115  : 		if(ferror(fLocalFile))

	mov	eax, DWORD PTR _fLocalFile$[ebp]
	push	eax
	call	_ferror
	add	esp, 4
	test	eax, eax
	je	SHORT $LN3@CheckFile

; 116  : 		{
; 117  : 			pChatWindow->AddDebugMessage("CRC32 checksum failed: an error occurred checking \'%s\'.", mdChkFile->szFileLocation);

	mov	eax, DWORD PTR _mdChkFile$[ebp]
	push	eax
	push	OFFSET ??_C@_0DI@IINOMOK@CRC32?5checksum?5failed?3?5an?5error?5@
	mov	ecx, DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A ; pChatWindow
	push	ecx
	call	?AddDebugMessage@CChatWindow@@QAAXPADZZ	; CChatWindow::AddDebugMessage
	add	esp, 12					; 0000000cH

; 118  : 			fclose(fLocalFile);

	mov	eax, DWORD PTR _fLocalFile$[ebp]
	push	eax
	call	_fclose
	add	esp, 4

; 119  : 			return FALSE;

	xor	eax, eax
	jmp	SHORT $LN8@CheckFile
$LN3@CheckFile:

; 120  : 		}
; 121  : 		
; 122  : 		// use following output to retreive md5 uint32 array's in md5sums.html
; 123  : 		/*
; 124  : 		FILE* md5sums = fopen("md5sums.html", "a");
; 125  : 		fprintf(md5sums, "[%s]: mdCTX UINT32 buf[]: %u %u %u %u<br>\n", mdChkFile->szFileLocation, mdCTX.buf[0], mdCTX.buf[1], mdCTX.buf[2], mdCTX.buf[3]);
; 126  : 		// fprintf(md5sums, "[%s]: mdChkFile->iCorrectDigestArray[]: %u %u %u %u<br>\n", mdChkFile->szFileLocation, mdChkFile->iCorrectDigestArray[0], mdChkFile->iCorrectDigestArray[1], mdChkFile->iCorrectDigestArray[2], mdChkFile->iCorrectDigestArray[3]);
; 127  : 		fclose(md5sums);
; 128  : 		*/
; 129  : 
; 130  : 		if((mdChkFile->iCorrectDigestArray[0] != mdCTX.buf[0]) || (mdChkFile->iCorrectDigestArray[1] != mdCTX.buf[1]) || (mdChkFile->iCorrectDigestArray[2] != mdCTX.buf[2]) || (mdChkFile->iCorrectDigestArray[3] != mdCTX.buf[3]))

	mov	eax, DWORD PTR _mdChkFile$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	cmp	ecx, DWORD PTR _mdCTX$209284[ebp]
	jne	SHORT $LN1@CheckFile
	mov	eax, DWORD PTR _mdChkFile$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	cmp	ecx, DWORD PTR _mdCTX$209284[ebp+4]
	jne	SHORT $LN1@CheckFile
	mov	eax, DWORD PTR _mdChkFile$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	cmp	ecx, DWORD PTR _mdCTX$209284[ebp+8]
	jne	SHORT $LN1@CheckFile
	mov	eax, DWORD PTR _mdChkFile$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	cmp	ecx, DWORD PTR _mdCTX$209284[ebp+12]
	je	SHORT $LN6@CheckFile
$LN1@CheckFile:

; 131  : 		{
; 132  : 			pChatWindow->AddDebugMessage("CRC32 checksum failed: \'%s\'.", mdChkFile->szFileLocation);

	mov	eax, DWORD PTR _mdChkFile$[ebp]
	push	eax
	push	OFFSET ??_C@_0BN@MFDAHPCD@CRC32?5checksum?5failed?3?5?8?$CFs?8?4?$AA@
	mov	ecx, DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A ; pChatWindow
	push	ecx
	call	?AddDebugMessage@CChatWindow@@QAAXPADZZ	; CChatWindow::AddDebugMessage
	add	esp, 12					; 0000000cH

; 133  : 			fclose(fLocalFile);

	mov	eax, DWORD PTR _fLocalFile$[ebp]
	push	eax
	call	_fclose
	add	esp, 4

; 134  : 			return FALSE;

	xor	eax, eax
	jmp	SHORT $LN8@CheckFile
$LN6@CheckFile:

; 135  : 		}
; 136  : 	}
; 137  : 
; 138  : 	fclose(fLocalFile);

	mov	eax, DWORD PTR _fLocalFile$[ebp]
	push	eax
	call	_fclose
	add	esp, 4

; 139  : 
; 140  : 	// pChatWindow->AddDebugMessage("\'%s\' passed checksum routine.", mdChkFile->szFileLocation);
; 141  : 	
; 142  : 	return TRUE;

	mov	eax, 1
$LN8@CheckFile:

; 143  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@CheckFile
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1348				; 00000544H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN13@CheckFile:
	DD	2
	DD	$LN12@CheckFile
$LN12@CheckFile:
	DD	-1056					; fffffbe0H
	DD	1024					; 00000400H
	DD	$LN10@CheckFile
	DD	-1152					; fffffb80H
	DD	88					; 00000058H
	DD	$LN11@CheckFile
$LN11@CheckFile:
	DB	109					; 0000006dH
	DB	100					; 00000064H
	DB	67					; 00000043H
	DB	84					; 00000054H
	DB	88					; 00000058H
	DB	0
$LN10@CheckFile:
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?CheckFile@@YAHPAUmdFile@@@Z ENDP			; CheckFile
_TEXT	ENDS
END
