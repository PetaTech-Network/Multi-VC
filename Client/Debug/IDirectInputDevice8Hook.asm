; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	d:\vice-players-master\Client\d3dhook\IDirectInputDevice8Hook.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	??_7IDirectInputDevice8Hook@@6B@		; IDirectInputDevice8Hook::`vftable'
PUBLIC	??0IDirectInputDevice8A@@QAE@XZ			; IDirectInputDevice8A::IDirectInputDevice8A
PUBLIC	??0IDirectInputDevice8Hook@@QAE@PAUIDirectInput8A@@PAUIDirectInputDevice8A@@@Z ; IDirectInputDevice8Hook::IDirectInputDevice8Hook
PUBLIC	??_R4IDirectInputDevice8Hook@@6B@		; IDirectInputDevice8Hook::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVIDirectInputDevice8Hook@@@8		; IDirectInputDevice8Hook `RTTI Type Descriptor'
PUBLIC	??_R3IDirectInputDevice8Hook@@8			; IDirectInputDevice8Hook::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IDirectInputDevice8Hook@@8			; IDirectInputDevice8Hook::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IDirectInputDevice8Hook@@8	; IDirectInputDevice8Hook::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IDirectInputDevice8A@@8		; IDirectInputDevice8A::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIDirectInputDevice8A@@@8		; IDirectInputDevice8A `RTTI Type Descriptor'
PUBLIC	??_R3IDirectInputDevice8A@@8			; IDirectInputDevice8A::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IDirectInputDevice8A@@8			; IDirectInputDevice8A::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	?QueryInterface@IDirectInputDevice8Hook@@UAGJABU_GUID@@PAPAX@Z ; IDirectInputDevice8Hook::QueryInterface
PUBLIC	?AddRef@IDirectInputDevice8Hook@@UAGKXZ		; IDirectInputDevice8Hook::AddRef
PUBLIC	?Release@IDirectInputDevice8Hook@@UAGKXZ	; IDirectInputDevice8Hook::Release
PUBLIC	?GetCapabilities@IDirectInputDevice8Hook@@UAGJPAUDIDEVCAPS@@@Z ; IDirectInputDevice8Hook::GetCapabilities
PUBLIC	?EnumObjects@IDirectInputDevice8Hook@@UAGJP6GHPBUDIDEVICEOBJECTINSTANCEA@@PAX@Z1K@Z ; IDirectInputDevice8Hook::EnumObjects
PUBLIC	?GetProperty@IDirectInputDevice8Hook@@UAGJABU_GUID@@PAUDIPROPHEADER@@@Z ; IDirectInputDevice8Hook::GetProperty
PUBLIC	?SetProperty@IDirectInputDevice8Hook@@UAGJABU_GUID@@PBUDIPROPHEADER@@@Z ; IDirectInputDevice8Hook::SetProperty
PUBLIC	?Acquire@IDirectInputDevice8Hook@@UAGJXZ	; IDirectInputDevice8Hook::Acquire
PUBLIC	?Unacquire@IDirectInputDevice8Hook@@UAGJXZ	; IDirectInputDevice8Hook::Unacquire
PUBLIC	?GetDeviceState@IDirectInputDevice8Hook@@UAGJKPAX@Z ; IDirectInputDevice8Hook::GetDeviceState
PUBLIC	?GetDeviceData@IDirectInputDevice8Hook@@UAGJKPAUDIDEVICEOBJECTDATA@@PAKK@Z ; IDirectInputDevice8Hook::GetDeviceData
PUBLIC	?SetDataFormat@IDirectInputDevice8Hook@@UAGJPBU_DIDATAFORMAT@@@Z ; IDirectInputDevice8Hook::SetDataFormat
PUBLIC	?SetEventNotification@IDirectInputDevice8Hook@@UAGJPAX@Z ; IDirectInputDevice8Hook::SetEventNotification
PUBLIC	?SetCooperativeLevel@IDirectInputDevice8Hook@@UAGJPAUHWND__@@K@Z ; IDirectInputDevice8Hook::SetCooperativeLevel
PUBLIC	?GetObjectInfo@IDirectInputDevice8Hook@@UAGJPAUDIDEVICEOBJECTINSTANCEA@@KK@Z ; IDirectInputDevice8Hook::GetObjectInfo
PUBLIC	?GetDeviceInfo@IDirectInputDevice8Hook@@UAGJPAUDIDEVICEINSTANCEA@@@Z ; IDirectInputDevice8Hook::GetDeviceInfo
PUBLIC	?RunControlPanel@IDirectInputDevice8Hook@@UAGJPAUHWND__@@K@Z ; IDirectInputDevice8Hook::RunControlPanel
PUBLIC	?Initialize@IDirectInputDevice8Hook@@UAGJPAUHINSTANCE__@@KABU_GUID@@@Z ; IDirectInputDevice8Hook::Initialize
PUBLIC	?CreateEffect@IDirectInputDevice8Hook@@UAGJABU_GUID@@PBUDIEFFECT@@PAPAUIDirectInputEffect@@PAUIUnknown@@@Z ; IDirectInputDevice8Hook::CreateEffect
PUBLIC	?EnumEffects@IDirectInputDevice8Hook@@UAGJP6GHPBUDIEFFECTINFOA@@PAX@Z1K@Z ; IDirectInputDevice8Hook::EnumEffects
PUBLIC	?GetEffectInfo@IDirectInputDevice8Hook@@UAGJPAUDIEFFECTINFOA@@ABU_GUID@@@Z ; IDirectInputDevice8Hook::GetEffectInfo
PUBLIC	?GetForceFeedbackState@IDirectInputDevice8Hook@@UAGJPAK@Z ; IDirectInputDevice8Hook::GetForceFeedbackState
PUBLIC	?SendForceFeedbackCommand@IDirectInputDevice8Hook@@UAGJK@Z ; IDirectInputDevice8Hook::SendForceFeedbackCommand
PUBLIC	?EnumCreatedEffectObjects@IDirectInputDevice8Hook@@UAGJP6GHPAUIDirectInputEffect@@PAX@Z1K@Z ; IDirectInputDevice8Hook::EnumCreatedEffectObjects
PUBLIC	?Escape@IDirectInputDevice8Hook@@UAGJPAUDIEFFESCAPE@@@Z ; IDirectInputDevice8Hook::Escape
PUBLIC	?Poll@IDirectInputDevice8Hook@@UAGJXZ		; IDirectInputDevice8Hook::Poll
PUBLIC	?SendDeviceData@IDirectInputDevice8Hook@@UAGJKPBUDIDEVICEOBJECTDATA@@PAKK@Z ; IDirectInputDevice8Hook::SendDeviceData
PUBLIC	?EnumEffectsInFile@IDirectInputDevice8Hook@@UAGJPBDP6GHPBUDIFILEEFFECT@@PAX@Z2K@Z ; IDirectInputDevice8Hook::EnumEffectsInFile
PUBLIC	?WriteEffectToFile@IDirectInputDevice8Hook@@UAGJPBDKPAUDIFILEEFFECT@@K@Z ; IDirectInputDevice8Hook::WriteEffectToFile
PUBLIC	?BuildActionMap@IDirectInputDevice8Hook@@UAGJPAU_DIACTIONFORMATA@@PBDK@Z ; IDirectInputDevice8Hook::BuildActionMap
PUBLIC	?SetActionMap@IDirectInputDevice8Hook@@UAGJPAU_DIACTIONFORMATA@@PBDK@Z ; IDirectInputDevice8Hook::SetActionMap
PUBLIC	?GetImageInfo@IDirectInputDevice8Hook@@UAGJPAU_DIDEVICEIMAGEINFOHEADERA@@@Z ; IDirectInputDevice8Hook::GetImageInfo
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R2IUnknown@@8
; File d:\vice-players-master\client\d3dhook\idirectinputdevice8hook.cpp
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IDirectInputDevice8A@@8
rdata$r	SEGMENT
??_R2IDirectInputDevice8A@@8 DD FLAT:??_R1A@?0A@EA@IDirectInputDevice8A@@8 ; IDirectInputDevice8A::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IDirectInputDevice8A@@8
rdata$r	SEGMENT
??_R3IDirectInputDevice8A@@8 DD 00H			; IDirectInputDevice8A::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IDirectInputDevice8A@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIDirectInputDevice8A@@@8
_DATA	SEGMENT
??_R0?AUIDirectInputDevice8A@@@8 DD FLAT:??_7type_info@@6B@ ; IDirectInputDevice8A `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIDirectInputDevice8A@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IDirectInputDevice8A@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IDirectInputDevice8A@@8 DD FLAT:??_R0?AUIDirectInputDevice8A@@@8 ; IDirectInputDevice8A::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IDirectInputDevice8A@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IDirectInputDevice8Hook@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IDirectInputDevice8Hook@@8 DD FLAT:??_R0?AVIDirectInputDevice8Hook@@@8 ; IDirectInputDevice8Hook::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IDirectInputDevice8Hook@@8
rdata$r	ENDS
;	COMDAT ??_R2IDirectInputDevice8Hook@@8
rdata$r	SEGMENT
??_R2IDirectInputDevice8Hook@@8 DD FLAT:??_R1A@?0A@EA@IDirectInputDevice8Hook@@8 ; IDirectInputDevice8Hook::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IDirectInputDevice8A@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IDirectInputDevice8Hook@@8
rdata$r	SEGMENT
??_R3IDirectInputDevice8Hook@@8 DD 00H			; IDirectInputDevice8Hook::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2IDirectInputDevice8Hook@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIDirectInputDevice8Hook@@@8
_DATA	SEGMENT
??_R0?AVIDirectInputDevice8Hook@@@8 DD FLAT:??_7type_info@@6B@ ; IDirectInputDevice8Hook `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIDirectInputDevice8Hook@@', 00H
_DATA	ENDS
;	COMDAT ??_R4IDirectInputDevice8Hook@@6B@
rdata$r	SEGMENT
??_R4IDirectInputDevice8Hook@@6B@ DD 00H		; IDirectInputDevice8Hook::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIDirectInputDevice8Hook@@@8
	DD	FLAT:??_R3IDirectInputDevice8Hook@@8
rdata$r	ENDS
;	COMDAT ??_7IDirectInputDevice8Hook@@6B@
CONST	SEGMENT
??_7IDirectInputDevice8Hook@@6B@ DD FLAT:??_R4IDirectInputDevice8Hook@@6B@ ; IDirectInputDevice8Hook::`vftable'
	DD	FLAT:?QueryInterface@IDirectInputDevice8Hook@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@IDirectInputDevice8Hook@@UAGKXZ
	DD	FLAT:?Release@IDirectInputDevice8Hook@@UAGKXZ
	DD	FLAT:?GetCapabilities@IDirectInputDevice8Hook@@UAGJPAUDIDEVCAPS@@@Z
	DD	FLAT:?EnumObjects@IDirectInputDevice8Hook@@UAGJP6GHPBUDIDEVICEOBJECTINSTANCEA@@PAX@Z1K@Z
	DD	FLAT:?GetProperty@IDirectInputDevice8Hook@@UAGJABU_GUID@@PAUDIPROPHEADER@@@Z
	DD	FLAT:?SetProperty@IDirectInputDevice8Hook@@UAGJABU_GUID@@PBUDIPROPHEADER@@@Z
	DD	FLAT:?Acquire@IDirectInputDevice8Hook@@UAGJXZ
	DD	FLAT:?Unacquire@IDirectInputDevice8Hook@@UAGJXZ
	DD	FLAT:?GetDeviceState@IDirectInputDevice8Hook@@UAGJKPAX@Z
	DD	FLAT:?GetDeviceData@IDirectInputDevice8Hook@@UAGJKPAUDIDEVICEOBJECTDATA@@PAKK@Z
	DD	FLAT:?SetDataFormat@IDirectInputDevice8Hook@@UAGJPBU_DIDATAFORMAT@@@Z
	DD	FLAT:?SetEventNotification@IDirectInputDevice8Hook@@UAGJPAX@Z
	DD	FLAT:?SetCooperativeLevel@IDirectInputDevice8Hook@@UAGJPAUHWND__@@K@Z
	DD	FLAT:?GetObjectInfo@IDirectInputDevice8Hook@@UAGJPAUDIDEVICEOBJECTINSTANCEA@@KK@Z
	DD	FLAT:?GetDeviceInfo@IDirectInputDevice8Hook@@UAGJPAUDIDEVICEINSTANCEA@@@Z
	DD	FLAT:?RunControlPanel@IDirectInputDevice8Hook@@UAGJPAUHWND__@@K@Z
	DD	FLAT:?Initialize@IDirectInputDevice8Hook@@UAGJPAUHINSTANCE__@@KABU_GUID@@@Z
	DD	FLAT:?CreateEffect@IDirectInputDevice8Hook@@UAGJABU_GUID@@PBUDIEFFECT@@PAPAUIDirectInputEffect@@PAUIUnknown@@@Z
	DD	FLAT:?EnumEffects@IDirectInputDevice8Hook@@UAGJP6GHPBUDIEFFECTINFOA@@PAX@Z1K@Z
	DD	FLAT:?GetEffectInfo@IDirectInputDevice8Hook@@UAGJPAUDIEFFECTINFOA@@ABU_GUID@@@Z
	DD	FLAT:?GetForceFeedbackState@IDirectInputDevice8Hook@@UAGJPAK@Z
	DD	FLAT:?SendForceFeedbackCommand@IDirectInputDevice8Hook@@UAGJK@Z
	DD	FLAT:?EnumCreatedEffectObjects@IDirectInputDevice8Hook@@UAGJP6GHPAUIDirectInputEffect@@PAX@Z1K@Z
	DD	FLAT:?Escape@IDirectInputDevice8Hook@@UAGJPAUDIEFFESCAPE@@@Z
	DD	FLAT:?Poll@IDirectInputDevice8Hook@@UAGJXZ
	DD	FLAT:?SendDeviceData@IDirectInputDevice8Hook@@UAGJKPBUDIDEVICEOBJECTDATA@@PAKK@Z
	DD	FLAT:?EnumEffectsInFile@IDirectInputDevice8Hook@@UAGJPBDP6GHPBUDIFILEEFFECT@@PAX@Z2K@Z
	DD	FLAT:?WriteEffectToFile@IDirectInputDevice8Hook@@UAGJPBDKPAUDIFILEEFFECT@@K@Z
	DD	FLAT:?BuildActionMap@IDirectInputDevice8Hook@@UAGJPAU_DIACTIONFORMATA@@PBDK@Z
	DD	FLAT:?SetActionMap@IDirectInputDevice8Hook@@UAGJPAU_DIACTIONFORMATA@@PBDK@Z
	DD	FLAT:?GetImageInfo@IDirectInputDevice8Hook@@UAGJPAU_DIDEVICEIMAGEINFOHEADERA@@@Z
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??0IDirectInputDevice8Hook@@QAE@PAUIDirectInput8A@@PAUIDirectInputDevice8A@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_dinput$ = 8						; size = 4
_dinputdevice$ = 12					; size = 4
??0IDirectInputDevice8Hook@@QAE@PAUIDirectInput8A@@PAUIDirectInputDevice8A@@@Z PROC ; IDirectInputDevice8Hook::IDirectInputDevice8Hook, COMDAT
; _this$ = ecx

; 16   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IDirectInputDevice8A@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IDirectInputDevice8Hook@@6B@

; 17   : 	m_pDI = dinput;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _dinput$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 18   : 	m_pDIDevice = dinputdevice;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _dinputdevice$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 19   : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0IDirectInputDevice8Hook@@QAE@PAUIDirectInput8A@@PAUIDirectInputDevice8A@@@Z ENDP ; IDirectInputDevice8Hook::IDirectInputDevice8Hook
_TEXT	ENDS
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0IDirectInputDevice8A@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0IDirectInputDevice8A@@QAE@XZ PROC			; IDirectInputDevice8A::IDirectInputDevice8A, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IDirectInputDevice8A@@QAE@XZ ENDP			; IDirectInputDevice8A::IDirectInputDevice8A
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0IUnknown@@QAE@XZ PROC				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?QueryInterface@IDirectInputDevice8Hook@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppvObj$ = 16						; size = 4
?QueryInterface@IDirectInputDevice8Hook@@UAGJABU_GUID@@PAPAX@Z PROC ; IDirectInputDevice8Hook::QueryInterface, COMDAT

; 23   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 24   : 	return m_pDIDevice->QueryInterface(riid, ppvObj);

	mov	esi, esp
	mov	eax, DWORD PTR _ppvObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _riid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 25   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@IDirectInputDevice8Hook@@UAGJABU_GUID@@PAPAX@Z ENDP ; IDirectInputDevice8Hook::QueryInterface
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?AddRef@IDirectInputDevice8Hook@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?AddRef@IDirectInputDevice8Hook@@UAGKXZ PROC		; IDirectInputDevice8Hook::AddRef, COMDAT

; 28   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 29   : 	return m_pDIDevice->AddRef();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 30   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@IDirectInputDevice8Hook@@UAGKXZ ENDP		; IDirectInputDevice8Hook::AddRef
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Release@IDirectInputDevice8Hook@@UAGKXZ
_TEXT	SEGMENT
$T209511 = -212						; size = 4
_uRet$ = -8						; size = 4
_this$ = 8						; size = 4
?Release@IDirectInputDevice8Hook@@UAGKXZ PROC		; IDirectInputDevice8Hook::Release, COMDAT

; 33   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 34   : 	ULONG uRet = m_pDIDevice->Release();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _uRet$[ebp], eax

; 35   : 
; 36   : 	if(uRet == 0)

	cmp	DWORD PTR _uRet$[ebp], 0
	jne	SHORT $LN1@Release

; 37   : 		// If the reference count is 0 delete ourselves
; 38   : 		delete this;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T209511[ebp], eax
	mov	ecx, DWORD PTR $T209511[ebp]
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@Release:

; 39   : 
; 40   : 	return uRet;

	mov	eax, DWORD PTR _uRet$[ebp]

; 41   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@IDirectInputDevice8Hook@@UAGKXZ ENDP		; IDirectInputDevice8Hook::Release
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetCapabilities@IDirectInputDevice8Hook@@UAGJPAUDIDEVCAPS@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p0$ = 12						; size = 4
?GetCapabilities@IDirectInputDevice8Hook@@UAGJPAUDIDEVCAPS@@@Z PROC ; IDirectInputDevice8Hook::GetCapabilities, COMDAT

; 45   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 46   : 	return m_pDIDevice->GetCapabilities(p0);

	mov	esi, esp
	mov	eax, DWORD PTR _p0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 47   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetCapabilities@IDirectInputDevice8Hook@@UAGJPAUDIDEVCAPS@@@Z ENDP ; IDirectInputDevice8Hook::GetCapabilities
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?EnumObjects@IDirectInputDevice8Hook@@UAGJP6GHPBUDIDEVICEOBJECTINSTANCEA@@PAX@Z1K@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p0$ = 12						; size = 4
_p1$ = 16						; size = 4
_p2$ = 20						; size = 4
?EnumObjects@IDirectInputDevice8Hook@@UAGJP6GHPBUDIDEVICEOBJECTINSTANCEA@@PAX@Z1K@Z PROC ; IDirectInputDevice8Hook::EnumObjects, COMDAT

; 50   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 51   : 	return m_pDIDevice->EnumObjects(p0, p1, p2);

	mov	esi, esp
	mov	eax, DWORD PTR _p2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p0$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 52   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?EnumObjects@IDirectInputDevice8Hook@@UAGJP6GHPBUDIDEVICEOBJECTINSTANCEA@@PAX@Z1K@Z ENDP ; IDirectInputDevice8Hook::EnumObjects
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetProperty@IDirectInputDevice8Hook@@UAGJABU_GUID@@PAUDIPROPHEADER@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_rguid$ = 12						; size = 4
_p1$ = 16						; size = 4
?GetProperty@IDirectInputDevice8Hook@@UAGJABU_GUID@@PAUDIPROPHEADER@@@Z PROC ; IDirectInputDevice8Hook::GetProperty, COMDAT

; 55   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 56   : 	return m_pDIDevice->GetProperty(rguid, p1);

	mov	esi, esp
	mov	eax, DWORD PTR _p1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rguid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+20]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 57   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetProperty@IDirectInputDevice8Hook@@UAGJABU_GUID@@PAUDIPROPHEADER@@@Z ENDP ; IDirectInputDevice8Hook::GetProperty
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetProperty@IDirectInputDevice8Hook@@UAGJABU_GUID@@PBUDIPROPHEADER@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_rguid$ = 12						; size = 4
_p1$ = 16						; size = 4
?SetProperty@IDirectInputDevice8Hook@@UAGJABU_GUID@@PBUDIPROPHEADER@@@Z PROC ; IDirectInputDevice8Hook::SetProperty, COMDAT

; 60   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 61   : 	return m_pDIDevice->SetProperty(rguid, p1);

	mov	esi, esp
	mov	eax, DWORD PTR _p1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rguid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+24]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 62   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetProperty@IDirectInputDevice8Hook@@UAGJABU_GUID@@PBUDIPROPHEADER@@@Z ENDP ; IDirectInputDevice8Hook::SetProperty
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?Acquire@IDirectInputDevice8Hook@@UAGJXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Acquire@IDirectInputDevice8Hook@@UAGJXZ PROC		; IDirectInputDevice8Hook::Acquire, COMDAT

; 65   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 66   : 	return m_pDIDevice->Acquire();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+28]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 67   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Acquire@IDirectInputDevice8Hook@@UAGJXZ ENDP		; IDirectInputDevice8Hook::Acquire
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?Unacquire@IDirectInputDevice8Hook@@UAGJXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Unacquire@IDirectInputDevice8Hook@@UAGJXZ PROC		; IDirectInputDevice8Hook::Unacquire, COMDAT

; 70   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 71   : 	return m_pDIDevice->Unacquire();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+32]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 72   : }	

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Unacquire@IDirectInputDevice8Hook@@UAGJXZ ENDP		; IDirectInputDevice8Hook::Unacquire
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetDeviceState@IDirectInputDevice8Hook@@UAGJKPAX@Z
_TEXT	SEGMENT
_hResult$ = -8						; size = 4
_this$ = 8						; size = 4
_p0$ = 12						; size = 4
_p1$ = 16						; size = 4
?GetDeviceState@IDirectInputDevice8Hook@@UAGJKPAX@Z PROC ; IDirectInputDevice8Hook::GetDeviceState, COMDAT

; 75   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 76   : 	HRESULT hResult = m_pDIDevice->GetDeviceState(p0, p1);

	mov	esi, esp
	mov	eax, DWORD PTR _p1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+36]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hResult$[ebp], eax

; 77   : 	/*if(!pGame->IsInputsEnabled())
; 78   : 	{
; 79   : 		memset(p1, 0, p0);
; 80   : 	}*/
; 81   : 	return hResult;

	mov	eax, DWORD PTR _hResult$[ebp]

; 82   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetDeviceState@IDirectInputDevice8Hook@@UAGJKPAX@Z ENDP ; IDirectInputDevice8Hook::GetDeviceState
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetDeviceData@IDirectInputDevice8Hook@@UAGJKPAUDIDEVICEOBJECTDATA@@PAKK@Z
_TEXT	SEGMENT
_hResult$ = -8						; size = 4
_this$ = 8						; size = 4
_p0$ = 12						; size = 4
_p1$ = 16						; size = 4
_p2$ = 20						; size = 4
_p3$ = 24						; size = 4
?GetDeviceData@IDirectInputDevice8Hook@@UAGJKPAUDIDEVICEOBJECTDATA@@PAKK@Z PROC ; IDirectInputDevice8Hook::GetDeviceData, COMDAT

; 85   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 86   : 	HRESULT hResult = m_pDIDevice->GetDeviceData(p0, p1, p2, p3);

	mov	esi, esp
	mov	eax, DWORD PTR _p3$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p1$[ebp]
	push	edx
	mov	eax, DWORD PTR _p0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+40]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hResult$[ebp], eax

; 87   : 	/*if(!pGame->IsInputsEnabled())
; 88   : 	{
; 89   : 		memset(p1, 0, (p0 * (*p2)));
; 90   : 	}*/
; 91   : 	return hResult;

	mov	eax, DWORD PTR _hResult$[ebp]

; 92   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?GetDeviceData@IDirectInputDevice8Hook@@UAGJKPAUDIDEVICEOBJECTDATA@@PAKK@Z ENDP ; IDirectInputDevice8Hook::GetDeviceData
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetDataFormat@IDirectInputDevice8Hook@@UAGJPBU_DIDATAFORMAT@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p0$ = 12						; size = 4
?SetDataFormat@IDirectInputDevice8Hook@@UAGJPBU_DIDATAFORMAT@@@Z PROC ; IDirectInputDevice8Hook::SetDataFormat, COMDAT

; 95   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 96   : 	return m_pDIDevice->SetDataFormat(p0);

	mov	esi, esp
	mov	eax, DWORD PTR _p0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 97   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetDataFormat@IDirectInputDevice8Hook@@UAGJPBU_DIDATAFORMAT@@@Z ENDP ; IDirectInputDevice8Hook::SetDataFormat
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetEventNotification@IDirectInputDevice8Hook@@UAGJPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p0$ = 12						; size = 4
?SetEventNotification@IDirectInputDevice8Hook@@UAGJPAX@Z PROC ; IDirectInputDevice8Hook::SetEventNotification, COMDAT

; 100  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 101  : 	return m_pDIDevice->SetEventNotification(p0);

	mov	esi, esp
	mov	eax, DWORD PTR _p0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 102  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetEventNotification@IDirectInputDevice8Hook@@UAGJPAX@Z ENDP ; IDirectInputDevice8Hook::SetEventNotification
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetCooperativeLevel@IDirectInputDevice8Hook@@UAGJPAUHWND__@@K@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p0$ = 12						; size = 4
_p1$ = 16						; size = 4
?SetCooperativeLevel@IDirectInputDevice8Hook@@UAGJPAUHWND__@@K@Z PROC ; IDirectInputDevice8Hook::SetCooperativeLevel, COMDAT

; 105  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 106  : 	return m_pDIDevice->SetCooperativeLevel(p0, p1);

	mov	esi, esp
	mov	eax, DWORD PTR _p1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+52]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 107  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetCooperativeLevel@IDirectInputDevice8Hook@@UAGJPAUHWND__@@K@Z ENDP ; IDirectInputDevice8Hook::SetCooperativeLevel
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetObjectInfo@IDirectInputDevice8Hook@@UAGJPAUDIDEVICEOBJECTINSTANCEA@@KK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p0$ = 12						; size = 4
_p1$ = 16						; size = 4
_p2$ = 20						; size = 4
?GetObjectInfo@IDirectInputDevice8Hook@@UAGJPAUDIDEVICEOBJECTINSTANCEA@@KK@Z PROC ; IDirectInputDevice8Hook::GetObjectInfo, COMDAT

; 110  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 111  : 	return m_pDIDevice->GetObjectInfo(p0, p1, p2);

	mov	esi, esp
	mov	eax, DWORD PTR _p2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p0$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+56]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 112  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GetObjectInfo@IDirectInputDevice8Hook@@UAGJPAUDIDEVICEOBJECTINSTANCEA@@KK@Z ENDP ; IDirectInputDevice8Hook::GetObjectInfo
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetDeviceInfo@IDirectInputDevice8Hook@@UAGJPAUDIDEVICEINSTANCEA@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p0$ = 12						; size = 4
?GetDeviceInfo@IDirectInputDevice8Hook@@UAGJPAUDIDEVICEINSTANCEA@@@Z PROC ; IDirectInputDevice8Hook::GetDeviceInfo, COMDAT

; 115  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 116  : 	return m_pDIDevice->GetDeviceInfo(p0);

	mov	esi, esp
	mov	eax, DWORD PTR _p0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+60]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 117  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetDeviceInfo@IDirectInputDevice8Hook@@UAGJPAUDIDEVICEINSTANCEA@@@Z ENDP ; IDirectInputDevice8Hook::GetDeviceInfo
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?RunControlPanel@IDirectInputDevice8Hook@@UAGJPAUHWND__@@K@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p0$ = 12						; size = 4
_p1$ = 16						; size = 4
?RunControlPanel@IDirectInputDevice8Hook@@UAGJPAUHWND__@@K@Z PROC ; IDirectInputDevice8Hook::RunControlPanel, COMDAT

; 120  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 121  : 	return m_pDIDevice->RunControlPanel(p0, p1);

	mov	esi, esp
	mov	eax, DWORD PTR _p1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+64]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 122  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?RunControlPanel@IDirectInputDevice8Hook@@UAGJPAUHWND__@@K@Z ENDP ; IDirectInputDevice8Hook::RunControlPanel
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?Initialize@IDirectInputDevice8Hook@@UAGJPAUHINSTANCE__@@KABU_GUID@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p0$ = 12						; size = 4
_p1$ = 16						; size = 4
_rguid$ = 20						; size = 4
?Initialize@IDirectInputDevice8Hook@@UAGJPAUHINSTANCE__@@KABU_GUID@@@Z PROC ; IDirectInputDevice8Hook::Initialize, COMDAT

; 125  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 126  : 	return m_pDIDevice->Initialize(p0, p1, rguid);

	mov	esi, esp
	mov	eax, DWORD PTR _rguid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p0$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+68]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 127  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?Initialize@IDirectInputDevice8Hook@@UAGJPAUHINSTANCE__@@KABU_GUID@@@Z ENDP ; IDirectInputDevice8Hook::Initialize
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?CreateEffect@IDirectInputDevice8Hook@@UAGJABU_GUID@@PBUDIEFFECT@@PAPAUIDirectInputEffect@@PAUIUnknown@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_rguid$ = 12						; size = 4
_p1$ = 16						; size = 4
_p2$ = 20						; size = 4
_p3$ = 24						; size = 4
?CreateEffect@IDirectInputDevice8Hook@@UAGJABU_GUID@@PBUDIEFFECT@@PAPAUIDirectInputEffect@@PAUIUnknown@@@Z PROC ; IDirectInputDevice8Hook::CreateEffect, COMDAT

; 130  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 131  : 	return m_pDIDevice->CreateEffect(rguid, p1, p2, p3);

	mov	esi, esp
	mov	eax, DWORD PTR _p3$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p1$[ebp]
	push	edx
	mov	eax, DWORD PTR _rguid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+72]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 132  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?CreateEffect@IDirectInputDevice8Hook@@UAGJABU_GUID@@PBUDIEFFECT@@PAPAUIDirectInputEffect@@PAUIUnknown@@@Z ENDP ; IDirectInputDevice8Hook::CreateEffect
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?EnumEffects@IDirectInputDevice8Hook@@UAGJP6GHPBUDIEFFECTINFOA@@PAX@Z1K@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p0$ = 12						; size = 4
_p1$ = 16						; size = 4
_p2$ = 20						; size = 4
?EnumEffects@IDirectInputDevice8Hook@@UAGJP6GHPBUDIEFFECTINFOA@@PAX@Z1K@Z PROC ; IDirectInputDevice8Hook::EnumEffects, COMDAT

; 135  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 136  : 	return m_pDIDevice->EnumEffects(p0, p1, p2);

	mov	esi, esp
	mov	eax, DWORD PTR _p2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p0$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+76]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 137  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?EnumEffects@IDirectInputDevice8Hook@@UAGJP6GHPBUDIEFFECTINFOA@@PAX@Z1K@Z ENDP ; IDirectInputDevice8Hook::EnumEffects
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetEffectInfo@IDirectInputDevice8Hook@@UAGJPAUDIEFFECTINFOA@@ABU_GUID@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p0$ = 12						; size = 4
_rguid$ = 16						; size = 4
?GetEffectInfo@IDirectInputDevice8Hook@@UAGJPAUDIEFFECTINFOA@@ABU_GUID@@@Z PROC ; IDirectInputDevice8Hook::GetEffectInfo, COMDAT

; 140  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 141  : 	return m_pDIDevice->GetEffectInfo(p0, rguid);

	mov	esi, esp
	mov	eax, DWORD PTR _rguid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+80]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 142  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetEffectInfo@IDirectInputDevice8Hook@@UAGJPAUDIEFFECTINFOA@@ABU_GUID@@@Z ENDP ; IDirectInputDevice8Hook::GetEffectInfo
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetForceFeedbackState@IDirectInputDevice8Hook@@UAGJPAK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p0$ = 12						; size = 4
?GetForceFeedbackState@IDirectInputDevice8Hook@@UAGJPAK@Z PROC ; IDirectInputDevice8Hook::GetForceFeedbackState, COMDAT

; 145  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 146  : 	return m_pDIDevice->GetForceFeedbackState(p0);

	mov	esi, esp
	mov	eax, DWORD PTR _p0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+84]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 147  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetForceFeedbackState@IDirectInputDevice8Hook@@UAGJPAK@Z ENDP ; IDirectInputDevice8Hook::GetForceFeedbackState
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SendForceFeedbackCommand@IDirectInputDevice8Hook@@UAGJK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p0$ = 12						; size = 4
?SendForceFeedbackCommand@IDirectInputDevice8Hook@@UAGJK@Z PROC ; IDirectInputDevice8Hook::SendForceFeedbackCommand, COMDAT

; 150  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 151  : 	return m_pDIDevice->SendForceFeedbackCommand(p0);

	mov	esi, esp
	mov	eax, DWORD PTR _p0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+88]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 152  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SendForceFeedbackCommand@IDirectInputDevice8Hook@@UAGJK@Z ENDP ; IDirectInputDevice8Hook::SendForceFeedbackCommand
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?EnumCreatedEffectObjects@IDirectInputDevice8Hook@@UAGJP6GHPAUIDirectInputEffect@@PAX@Z1K@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p0$ = 12						; size = 4
_p1$ = 16						; size = 4
_p2$ = 20						; size = 4
?EnumCreatedEffectObjects@IDirectInputDevice8Hook@@UAGJP6GHPAUIDirectInputEffect@@PAX@Z1K@Z PROC ; IDirectInputDevice8Hook::EnumCreatedEffectObjects, COMDAT

; 155  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 156  : 	return m_pDIDevice->EnumCreatedEffectObjects(p0, p1, p2);

	mov	esi, esp
	mov	eax, DWORD PTR _p2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p0$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+92]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 157  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?EnumCreatedEffectObjects@IDirectInputDevice8Hook@@UAGJP6GHPAUIDirectInputEffect@@PAX@Z1K@Z ENDP ; IDirectInputDevice8Hook::EnumCreatedEffectObjects
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?Escape@IDirectInputDevice8Hook@@UAGJPAUDIEFFESCAPE@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p0$ = 12						; size = 4
?Escape@IDirectInputDevice8Hook@@UAGJPAUDIEFFESCAPE@@@Z PROC ; IDirectInputDevice8Hook::Escape, COMDAT

; 160  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 161  : 	return m_pDIDevice->Escape(p0);

	mov	esi, esp
	mov	eax, DWORD PTR _p0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+96]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 162  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Escape@IDirectInputDevice8Hook@@UAGJPAUDIEFFESCAPE@@@Z ENDP ; IDirectInputDevice8Hook::Escape
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?Poll@IDirectInputDevice8Hook@@UAGJXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Poll@IDirectInputDevice8Hook@@UAGJXZ PROC		; IDirectInputDevice8Hook::Poll, COMDAT

; 165  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 166  : 	return m_pDIDevice->Poll();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 167  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Poll@IDirectInputDevice8Hook@@UAGJXZ ENDP		; IDirectInputDevice8Hook::Poll
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SendDeviceData@IDirectInputDevice8Hook@@UAGJKPBUDIDEVICEOBJECTDATA@@PAKK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p0$ = 12						; size = 4
_p1$ = 16						; size = 4
_p2$ = 20						; size = 4
_p3$ = 24						; size = 4
?SendDeviceData@IDirectInputDevice8Hook@@UAGJKPBUDIDEVICEOBJECTDATA@@PAKK@Z PROC ; IDirectInputDevice8Hook::SendDeviceData, COMDAT

; 170  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 171  : 	return m_pDIDevice->SendDeviceData(p0, p1, p2, p3);

	mov	esi, esp
	mov	eax, DWORD PTR _p3$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p1$[ebp]
	push	edx
	mov	eax, DWORD PTR _p0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+104]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 172  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?SendDeviceData@IDirectInputDevice8Hook@@UAGJKPBUDIDEVICEOBJECTDATA@@PAKK@Z ENDP ; IDirectInputDevice8Hook::SendDeviceData
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?EnumEffectsInFile@IDirectInputDevice8Hook@@UAGJPBDP6GHPBUDIFILEEFFECT@@PAX@Z2K@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p0$ = 12						; size = 4
_p1$ = 16						; size = 4
_p2$ = 20						; size = 4
_p3$ = 24						; size = 4
?EnumEffectsInFile@IDirectInputDevice8Hook@@UAGJPBDP6GHPBUDIFILEEFFECT@@PAX@Z2K@Z PROC ; IDirectInputDevice8Hook::EnumEffectsInFile, COMDAT

; 175  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 176  : 	return m_pDIDevice->EnumEffectsInFile(p0, p1, p2, p3);

	mov	esi, esp
	mov	eax, DWORD PTR _p3$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p1$[ebp]
	push	edx
	mov	eax, DWORD PTR _p0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 177  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?EnumEffectsInFile@IDirectInputDevice8Hook@@UAGJPBDP6GHPBUDIFILEEFFECT@@PAX@Z2K@Z ENDP ; IDirectInputDevice8Hook::EnumEffectsInFile
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?WriteEffectToFile@IDirectInputDevice8Hook@@UAGJPBDKPAUDIFILEEFFECT@@K@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p0$ = 12						; size = 4
_p2$ = 16						; size = 4
_p3$ = 20						; size = 4
_p4$ = 24						; size = 4
?WriteEffectToFile@IDirectInputDevice8Hook@@UAGJPBDKPAUDIFILEEFFECT@@K@Z PROC ; IDirectInputDevice8Hook::WriteEffectToFile, COMDAT

; 180  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 181  : 	return m_pDIDevice->WriteEffectToFile(p0, p2, p3, p4);

	mov	esi, esp
	mov	eax, DWORD PTR _p4$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p3$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p2$[ebp]
	push	edx
	mov	eax, DWORD PTR _p0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+112]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 182  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?WriteEffectToFile@IDirectInputDevice8Hook@@UAGJPBDKPAUDIFILEEFFECT@@K@Z ENDP ; IDirectInputDevice8Hook::WriteEffectToFile
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?BuildActionMap@IDirectInputDevice8Hook@@UAGJPAU_DIACTIONFORMATA@@PBDK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p0$ = 12						; size = 4
_p1$ = 16						; size = 4
_p2$ = 20						; size = 4
?BuildActionMap@IDirectInputDevice8Hook@@UAGJPAU_DIACTIONFORMATA@@PBDK@Z PROC ; IDirectInputDevice8Hook::BuildActionMap, COMDAT

; 185  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 186  : 	return m_pDIDevice->BuildActionMap(p0, p1, p2);

	mov	esi, esp
	mov	eax, DWORD PTR _p2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p0$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+116]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 187  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?BuildActionMap@IDirectInputDevice8Hook@@UAGJPAU_DIACTIONFORMATA@@PBDK@Z ENDP ; IDirectInputDevice8Hook::BuildActionMap
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetActionMap@IDirectInputDevice8Hook@@UAGJPAU_DIACTIONFORMATA@@PBDK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p0$ = 12						; size = 4
_p1$ = 16						; size = 4
_p2$ = 20						; size = 4
?SetActionMap@IDirectInputDevice8Hook@@UAGJPAU_DIACTIONFORMATA@@PBDK@Z PROC ; IDirectInputDevice8Hook::SetActionMap, COMDAT

; 190  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 191  : 	return m_pDIDevice->SetActionMap(p0, p1, p2);

	mov	esi, esp
	mov	eax, DWORD PTR _p2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p0$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+120]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 192  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetActionMap@IDirectInputDevice8Hook@@UAGJPAU_DIACTIONFORMATA@@PBDK@Z ENDP ; IDirectInputDevice8Hook::SetActionMap
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetImageInfo@IDirectInputDevice8Hook@@UAGJPAU_DIDEVICEIMAGEINFOHEADERA@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_p0$ = 12						; size = 4
?GetImageInfo@IDirectInputDevice8Hook@@UAGJPAU_DIDEVICEIMAGEINFOHEADERA@@@Z PROC ; IDirectInputDevice8Hook::GetImageInfo, COMDAT

; 195  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 196  : 	return m_pDIDevice->GetImageInfo(p0);

	mov	esi, esp
	mov	eax, DWORD PTR _p0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+124]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 197  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetImageInfo@IDirectInputDevice8Hook@@UAGJPAU_DIDEVICEIMAGEINFOHEADERA@@@Z ENDP ; IDirectInputDevice8Hook::GetImageInfo
_TEXT	ENDS
END
