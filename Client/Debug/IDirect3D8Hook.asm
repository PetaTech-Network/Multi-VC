; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	d:\vice-players-master\Client\d3dhook\IDirect3D8Hook.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?D3DDisplayMode@@3U_D3DDISPLAYMODE@@A		; D3DDisplayMode
_BSS	SEGMENT
?D3DDisplayMode@@3U_D3DDISPLAYMODE@@A DB 010H DUP (?)	; D3DDisplayMode
_BSS	ENDS
PUBLIC	??_7IDirect3D8Hook@@6B@				; IDirect3D8Hook::`vftable'
PUBLIC	??0IDirect3D8@@QAE@XZ				; IDirect3D8::IDirect3D8
PUBLIC	??0IDirect3D8Hook@@QAE@PAUIDirect3D8@@@Z	; IDirect3D8Hook::IDirect3D8Hook
PUBLIC	??_R4IDirect3D8Hook@@6B@			; IDirect3D8Hook::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVIDirect3D8Hook@@@8			; IDirect3D8Hook `RTTI Type Descriptor'
PUBLIC	??_R3IDirect3D8Hook@@8				; IDirect3D8Hook::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IDirect3D8Hook@@8				; IDirect3D8Hook::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IDirect3D8Hook@@8			; IDirect3D8Hook::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IDirect3D8@@8			; IDirect3D8::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIDirect3D8@@@8				; IDirect3D8 `RTTI Type Descriptor'
PUBLIC	??_R3IDirect3D8@@8				; IDirect3D8::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IDirect3D8@@8				; IDirect3D8::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	?QueryInterface@IDirect3D8Hook@@UAGJABU_GUID@@PAPAX@Z ; IDirect3D8Hook::QueryInterface
PUBLIC	?AddRef@IDirect3D8Hook@@UAGKXZ			; IDirect3D8Hook::AddRef
PUBLIC	?Release@IDirect3D8Hook@@UAGKXZ			; IDirect3D8Hook::Release
PUBLIC	?RegisterSoftwareDevice@IDirect3D8Hook@@UAGJPAX@Z ; IDirect3D8Hook::RegisterSoftwareDevice
PUBLIC	?GetAdapterCount@IDirect3D8Hook@@UAGIXZ		; IDirect3D8Hook::GetAdapterCount
PUBLIC	?GetAdapterIdentifier@IDirect3D8Hook@@UAGJIKPAU_D3DADAPTER_IDENTIFIER8@@@Z ; IDirect3D8Hook::GetAdapterIdentifier
PUBLIC	?GetAdapterModeCount@IDirect3D8Hook@@UAGII@Z	; IDirect3D8Hook::GetAdapterModeCount
PUBLIC	?EnumAdapterModes@IDirect3D8Hook@@UAGJIIPAU_D3DDISPLAYMODE@@@Z ; IDirect3D8Hook::EnumAdapterModes
PUBLIC	?GetAdapterDisplayMode@IDirect3D8Hook@@UAGJIPAU_D3DDISPLAYMODE@@@Z ; IDirect3D8Hook::GetAdapterDisplayMode
PUBLIC	?CheckDeviceType@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@W4_D3DFORMAT@@1H@Z ; IDirect3D8Hook::CheckDeviceType
PUBLIC	?CheckDeviceFormat@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@W4_D3DFORMAT@@KW4_D3DRESOURCETYPE@@1@Z ; IDirect3D8Hook::CheckDeviceFormat
PUBLIC	?CheckDeviceMultiSampleType@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@W4_D3DFORMAT@@HW4_D3DMULTISAMPLE_TYPE@@@Z ; IDirect3D8Hook::CheckDeviceMultiSampleType
PUBLIC	?CheckDepthStencilMatch@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@W4_D3DFORMAT@@11@Z ; IDirect3D8Hook::CheckDepthStencilMatch
PUBLIC	?GetDeviceCaps@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@PAU_D3DCAPS8@@@Z ; IDirect3D8Hook::GetDeviceCaps
PUBLIC	?GetAdapterMonitor@IDirect3D8Hook@@UAGPAUHMONITOR__@@I@Z ; IDirect3D8Hook::GetAdapterMonitor
PUBLIC	?CreateDevice@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@PAUHWND__@@KPAU_D3DPRESENT_PARAMETERS_@@PAPAUIDirect3DDevice8@@@Z ; IDirect3D8Hook::CreateDevice
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R2IUnknown@@8
; File d:\vice-players-master\client\d3dhook\idirect3d8hook.cpp
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IDirect3D8@@8
rdata$r	SEGMENT
??_R2IDirect3D8@@8 DD FLAT:??_R1A@?0A@EA@IDirect3D8@@8	; IDirect3D8::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IDirect3D8@@8
rdata$r	SEGMENT
??_R3IDirect3D8@@8 DD 00H				; IDirect3D8::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IDirect3D8@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIDirect3D8@@@8
_DATA	SEGMENT
??_R0?AUIDirect3D8@@@8 DD FLAT:??_7type_info@@6B@	; IDirect3D8 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIDirect3D8@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IDirect3D8@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IDirect3D8@@8 DD FLAT:??_R0?AUIDirect3D8@@@8 ; IDirect3D8::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IDirect3D8@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IDirect3D8Hook@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IDirect3D8Hook@@8 DD FLAT:??_R0?AVIDirect3D8Hook@@@8 ; IDirect3D8Hook::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IDirect3D8Hook@@8
rdata$r	ENDS
;	COMDAT ??_R2IDirect3D8Hook@@8
rdata$r	SEGMENT
??_R2IDirect3D8Hook@@8 DD FLAT:??_R1A@?0A@EA@IDirect3D8Hook@@8 ; IDirect3D8Hook::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IDirect3D8@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IDirect3D8Hook@@8
rdata$r	SEGMENT
??_R3IDirect3D8Hook@@8 DD 00H				; IDirect3D8Hook::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2IDirect3D8Hook@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIDirect3D8Hook@@@8
_DATA	SEGMENT
??_R0?AVIDirect3D8Hook@@@8 DD FLAT:??_7type_info@@6B@	; IDirect3D8Hook `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIDirect3D8Hook@@', 00H
_DATA	ENDS
;	COMDAT ??_R4IDirect3D8Hook@@6B@
rdata$r	SEGMENT
??_R4IDirect3D8Hook@@6B@ DD 00H				; IDirect3D8Hook::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIDirect3D8Hook@@@8
	DD	FLAT:??_R3IDirect3D8Hook@@8
rdata$r	ENDS
;	COMDAT ??_7IDirect3D8Hook@@6B@
CONST	SEGMENT
??_7IDirect3D8Hook@@6B@ DD FLAT:??_R4IDirect3D8Hook@@6B@ ; IDirect3D8Hook::`vftable'
	DD	FLAT:?QueryInterface@IDirect3D8Hook@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@IDirect3D8Hook@@UAGKXZ
	DD	FLAT:?Release@IDirect3D8Hook@@UAGKXZ
	DD	FLAT:?RegisterSoftwareDevice@IDirect3D8Hook@@UAGJPAX@Z
	DD	FLAT:?GetAdapterCount@IDirect3D8Hook@@UAGIXZ
	DD	FLAT:?GetAdapterIdentifier@IDirect3D8Hook@@UAGJIKPAU_D3DADAPTER_IDENTIFIER8@@@Z
	DD	FLAT:?GetAdapterModeCount@IDirect3D8Hook@@UAGII@Z
	DD	FLAT:?EnumAdapterModes@IDirect3D8Hook@@UAGJIIPAU_D3DDISPLAYMODE@@@Z
	DD	FLAT:?GetAdapterDisplayMode@IDirect3D8Hook@@UAGJIPAU_D3DDISPLAYMODE@@@Z
	DD	FLAT:?CheckDeviceType@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@W4_D3DFORMAT@@1H@Z
	DD	FLAT:?CheckDeviceFormat@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@W4_D3DFORMAT@@KW4_D3DRESOURCETYPE@@1@Z
	DD	FLAT:?CheckDeviceMultiSampleType@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@W4_D3DFORMAT@@HW4_D3DMULTISAMPLE_TYPE@@@Z
	DD	FLAT:?CheckDepthStencilMatch@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@W4_D3DFORMAT@@11@Z
	DD	FLAT:?GetDeviceCaps@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@PAU_D3DCAPS8@@@Z
	DD	FLAT:?GetAdapterMonitor@IDirect3D8Hook@@UAGPAUHMONITOR__@@I@Z
	DD	FLAT:?CreateDevice@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@PAUHWND__@@KPAU_D3DPRESENT_PARAMETERS_@@PAPAUIDirect3DDevice8@@@Z
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??0IDirect3D8Hook@@QAE@PAUIDirect3D8@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pD3D$ = 8						; size = 4
??0IDirect3D8Hook@@QAE@PAUIDirect3D8@@@Z PROC		; IDirect3D8Hook::IDirect3D8Hook, COMDAT
; _this$ = ecx

; 22   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IDirect3D8@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IDirect3D8Hook@@6B@

; 23   : 	m_pD3D = pD3D;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pD3D$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 24   : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0IDirect3D8Hook@@QAE@PAUIDirect3D8@@@Z ENDP		; IDirect3D8Hook::IDirect3D8Hook
_TEXT	ENDS
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0IDirect3D8@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0IDirect3D8@@QAE@XZ PROC				; IDirect3D8::IDirect3D8, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IDirect3D8@@QAE@XZ ENDP				; IDirect3D8::IDirect3D8
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0IUnknown@@QAE@XZ PROC				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
_TEXT	ENDS
PUBLIC	??1IDirect3D8Hook@@QAE@XZ			; IDirect3D8Hook::~IDirect3D8Hook
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1IDirect3D8Hook@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1IDirect3D8Hook@@QAE@XZ PROC				; IDirect3D8Hook::~IDirect3D8Hook, COMDAT
; _this$ = ecx

; 27   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IDirect3D8Hook@@6B@

; 28   : 
; 29   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1IDirect3D8Hook@@QAE@XZ ENDP				; IDirect3D8Hook::~IDirect3D8Hook
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?QueryInterface@IDirect3D8Hook@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_ppvObject$ = 16					; size = 4
?QueryInterface@IDirect3D8Hook@@UAGJABU_GUID@@PAPAX@Z PROC ; IDirect3D8Hook::QueryInterface, COMDAT

; 33   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 34   : 	return m_pD3D->QueryInterface(iid, ppvObject);

	mov	esi, esp
	mov	eax, DWORD PTR _ppvObject$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 35   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@IDirect3D8Hook@@UAGJABU_GUID@@PAPAX@Z ENDP ; IDirect3D8Hook::QueryInterface
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?AddRef@IDirect3D8Hook@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?AddRef@IDirect3D8Hook@@UAGKXZ PROC			; IDirect3D8Hook::AddRef, COMDAT

; 38   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 39   : 	return m_pD3D->AddRef();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 40   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@IDirect3D8Hook@@UAGKXZ ENDP			; IDirect3D8Hook::AddRef
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?Release@IDirect3D8Hook@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Release@IDirect3D8Hook@@UAGKXZ PROC			; IDirect3D8Hook::Release, COMDAT

; 43   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 44   : 	return m_pD3D->Release();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 45   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@IDirect3D8Hook@@UAGKXZ ENDP			; IDirect3D8Hook::Release
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?RegisterSoftwareDevice@IDirect3D8Hook@@UAGJPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pInitializeFunction$ = 12				; size = 4
?RegisterSoftwareDevice@IDirect3D8Hook@@UAGJPAX@Z PROC	; IDirect3D8Hook::RegisterSoftwareDevice, COMDAT

; 48   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 49   : 	return m_pD3D->RegisterSoftwareDevice(pInitializeFunction);

	mov	esi, esp
	mov	eax, DWORD PTR _pInitializeFunction$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 50   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?RegisterSoftwareDevice@IDirect3D8Hook@@UAGJPAX@Z ENDP	; IDirect3D8Hook::RegisterSoftwareDevice
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetAdapterCount@IDirect3D8Hook@@UAGIXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetAdapterCount@IDirect3D8Hook@@UAGIXZ PROC		; IDirect3D8Hook::GetAdapterCount, COMDAT

; 53   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 54   : 	return m_pD3D->GetAdapterCount();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 55   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetAdapterCount@IDirect3D8Hook@@UAGIXZ ENDP		; IDirect3D8Hook::GetAdapterCount
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetAdapterIdentifier@IDirect3D8Hook@@UAGJIKPAU_D3DADAPTER_IDENTIFIER8@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Adapter$ = 12						; size = 4
_Flags$ = 16						; size = 4
_pIdentifier$ = 20					; size = 4
?GetAdapterIdentifier@IDirect3D8Hook@@UAGJIKPAU_D3DADAPTER_IDENTIFIER8@@@Z PROC ; IDirect3D8Hook::GetAdapterIdentifier, COMDAT

; 58   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 59   : 	return m_pD3D->GetAdapterIdentifier(Adapter, Flags , pIdentifier);

	mov	esi, esp
	mov	eax, DWORD PTR _pIdentifier$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Flags$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Adapter$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 60   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GetAdapterIdentifier@IDirect3D8Hook@@UAGJIKPAU_D3DADAPTER_IDENTIFIER8@@@Z ENDP ; IDirect3D8Hook::GetAdapterIdentifier
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetAdapterModeCount@IDirect3D8Hook@@UAGII@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Adapter$ = 12						; size = 4
?GetAdapterModeCount@IDirect3D8Hook@@UAGII@Z PROC	; IDirect3D8Hook::GetAdapterModeCount, COMDAT

; 63   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 64   : 	return m_pD3D->GetAdapterModeCount(Adapter);

	mov	esi, esp
	mov	eax, DWORD PTR _Adapter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 65   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetAdapterModeCount@IDirect3D8Hook@@UAGII@Z ENDP	; IDirect3D8Hook::GetAdapterModeCount
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?EnumAdapterModes@IDirect3D8Hook@@UAGJIIPAU_D3DDISPLAYMODE@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Adapter$ = 12						; size = 4
_Mode$ = 16						; size = 4
_pMode$ = 20						; size = 4
?EnumAdapterModes@IDirect3D8Hook@@UAGJIIPAU_D3DDISPLAYMODE@@@Z PROC ; IDirect3D8Hook::EnumAdapterModes, COMDAT

; 68   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 69   : 	return m_pD3D->EnumAdapterModes(Adapter, Mode, pMode);

	mov	esi, esp
	mov	eax, DWORD PTR _pMode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Mode$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Adapter$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+28]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 70   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?EnumAdapterModes@IDirect3D8Hook@@UAGJIIPAU_D3DDISPLAYMODE@@@Z ENDP ; IDirect3D8Hook::EnumAdapterModes
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetAdapterDisplayMode@IDirect3D8Hook@@UAGJIPAU_D3DDISPLAYMODE@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Adapter$ = 12						; size = 4
_pMode$ = 16						; size = 4
?GetAdapterDisplayMode@IDirect3D8Hook@@UAGJIPAU_D3DDISPLAYMODE@@@Z PROC ; IDirect3D8Hook::GetAdapterDisplayMode, COMDAT

; 73   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 74   : 	return m_pD3D->GetAdapterDisplayMode(Adapter, pMode);

	mov	esi, esp
	mov	eax, DWORD PTR _pMode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Adapter$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+32]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 75   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetAdapterDisplayMode@IDirect3D8Hook@@UAGJIPAU_D3DDISPLAYMODE@@@Z ENDP ; IDirect3D8Hook::GetAdapterDisplayMode
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?CheckDeviceType@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@W4_D3DFORMAT@@1H@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Adapter$ = 12						; size = 4
_CheckType$ = 16					; size = 4
_DisplayFormat$ = 20					; size = 4
_BackBufferFormat$ = 24					; size = 4
_Windowed$ = 28						; size = 4
?CheckDeviceType@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@W4_D3DFORMAT@@1H@Z PROC ; IDirect3D8Hook::CheckDeviceType, COMDAT

; 78   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 79   : 	return m_pD3D->CheckDeviceType(Adapter, CheckType, DisplayFormat, BackBufferFormat, Windowed);

	mov	esi, esp
	mov	eax, DWORD PTR _Windowed$[ebp]
	push	eax
	mov	ecx, DWORD PTR _BackBufferFormat$[ebp]
	push	ecx
	mov	edx, DWORD PTR _DisplayFormat$[ebp]
	push	edx
	mov	eax, DWORD PTR _CheckType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Adapter$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+36]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 80   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?CheckDeviceType@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@W4_D3DFORMAT@@1H@Z ENDP ; IDirect3D8Hook::CheckDeviceType
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?CheckDeviceFormat@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@W4_D3DFORMAT@@KW4_D3DRESOURCETYPE@@1@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Adapter$ = 12						; size = 4
_DeviceType$ = 16					; size = 4
_AdapterFormat$ = 20					; size = 4
_Usage$ = 24						; size = 4
_RType$ = 28						; size = 4
_CheckFormat$ = 32					; size = 4
?CheckDeviceFormat@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@W4_D3DFORMAT@@KW4_D3DRESOURCETYPE@@1@Z PROC ; IDirect3D8Hook::CheckDeviceFormat, COMDAT

; 83   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 84   : 	return m_pD3D->CheckDeviceFormat(Adapter, DeviceType, AdapterFormat, Usage, RType, CheckFormat);

	mov	esi, esp
	mov	eax, DWORD PTR _CheckFormat$[ebp]
	push	eax
	mov	ecx, DWORD PTR _RType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Usage$[ebp]
	push	edx
	mov	eax, DWORD PTR _AdapterFormat$[ebp]
	push	eax
	mov	ecx, DWORD PTR _DeviceType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Adapter$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+40]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 85   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?CheckDeviceFormat@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@W4_D3DFORMAT@@KW4_D3DRESOURCETYPE@@1@Z ENDP ; IDirect3D8Hook::CheckDeviceFormat
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?CheckDeviceMultiSampleType@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@W4_D3DFORMAT@@HW4_D3DMULTISAMPLE_TYPE@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Adapter$ = 12						; size = 4
_DeviceType$ = 16					; size = 4
_SurfaceFormat$ = 20					; size = 4
_Windowed$ = 24						; size = 4
_MultiSampleType$ = 28					; size = 4
?CheckDeviceMultiSampleType@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@W4_D3DFORMAT@@HW4_D3DMULTISAMPLE_TYPE@@@Z PROC ; IDirect3D8Hook::CheckDeviceMultiSampleType, COMDAT

; 88   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 89   : 	return m_pD3D->CheckDeviceMultiSampleType(Adapter, DeviceType, SurfaceFormat, Windowed, MultiSampleType);

	mov	esi, esp
	mov	eax, DWORD PTR _MultiSampleType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Windowed$[ebp]
	push	ecx
	mov	edx, DWORD PTR _SurfaceFormat$[ebp]
	push	edx
	mov	eax, DWORD PTR _DeviceType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Adapter$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+44]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 90   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?CheckDeviceMultiSampleType@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@W4_D3DFORMAT@@HW4_D3DMULTISAMPLE_TYPE@@@Z ENDP ; IDirect3D8Hook::CheckDeviceMultiSampleType
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?CheckDepthStencilMatch@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@W4_D3DFORMAT@@11@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Adapter$ = 12						; size = 4
_DeviceType$ = 16					; size = 4
_AdapterFormat$ = 20					; size = 4
_RenderTargetFormat$ = 24				; size = 4
_DepthStencilFormat$ = 28				; size = 4
?CheckDepthStencilMatch@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@W4_D3DFORMAT@@11@Z PROC ; IDirect3D8Hook::CheckDepthStencilMatch, COMDAT

; 93   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 94   : 	return m_pD3D->CheckDepthStencilMatch(Adapter, DeviceType, AdapterFormat, RenderTargetFormat, DepthStencilFormat);

	mov	esi, esp
	mov	eax, DWORD PTR _DepthStencilFormat$[ebp]
	push	eax
	mov	ecx, DWORD PTR _RenderTargetFormat$[ebp]
	push	ecx
	mov	edx, DWORD PTR _AdapterFormat$[ebp]
	push	edx
	mov	eax, DWORD PTR _DeviceType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Adapter$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+48]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 95   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?CheckDepthStencilMatch@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@W4_D3DFORMAT@@11@Z ENDP ; IDirect3D8Hook::CheckDepthStencilMatch
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetDeviceCaps@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@PAU_D3DCAPS8@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Adapter$ = 12						; size = 4
_DeviceType$ = 16					; size = 4
_pCaps$ = 20						; size = 4
?GetDeviceCaps@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@PAU_D3DCAPS8@@@Z PROC ; IDirect3D8Hook::GetDeviceCaps, COMDAT

; 98   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 99   : 	return m_pD3D->GetDeviceCaps(Adapter, DeviceType, pCaps);

	mov	esi, esp
	mov	eax, DWORD PTR _pCaps$[ebp]
	push	eax
	mov	ecx, DWORD PTR _DeviceType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Adapter$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+52]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 100  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GetDeviceCaps@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@PAU_D3DCAPS8@@@Z ENDP ; IDirect3D8Hook::GetDeviceCaps
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetAdapterMonitor@IDirect3D8Hook@@UAGPAUHMONITOR__@@I@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Adapter$ = 12						; size = 4
?GetAdapterMonitor@IDirect3D8Hook@@UAGPAUHMONITOR__@@I@Z PROC ; IDirect3D8Hook::GetAdapterMonitor, COMDAT

; 103  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 104  : 	return m_pD3D->GetAdapterMonitor(Adapter);

	mov	esi, esp
	mov	eax, DWORD PTR _Adapter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 105  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetAdapterMonitor@IDirect3D8Hook@@UAGPAUHMONITOR__@@I@Z ENDP ; IDirect3D8Hook::GetAdapterMonitor
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??0IDirect3DDevice8Hook@@QAE@PAUIDirect3D8@@PAUIDirect3DDevice8@@@Z:PROC ; IDirect3DDevice8Hook::IDirect3DDevice8Hook
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	?SubclassGameWindow@@YAHPAUHWND__@@@Z:PROC	; SubclassGameWindow
EXTRN	__imp__SetWindowPos@28:PROC
EXTRN	?bWindowedMode@@3HA:DWORD			; bWindowedMode
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?CreateDevice@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@PAUHWND__@@KPAU_D3DPRESENT_PARAMETERS_@@PAPAUIDirect3DDevice8@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?CreateDevice@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@PAUHWND__@@KPAU_D3DPRESENT_PARAMETERS_@@PAPAUIDirect3DDevice8@@@Z$0
__ehfuncinfo$?CreateDevice@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@PAUHWND__@@KPAU_D3DPRESENT_PARAMETERS_@@PAPAUIDirect3DDevice8@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?CreateDevice@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@PAUHWND__@@KPAU_D3DPRESENT_PARAMETERS_@@PAPAUIDirect3DDevice8@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?CreateDevice@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@PAUHWND__@@KPAU_D3DPRESENT_PARAMETERS_@@PAPAUIDirect3DDevice8@@@Z
_TEXT	SEGMENT
tv152 = -244						; size = 4
$T209468 = -236						; size = 4
$T209469 = -224						; size = 4
_hr$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_Adapter$ = 12						; size = 4
_DeviceType$ = 16					; size = 4
_hFocusWindow$ = 20					; size = 4
_BehaviorFlags$ = 24					; size = 4
_pPresentationParameters$ = 28				; size = 4
_ppReturnedDeviceInterface$ = 32			; size = 4
?CreateDevice@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@PAUHWND__@@KPAU_D3DPRESENT_PARAMETERS_@@PAPAUIDirect3DDevice8@@@Z PROC ; IDirect3D8Hook::CreateDevice, COMDAT

; 108  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?CreateDevice@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@PAUHWND__@@KPAU_D3DPRESENT_PARAMETERS_@@PAPAUIDirect3DDevice8@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 109  : 	if(bWindowedMode)

	cmp	DWORD PTR ?bWindowedMode@@3HA, 0	; bWindowedMode
	je	SHORT $LN2@CreateDevi

; 110  : 	{
; 111  : 		pPresentationParameters->Windowed = 1;

	mov	eax, DWORD PTR _pPresentationParameters$[ebp]
	mov	DWORD PTR [eax+28], 1

; 112  : 		pPresentationParameters->Flags = 0;

	mov	eax, DWORD PTR _pPresentationParameters$[ebp]
	mov	DWORD PTR [eax+40], 0

; 113  : 		pPresentationParameters->FullScreen_RefreshRateInHz = 0;

	mov	eax, DWORD PTR _pPresentationParameters$[ebp]
	mov	DWORD PTR [eax+44], 0

; 114  : 		pPresentationParameters->FullScreen_PresentationInterval = 0;

	mov	eax, DWORD PTR _pPresentationParameters$[ebp]
	mov	DWORD PTR [eax+48], 0

; 115  : 
; 116  : 		GetAdapterDisplayMode(Adapter, &D3DDisplayMode);

	mov	esi, esp
	push	OFFSET ?D3DDisplayMode@@3U_D3DDISPLAYMODE@@A ; D3DDisplayMode
	mov	eax, DWORD PTR _Adapter$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+32]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 117  : 		pPresentationParameters->BackBufferFormat = D3DDisplayMode.Format;

	mov	eax, DWORD PTR _pPresentationParameters$[ebp]
	mov	ecx, DWORD PTR ?D3DDisplayMode@@3U_D3DDISPLAYMODE@@A+12
	mov	DWORD PTR [eax+8], ecx

; 118  : 
; 119  : 		SetWindowPos(pPresentationParameters->hDeviceWindow, HWND_NOTOPMOST, 0, 0, pPresentationParameters->BackBufferWidth, pPresentationParameters->BackBufferHeight, SWP_SHOWWINDOW);

	mov	esi, esp
	push	64					; 00000040H
	mov	eax, DWORD PTR _pPresentationParameters$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _pPresentationParameters$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	0
	push	0
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _pPresentationParameters$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	call	DWORD PTR __imp__SetWindowPos@28
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@CreateDevi:

; 120  : 	}
; 121  : 
; 122  : 	SubclassGameWindow(hFocusWindow);

	mov	eax, DWORD PTR _hFocusWindow$[ebp]
	push	eax
	call	?SubclassGameWindow@@YAHPAUHWND__@@@Z	; SubclassGameWindow
	add	esp, 4

; 123  : 
; 124  : 	HRESULT hr = m_pD3D->CreateDevice(Adapter, DeviceType, hFocusWindow, BehaviorFlags, pPresentationParameters, ppReturnedDeviceInterface);

	mov	esi, esp
	mov	eax, DWORD PTR _ppReturnedDeviceInterface$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPresentationParameters$[ebp]
	push	ecx
	mov	edx, DWORD PTR _BehaviorFlags$[ebp]
	push	edx
	mov	eax, DWORD PTR _hFocusWindow$[ebp]
	push	eax
	mov	ecx, DWORD PTR _DeviceType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Adapter$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+60]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 125  : 
; 126  : 	if(SUCCEEDED(hr))

	cmp	DWORD PTR _hr$[ebp], 0
	jl	SHORT $LN1@CreateDevi

; 127  : 	{
; 128  : 		*ppReturnedDeviceInterface = new IDirect3DDevice8Hook(this, *ppReturnedDeviceInterface);

	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T209469[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T209469[ebp], 0
	je	SHORT $LN5@CreateDevi
	mov	eax, DWORD PTR _ppReturnedDeviceInterface$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, DWORD PTR $T209469[ebp]
	call	??0IDirect3DDevice8Hook@@QAE@PAUIDirect3D8@@PAUIDirect3DDevice8@@@Z ; IDirect3DDevice8Hook::IDirect3DDevice8Hook
	mov	DWORD PTR tv152[ebp], eax
	jmp	SHORT $LN6@CreateDevi
$LN5@CreateDevi:
	mov	DWORD PTR tv152[ebp], 0
$LN6@CreateDevi:
	mov	eax, DWORD PTR tv152[ebp]
	mov	DWORD PTR $T209468[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _ppReturnedDeviceInterface$[ebp]
	mov	edx, DWORD PTR $T209468[ebp]
	mov	DWORD PTR [ecx], edx
$LN1@CreateDevi:

; 129  : 	}
; 130  : 
; 131  : 	return hr;

	mov	eax, DWORD PTR _hr$[ebp]

; 132  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?CreateDevice@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@PAUHWND__@@KPAU_D3DPRESENT_PARAMETERS_@@PAPAUIDirect3DDevice8@@@Z$0:
	mov	eax, DWORD PTR $T209469[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?CreateDevice@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@PAUHWND__@@KPAU_D3DPRESENT_PARAMETERS_@@PAPAUIDirect3DDevice8@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?CreateDevice@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@PAUHWND__@@KPAU_D3DPRESENT_PARAMETERS_@@PAPAUIDirect3DDevice8@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?CreateDevice@IDirect3D8Hook@@UAGJIW4_D3DDEVTYPE@@PAUHWND__@@KPAU_D3DPRESENT_PARAMETERS_@@PAPAUIDirect3DDevice8@@@Z ENDP ; IDirect3D8Hook::CreateDevice
END
