; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	d:\vice-players-master\Client\net\CNetworkManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?m_pRPC4@CNetworkManager@@0PAVRPC4@RakNet@@A	; CNetworkManager::m_pRPC4
_BSS	SEGMENT
?m_pRPC4@CNetworkManager@@0PAVRPC4@RakNet@@A DD 01H DUP (?) ; CNetworkManager::m_pRPC4
_BSS	ENDS
PUBLIC	__real@40c3880000000000
PUBLIC	?CompressVector1@@YAXPAUVector3@@PAU_C_VECTOR1@@@Z ; CompressVector1
EXTRN	__fltused:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__ftol2_sse:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT __real@40c3880000000000
; File d:\vice-players-master\client\net\cnetworkmanager.cpp
CONST	SEGMENT
__real@40c3880000000000 DQ 040c3880000000000r	; 10000
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ?CompressVector1@@YAXPAUVector3@@PAU_C_VECTOR1@@@Z
_TEXT	SEGMENT
_vec$ = 8						; size = 4
_c1$ = 12						; size = 4
?CompressVector1@@YAXPAUVector3@@PAU_C_VECTOR1@@@Z PROC	; CompressVector1, COMDAT

; 27   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 28   : 	c1->X = (short)(vec->X * 10000);

	mov	eax, DWORD PTR _vec$[ebp]
	fld	DWORD PTR [eax]
	fmul	QWORD PTR __real@40c3880000000000
	call	__ftol2_sse
	mov	ecx, DWORD PTR _c1$[ebp]
	mov	WORD PTR [ecx], ax

; 29   : 	c1->Y = (short)(vec->Y * 10000);

	mov	eax, DWORD PTR _vec$[ebp]
	fld	DWORD PTR [eax+4]
	fmul	QWORD PTR __real@40c3880000000000
	call	__ftol2_sse
	mov	ecx, DWORD PTR _c1$[ebp]
	mov	WORD PTR [ecx+2], ax

; 30   : 	c1->Z = (short)(vec->Z * 10000);

	mov	eax, DWORD PTR _vec$[ebp]
	fld	DWORD PTR [eax+8]
	fmul	QWORD PTR __real@40c3880000000000
	call	__ftol2_sse
	mov	ecx, DWORD PTR _c1$[ebp]
	mov	WORD PTR [ecx+4], ax

; 31   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?CompressVector1@@YAXPAUVector3@@PAU_C_VECTOR1@@@Z ENDP	; CompressVector1
_TEXT	ENDS
PUBLIC	?DecompressVector1@@YAXPAUVector3@@PAU_C_VECTOR1@@@Z ; DecompressVector1
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DecompressVector1@@YAXPAUVector3@@PAU_C_VECTOR1@@@Z
_TEXT	SEGMENT
tv94 = -196						; size = 4
tv89 = -196						; size = 4
tv84 = -196						; size = 4
_vec$ = 8						; size = 4
_c1$ = 12						; size = 4
?DecompressVector1@@YAXPAUVector3@@PAU_C_VECTOR1@@@Z PROC ; DecompressVector1, COMDAT

; 36   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 37   : 	vec->X = (float)(c1->X / 10000.0);

	mov	eax, DWORD PTR _c1$[ebp]
	movsx	ecx, WORD PTR [eax]
	mov	DWORD PTR tv84[ebp], ecx
	fild	DWORD PTR tv84[ebp]
	fdiv	QWORD PTR __real@40c3880000000000
	mov	edx, DWORD PTR _vec$[ebp]
	fstp	DWORD PTR [edx]

; 38   : 	vec->Y = (float)(c1->Y / 10000.0);

	mov	eax, DWORD PTR _c1$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR tv89[ebp], ecx
	fild	DWORD PTR tv89[ebp]
	fdiv	QWORD PTR __real@40c3880000000000
	mov	edx, DWORD PTR _vec$[ebp]
	fstp	DWORD PTR [edx+4]

; 39   : 	vec->Z = (float)(c1->Z / 10000.0);	

	mov	eax, DWORD PTR _c1$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	mov	DWORD PTR tv94[ebp], ecx
	fild	DWORD PTR tv94[ebp]
	fdiv	QWORD PTR __real@40c3880000000000
	mov	edx, DWORD PTR _vec$[ebp]
	fstp	DWORD PTR [edx+8]

; 40   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?DecompressVector1@@YAXPAUVector3@@PAU_C_VECTOR1@@@Z ENDP ; DecompressVector1
_TEXT	ENDS
PUBLIC	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ	; CGame::FindPlayerPed
PUBLIC	??_C@_0BG@NDNDBJLB@Connecting?5to?5?$CFs?3?$CFd?4?4?$AA@ ; `string'
PUBLIC	?Connect@CNetworkManager@@QAEXXZ		; CNetworkManager::Connect
PUBLIC	??_C@_0EP@DLIMFHAI@You?5can?5visit?5the?5project?5websit@ ; `string'
PUBLIC	??_C@_0CG@JDEMBDFB@Vice?5City?3?5Players?5started?5?$CIAlph@ ; `string'
PUBLIC	?SetLocalPlayerName@CPlayerManager@@QAEXPAD@Z	; CPlayerManager::SetLocalPlayerName
PUBLIC	??0Vector3@@QAE@XZ				; Vector3::Vector3
PUBLIC	??0CNetworkManager@@QAE@PADH00@Z		; CNetworkManager::CNetworkManager
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	?pGame@@3PAVCGame@@A:DWORD			; pGame
EXTRN	__imp__GetTickCount@0:PROC
EXTRN	?AddDebugMessage@CChatWindow@@QAAXPADZZ:PROC	; CChatWindow::AddDebugMessage
EXTRN	?pChatWindow@@3PAVCChatWindow@@A:DWORD		; pChatWindow
EXTRN	_strcpy:PROC
EXTRN	??0SocketDescriptor@RakNet@@QAE@XZ:PROC		; RakNet::SocketDescriptor::SocketDescriptor
EXTRN	?RegisterRPCs@@YAXXZ:PROC			; RegisterRPCs
EXTRN	?GetInstance@RPC4@RakNet@@SAPAV12@XZ:PROC	; RakNet::RPC4::GetInstance
EXTRN	?GetInstance@RakPeerInterface@RakNet@@SAPAV12@XZ:PROC ; RakNet::RakPeerInterface::GetInstance
EXTRN	??0CPickupManager@@QAE@XZ:PROC			; CPickupManager::CPickupManager
EXTRN	??0CCheckpoints@@QAE@XZ:PROC			; CCheckpoints::CCheckpoints
EXTRN	??0CTextManager@@QAE@XZ:PROC			; CTextManager::CTextManager
EXTRN	??0CObjectManager@@QAE@XZ:PROC			; CObjectManager::CObjectManager
EXTRN	??0CVehicleManager@@QAE@XZ:PROC			; CVehicleManager::CVehicleManager
EXTRN	??0CPlayerManager@@QAE@XZ:PROC			; CPlayerManager::CPlayerManager
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	___security_cookie:DWORD
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT ??_C@_0BG@NDNDBJLB@Connecting?5to?5?$CFs?3?$CFd?4?4?$AA@
CONST	SEGMENT
??_C@_0BG@NDNDBJLB@Connecting?5to?5?$CFs?3?$CFd?4?4?$AA@ DB 'Connecting t'
	DB	'o %s:%d..', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EP@DLIMFHAI@You?5can?5visit?5the?5project?5websit@
CONST	SEGMENT
??_C@_0EP@DLIMFHAI@You?5can?5visit?5the?5project?5websit@ DB 'You can vis'
	DB	'it the project website at https://sites.google.com/view/wellr'
	DB	'o/home', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@JDEMBDFB@Vice?5City?3?5Players?5started?5?$CIAlph@
CONST	SEGMENT
??_C@_0CG@JDEMBDFB@Vice?5City?3?5Players?5started?5?$CIAlph@ DB 'Vice Cit'
	DB	'y: Players started (Alpha-2).', 00H		; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0CNetworkManager@@QAE@PADH00@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??0CNetworkManager@@QAE@PADH00@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0CNetworkManager@@QAE@PADH00@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0CNetworkManager@@QAE@PADH00@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0CNetworkManager@@QAE@PADH00@Z$1
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0CNetworkManager@@QAE@PADH00@Z$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0CNetworkManager@@QAE@PADH00@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0CNetworkManager@@QAE@PADH00@Z$4
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??0CNetworkManager@@QAE@PADH00@Z$5
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0CNetworkManager@@QAE@PADH00@Z
_TEXT	SEGMENT
tv151 = -420						; size = 4
tv143 = -420						; size = 4
tv135 = -420						; size = 4
tv95 = -420						; size = 4
tv87 = -420						; size = 4
tv77 = -420						; size = 4
$T209545 = -412						; size = 4
$T209546 = -400						; size = 4
$T209549 = -388						; size = 4
$T209550 = -376						; size = 4
$T209553 = -364						; size = 4
$T209554 = -352						; size = 4
$T209557 = -340						; size = 4
$T209558 = -328						; size = 4
$T209561 = -316						; size = 4
$T209562 = -304						; size = 4
$T209565 = -292						; size = 4
$T209566 = -280						; size = 4
$T209569 = -268						; size = 36
_pPlayer$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_szHostOrIp$ = 8					; size = 4
_iPort$ = 12						; size = 4
_szPlayerName$ = 16					; size = 4
_szPass$ = 20						; size = 4
??0CNetworkManager@@QAE@PADH00@Z PROC			; CNetworkManager::CNetworkManager, COMDAT
; _this$ = ecx

; 46   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0CNetworkManager@@QAE@PADH00@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 408				; 00000198H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-420]
	mov	ecx, 102				; 00000066H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 304				; 00000130H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 316				; 0000013cH
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 328				; 00000148H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3

; 47   : 	// Setup player pool
; 48   : 	m_pPlayerManager = new CPlayerManager();

	push	2292					; 000008f4H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T209546[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T209546[ebp], 0
	je	SHORT $LN5@CNetworkMa
	mov	ecx, DWORD PTR $T209546[ebp]
	call	??0CPlayerManager@@QAE@XZ		; CPlayerManager::CPlayerManager
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN6@CNetworkMa
$LN5@CNetworkMa:
	mov	DWORD PTR tv77[ebp], 0
$LN6@CNetworkMa:
	mov	eax, DWORD PTR tv77[ebp]
	mov	DWORD PTR $T209545[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T209545[ebp]
	mov	DWORD PTR [ecx], edx

; 49   : 	m_pPlayerManager->SetLocalPlayerName(szPlayerName);

	mov	eax, DWORD PTR _szPlayerName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?SetLocalPlayerName@CPlayerManager@@QAEXPAD@Z ; CPlayerManager::SetLocalPlayerName

; 50   : 
; 51   : 	m_pVehicleManager = new CVehicleManager();

	push	8800					; 00002260H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T209550[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T209550[ebp], 0
	je	SHORT $LN7@CNetworkMa
	mov	ecx, DWORD PTR $T209550[ebp]
	call	??0CVehicleManager@@QAE@XZ		; CVehicleManager::CVehicleManager
	mov	DWORD PTR tv87[ebp], eax
	jmp	SHORT $LN8@CNetworkMa
$LN7@CNetworkMa:
	mov	DWORD PTR tv87[ebp], 0
$LN8@CNetworkMa:
	mov	eax, DWORD PTR tv87[ebp]
	mov	DWORD PTR $T209549[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T209549[ebp]
	mov	DWORD PTR [ecx+4], edx

; 52   : 
; 53   : 	m_pObjectManager = new CObjectManager();

	push	800					; 00000320H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T209554[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	cmp	DWORD PTR $T209554[ebp], 0
	je	SHORT $LN9@CNetworkMa
	mov	ecx, DWORD PTR $T209554[ebp]
	call	??0CObjectManager@@QAE@XZ		; CObjectManager::CObjectManager
	mov	DWORD PTR tv95[ebp], eax
	jmp	SHORT $LN10@CNetworkMa
$LN9@CNetworkMa:
	mov	DWORD PTR tv95[ebp], 0
$LN10@CNetworkMa:
	mov	eax, DWORD PTR tv95[ebp]
	mov	DWORD PTR $T209553[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T209553[ebp]
	mov	DWORD PTR [ecx+8], edx

; 54   : 
; 55   : 	m_pTextManager = new CTextManager();

	push	1024					; 00000400H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T209558[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 3
	cmp	DWORD PTR $T209558[ebp], 0
	je	SHORT $LN11@CNetworkMa
	mov	ecx, DWORD PTR $T209558[ebp]
	call	??0CTextManager@@QAE@XZ			; CTextManager::CTextManager
	mov	DWORD PTR tv135[ebp], eax
	jmp	SHORT $LN12@CNetworkMa
$LN11@CNetworkMa:
	mov	DWORD PTR tv135[ebp], 0
$LN12@CNetworkMa:
	mov	eax, DWORD PTR tv135[ebp]
	mov	DWORD PTR $T209557[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T209557[ebp]
	mov	DWORD PTR [ecx+16], edx

; 56   : 	
; 57   : 	m_pCheckpoints = new CCheckpoints();

	push	80					; 00000050H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T209562[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 4
	cmp	DWORD PTR $T209562[ebp], 0
	je	SHORT $LN13@CNetworkMa
	mov	ecx, DWORD PTR $T209562[ebp]
	call	??0CCheckpoints@@QAE@XZ			; CCheckpoints::CCheckpoints
	mov	DWORD PTR tv143[ebp], eax
	jmp	SHORT $LN14@CNetworkMa
$LN13@CNetworkMa:
	mov	DWORD PTR tv143[ebp], 0
$LN14@CNetworkMa:
	mov	eax, DWORD PTR tv143[ebp]
	mov	DWORD PTR $T209561[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T209561[ebp]
	mov	DWORD PTR [ecx+20], edx

; 58   : 
; 59   : 	m_pPickupManager = new CPickupManager();

	push	640					; 00000280H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T209566[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 5
	cmp	DWORD PTR $T209566[ebp], 0
	je	SHORT $LN15@CNetworkMa
	mov	ecx, DWORD PTR $T209566[ebp]
	call	??0CPickupManager@@QAE@XZ		; CPickupManager::CPickupManager
	mov	DWORD PTR tv151[ebp], eax
	jmp	SHORT $LN16@CNetworkMa
$LN15@CNetworkMa:
	mov	DWORD PTR tv151[ebp], 0
$LN16@CNetworkMa:
	mov	eax, DWORD PTR tv151[ebp]
	mov	DWORD PTR $T209565[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T209565[ebp]
	mov	DWORD PTR [ecx+12], edx

; 60   : 
; 61   : 	m_pRakPeer = RakPeerInterface::GetInstance();

	call	?GetInstance@RakPeerInterface@RakNet@@SAPAV12@XZ ; RakNet::RakPeerInterface::GetInstance
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], eax

; 62   : 	m_pRPC4 = RPC4::GetInstance();

	call	?GetInstance@RPC4@RakNet@@SAPAV12@XZ	; RakNet::RPC4::GetInstance
	mov	DWORD PTR ?m_pRPC4@CNetworkManager@@0PAVRPC4@RakNet@@A, eax ; CNetworkManager::m_pRPC4

; 63   : 
; 64   : 	RegisterRPCs();

	call	?RegisterRPCs@@YAXXZ			; RegisterRPCs

; 65   : 
; 66   : 	m_pRakPeer->Startup(1,&SocketDescriptor(),1);

	mov	esi, esp
	push	-99999					; fffe7961H
	push	1
	lea	ecx, DWORD PTR $T209569[ebp]
	call	??0SocketDescriptor@RakNet@@QAE@XZ	; RakNet::SocketDescriptor::SocketDescriptor
	push	eax
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 67   : 	strcpy(m_szHostOrIp, szHostOrIp);

	mov	eax, DWORD PTR _szHostOrIp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	call	_strcpy
	add	esp, 8

; 68   : 	m_iPort = iPort;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _iPort$[ebp]
	mov	DWORD PTR [eax+160], ecx

; 69   : 	strcpy(m_szPass, szPass);

	mov	eax, DWORD PTR _szPass$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	push	ecx
	call	_strcpy
	add	esp, 8

; 70   : 	m_pRakPeer->AttachPlugin(m_pRPC4);

	mov	esi, esp
	mov	eax, DWORD PTR ?m_pRPC4@CNetworkManager@@0PAVRPC4@RakNet@@A ; CNetworkManager::m_pRPC4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+252]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 71   : 
; 72   : 	if(pChatWindow)

	cmp	DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A, 0 ; pChatWindow
	je	SHORT $LN2@CNetworkMa

; 73   : 	{
; 74   : 		pChatWindow->AddDebugMessage("Vice City: Players started " CLIENT_VERSION ".");

	push	OFFSET ??_C@_0CG@JDEMBDFB@Vice?5City?3?5Players?5started?5?$CIAlph@
	mov	eax, DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A ; pChatWindow
	push	eax
	call	?AddDebugMessage@CChatWindow@@QAAXPADZZ	; CChatWindow::AddDebugMessage
	add	esp, 8

; 75   : 		pChatWindow->AddDebugMessage("You can visit the project website at " PROJECT_WEBSITE);

	push	OFFSET ??_C@_0EP@DLIMFHAI@You?5can?5visit?5the?5project?5websit@
	mov	eax, DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A ; pChatWindow
	push	eax
	call	?AddDebugMessage@CChatWindow@@QAAXPADZZ	; CChatWindow::AddDebugMessage
	add	esp, 8
$LN2@CNetworkMa:

; 76   : 	}
; 77   : 
; 78   : 	Connect();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Connect@CNetworkManager@@QAEXXZ	; CNetworkManager::Connect

; 79   : 
; 80   : 	if(pChatWindow)

	cmp	DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A, 0 ; pChatWindow
	je	SHORT $LN1@CNetworkMa

; 81   : 	{
; 82   : 		pChatWindow->AddDebugMessage("Connecting to %s:%d..",szHostOrIp,iPort);

	mov	eax, DWORD PTR _iPort$[ebp]
	push	eax
	mov	ecx, DWORD PTR _szHostOrIp$[ebp]
	push	ecx
	push	OFFSET ??_C@_0BG@NDNDBJLB@Connecting?5to?5?$CFs?3?$CFd?4?4?$AA@
	mov	edx, DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A ; pChatWindow
	push	edx
	call	?AddDebugMessage@CChatWindow@@QAAXPADZZ	; CChatWindow::AddDebugMessage
	add	esp, 16					; 00000010H
$LN1@CNetworkMa:

; 83   : 	}
; 84   : 
; 85   : 	m_pGameLogic = NULL;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 86   : 	m_dwLastScoreUpdateTick = GetTickCount();

	mov	esi, esp
	call	DWORD PTR __imp__GetTickCount@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+296], eax

; 87   : 	m_uiLastRandSeed = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+300], 0

; 88   : 
; 89   : 	CPlayerPed *pPlayer = pGame->FindPlayerPed();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ; CGame::FindPlayerPed
	mov	DWORD PTR _pPlayer$[ebp], eax

; 90   : }

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 420				; 000001a4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0CNetworkManager@@QAE@PADH00@Z$0:
	mov	eax, DWORD PTR $T209546[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0CNetworkManager@@QAE@PADH00@Z$1:
	mov	eax, DWORD PTR $T209550[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0CNetworkManager@@QAE@PADH00@Z$2:
	mov	eax, DWORD PTR $T209554[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0CNetworkManager@@QAE@PADH00@Z$3:
	mov	eax, DWORD PTR $T209558[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0CNetworkManager@@QAE@PADH00@Z$4:
	mov	eax, DWORD PTR $T209562[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__unwindfunclet$??0CNetworkManager@@QAE@PADH00@Z$5:
	mov	eax, DWORD PTR $T209566[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$??0CNetworkManager@@QAE@PADH00@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-424]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0CNetworkManager@@QAE@PADH00@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0CNetworkManager@@QAE@PADH00@Z ENDP			; CNetworkManager::CNetworkManager
PUBLIC	??_GCSpawnSelection@@QAEPAXI@Z			; CSpawnSelection::`scalar deleting destructor'
PUBLIC	??_GCPlayerManager@@QAEPAXI@Z			; CPlayerManager::`scalar deleting destructor'
PUBLIC	?Shutdown@CNetworkManager@@QAEXXZ		; CNetworkManager::Shutdown
PUBLIC	??1CNetworkManager@@QAE@XZ			; CNetworkManager::~CNetworkManager
EXTRN	?DestroyInstance@RakPeerInterface@RakNet@@SAXPAV12@@Z:PROC ; RakNet::RakPeerInterface::DestroyInstance
EXTRN	?DestroyInstance@RPC4@RakNet@@SAXPAV12@@Z:PROC	; RakNet::RPC4::DestroyInstance
EXTRN	?UnRegisterRPCs@@YAXXZ:PROC			; UnRegisterRPCs
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1CNetworkManager@@QAE@XZ
_TEXT	SEGMENT
tv90 = -256						; size = 4
tv84 = -256						; size = 4
$T209589 = -248						; size = 4
$T209590 = -236						; size = 4
$T209593 = -224						; size = 4
$T209594 = -212						; size = 4
_this$ = -8						; size = 4
??1CNetworkManager@@QAE@XZ PROC				; CNetworkManager::~CNetworkManager, COMDAT
; _this$ = ecx

; 95   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 96   : 	Shutdown();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Shutdown@CNetworkManager@@QAEXXZ	; CNetworkManager::Shutdown

; 97   : 	m_pRakPeer->DetachPlugin(m_pRPC4);

	mov	esi, esp
	mov	eax, DWORD PTR ?m_pRPC4@CNetworkManager@@0PAVRPC4@RakNet@@A ; CNetworkManager::m_pRPC4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+256]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 98   : 	UnRegisterRPCs();

	call	?UnRegisterRPCs@@YAXXZ			; UnRegisterRPCs

; 99   : 	RPC4::DestroyInstance(m_pRPC4);

	mov	eax, DWORD PTR ?m_pRPC4@CNetworkManager@@0PAVRPC4@RakNet@@A ; CNetworkManager::m_pRPC4
	push	eax
	call	?DestroyInstance@RPC4@RakNet@@SAXPAV12@@Z ; RakNet::RPC4::DestroyInstance
	add	esp, 4

; 100  : 	RakPeerInterface::DestroyInstance(m_pRakPeer);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	?DestroyInstance@RakPeerInterface@RakNet@@SAXPAV12@@Z ; RakNet::RakPeerInterface::DestroyInstance
	add	esp, 4

; 101  : 	delete m_pPlayerManager;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T209590[ebp], ecx
	mov	edx, DWORD PTR $T209590[ebp]
	mov	DWORD PTR $T209589[ebp], edx
	cmp	DWORD PTR $T209589[ebp], 0
	je	SHORT $LN3@CNetworkMa@2
	push	1
	mov	ecx, DWORD PTR $T209589[ebp]
	call	??_GCPlayerManager@@QAEPAXI@Z
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN4@CNetworkMa@2
$LN3@CNetworkMa@2:
	mov	DWORD PTR tv84[ebp], 0
$LN4@CNetworkMa@2:

; 102  : 	delete m_pGameLogic;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR $T209594[ebp], ecx
	mov	edx, DWORD PTR $T209594[ebp]
	mov	DWORD PTR $T209593[ebp], edx
	cmp	DWORD PTR $T209593[ebp], 0
	je	SHORT $LN5@CNetworkMa@2
	push	1
	mov	ecx, DWORD PTR $T209593[ebp]
	call	??_GCSpawnSelection@@QAEPAXI@Z
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN1@CNetworkMa@2
$LN5@CNetworkMa@2:
	mov	DWORD PTR tv90[ebp], 0
$LN1@CNetworkMa@2:

; 103  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CNetworkManager@@QAE@XZ ENDP				; CNetworkManager::~CNetworkManager
_TEXT	ENDS
EXTRN	??1CPlayerManager@@QAE@XZ:PROC			; CPlayerManager::~CPlayerManager
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCPlayerManager@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCPlayerManager@@QAEPAXI@Z PROC			; CPlayerManager::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CPlayerManager@@QAE@XZ		; CPlayerManager::~CPlayerManager
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCPlayerManager@@QAEPAXI@Z ENDP			; CPlayerManager::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1CSpawnSelection@@QAE@XZ			; CSpawnSelection::~CSpawnSelection
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCSpawnSelection@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCSpawnSelection@@QAEPAXI@Z PROC			; CSpawnSelection::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CSpawnSelection@@QAE@XZ		; CSpawnSelection::~CSpawnSelection
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCSpawnSelection@@QAEPAXI@Z ENDP			; CSpawnSelection::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?InitGameLogic@CNetworkManager@@QAEXXZ		; CNetworkManager::InitGameLogic
EXTRN	??0CSpawnSelection@@QAE@XZ:PROC			; CSpawnSelection::CSpawnSelection
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?InitGameLogic@CNetworkManager@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?InitGameLogic@CNetworkManager@@QAEXXZ$0
__ehfuncinfo$?InitGameLogic@CNetworkManager@@QAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?InitGameLogic@CNetworkManager@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?InitGameLogic@CNetworkManager@@QAEXXZ
_TEXT	SEGMENT
tv72 = -244						; size = 4
$T209603 = -236						; size = 4
$T209604 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?InitGameLogic@CNetworkManager@@QAEXXZ PROC		; CNetworkManager::InitGameLogic, COMDAT
; _this$ = ecx

; 108  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InitGameLogic@CNetworkManager@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 109  : 	m_pGameLogic = new CSpawnSelection();

	push	20					; 00000014H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T209604[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T209604[ebp], 0
	je	SHORT $LN3@InitGameLo
	mov	ecx, DWORD PTR $T209604[ebp]
	call	??0CSpawnSelection@@QAE@XZ		; CSpawnSelection::CSpawnSelection
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN4@InitGameLo
$LN3@InitGameLo:
	mov	DWORD PTR tv72[ebp], 0
$LN4@InitGameLo:
	mov	eax, DWORD PTR tv72[ebp]
	mov	DWORD PTR $T209603[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T209603[ebp]
	mov	DWORD PTR [ecx+28], edx

; 110  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?InitGameLogic@CNetworkManager@@QAEXXZ$0:
	mov	eax, DWORD PTR $T209604[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?InitGameLogic@CNetworkManager@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InitGameLogic@CNetworkManager@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?InitGameLogic@CNetworkManager@@QAEXXZ ENDP		; CNetworkManager::InitGameLogic
PUBLIC	?GetGameState@CNetworkManager@@QAEHXZ		; CNetworkManager::GetGameState
PUBLIC	?UpdateNetwork@CNetworkManager@@AAEXXZ		; CNetworkManager::UpdateNetwork
PUBLIC	?Process@CNetworkManager@@QAEXXZ		; CNetworkManager::Process
EXTRN	?Process@CCheckpoints@@QAEXXZ:PROC		; CCheckpoints::Process
EXTRN	?onPulse@CScripts@@QAEXXZ:PROC			; CScripts::onPulse
EXTRN	?pScripts@@3PAVCScripts@@A:DWORD		; pScripts
EXTRN	?Process@CVehicleManager@@QAEXXZ:PROC		; CVehicleManager::Process
EXTRN	?Process@CPlayerManager@@QAEHXZ:PROC		; CPlayerManager::Process
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Process@CNetworkManager@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Process@CNetworkManager@@QAEXXZ PROC			; CNetworkManager::Process, COMDAT
; _this$ = ecx

; 115  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 116  : 	UpdateNetwork();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?UpdateNetwork@CNetworkManager@@AAEXXZ	; CNetworkManager::UpdateNetwork

; 117  : 
; 118  : 	if(GetGameState() == GAMESTATE_CONNECTED) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetGameState@CNetworkManager@@QAEHXZ	; CNetworkManager::GetGameState
	cmp	eax, 2
	jne	SHORT $LN6@Process

; 119  : 		if(m_pPlayerManager) m_pPlayerManager->Process();

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN4@Process
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?Process@CPlayerManager@@QAEHXZ		; CPlayerManager::Process
$LN4@Process:

; 120  : 		if(m_pVehicleManager) m_pVehicleManager->Process();

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@Process
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	?Process@CVehicleManager@@QAEXXZ	; CVehicleManager::Process
$LN3@Process:

; 121  : 		if(pScripts) pScripts->onPulse();

	cmp	DWORD PTR ?pScripts@@3PAVCScripts@@A, 0	; pScripts
	je	SHORT $LN2@Process
	mov	ecx, DWORD PTR ?pScripts@@3PAVCScripts@@A ; pScripts
	call	?onPulse@CScripts@@QAEXXZ		; CScripts::onPulse
$LN2@Process:

; 122  : 		if(m_pCheckpoints) m_pCheckpoints->Process();

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN6@Process
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	call	?Process@CCheckpoints@@QAEXXZ		; CCheckpoints::Process
$LN6@Process:

; 123  : 	}
; 124  : 
; 125  : 	// For syncing rand()
; 126  : 	/*if(m_pRakPeer->GetSynchronizedRandomInteger() != m_uiLastRandSeed) {
; 127  : 		m_uiLastRandSeed = m_pRakPeer->GetSynchronizedRandomInteger();
; 128  : 		srand(m_uiLastRandSeed);
; 129  : 	}*/
; 130  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Process@CNetworkManager@@QAEXXZ ENDP			; CNetworkManager::Process
_TEXT	ENDS
PUBLIC	?VehicleSync@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z ; CNetworkManager::VehicleSync
PUBLIC	?PlayerSync@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z ; CNetworkManager::PlayerSync
PUBLIC	?ConnectionSucceeded@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z ; CNetworkManager::ConnectionSucceeded
PUBLIC	??_C@_0BP@KIHGOGPJ@Failed?5to?5connect?0?5Retrying?4?4?4?$AA@ ; `string'
PUBLIC	??_C@_0BH@MICHFH@Wrong?5server?5password?4?$AA@	; `string'
PUBLIC	??_C@_0CP@FLFALIIP@Lost?5connection?5to?5the?5server?0?5R@ ; `string'
PUBLIC	??_C@_0O@HGEAPED@Disconnected?4?$AA@		; `string'
PUBLIC	??_C@_0CA@JIEFDJKB@The?5server?5is?5full?0?5Retrying?4?4?4?$AA@ ; `string'
PUBLIC	??_C@_0BP@HPDGFHFO@You?8re?5banned?5from?5the?5server?4?$AA@ ; `string'
EXTRN	?FadeScreen@CGame@@QAEXHH@Z:PROC		; CGame::FadeScreen
;	COMDAT ??_C@_0BP@KIHGOGPJ@Failed?5to?5connect?0?5Retrying?4?4?4?$AA@
CONST	SEGMENT
??_C@_0BP@KIHGOGPJ@Failed?5to?5connect?0?5Retrying?4?4?4?$AA@ DB 'Failed '
	DB	'to connect, Retrying...', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@MICHFH@Wrong?5server?5password?4?$AA@
CONST	SEGMENT
??_C@_0BH@MICHFH@Wrong?5server?5password?4?$AA@ DB 'Wrong server password'
	DB	'.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@FLFALIIP@Lost?5connection?5to?5the?5server?0?5R@
CONST	SEGMENT
??_C@_0CP@FLFALIIP@Lost?5connection?5to?5the?5server?0?5R@ DB 'Lost conne'
	DB	'ction to the server, Reconnecting...', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HGEAPED@Disconnected?4?$AA@
CONST	SEGMENT
??_C@_0O@HGEAPED@Disconnected?4?$AA@ DB 'Disconnected.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@JIEFDJKB@The?5server?5is?5full?0?5Retrying?4?4?4?$AA@
CONST	SEGMENT
??_C@_0CA@JIEFDJKB@The?5server?5is?5full?0?5Retrying?4?4?4?$AA@ DB 'The s'
	DB	'erver is full, Retrying...', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@HPDGFHFO@You?8re?5banned?5from?5the?5server?4?$AA@
CONST	SEGMENT
??_C@_0BP@HPDGFHFO@You?8re?5banned?5from?5the?5server?4?$AA@ DB 'You''re '
	DB	'banned from the server.', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?UpdateNetwork@CNetworkManager@@AAEXXZ
_TEXT	SEGMENT
tv76 = -220						; size = 4
_pkt$ = -20						; size = 4
_this$ = -8						; size = 4
?UpdateNetwork@CNetworkManager@@AAEXXZ PROC		; CNetworkManager::UpdateNetwork, COMDAT
; _this$ = ecx

; 135  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 136  : 	Packet* pkt=NULL;

	mov	DWORD PTR _pkt$[ebp], 0
$LN13@UpdateNetw:

; 137  : 
; 138  : 	while((pkt = m_pRakPeer->Receive()))

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+92]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pkt$[ebp], eax
	cmp	DWORD PTR _pkt$[ebp], 0
	je	$LN14@UpdateNetw

; 139  : 	{
; 140  : 		switch(pkt->data[0])

	mov	eax, DWORD PTR _pkt$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	movzx	edx, BYTE PTR [ecx]
	mov	DWORD PTR tv76[ebp], edx
	mov	eax, DWORD PTR tv76[ebp]
	sub	eax, 16					; 00000010H
	mov	DWORD PTR tv76[ebp], eax
	cmp	DWORD PTR tv76[ebp], 99			; 00000063H
	ja	$LN10@UpdateNetw
	mov	ecx, DWORD PTR tv76[ebp]
	movzx	edx, BYTE PTR $LN16@UpdateNetw[ecx]
	jmp	DWORD PTR $LN17@UpdateNetw[edx*4]
$LN9@UpdateNetw:

; 141  : 		{
; 142  : 			/*
; 143  : 		case ID_RSA_PUBLIC_KEY_MISMATCH:
; 144  : 			pChatWindow->AddDebugMessage("Failed to init encryption.");
; 145  : 			break;
; 146  : 			*/
; 147  : 		case ID_CONNECTION_BANNED:
; 148  : 			pChatWindow->AddDebugMessage("You're banned from the server.");

	push	OFFSET ??_C@_0BP@HPDGFHFO@You?8re?5banned?5from?5the?5server?4?$AA@
	mov	eax, DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A ; pChatWindow
	push	eax
	call	?AddDebugMessage@CChatWindow@@QAAXPADZZ	; CChatWindow::AddDebugMessage
	add	esp, 8

; 149  : 			Shutdown();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Shutdown@CNetworkManager@@QAEXXZ	; CNetworkManager::Shutdown

; 150  : 			break;

	jmp	$LN10@UpdateNetw
$LN8@UpdateNetw:

; 151  : 		case ID_NO_FREE_INCOMING_CONNECTIONS:
; 152  : 			pChatWindow->AddDebugMessage("The server is full, Retrying...");

	push	OFFSET ??_C@_0CA@JIEFDJKB@The?5server?5is?5full?0?5Retrying?4?4?4?$AA@
	mov	eax, DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A ; pChatWindow
	push	eax
	call	?AddDebugMessage@CChatWindow@@QAAXPADZZ	; CChatWindow::AddDebugMessage
	add	esp, 8

; 153  : 			Connect();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Connect@CNetworkManager@@QAEXXZ	; CNetworkManager::Connect

; 154  : 			break;

	jmp	$LN10@UpdateNetw
$LN7@UpdateNetw:

; 155  : 		case ID_DISCONNECTION_NOTIFICATION:
; 156  : 			pChatWindow->AddDebugMessage("Disconnected.");

	push	OFFSET ??_C@_0O@HGEAPED@Disconnected?4?$AA@
	mov	eax, DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A ; pChatWindow
	push	eax
	call	?AddDebugMessage@CChatWindow@@QAAXPADZZ	; CChatWindow::AddDebugMessage
	add	esp, 8

; 157  : 			Shutdown();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Shutdown@CNetworkManager@@QAEXXZ	; CNetworkManager::Shutdown

; 158  : 			pGame->FadeScreen(0, 0);

	push	0
	push	0
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FadeScreen@CGame@@QAEXHH@Z		; CGame::FadeScreen

; 159  : 			break;

	jmp	$LN10@UpdateNetw
$LN6@UpdateNetw:

; 160  : 		case ID_CONNECTION_LOST:
; 161  : 			pChatWindow->AddDebugMessage("Lost connection to the server, Reconnecting...");

	push	OFFSET ??_C@_0CP@FLFALIIP@Lost?5connection?5to?5the?5server?0?5R@
	mov	eax, DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A ; pChatWindow
	push	eax
	call	?AddDebugMessage@CChatWindow@@QAAXPADZZ	; CChatWindow::AddDebugMessage
	add	esp, 8

; 162  : 			Connect();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Connect@CNetworkManager@@QAEXXZ	; CNetworkManager::Connect

; 163  : 			pGame->FadeScreen(0, 0);

	push	0
	push	0
	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?FadeScreen@CGame@@QAEXHH@Z		; CGame::FadeScreen

; 164  : 			break;

	jmp	SHORT $LN10@UpdateNetw
$LN5@UpdateNetw:

; 165  : 		case ID_INVALID_PASSWORD:
; 166  : 			pChatWindow->AddDebugMessage("Wrong server password.");

	push	OFFSET ??_C@_0BH@MICHFH@Wrong?5server?5password?4?$AA@
	mov	eax, DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A ; pChatWindow
	push	eax
	call	?AddDebugMessage@CChatWindow@@QAAXPADZZ	; CChatWindow::AddDebugMessage
	add	esp, 8

; 167  : 			break;

	jmp	SHORT $LN10@UpdateNetw
$LN4@UpdateNetw:

; 168  : 			/*
; 169  : 		case ID_MODIFIED_PACKET:
; 170  : 			m_pRakPeer->Shutdown(100);
; 171  : 			break;
; 172  : 			*/
; 173  : 		case ID_CONNECTION_ATTEMPT_FAILED:
; 174  : 			pChatWindow->AddDebugMessage("Failed to connect, Retrying...");

	push	OFFSET ??_C@_0BP@KIHGOGPJ@Failed?5to?5connect?0?5Retrying?4?4?4?$AA@
	mov	eax, DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A ; pChatWindow
	push	eax
	call	?AddDebugMessage@CChatWindow@@QAAXPADZZ	; CChatWindow::AddDebugMessage
	add	esp, 8

; 175  : 			Connect();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Connect@CNetworkManager@@QAEXXZ	; CNetworkManager::Connect

; 176  : 			break;

	jmp	SHORT $LN10@UpdateNetw
$LN3@UpdateNetw:

; 177  : 		case ID_CONNECTION_REQUEST_ACCEPTED:
; 178  : 			ConnectionSucceeded(pkt);

	mov	eax, DWORD PTR _pkt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ConnectionSucceeded@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z ; CNetworkManager::ConnectionSucceeded

; 179  : 			break;

	jmp	SHORT $LN10@UpdateNetw
$LN2@UpdateNetw:

; 180  : 		case ID_PLAYER_SYNC:
; 181  : 			PlayerSync(pkt);

	mov	eax, DWORD PTR _pkt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?PlayerSync@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z ; CNetworkManager::PlayerSync

; 182  : 			break;

	jmp	SHORT $LN10@UpdateNetw
$LN1@UpdateNetw:

; 183  : 		case ID_VEHICLE_SYNC:
; 184  : 			VehicleSync(pkt);

	mov	eax, DWORD PTR _pkt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?VehicleSync@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z ; CNetworkManager::VehicleSync
$LN10@UpdateNetw:

; 185  : 			break;
; 186  : 
; 187  : 		}
; 188  : 
; 189  : 		m_pRakPeer->DeallocatePacket(pkt);		

	mov	esi, esp
	mov	eax, DWORD PTR _pkt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR [edx]
	mov	eax, DWORD PTR [edx+96]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 190  : 	}

	jmp	$LN13@UpdateNetw
$LN14@UpdateNetw:

; 191  : 
; 192  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN17@UpdateNetw:
	DD	$LN3@UpdateNetw
	DD	$LN4@UpdateNetw
	DD	$LN8@UpdateNetw
	DD	$LN7@UpdateNetw
	DD	$LN6@UpdateNetw
	DD	$LN9@UpdateNetw
	DD	$LN5@UpdateNetw
	DD	$LN2@UpdateNetw
	DD	$LN1@UpdateNetw
	DD	$LN10@UpdateNetw
$LN16@UpdateNetw:
	DB	0
	DB	1
	DB	9
	DB	9
	DB	2
	DB	3
	DB	4
	DB	5
	DB	6
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	7
	DB	8
?UpdateNetwork@CNetworkManager@@AAEXXZ ENDP		; CNetworkManager::UpdateNetwork
_TEXT	ENDS
PUBLIC	??0_CAMERA_AIM@@QAE@XZ				; _CAMERA_AIM::_CAMERA_AIM
PUBLIC	??0_PLAYER_SYNC_DATA@@QAE@XZ			; _PLAYER_SYNC_DATA::_PLAYER_SYNC_DATA
PUBLIC	?GetAt@CPlayerManager@@QAEPAVCRemotePlayer@@E@Z	; CPlayerManager::GetAt
PUBLIC	?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ; CNetworkManager::GetPlayerManager
PUBLIC	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z		; RakNet::BitStream::Read<unsigned char>
PUBLIC	__$ArrayPad$
EXTRN	??1BitStream@RakNet@@QAE@XZ:PROC		; RakNet::BitStream::~BitStream
EXTRN	?StoreAimSyncData@CRemotePlayer@@QAEXPAU_CAMERA_AIM@@@Z:PROC ; CRemotePlayer::StoreAimSyncData
EXTRN	?StoreOnFootFullSyncData@CRemotePlayer@@QAEXPAU_PLAYER_SYNC_DATA@@@Z:PROC ; CRemotePlayer::StoreOnFootFullSyncData
EXTRN	?ReadBit@BitStream@RakNet@@QAE_NXZ:PROC		; RakNet::BitStream::ReadBit
EXTRN	?Read@BitStream@RakNet@@QAE_NPADI@Z:PROC	; RakNet::BitStream::Read
EXTRN	?IgnoreBytes@BitStream@RakNet@@QAEXI@Z:PROC	; RakNet::BitStream::IgnoreBytes
EXTRN	??0BitStream@RakNet@@QAE@PAEI_N@Z:PROC		; RakNet::BitStream::BitStream
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?PlayerSync@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?PlayerSync@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z$0
__ehfuncinfo$?PlayerSync@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?PlayerSync@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?PlayerSync@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z
_TEXT	SEGMENT
_bHasAimSync$209375 = -429				; size = 1
_caAiming$209372 = -420					; size = 48
_playerSyncData$209371 = -364				; size = 24
_bytePlayerID$ = -329					; size = 1
_bsPlayerSync$ = -320					; size = 276
_pPlayer$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
?PlayerSync@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z PROC ; CNetworkManager::PlayerSync, COMDAT
; _this$ = ecx

; 197  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?PlayerSync@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 616				; 00000268H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-628]
	mov	ecx, 154				; 0000009aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 198  : 	CRemotePlayer * pPlayer;
; 199  : 	BitStream bsPlayerSync(p->data, p->length, FALSE);

	push	0
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	push	eax
	lea	ecx, DWORD PTR _bsPlayerSync$[ebp]
	call	??0BitStream@RakNet@@QAE@PAEI_N@Z	; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 200  : 	BYTE bytePlayerID;
; 201  : 
; 202  : 	bsPlayerSync.IgnoreBytes(sizeof(MessageID));

	push	1
	lea	ecx, DWORD PTR _bsPlayerSync$[ebp]
	call	?IgnoreBytes@BitStream@RakNet@@QAEXI@Z	; RakNet::BitStream::IgnoreBytes

; 203  : 	bsPlayerSync.Read(bytePlayerID);

	lea	eax, DWORD PTR _bytePlayerID$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsPlayerSync$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 204  : 
; 205  : 	pPlayer = GetPlayerManager()->GetAt(bytePlayerID);

	movzx	eax, BYTE PTR _bytePlayerID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ; CNetworkManager::GetPlayerManager
	mov	ecx, eax
	call	?GetAt@CPlayerManager@@QAEPAVCRemotePlayer@@E@Z ; CPlayerManager::GetAt
	mov	DWORD PTR _pPlayer$[ebp], eax

; 206  : 	if(pPlayer)

	cmp	DWORD PTR _pPlayer$[ebp], 0
	je	$LN3@PlayerSync

; 207  : 	{
; 208  : 		PLAYER_SYNC_DATA playerSyncData;

	lea	ecx, DWORD PTR _playerSyncData$209371[ebp]
	call	??0_PLAYER_SYNC_DATA@@QAE@XZ

; 209  : 		CAMERA_AIM caAiming;

	lea	ecx, DWORD PTR _caAiming$209372[ebp]
	call	??0_CAMERA_AIM@@QAE@XZ

; 210  : 
; 211  : 		bsPlayerSync.Read((char *)&playerSyncData, sizeof(PLAYER_SYNC_DATA));

	push	24					; 00000018H
	lea	eax, DWORD PTR _playerSyncData$209371[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsPlayerSync$[ebp]
	call	?Read@BitStream@RakNet@@QAE_NPADI@Z	; RakNet::BitStream::Read

; 212  : 
; 213  : 		// read weather the bit stream has aim sync data or not
; 214  : 		bool bHasAimSync = bsPlayerSync.ReadBit();

	lea	ecx, DWORD PTR _bsPlayerSync$[ebp]
	call	?ReadBit@BitStream@RakNet@@QAE_NXZ	; RakNet::BitStream::ReadBit
	mov	BYTE PTR _bHasAimSync$209375[ebp], al

; 215  : 
; 216  : 		// read aim sync data if the bit stream has it
; 217  : 		if(bHasAimSync)

	movzx	eax, BYTE PTR _bHasAimSync$209375[ebp]
	test	eax, eax
	je	SHORT $LN2@PlayerSync

; 218  : 		{
; 219  : 			// read the aim sync data
; 220  : 			bsPlayerSync.Read((char *)&caAiming, sizeof(CAMERA_AIM));

	push	48					; 00000030H
	lea	eax, DWORD PTR _caAiming$209372[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsPlayerSync$[ebp]
	call	?Read@BitStream@RakNet@@QAE_NPADI@Z	; RakNet::BitStream::Read
$LN2@PlayerSync:

; 221  : 		}
; 222  : 
; 223  : 		// store the player sync data
; 224  : 		pPlayer->StoreOnFootFullSyncData(&playerSyncData);

	lea	eax, DWORD PTR _playerSyncData$209371[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?StoreOnFootFullSyncData@CRemotePlayer@@QAEXPAU_PLAYER_SYNC_DATA@@@Z ; CRemotePlayer::StoreOnFootFullSyncData

; 225  : 
; 226  : 		// store the aim sync data if the bit stream has it
; 227  : 		if(bHasAimSync)

	movzx	eax, BYTE PTR _bHasAimSync$209375[ebp]
	test	eax, eax
	je	SHORT $LN3@PlayerSync

; 228  : 		{
; 229  : 			pPlayer->StoreAimSyncData(&caAiming);

	lea	eax, DWORD PTR _caAiming$209372[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?StoreAimSyncData@CRemotePlayer@@QAEXPAU_CAMERA_AIM@@@Z ; CRemotePlayer::StoreAimSyncData
$LN3@PlayerSync:

; 230  : 		}
; 231  : 	}
; 232  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _bsPlayerSync$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@PlayerSync
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 628				; 00000274H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN13@PlayerSync:
	DD	4
	DD	$LN12@PlayerSync
$LN12@PlayerSync:
	DD	-320					; fffffec0H
	DD	276					; 00000114H
	DD	$LN7@PlayerSync
	DD	-329					; fffffeb7H
	DD	1
	DD	$LN8@PlayerSync
	DD	-364					; fffffe94H
	DD	24					; 00000018H
	DD	$LN9@PlayerSync
	DD	-420					; fffffe5cH
	DD	48					; 00000030H
	DD	$LN10@PlayerSync
$LN10@PlayerSync:
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	65					; 00000041H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
$LN9@PlayerSync:
	DB	112					; 00000070H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN8@PlayerSync:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	80					; 00000050H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
$LN7@PlayerSync:
	DB	98					; 00000062H
	DB	115					; 00000073H
	DB	80					; 00000050H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?PlayerSync@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z$0:
	lea	ecx, DWORD PTR _bsPlayerSync$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__ehhandler$?PlayerSync@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-632]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?PlayerSync@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?PlayerSync@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z ENDP ; CNetworkManager::PlayerSync
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_PLAYER_SYNC_DATA@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_PLAYER_SYNC_DATA@@QAE@XZ PROC			; _PLAYER_SYNC_DATA::_PLAYER_SYNC_DATA, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_PLAYER_SYNC_DATA@@QAE@XZ ENDP			; _PLAYER_SYNC_DATA::_PLAYER_SYNC_DATA
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0_CAMERA_AIM@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_CAMERA_AIM@@QAE@XZ PROC				; _CAMERA_AIM::_CAMERA_AIM, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_CAMERA_AIM@@QAE@XZ ENDP				; _CAMERA_AIM::_CAMERA_AIM
_TEXT	ENDS
PUBLIC	??0_VEHICLE_SYNC_DATA@@QAE@XZ			; _VEHICLE_SYNC_DATA::_VEHICLE_SYNC_DATA
PUBLIC	__$ArrayPad$
EXTRN	?StoreInCarFullSyncData@CRemotePlayer@@QAEXPAU_VEHICLE_SYNC_DATA@@@Z:PROC ; CRemotePlayer::StoreInCarFullSyncData
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?VehicleSync@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?VehicleSync@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z$0
__ehfuncinfo$?VehicleSync@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?VehicleSync@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?VehicleSync@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z
_TEXT	SEGMENT
_vehicleSyncData$209393 = -408				; size = 68
_bytePlayerID$ = -329					; size = 1
_bsVehicleSync$ = -320					; size = 276
_pPlayer$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
?VehicleSync@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z PROC ; CNetworkManager::VehicleSync, COMDAT
; _this$ = ecx

; 237  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?VehicleSync@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 592				; 00000250H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-604]
	mov	ecx, 148				; 00000094H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 238  : 	CRemotePlayer * pPlayer;
; 239  : 	BitStream bsVehicleSync(p->data, p->length, FALSE);

	push	0
	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+32]
	push	eax
	lea	ecx, DWORD PTR _bsVehicleSync$[ebp]
	call	??0BitStream@RakNet@@QAE@PAEI_N@Z	; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 240  : 	BYTE bytePlayerID;
; 241  : 
; 242  : 	bsVehicleSync.IgnoreBytes(sizeof(MessageID));

	push	1
	lea	ecx, DWORD PTR _bsVehicleSync$[ebp]
	call	?IgnoreBytes@BitStream@RakNet@@QAEXI@Z	; RakNet::BitStream::IgnoreBytes

; 243  : 	bsVehicleSync.Read(bytePlayerID);

	lea	eax, DWORD PTR _bytePlayerID$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsVehicleSync$[ebp]
	call	??$Read@E@BitStream@RakNet@@QAE_NAAE@Z	; RakNet::BitStream::Read<unsigned char>

; 244  : 
; 245  : 	pPlayer = GetPlayerManager()->GetAt(bytePlayerID);

	movzx	eax, BYTE PTR _bytePlayerID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ; CNetworkManager::GetPlayerManager
	mov	ecx, eax
	call	?GetAt@CPlayerManager@@QAEPAVCRemotePlayer@@E@Z ; CPlayerManager::GetAt
	mov	DWORD PTR _pPlayer$[ebp], eax

; 246  : 	if(pPlayer)

	cmp	DWORD PTR _pPlayer$[ebp], 0
	je	SHORT $LN1@VehicleSyn

; 247  : 	{
; 248  : 		VEHICLE_SYNC_DATA vehicleSyncData;

	lea	ecx, DWORD PTR _vehicleSyncData$209393[ebp]
	call	??0_VEHICLE_SYNC_DATA@@QAE@XZ

; 249  : 
; 250  : 		bsVehicleSync.Read((char *)&vehicleSyncData, sizeof(VEHICLE_SYNC_DATA));

	push	68					; 00000044H
	lea	eax, DWORD PTR _vehicleSyncData$209393[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsVehicleSync$[ebp]
	call	?Read@BitStream@RakNet@@QAE_NPADI@Z	; RakNet::BitStream::Read

; 251  : 
; 252  : 		// store the vehicle sync data
; 253  : 		pPlayer->StoreInCarFullSyncData(&vehicleSyncData);

	lea	eax, DWORD PTR _vehicleSyncData$209393[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPlayer$[ebp]
	call	?StoreInCarFullSyncData@CRemotePlayer@@QAEXPAU_VEHICLE_SYNC_DATA@@@Z ; CRemotePlayer::StoreInCarFullSyncData
$LN1@VehicleSyn:

; 254  : 	}
; 255  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _bsVehicleSync$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@VehicleSyn
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 604				; 0000025cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN10@VehicleSyn:
	DD	3
	DD	$LN9@VehicleSyn
$LN9@VehicleSyn:
	DD	-320					; fffffec0H
	DD	276					; 00000114H
	DD	$LN5@VehicleSyn
	DD	-329					; fffffeb7H
	DD	1
	DD	$LN6@VehicleSyn
	DD	-408					; fffffe68H
	DD	68					; 00000044H
	DD	$LN7@VehicleSyn
$LN7@VehicleSyn:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN6@VehicleSyn:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	80					; 00000050H
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	68					; 00000044H
	DB	0
$LN5@VehicleSyn:
	DB	98					; 00000062H
	DB	115					; 00000073H
	DB	86					; 00000056H
	DB	101					; 00000065H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	121					; 00000079H
	DB	110					; 0000006eH
	DB	99					; 00000063H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?VehicleSync@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z$0:
	lea	ecx, DWORD PTR _bsVehicleSync$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__ehhandler$?VehicleSync@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-608]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?VehicleSync@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?VehicleSync@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z ENDP ; CNetworkManager::VehicleSync
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_VEHICLE_SYNC_DATA@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_VEHICLE_SYNC_DATA@@QAE@XZ PROC			; _VEHICLE_SYNC_DATA::_VEHICLE_SYNC_DATA, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 40					; 00000028H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_VEHICLE_SYNC_DATA@@QAE@XZ ENDP			; _VEHICLE_SYNC_DATA::_VEHICLE_SYNC_DATA
_TEXT	ENDS
PUBLIC	??_C@_0L@POIGCFHH@ClientJoin?$AA@		; `string'
PUBLIC	??0AddressOrGUID@RakNet@@QAE@ABUSystemAddress@1@@Z ; RakNet::AddressOrGUID::AddressOrGUID
PUBLIC	??$Write@E@BitStream@RakNet@@QAEXABE@Z		; RakNet::BitStream::Write<unsigned char>
PUBLIC	?GetLocalPlayerName@CPlayerManager@@QAEPADXZ	; CPlayerManager::GetLocalPlayerName
PUBLIC	??_C@_0CM@GEHKPBDK@Connection?5success?4?5Loading?5netw@ ; `string'
PUBLIC	__$ArrayPad$
EXTRN	?Call@RPC4@RakNet@@QAEXPBDPAVBitStream@2@W4PacketPriority@@W4PacketReliability@@DUAddressOrGUID@2@_N@Z:PROC ; RakNet::RPC4::Call
EXTRN	_itoa:PROC
EXTRN	__imp__GetVolumeInformationA@32:PROC
EXTRN	__imp__GetWindowsDirectoryA@8:PROC
EXTRN	?Write@BitStream@RakNet@@QAEXPBDI@Z:PROC	; RakNet::BitStream::Write
EXTRN	??0BitStream@RakNet@@QAE@XZ:PROC		; RakNet::BitStream::BitStream
EXTRN	_strlen:PROC
;	COMDAT ??_C@_0L@POIGCFHH@ClientJoin?$AA@
CONST	SEGMENT
??_C@_0L@POIGCFHH@ClientJoin?$AA@ DB 'ClientJoin', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@GEHKPBDK@Connection?5success?4?5Loading?5netw@
CONST	SEGMENT
??_C@_0CM@GEHKPBDK@Connection?5success?4?5Loading?5netw@ DB 'Connection s'
	DB	'uccess. Loading network game...', 00H	; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ConnectionSucceeded@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ConnectionSucceeded@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z$0
__ehfuncinfo$?ConnectionSucceeded@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ConnectionSucceeded@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?ConnectionSucceeded@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z
_TEXT	SEGMENT
$T209661 = -624						; size = 4
_szWinDir$ = -420					; size = 40
_volumeSerial$ = -372					; size = 20
_VolumeSerialNumber$ = -344				; size = 4
_bsSend$ = -332						; size = 276
_byteNameLen$ = -45					; size = 1
_byteVersion$ = -33					; size = 1
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_p$ = 8							; size = 4
?ConnectionSucceeded@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z PROC ; CNetworkManager::ConnectionSucceeded, COMDAT
; _this$ = ecx

; 260  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ConnectionSucceeded@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 616				; 00000268H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-628]
	mov	ecx, 154				; 0000009aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 261  : 	if(pChatWindow) {

	cmp	DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A, 0 ; pChatWindow
	je	SHORT $LN1@Connection

; 262  : 		pChatWindow->AddDebugMessage("Connection success. Loading network game...");

	push	OFFSET ??_C@_0CM@GEHKPBDK@Connection?5success?4?5Loading?5netw@
	mov	eax, DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A ; pChatWindow
	push	eax
	call	?AddDebugMessage@CChatWindow@@QAAXPADZZ	; CChatWindow::AddDebugMessage
	add	esp, 8
$LN1@Connection:

; 263  : 	}
; 264  : 
; 265  : 	m_iGameState = GAMESTATE_AWAIT_JOIN;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+292], 3

; 266  : 
; 267  : 	BYTE byteVersion = NETGAME_VERSION;

	mov	BYTE PTR _byteVersion$[ebp], 7

; 268  : 	BYTE byteNameLen = (BYTE)strlen(m_pPlayerManager->GetLocalPlayerName());

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?GetLocalPlayerName@CPlayerManager@@QAEPADXZ ; CPlayerManager::GetLocalPlayerName
	push	eax
	call	_strlen
	add	esp, 4
	mov	BYTE PTR _byteNameLen$[ebp], al

; 269  : 	
; 270  : 	BitStream bsSend;

	lea	ecx, DWORD PTR _bsSend$[ebp]
	call	??0BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::BitStream
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 271  : 	bsSend.Write(byteVersion);

	lea	eax, DWORD PTR _byteVersion$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsSend$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXABE@Z	; RakNet::BitStream::Write<unsigned char>

; 272  : 	bsSend.Write(byteNameLen);

	lea	eax, DWORD PTR _byteNameLen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsSend$[ebp]
	call	??$Write@E@BitStream@RakNet@@QAEXABE@Z	; RakNet::BitStream::Write<unsigned char>

; 273  : 	bsSend.Write(m_pPlayerManager->GetLocalPlayerName(),byteNameLen);

	movzx	eax, BYTE PTR _byteNameLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?GetLocalPlayerName@CPlayerManager@@QAEPADXZ ; CPlayerManager::GetLocalPlayerName
	push	eax
	lea	ecx, DWORD PTR _bsSend$[ebp]
	call	?Write@BitStream@RakNet@@QAEXPBDI@Z	; RakNet::BitStream::Write

; 274  : 
; 275  : 	unsigned long VolumeSerialNumber;
; 276  : 	char volumeSerial[20];
; 277  : 	char szWinDir[40];
; 278  : 	GetWindowsDirectoryA(szWinDir, 40);

	mov	esi, esp
	push	40					; 00000028H
	lea	eax, DWORD PTR _szWinDir$[ebp]
	push	eax
	call	DWORD PTR __imp__GetWindowsDirectoryA@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 279  : 	GetVolumeInformationA(szWinDir, NULL, 100, &VolumeSerialNumber, NULL, NULL, NULL, 100);

	mov	esi, esp
	push	100					; 00000064H
	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _VolumeSerialNumber$[ebp]
	push	eax
	push	100					; 00000064H
	push	0
	lea	ecx, DWORD PTR _szWinDir$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetVolumeInformationA@32
	cmp	esi, esp
	call	__RTC_CheckEsp

; 280  : 	itoa(VolumeSerialNumber, volumeSerial, 16);

	push	16					; 00000010H
	lea	eax, DWORD PTR _volumeSerial$[ebp]
	push	eax
	mov	ecx, DWORD PTR _VolumeSerialNumber$[ebp]
	push	ecx
	call	_itoa
	add	esp, 12					; 0000000cH

; 281  : 
; 282  : 	bsSend.Write(volumeSerial, 20);

	push	20					; 00000014H
	lea	eax, DWORD PTR _volumeSerial$[ebp]
	push	eax
	lea	ecx, DWORD PTR _bsSend$[ebp]
	call	?Write@BitStream@RakNet@@QAEXPBDI@Z	; RakNet::BitStream::Write

; 283  : 
; 284  : 	m_pRPC4->Call("ClientJoin",&bsSend,HIGH_PRIORITY,RELIABLE,0,UNASSIGNED_SYSTEM_ADDRESS,TRUE);

	push	1
	sub	esp, 24					; 00000018H
	mov	ecx, esp
	mov	DWORD PTR $T209661[ebp], esp
	push	OFFSET _UNASSIGNED_SYSTEM_ADDRESS
	call	??0AddressOrGUID@RakNet@@QAE@ABUSystemAddress@1@@Z ; RakNet::AddressOrGUID::AddressOrGUID
	push	0
	push	2
	push	1
	lea	eax, DWORD PTR _bsSend$[ebp]
	push	eax
	push	OFFSET ??_C@_0L@POIGCFHH@ClientJoin?$AA@
	mov	ecx, DWORD PTR ?m_pRPC4@CNetworkManager@@0PAVRPC4@RakNet@@A ; CNetworkManager::m_pRPC4
	call	?Call@RPC4@RakNet@@QAEXPBDPAVBitStream@2@W4PacketPriority@@W4PacketReliability@@DUAddressOrGUID@2@_N@Z ; RakNet::RPC4::Call

; 285  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _bsSend$[ebp]
	call	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Connection
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 628				; 00000274H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN13@Connection:
	DD	6
	DD	$LN12@Connection
$LN12@Connection:
	DD	-33					; ffffffdfH
	DD	1
	DD	$LN5@Connection
	DD	-45					; ffffffd3H
	DD	1
	DD	$LN6@Connection
	DD	-332					; fffffeb4H
	DD	276					; 00000114H
	DD	$LN7@Connection
	DD	-344					; fffffea8H
	DD	4
	DD	$LN8@Connection
	DD	-372					; fffffe8cH
	DD	20					; 00000014H
	DD	$LN9@Connection
	DD	-420					; fffffe5cH
	DD	40					; 00000028H
	DD	$LN10@Connection
$LN10@Connection:
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	87					; 00000057H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	68					; 00000044H
	DB	105					; 00000069H
	DB	114					; 00000072H
	DB	0
$LN9@Connection:
	DB	118					; 00000076H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
$LN8@Connection:
	DB	86					; 00000056H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	78					; 0000004eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	98					; 00000062H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN7@Connection:
	DB	98					; 00000062H
	DB	115					; 00000073H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	0
$LN6@Connection:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN5@Connection:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	86					; 00000056H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ConnectionSucceeded@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z$0:
	lea	ecx, DWORD PTR _bsSend$[ebp]
	jmp	??1BitStream@RakNet@@QAE@XZ		; RakNet::BitStream::~BitStream
__ehhandler$?ConnectionSucceeded@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-632]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ConnectionSucceeded@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?ConnectionSucceeded@CNetworkManager@@AAEXPAUPacket@RakNet@@@Z ENDP ; CNetworkManager::ConnectionSucceeded
PUBLIC	??_C@_0BD@OIDOAIGE@UpdateScoreAndPing?$AA@	; `string'
PUBLIC	?UpdatePlayerScoresAndPings@CNetworkManager@@QAEXXZ ; CNetworkManager::UpdatePlayerScoresAndPings
;	COMDAT ??_C@_0BD@OIDOAIGE@UpdateScoreAndPing?$AA@
CONST	SEGMENT
??_C@_0BD@OIDOAIGE@UpdateScoreAndPing?$AA@ DB 'UpdateScoreAndPing', 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?UpdatePlayerScoresAndPings@CNetworkManager@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?UpdatePlayerScoresAndPings@CNetworkManager@@QAEXXZ PROC ; CNetworkManager::UpdatePlayerScoresAndPings, COMDAT
; _this$ = ecx

; 290  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 291  : 	if( (GetTickCount() - m_dwLastScoreUpdateTick) > 1000 ) {

	mov	esi, esp
	call	DWORD PTR __imp__GetTickCount@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+296]
	cmp	eax, 1000				; 000003e8H
	jbe	SHORT $LN2@UpdatePlay

; 292  : 		m_dwLastScoreUpdateTick = GetTickCount();

	mov	esi, esp
	call	DWORD PTR __imp__GetTickCount@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+296], eax

; 293  : 
; 294  : 		m_pRPC4->Call("UpdateScoreAndPing",NULL,HIGH_PRIORITY,RELIABLE,0,UNASSIGNED_SYSTEM_ADDRESS,TRUE);

	push	1
	sub	esp, 24					; 00000018H
	mov	ecx, esp
	push	OFFSET _UNASSIGNED_SYSTEM_ADDRESS
	call	??0AddressOrGUID@RakNet@@QAE@ABUSystemAddress@1@@Z ; RakNet::AddressOrGUID::AddressOrGUID
	push	0
	push	2
	push	1
	push	0
	push	OFFSET ??_C@_0BD@OIDOAIGE@UpdateScoreAndPing?$AA@
	mov	ecx, DWORD PTR ?m_pRPC4@CNetworkManager@@0PAVRPC4@RakNet@@A ; CNetworkManager::m_pRPC4
	call	?Call@RPC4@RakNet@@QAEXPBDPAVBitStream@2@W4PacketPriority@@W4PacketReliability@@DUAddressOrGUID@2@_N@Z ; RakNet::RPC4::Call
$LN2@UpdatePlay:

; 295  : 	}
; 296  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?UpdatePlayerScoresAndPings@CNetworkManager@@QAEXXZ ENDP ; CNetworkManager::UpdatePlayerScoresAndPings
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?Connect@CNetworkManager@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Connect@CNetworkManager@@QAEXXZ PROC			; CNetworkManager::Connect, COMDAT
; _this$ = ecx

; 301  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 302  : 	if(m_pRakPeer) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 0
	je	SHORT $LN2@Connect

; 303  : 		m_pRakPeer->Connect(m_szHostOrIp, m_iPort, m_szPass, strlen(m_szPass));

	mov	esi, esp
	push	0
	push	500					; 000001f4H
	push	12					; 0000000cH
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 164				; 000000a4H
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 164				; 000000a4H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+160]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+24]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 304  : 		m_iGameState = GAMESTATE_CONNECTING;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+292], 1
$LN2@Connect:

; 305  : 	}
; 306  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Connect@CNetworkManager@@QAEXXZ ENDP			; CNetworkManager::Connect
_TEXT	ENDS
PUBLIC	?IsConnected@CNetworkManager@@QAE_NXZ		; CNetworkManager::IsConnected
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IsConnected@CNetworkManager@@QAE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IsConnected@CNetworkManager@@QAE_NXZ PROC		; CNetworkManager::IsConnected, COMDAT
; _this$ = ecx

; 311  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 312  : 	if(GetGameState() == GAMESTATE_CONNECTED) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetGameState@CNetworkManager@@QAEHXZ	; CNetworkManager::GetGameState
	cmp	eax, 2
	jne	SHORT $LN1@IsConnecte

; 313  : 		return true;

	mov	al, 1
	jmp	SHORT $LN2@IsConnecte
$LN1@IsConnecte:

; 314  : 	}
; 315  : 	return false;

	xor	al, al
$LN2@IsConnecte:

; 316  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IsConnected@CNetworkManager@@QAE_NXZ ENDP		; CNetworkManager::IsConnected
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?Shutdown@CNetworkManager@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Shutdown@CNetworkManager@@QAEXXZ PROC			; CNetworkManager::Shutdown, COMDAT
; _this$ = ecx

; 321  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 322  : 	if(m_pRakPeer && m_iGameState == GAMESTATE_CONNECTED) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 0
	je	SHORT $LN1@Shutdown
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+292], 2
	jne	SHORT $LN1@Shutdown

; 323  : 		m_pRakPeer->Shutdown(500);

	mov	esi, esp
	push	3
	push	0
	push	500					; 000001f4H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Shutdown:

; 324  : 	}
; 325  : 	m_iGameState = GAMESTATE_DISCONNECTED;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+292], 4

; 326  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Shutdown@CNetworkManager@@QAEXXZ ENDP			; CNetworkManager::Shutdown
_TEXT	ENDS
PUBLIC	?DoEndianSwap@BitStream@RakNet@@SA_NXZ		; RakNet::BitStream::DoEndianSwap
EXTRN	?ReverseBytes@BitStream@RakNet@@SAXPAE0I@Z:PROC	; RakNet::BitStream::ReverseBytes
EXTRN	?ReadBits@BitStream@RakNet@@QAE_NPAEI_N@Z:PROC	; RakNet::BitStream::ReadBits
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\raknet\bitstream.h
;	COMDAT ??$Read@E@BitStream@RakNet@@QAE_NAAE@Z
_TEXT	SEGMENT
_output$209442 = -17					; size = 1
_this$ = -8						; size = 4
_outTemplateVar$ = 8					; size = 4
??$Read@E@BitStream@RakNet@@QAE_NAAE@Z PROC		; RakNet::BitStream::Read<unsigned char>, COMDAT
; _this$ = ecx

; 1423 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1424 : #ifdef _MSC_VER
; 1425 : #pragma warning(disable:4127)   // conditional expression is constant
; 1426 : #endif
; 1427 : 		if (sizeof(outTemplateVar)==1)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN5@Read

; 1428 : 			return ReadBits( ( unsigned char* ) &outTemplateVar, sizeof(templateType) * 8, true );

	push	1
	push	8
	mov	eax, DWORD PTR _outTemplateVar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEI_N@Z ; RakNet::BitStream::ReadBits
	jmp	SHORT $LN6@Read

; 1429 : 		else

	jmp	SHORT $LN6@Read
$LN5@Read:

; 1430 : 		{
; 1431 : #ifndef __BITSTREAM_NATIVE_END
; 1432 : #ifdef _MSC_VER
; 1433 : #pragma warning(disable:4244)   // '=' : conversion from 'unsigned long' to 'unsigned short', possible loss of data
; 1434 : #endif
; 1435 : 			if (DoEndianSwap())

	call	?DoEndianSwap@BitStream@RakNet@@SA_NXZ	; RakNet::BitStream::DoEndianSwap
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@Read

; 1436 : 			{
; 1437 : 				unsigned char output[sizeof(templateType)];
; 1438 : 				if (ReadBits( ( unsigned char* ) output, sizeof(templateType) * 8, true ))

	push	1
	push	8
	lea	eax, DWORD PTR _output$209442[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEI_N@Z ; RakNet::BitStream::ReadBits
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Read

; 1439 : 				{
; 1440 : 					ReverseBytes(output, (unsigned char*)&outTemplateVar, sizeof(templateType));

	push	1
	mov	eax, DWORD PTR _outTemplateVar$[ebp]
	push	eax
	lea	ecx, DWORD PTR _output$209442[ebp]
	push	ecx
	call	?ReverseBytes@BitStream@RakNet@@SAXPAE0I@Z ; RakNet::BitStream::ReverseBytes
	add	esp, 12					; 0000000cH

; 1441 : 					return true;

	mov	al, 1
	jmp	SHORT $LN6@Read
$LN2@Read:

; 1442 : 				}
; 1443 : 				return false;

	xor	al, al
	jmp	SHORT $LN6@Read

; 1444 : 			}
; 1445 : 			else

	jmp	SHORT $LN6@Read
$LN3@Read:

; 1446 : #endif
; 1447 : 				return ReadBits( ( unsigned char* ) & outTemplateVar, sizeof(templateType) * 8, true );

	push	1
	push	8
	mov	eax, DWORD PTR _outTemplateVar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ReadBits@BitStream@RakNet@@QAE_NPAEI_N@Z ; RakNet::BitStream::ReadBits
$LN6@Read:

; 1448 : 		}
; 1449 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Read
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN10@Read:
	DD	1
	DD	$LN9@Read
$LN9@Read:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN8@Read
$LN8@Read:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
??$Read@E@BitStream@RakNet@@QAE_NAAE@Z ENDP		; RakNet::BitStream::Read<unsigned char>
_TEXT	ENDS
EXTRN	?WriteBits@BitStream@RakNet@@QAEXPBEI_N@Z:PROC	; RakNet::BitStream::WriteBits
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$Write@E@BitStream@RakNet@@QAEXABE@Z
_TEXT	SEGMENT
_output$209459 = -17					; size = 1
_this$ = -8						; size = 4
_inTemplateVar$ = 8					; size = 4
??$Write@E@BitStream@RakNet@@QAEXABE@Z PROC		; RakNet::BitStream::Write<unsigned char>, COMDAT
; _this$ = ecx

; 1055 : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1056 : #ifdef _MSC_VER
; 1057 : #pragma warning(disable:4127)   // conditional expression is constant
; 1058 : #endif
; 1059 : 		if (sizeof(inTemplateVar)==1)

	mov	eax, 1
	test	eax, eax
	je	SHORT $LN4@Write

; 1060 : 			WriteBits( ( unsigned char* ) & inTemplateVar, sizeof( templateType ) * 8, true );

	push	1
	push	8
	mov	eax, DWORD PTR _inTemplateVar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEI_N@Z ; RakNet::BitStream::WriteBits

; 1061 : 		else

	jmp	SHORT $LN5@Write
$LN4@Write:

; 1062 : 		{
; 1063 : #ifndef __BITSTREAM_NATIVE_END
; 1064 : 			if (DoEndianSwap())

	call	?DoEndianSwap@BitStream@RakNet@@SA_NXZ	; RakNet::BitStream::DoEndianSwap
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Write

; 1065 : 			{
; 1066 : 				unsigned char output[sizeof(templateType)];
; 1067 : 				ReverseBytes((unsigned char*)&inTemplateVar, output, sizeof(templateType));

	push	1
	lea	eax, DWORD PTR _output$209459[ebp]
	push	eax
	mov	ecx, DWORD PTR _inTemplateVar$[ebp]
	push	ecx
	call	?ReverseBytes@BitStream@RakNet@@SAXPAE0I@Z ; RakNet::BitStream::ReverseBytes
	add	esp, 12					; 0000000cH

; 1068 : 				WriteBits( ( unsigned char* ) output, sizeof(templateType) * 8, true );

	push	1
	push	8
	lea	eax, DWORD PTR _output$209459[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEI_N@Z ; RakNet::BitStream::WriteBits

; 1069 : 			}
; 1070 : 			else

	jmp	SHORT $LN5@Write
$LN2@Write:

; 1071 : #endif
; 1072 : 				WriteBits( ( unsigned char* ) & inTemplateVar, sizeof(templateType) * 8, true );

	push	1
	push	8
	mov	eax, DWORD PTR _inTemplateVar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?WriteBits@BitStream@RakNet@@QAEXPBEI_N@Z ; RakNet::BitStream::WriteBits
$LN5@Write:

; 1073 : 		}
; 1074 : 	}

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Write
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN9@Write:
	DD	1
	DD	$LN8@Write
$LN8@Write:
	DD	-17					; ffffffefH
	DD	1
	DD	$LN7@Write
$LN7@Write:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	112					; 00000070H
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
??$Write@E@BitStream@RakNet@@QAEXABE@Z ENDP		; RakNet::BitStream::Write<unsigned char>
_TEXT	ENDS
PUBLIC	__real@00000000
;	COMDAT __real@00000000
; File d:\vice-players-master\client\game\common.h
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0Vector3@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Vector3@@QAE@XZ PROC					; Vector3::Vector3, COMDAT
; _this$ = ecx

; 34   : 	Vector3()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 35   : 	{
; 36   : 		X = Y = Z = 0;

	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax+8]
	mov	ecx, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [edx]

; 37   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0Vector3@@QAE@XZ ENDP					; Vector3::Vector3
_TEXT	ENDS
EXTRN	??0CPlayerPed@@QAE@XZ:PROC			; CPlayerPed::CPlayerPed
;	COMDAT xdata$x
; File d:\vice-players-master\client\game\cgame.h
xdata$x	SEGMENT
__unwindtable$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ$0
__ehfuncinfo$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
_TEXT	SEGMENT
tv74 = -244						; size = 4
$T209702 = -236						; size = 4
$T209703 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ PROC		; CGame::FindPlayerPed, COMDAT
; _this$ = ecx

; 101  : 	CPlayerPed  *FindPlayerPed() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 102  : 		if(m_pInternalPlayer==NULL)	m_pInternalPlayer = new CPlayerPed();

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN1@FindPlayer
	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T209703[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T209703[ebp], 0
	je	SHORT $LN4@FindPlayer
	mov	ecx, DWORD PTR $T209703[ebp]
	call	??0CPlayerPed@@QAE@XZ			; CPlayerPed::CPlayerPed
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN5@FindPlayer
$LN4@FindPlayer:
	mov	DWORD PTR tv74[ebp], 0
$LN5@FindPlayer:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR $T209702[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR $T209702[ebp]
	mov	DWORD PTR [ecx+4], edx
$LN1@FindPlayer:

; 103  : 		return m_pInternalPlayer;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]

; 104  : 	};

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ$0:
	mov	eax, DWORD PTR $T209703[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?FindPlayerPed@CGame@@QAEPAVCPlayerPed@@XZ ENDP		; CGame::FindPlayerPed
PUBLIC	??4SystemAddress@RakNet@@QAEAAU01@ABU01@@Z	; RakNet::SystemAddress::operator=
PUBLIC	??4RakNetGUID@RakNet@@QAEAAU01@ABU01@@Z		; RakNet::RakNetGUID::operator=
PUBLIC	??0RakNetGUID@RakNet@@QAE@XZ			; RakNet::RakNetGUID::RakNetGUID
EXTRN	??0SystemAddress@RakNet@@QAE@XZ:PROC		; RakNet::SystemAddress::SystemAddress
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\raknet\raknettypes.h
;	COMDAT ??0AddressOrGUID@RakNet@@QAE@ABUSystemAddress@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_input$ = 8						; size = 4
??0AddressOrGUID@RakNet@@QAE@ABUSystemAddress@1@@Z PROC	; RakNet::AddressOrGUID::AddressOrGUID, COMDAT
; _this$ = ecx

; 220  : 	AddressOrGUID( const SystemAddress& input )

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0RakNetGUID@RakNet@@QAE@XZ		; RakNet::RakNetGUID::RakNetGUID
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0SystemAddress@RakNet@@QAE@XZ		; RakNet::SystemAddress::SystemAddress

; 221  : 	{
; 222  : 		rakNetGuid=UNASSIGNED_RAKNET_GUID;

	push	OFFSET _UNASSIGNED_RAKNET_GUID
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4RakNetGUID@RakNet@@QAEAAU01@ABU01@@Z	; RakNet::RakNetGUID::operator=

; 223  : 		systemAddress=input;

	mov	eax, DWORD PTR _input$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??4SystemAddress@RakNet@@QAEAAU01@ABU01@@Z ; RakNet::SystemAddress::operator=

; 224  : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0AddressOrGUID@RakNet@@QAE@ABUSystemAddress@1@@Z ENDP	; RakNet::AddressOrGUID::AddressOrGUID
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??4SystemAddress@RakNet@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_input$ = 8						; size = 4
??4SystemAddress@RakNet@@QAEAAU01@ABU01@@Z PROC		; RakNet::SystemAddress::operator=, COMDAT
; _this$ = ecx

; 139  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 140  : 		binaryAddress = input.binaryAddress;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx

; 141  : 		port = input.port;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	dx, WORD PTR [ecx+4]
	mov	WORD PTR [eax+4], dx

; 142  : 		systemIndex = input.systemIndex;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	dx, WORD PTR [ecx+6]
	mov	WORD PTR [eax+6], dx

; 143  : 		return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 144  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4SystemAddress@RakNet@@QAEAAU01@ABU01@@Z ENDP		; RakNet::SystemAddress::operator=
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0RakNetGUID@RakNet@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0RakNetGUID@RakNet@@QAE@XZ PROC			; RakNet::RakNetGUID::RakNetGUID, COMDAT
; _this$ = ecx

; 156  : 	RakNetGUID() {systemIndex=(SystemIndex)-1;}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, 65535				; 0000ffffH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+8], ax
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0RakNetGUID@RakNet@@QAE@XZ ENDP			; RakNet::RakNetGUID::RakNetGUID
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??4RakNetGUID@RakNet@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_input$ = 8						; size = 4
??4RakNetGUID@RakNet@@QAEAAU01@ABU01@@Z PROC		; RakNet::RakNetGUID::operator=, COMDAT
; _this$ = ecx

; 174  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 175  : 		g=input.g;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	mov	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], ecx

; 176  : 		systemIndex=input.systemIndex;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _input$[ebp]
	mov	dx, WORD PTR [ecx+8]
	mov	WORD PTR [eax+8], dx

; 177  : 		return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 178  : 	}

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4RakNetGUID@RakNet@@QAEAAU01@ABU01@@Z ENDP		; RakNet::RakNetGUID::operator=
_TEXT	ENDS
PUBLIC	?IsNetworkOrder@BitStream@RakNet@@SA_NXZ	; RakNet::BitStream::IsNetworkOrder
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\raknet\bitstream.h
;	COMDAT ?DoEndianSwap@BitStream@RakNet@@SA_NXZ
_TEXT	SEGMENT
?DoEndianSwap@BitStream@RakNet@@SA_NXZ PROC		; RakNet::BitStream::DoEndianSwap, COMDAT

; 863  : 		inline static bool DoEndianSwap(void) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 864  : #ifndef __BITSTREAM_NATIVE_END
; 865  : 			return IsNetworkOrder()==false;

	call	?IsNetworkOrder@BitStream@RakNet@@SA_NXZ ; RakNet::BitStream::IsNetworkOrder
	movzx	eax, al
	neg	eax
	sbb	eax, eax
	add	eax, 1

; 866  : #else
; 867  : 			return false;
; 868  : #endif
; 869  : 		}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DoEndianSwap@BitStream@RakNet@@SA_NXZ ENDP		; RakNet::BitStream::DoEndianSwap
_TEXT	ENDS
PUBLIC	?r@?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@4_NB ; `RakNet::BitStream::IsNetworkOrder'::`2'::r
PUBLIC	??_B?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@51 ; `RakNet::BitStream::IsNetworkOrder'::`2'::`local static guard'
EXTRN	?IsNetworkOrderInternal@BitStream@RakNet@@SA_NXZ:PROC ; RakNet::BitStream::IsNetworkOrderInternal
;	COMDAT ?r@?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@4_NB
_BSS	SEGMENT
?r@?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@4_NB DB 01H DUP (?) ; `RakNet::BitStream::IsNetworkOrder'::`2'::r
_BSS	ENDS
;	COMDAT ??_B?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@51
_BSS	SEGMENT
??_B?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@51 DD 01H DUP (?) ; `RakNet::BitStream::IsNetworkOrder'::`2'::`local static guard'
_BSS	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?IsNetworkOrder@BitStream@RakNet@@SA_NXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?IsNetworkOrder@BitStream@RakNet@@SA_NXZ$0
__ehfuncinfo$?IsNetworkOrder@BitStream@RakNet@@SA_NXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?IsNetworkOrder@BitStream@RakNet@@SA_NXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?IsNetworkOrder@BitStream@RakNet@@SA_NXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?IsNetworkOrder@BitStream@RakNet@@SA_NXZ PROC		; RakNet::BitStream::IsNetworkOrder, COMDAT

; 874  : 		inline static bool IsNetworkOrder(void) {static const bool r = IsNetworkOrderInternal(); return r;}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?IsNetworkOrder@BitStream@RakNet@@SA_NXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	eax, DWORD PTR ??_B?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@51
	and	eax, 1
	jne	SHORT $LN1@IsNetworkO
	mov	eax, DWORD PTR ??_B?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@51
	or	eax, 1
	mov	DWORD PTR ??_B?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@51, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	?IsNetworkOrderInternal@BitStream@RakNet@@SA_NXZ ; RakNet::BitStream::IsNetworkOrderInternal
	mov	BYTE PTR ?r@?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@4_NB, al ; `RakNet::BitStream::IsNetworkOrder'::`2'::r
	mov	DWORD PTR __$EHRec$[ebp+8], -1
$LN1@IsNetworkO:
	mov	al, BYTE PTR ?r@?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@4_NB ; `RakNet::BitStream::IsNetworkOrder'::`2'::r
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?IsNetworkOrder@BitStream@RakNet@@SA_NXZ$0:
	mov	eax, DWORD PTR ??_B?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@51
	and	eax, -2					; fffffffeH
	mov	DWORD PTR ??_B?1??IsNetworkOrder@BitStream@RakNet@@SA_NXZ@51, eax
	ret	0
__ehhandler$?IsNetworkOrder@BitStream@RakNet@@SA_NXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?IsNetworkOrder@BitStream@RakNet@@SA_NXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?IsNetworkOrder@BitStream@RakNet@@SA_NXZ ENDP		; RakNet::BitStream::IsNetworkOrder
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\client\net\cspawnselection.h
;	COMDAT ??1CSpawnSelection@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CSpawnSelection@@QAE@XZ PROC				; CSpawnSelection::~CSpawnSelection, COMDAT
; _this$ = ecx

; 25   : 	~CSpawnSelection() {};

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1CSpawnSelection@@QAE@XZ ENDP				; CSpawnSelection::~CSpawnSelection
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\client\net\cplayermanager.h
_TEXT	ENDS
;	COMDAT ?SetLocalPlayerName@CPlayerManager@@QAEXPAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_szName$ = 8						; size = 4
?SetLocalPlayerName@CPlayerManager@@QAEXPAD@Z PROC	; CPlayerManager::SetLocalPlayerName, COMDAT
; _this$ = ecx

; 35   : 	void SetLocalPlayerName(char * szName) { strcpy(m_szLocalPlayerName,szName); };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _szName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 408				; 00000198H
	push	ecx
	call	_strcpy
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetLocalPlayerName@CPlayerManager@@QAEXPAD@Z ENDP	; CPlayerManager::SetLocalPlayerName
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetLocalPlayerName@CPlayerManager@@QAEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetLocalPlayerName@CPlayerManager@@QAEPADXZ PROC	; CPlayerManager::GetLocalPlayerName, COMDAT
; _this$ = ecx

; 36   : 	char * GetLocalPlayerName() { return m_szLocalPlayerName; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 408				; 00000198H
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetLocalPlayerName@CPlayerManager@@QAEPADXZ ENDP	; CPlayerManager::GetLocalPlayerName
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetAt@CPlayerManager@@QAEPAVCRemotePlayer@@E@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_playerID$ = 8						; size = 1
?GetAt@CPlayerManager@@QAEPAVCRemotePlayer@@E@Z PROC	; CPlayerManager::GetAt, COMDAT
; _this$ = ecx

; 45   : 	CRemotePlayer* GetAt(EntityId playerID) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 46   : 		if(playerID > MAX_PLAYERS) { return NULL; }

	movzx	eax, BYTE PTR _playerID$[ebp]
	cmp	eax, 50					; 00000032H
	jle	SHORT $LN1@GetAt
	xor	eax, eax
	jmp	SHORT $LN2@GetAt
$LN1@GetAt:

; 47   : 		return m_pPlayers[playerID];

	movzx	eax, BYTE PTR _playerID$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+eax*4+208]
$LN2@GetAt:

; 48   : 	};

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?GetAt@CPlayerManager@@QAEPAVCRemotePlayer@@E@Z ENDP	; CPlayerManager::GetAt
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\client\net\cnetworkmanager.h
_TEXT	ENDS
;	COMDAT ?GetGameState@CNetworkManager@@QAEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetGameState@CNetworkManager@@QAEHXZ PROC		; CNetworkManager::GetGameState, COMDAT
; _this$ = ecx

; 76   : 	int GetGameState() { return m_iGameState; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+292]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetGameState@CNetworkManager@@QAEHXZ ENDP		; CNetworkManager::GetGameState
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ PROC ; CNetworkManager::GetPlayerManager, COMDAT
; _this$ = ecx

; 79   : 	CPlayerManager * GetPlayerManager() { return m_pPlayerManager; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetPlayerManager@CNetworkManager@@QAEPAVCPlayerManager@@XZ ENDP ; CNetworkManager::GetPlayerManager
_TEXT	ENDS
EXTRN	??0SystemAddress@RakNet@@QAE@IG@Z:PROC		; RakNet::SystemAddress::SystemAddress
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\raknet\raknettypes.h
;	COMDAT ??__EUNASSIGNED_SYSTEM_ADDRESS@RakNet@@YAXXZ
text$yc	SEGMENT
??__EUNASSIGNED_SYSTEM_ADDRESS@RakNet@@YAXXZ PROC	; RakNet::`dynamic initializer for 'UNASSIGNED_SYSTEM_ADDRESS'', COMDAT

; 196  : const SystemAddress UNASSIGNED_SYSTEM_ADDRESS(0xFFFFFFFF, 0xFFFF);

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	65535					; 0000ffffH
	push	-1
	mov	ecx, OFFSET _UNASSIGNED_SYSTEM_ADDRESS
	call	??0SystemAddress@RakNet@@QAE@IG@Z	; RakNet::SystemAddress::SystemAddress
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EUNASSIGNED_SYSTEM_ADDRESS@RakNet@@YAXXZ ENDP	; RakNet::`dynamic initializer for 'UNASSIGNED_SYSTEM_ADDRESS''
text$yc	ENDS
PUBLIC	??0RakNetGUID@RakNet@@QAE@_K@Z			; RakNet::RakNetGUID::RakNetGUID
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__EUNASSIGNED_RAKNET_GUID@RakNet@@YAXXZ
text$yc	SEGMENT
??__EUNASSIGNED_RAKNET_GUID@RakNet@@YAXXZ PROC		; RakNet::`dynamic initializer for 'UNASSIGNED_RAKNET_GUID'', COMDAT

; 197  : const RakNetGUID UNASSIGNED_RAKNET_GUID((uint64_t)-1);

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	-1
	push	-1
	mov	ecx, OFFSET _UNASSIGNED_RAKNET_GUID
	call	??0RakNetGUID@RakNet@@QAE@_K@Z		; RakNet::RakNetGUID::RakNetGUID
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EUNASSIGNED_RAKNET_GUID@RakNet@@YAXXZ ENDP		; RakNet::`dynamic initializer for 'UNASSIGNED_RAKNET_GUID''
; Function compile flags: /Odtp /RTCsu /ZI
text$yc	ENDS
;	COMDAT ??0RakNetGUID@RakNet@@QAE@_K@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__g$ = 8						; size = 8
??0RakNetGUID@RakNet@@QAE@_K@Z PROC			; RakNet::RakNetGUID::RakNetGUID, COMDAT
; _this$ = ecx

; 157  : 	explicit RakNetGUID(uint64_t _g) {g=_g; systemIndex=(SystemIndex)-1;}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __g$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __g$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, 65535				; 0000ffffH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+8], ax
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	8
??0RakNetGUID@RakNet@@QAE@_K@Z ENDP			; RakNet::RakNetGUID::RakNetGUID
_TEXT	ENDS
_BSS	SEGMENT
	ALIGN	8

_UNASSIGNED_SYSTEM_ADDRESS DQ 01H DUP (?)
_UNASSIGNED_RAKNET_GUID DB 010H DUP (?)
_BSS	ENDS
CRT$XCU	SEGMENT
_UNASSIGNED_SYSTEM_ADDRESS$initializer$ DD FLAT:??__EUNASSIGNED_SYSTEM_ADDRESS@RakNet@@YAXXZ
_UNASSIGNED_RAKNET_GUID$initializer$ DD FLAT:??__EUNASSIGNED_RAKNET_GUID@RakNet@@YAXXZ
CRT$XCU	ENDS
END
