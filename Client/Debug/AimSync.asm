; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	d:\vice-players-master\Client\game\AimSync.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	??_H@YGXPAXIHP6EPAX0@Z@Z			; `vector constructor iterator'
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??_H@YGXPAXIHP6EPAX0@Z@Z
_TEXT	SEGMENT
___t$ = 8						; size = 4
___s$ = 12						; size = 4
___n$ = 16						; size = 4
___f$ = 20						; size = 4
??_H@YGXPAXIHP6EPAX0@Z@Z PROC				; `vector constructor iterator', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN2@vector:
	mov	eax, DWORD PTR ___n$[ebp]
	sub	eax, 1
	mov	DWORD PTR ___n$[ebp], eax
	js	SHORT $LN3@vector
	mov	esi, esp
	mov	ecx, DWORD PTR ___t$[ebp]
	call	DWORD PTR ___f$[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR ___t$[ebp]
	add	eax, DWORD PTR ___s$[ebp]
	mov	DWORD PTR ___t$[ebp], eax
	jmp	SHORT $LN2@vector
$LN3@vector:
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??_H@YGXPAXIHP6EPAX0@Z@Z ENDP				; `vector constructor iterator'
_TEXT	ENDS
PUBLIC	?GameAimSyncInit@@YAXXZ				; GameAimSyncInit
EXTRN	_memset:PROC
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\client\game\aimsync.cpp
;	COMDAT ?GameAimSyncInit@@YAXXZ
_TEXT	SEGMENT
?GameAimSyncInit@@YAXXZ PROC				; GameAimSyncInit, COMDAT

; 23   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 24   : 	memset(&caLocalPlayerAim, 0, sizeof(CAMERA_AIM));

	push	48					; 00000030H
	push	0
	push	OFFSET ?caLocalPlayerAim@@3U_CAMERA_AIM@@A ; caLocalPlayerAim
	call	_memset
	add	esp, 12					; 0000000cH

; 25   : 	memset(caRemotePlayerAim, 0, (sizeof(CAMERA_AIM) * MAX_PLAYERS));

	push	2400					; 00000960H
	push	0
	push	OFFSET ?caRemotePlayerAim@@3PAU_CAMERA_AIM@@A ; caRemotePlayerAim
	call	_memset
	add	esp, 12					; 0000000cH

; 26   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GameAimSyncInit@@YAXXZ ENDP				; GameAimSyncInit
_TEXT	ENDS
PUBLIC	?GetCamera@CGame@@QAEPAVCCamera@@XZ		; CGame::GetCamera
PUBLIC	?GameStoreLocalPlayerAim@@YAXXZ			; GameStoreLocalPlayerAim
EXTRN	_memcpy:PROC
EXTRN	?GetAim@CCamera@@QAEPAU_CAMERA_AIM@@XZ:PROC	; CCamera::GetAim
EXTRN	?pGame@@3PAVCGame@@A:DWORD			; pGame
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GameStoreLocalPlayerAim@@YAXXZ
_TEXT	SEGMENT
_pCamera$ = -8						; size = 4
?GameStoreLocalPlayerAim@@YAXXZ PROC			; GameStoreLocalPlayerAim, COMDAT

; 31   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 32   : 	CCamera * pCamera = pGame->GetCamera();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?GetCamera@CGame@@QAEPAVCCamera@@XZ	; CGame::GetCamera
	mov	DWORD PTR _pCamera$[ebp], eax

; 33   : 
; 34   : 	if(pCamera)

	cmp	DWORD PTR _pCamera$[ebp], 0
	je	SHORT $LN2@GameStoreL

; 35   : 	{
; 36   : 		memcpy(&caLocalPlayerAim, pCamera->GetAim(), sizeof(CAMERA_AIM));

	push	48					; 00000030H
	mov	ecx, DWORD PTR _pCamera$[ebp]
	call	?GetAim@CCamera@@QAEPAU_CAMERA_AIM@@XZ	; CCamera::GetAim
	push	eax
	push	OFFSET ?caLocalPlayerAim@@3U_CAMERA_AIM@@A ; caLocalPlayerAim
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN2@GameStoreL:

; 37   : 	}
; 38   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GameStoreLocalPlayerAim@@YAXXZ ENDP			; GameStoreLocalPlayerAim
_TEXT	ENDS
PUBLIC	?GameSetLocalPlayerAim@@YAXXZ			; GameSetLocalPlayerAim
EXTRN	?SetAim@CCamera@@QAEXPAU_CAMERA_AIM@@@Z:PROC	; CCamera::SetAim
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GameSetLocalPlayerAim@@YAXXZ
_TEXT	SEGMENT
_pCamera$ = -8						; size = 4
?GameSetLocalPlayerAim@@YAXXZ PROC			; GameSetLocalPlayerAim, COMDAT

; 43   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 44   : 	CCamera * pCamera = pGame->GetCamera();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?GetCamera@CGame@@QAEPAVCCamera@@XZ	; CGame::GetCamera
	mov	DWORD PTR _pCamera$[ebp], eax

; 45   : 
; 46   : 	if(pCamera)

	cmp	DWORD PTR _pCamera$[ebp], 0
	je	SHORT $LN2@GameSetLoc

; 47   : 	{
; 48   : 		pCamera->SetAim(&caLocalPlayerAim);

	push	OFFSET ?caLocalPlayerAim@@3U_CAMERA_AIM@@A ; caLocalPlayerAim
	mov	ecx, DWORD PTR _pCamera$[ebp]
	call	?SetAim@CCamera@@QAEXPAU_CAMERA_AIM@@@Z	; CCamera::SetAim
$LN2@GameSetLoc:

; 49   : 	}
; 50   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GameSetLocalPlayerAim@@YAXXZ ENDP			; GameSetLocalPlayerAim
_TEXT	ENDS
PUBLIC	?GameStoreRemotePlayerAim@@YAXHPAU_CAMERA_AIM@@@Z ; GameStoreRemotePlayerAim
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GameStoreRemotePlayerAim@@YAXHPAU_CAMERA_AIM@@@Z
_TEXT	SEGMENT
_iPlayer$ = 8						; size = 4
_caAim$ = 12						; size = 4
?GameStoreRemotePlayerAim@@YAXHPAU_CAMERA_AIM@@@Z PROC	; GameStoreRemotePlayerAim, COMDAT

; 55   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 56   : 	memcpy(&caRemotePlayerAim[iPlayer], caAim, sizeof(CAMERA_AIM));

	push	48					; 00000030H
	mov	eax, DWORD PTR _caAim$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iPlayer$[ebp]
	imul	ecx, 48					; 00000030H
	add	ecx, OFFSET ?caRemotePlayerAim@@3PAU_CAMERA_AIM@@A ; caRemotePlayerAim
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 57   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GameStoreRemotePlayerAim@@YAXHPAU_CAMERA_AIM@@@Z ENDP	; GameStoreRemotePlayerAim
_TEXT	ENDS
PUBLIC	?GameSetRemotePlayerAim@@YAXH@Z			; GameSetRemotePlayerAim
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GameSetRemotePlayerAim@@YAXH@Z
_TEXT	SEGMENT
_pCamera$ = -8						; size = 4
_iPlayer$ = 8						; size = 4
?GameSetRemotePlayerAim@@YAXH@Z PROC			; GameSetRemotePlayerAim, COMDAT

; 62   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 63   : 	CCamera * pCamera = pGame->GetCamera();

	mov	ecx, DWORD PTR ?pGame@@3PAVCGame@@A	; pGame
	call	?GetCamera@CGame@@QAEPAVCCamera@@XZ	; CGame::GetCamera
	mov	DWORD PTR _pCamera$[ebp], eax

; 64   : 
; 65   : 	if(pCamera)

	cmp	DWORD PTR _pCamera$[ebp], 0
	je	SHORT $LN2@GameSetRem

; 66   : 	{
; 67   : 		pCamera->SetAim(&caRemotePlayerAim[iPlayer]);

	mov	eax, DWORD PTR _iPlayer$[ebp]
	imul	eax, 48					; 00000030H
	add	eax, OFFSET ?caRemotePlayerAim@@3PAU_CAMERA_AIM@@A ; caRemotePlayerAim
	push	eax
	mov	ecx, DWORD PTR _pCamera$[ebp]
	call	?SetAim@CCamera@@QAEXPAU_CAMERA_AIM@@@Z	; CCamera::SetAim
$LN2@GameSetRem:

; 68   : 	}
; 69   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GameSetRemotePlayerAim@@YAXH@Z ENDP			; GameSetRemotePlayerAim
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\client\game\cgame.h
_TEXT	ENDS
;	COMDAT ?GetCamera@CGame@@QAEPAVCCamera@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetCamera@CGame@@QAEPAVCCamera@@XZ PROC		; CGame::GetCamera, COMDAT
; _this$ = ecx

; 106  : 	CCamera     *GetCamera() {	return m_pInternalCamera; };

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetCamera@CGame@@QAEPAVCCamera@@XZ ENDP		; CGame::GetCamera
_TEXT	ENDS
PUBLIC	??0_CAMERA_AIM@@QAE@XZ				; _CAMERA_AIM::_CAMERA_AIM
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\client\game\aimsync.cpp
;	COMDAT ??__EcaLocalPlayerAim@@YAXXZ
text$yc	SEGMENT
??__EcaLocalPlayerAim@@YAXXZ PROC			; `dynamic initializer for 'caLocalPlayerAim'', COMDAT

; 17   : CAMERA_AIM caLocalPlayerAim;

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?caLocalPlayerAim@@3U_CAMERA_AIM@@A ; caLocalPlayerAim
	call	??0_CAMERA_AIM@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EcaLocalPlayerAim@@YAXXZ ENDP			; `dynamic initializer for 'caLocalPlayerAim''
text$yc	ENDS
PUBLIC	??0Vector3@@QAE@XZ				; Vector3::Vector3
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_CAMERA_AIM@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_CAMERA_AIM@@QAE@XZ PROC				; _CAMERA_AIM::_CAMERA_AIM, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 36					; 00000024H
	call	??0Vector3@@QAE@XZ			; Vector3::Vector3
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_CAMERA_AIM@@QAE@XZ ENDP				; _CAMERA_AIM::_CAMERA_AIM
_TEXT	ENDS
PUBLIC	__real@00000000
EXTRN	__fltused:DWORD
;	COMDAT __real@00000000
; File d:\vice-players-master\client\game\common.h
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0Vector3@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Vector3@@QAE@XZ PROC					; Vector3::Vector3, COMDAT
; _this$ = ecx

; 34   : 	Vector3()

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 35   : 	{
; 36   : 		X = Y = Z = 0;

	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax+8]
	mov	ecx, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [edx]

; 37   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0Vector3@@QAE@XZ ENDP					; Vector3::Vector3
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\client\game\aimsync.cpp
_TEXT	ENDS
;	COMDAT ??__EcaRemotePlayerAim@@YAXXZ
text$yc	SEGMENT
??__EcaRemotePlayerAim@@YAXXZ PROC			; `dynamic initializer for 'caRemotePlayerAim'', COMDAT

; 18   : CAMERA_AIM caRemotePlayerAim[MAX_PLAYERS];

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	OFFSET ??0_CAMERA_AIM@@QAE@XZ
	push	50					; 00000032H
	push	48					; 00000030H
	push	OFFSET ?caRemotePlayerAim@@3PAU_CAMERA_AIM@@A ; caRemotePlayerAim
	call	??_H@YGXPAXIHP6EPAX0@Z@Z
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EcaRemotePlayerAim@@YAXXZ ENDP			; `dynamic initializer for 'caRemotePlayerAim''
text$yc	ENDS
PUBLIC	?caRemotePlayerAim@@3PAU_CAMERA_AIM@@A		; caRemotePlayerAim
PUBLIC	?caLocalPlayerAim@@3U_CAMERA_AIM@@A		; caLocalPlayerAim
_BSS	SEGMENT
?caRemotePlayerAim@@3PAU_CAMERA_AIM@@A DB 0960H DUP (?)	; caRemotePlayerAim
?caLocalPlayerAim@@3U_CAMERA_AIM@@A DB 030H DUP (?)	; caLocalPlayerAim
_BSS	ENDS
CRT$XCU	SEGMENT
_caLocalPlayerAim$initializer$ DD FLAT:??__EcaLocalPlayerAim@@YAXXZ
_caRemotePlayerAim$initializer$ DD FLAT:??__EcaRemotePlayerAim@@YAXXZ
CRT$XCU	ENDS
END
