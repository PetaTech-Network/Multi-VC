; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	d:\vice-players-master\Client\d3dhook\IDirect3DDevice8Hook.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	??_7IDirect3DDevice8Hook@@6B@			; IDirect3DDevice8Hook::`vftable'
PUBLIC	??0IDirect3DDevice8@@QAE@XZ			; IDirect3DDevice8::IDirect3DDevice8
PUBLIC	??0IDirect3DDevice8Hook@@QAE@PAUIDirect3D8@@PAUIDirect3DDevice8@@@Z ; IDirect3DDevice8Hook::IDirect3DDevice8Hook
PUBLIC	??_R4IDirect3DDevice8Hook@@6B@			; IDirect3DDevice8Hook::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVIDirect3DDevice8Hook@@@8		; IDirect3DDevice8Hook `RTTI Type Descriptor'
PUBLIC	??_R3IDirect3DDevice8Hook@@8			; IDirect3DDevice8Hook::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IDirect3DDevice8Hook@@8			; IDirect3DDevice8Hook::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IDirect3DDevice8Hook@@8		; IDirect3DDevice8Hook::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IDirect3DDevice8@@8		; IDirect3DDevice8::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIDirect3DDevice8@@@8			; IDirect3DDevice8 `RTTI Type Descriptor'
PUBLIC	??_R3IDirect3DDevice8@@8			; IDirect3DDevice8::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IDirect3DDevice8@@8			; IDirect3DDevice8::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	?QueryInterface@IDirect3DDevice8Hook@@UAGJABU_GUID@@PAPAX@Z ; IDirect3DDevice8Hook::QueryInterface
PUBLIC	?AddRef@IDirect3DDevice8Hook@@UAGKXZ		; IDirect3DDevice8Hook::AddRef
PUBLIC	?Release@IDirect3DDevice8Hook@@UAGKXZ		; IDirect3DDevice8Hook::Release
PUBLIC	?TestCooperativeLevel@IDirect3DDevice8Hook@@UAGJXZ ; IDirect3DDevice8Hook::TestCooperativeLevel
PUBLIC	?GetAvailableTextureMem@IDirect3DDevice8Hook@@UAGIXZ ; IDirect3DDevice8Hook::GetAvailableTextureMem
PUBLIC	?ResourceManagerDiscardBytes@IDirect3DDevice8Hook@@UAGJK@Z ; IDirect3DDevice8Hook::ResourceManagerDiscardBytes
PUBLIC	?GetDirect3D@IDirect3DDevice8Hook@@UAGJPAPAUIDirect3D8@@@Z ; IDirect3DDevice8Hook::GetDirect3D
PUBLIC	?GetDeviceCaps@IDirect3DDevice8Hook@@UAGJPAU_D3DCAPS8@@@Z ; IDirect3DDevice8Hook::GetDeviceCaps
PUBLIC	?GetDisplayMode@IDirect3DDevice8Hook@@UAGJPAU_D3DDISPLAYMODE@@@Z ; IDirect3DDevice8Hook::GetDisplayMode
PUBLIC	?GetCreationParameters@IDirect3DDevice8Hook@@UAGJPAU_D3DDEVICE_CREATION_PARAMETERS@@@Z ; IDirect3DDevice8Hook::GetCreationParameters
PUBLIC	?SetCursorProperties@IDirect3DDevice8Hook@@UAGJIIPAUIDirect3DSurface8@@@Z ; IDirect3DDevice8Hook::SetCursorProperties
PUBLIC	?SetCursorPosition@IDirect3DDevice8Hook@@UAGXIIK@Z ; IDirect3DDevice8Hook::SetCursorPosition
PUBLIC	?ShowCursor@IDirect3DDevice8Hook@@UAGHH@Z	; IDirect3DDevice8Hook::ShowCursor
PUBLIC	?CreateAdditionalSwapChain@IDirect3DDevice8Hook@@UAGJPAU_D3DPRESENT_PARAMETERS_@@PAPAUIDirect3DSwapChain8@@@Z ; IDirect3DDevice8Hook::CreateAdditionalSwapChain
PUBLIC	?Reset@IDirect3DDevice8Hook@@UAGJPAU_D3DPRESENT_PARAMETERS_@@@Z ; IDirect3DDevice8Hook::Reset
PUBLIC	?Present@IDirect3DDevice8Hook@@UAGJPBUtagRECT@@0PAUHWND__@@PBU_RGNDATA@@@Z ; IDirect3DDevice8Hook::Present
PUBLIC	?GetBackBuffer@IDirect3DDevice8Hook@@UAGJIW4_D3DBACKBUFFER_TYPE@@PAPAUIDirect3DSurface8@@@Z ; IDirect3DDevice8Hook::GetBackBuffer
PUBLIC	?GetRasterStatus@IDirect3DDevice8Hook@@UAGJPAU_D3DRASTER_STATUS@@@Z ; IDirect3DDevice8Hook::GetRasterStatus
PUBLIC	?SetGammaRamp@IDirect3DDevice8Hook@@UAGXKPBU_D3DGAMMARAMP@@@Z ; IDirect3DDevice8Hook::SetGammaRamp
PUBLIC	?GetGammaRamp@IDirect3DDevice8Hook@@UAGXPAU_D3DGAMMARAMP@@@Z ; IDirect3DDevice8Hook::GetGammaRamp
PUBLIC	?CreateTexture@IDirect3DDevice8Hook@@UAGJIIIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DTexture8@@@Z ; IDirect3DDevice8Hook::CreateTexture
PUBLIC	?CreateVolumeTexture@IDirect3DDevice8Hook@@UAGJIIIIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DVolumeTexture8@@@Z ; IDirect3DDevice8Hook::CreateVolumeTexture
PUBLIC	?CreateCubeTexture@IDirect3DDevice8Hook@@UAGJIIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DCubeTexture8@@@Z ; IDirect3DDevice8Hook::CreateCubeTexture
PUBLIC	?CreateVertexBuffer@IDirect3DDevice8Hook@@UAGJIKKW4_D3DPOOL@@PAPAUIDirect3DVertexBuffer8@@@Z ; IDirect3DDevice8Hook::CreateVertexBuffer
PUBLIC	?CreateIndexBuffer@IDirect3DDevice8Hook@@UAGJIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DIndexBuffer8@@@Z ; IDirect3DDevice8Hook::CreateIndexBuffer
PUBLIC	?CreateRenderTarget@IDirect3DDevice8Hook@@UAGJIIW4_D3DFORMAT@@W4_D3DMULTISAMPLE_TYPE@@HPAPAUIDirect3DSurface8@@@Z ; IDirect3DDevice8Hook::CreateRenderTarget
PUBLIC	?CreateDepthStencilSurface@IDirect3DDevice8Hook@@UAGJIIW4_D3DFORMAT@@W4_D3DMULTISAMPLE_TYPE@@PAPAUIDirect3DSurface8@@@Z ; IDirect3DDevice8Hook::CreateDepthStencilSurface
PUBLIC	?CreateImageSurface@IDirect3DDevice8Hook@@UAGJIIW4_D3DFORMAT@@PAPAUIDirect3DSurface8@@@Z ; IDirect3DDevice8Hook::CreateImageSurface
PUBLIC	?CopyRects@IDirect3DDevice8Hook@@UAGJPAUIDirect3DSurface8@@PBUtagRECT@@I0PBUtagPOINT@@@Z ; IDirect3DDevice8Hook::CopyRects
PUBLIC	?UpdateTexture@IDirect3DDevice8Hook@@UAGJPAUIDirect3DBaseTexture8@@0@Z ; IDirect3DDevice8Hook::UpdateTexture
PUBLIC	?GetFrontBuffer@IDirect3DDevice8Hook@@UAGJPAUIDirect3DSurface8@@@Z ; IDirect3DDevice8Hook::GetFrontBuffer
PUBLIC	?SetRenderTarget@IDirect3DDevice8Hook@@UAGJPAUIDirect3DSurface8@@0@Z ; IDirect3DDevice8Hook::SetRenderTarget
PUBLIC	?GetRenderTarget@IDirect3DDevice8Hook@@UAGJPAPAUIDirect3DSurface8@@@Z ; IDirect3DDevice8Hook::GetRenderTarget
PUBLIC	?GetDepthStencilSurface@IDirect3DDevice8Hook@@UAGJPAPAUIDirect3DSurface8@@@Z ; IDirect3DDevice8Hook::GetDepthStencilSurface
PUBLIC	?BeginScene@IDirect3DDevice8Hook@@UAGJXZ	; IDirect3DDevice8Hook::BeginScene
PUBLIC	?EndScene@IDirect3DDevice8Hook@@UAGJXZ		; IDirect3DDevice8Hook::EndScene
PUBLIC	?Clear@IDirect3DDevice8Hook@@UAGJKPBU_D3DRECT@@KKMK@Z ; IDirect3DDevice8Hook::Clear
PUBLIC	?SetTransform@IDirect3DDevice8Hook@@UAGJW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; IDirect3DDevice8Hook::SetTransform
PUBLIC	?GetTransform@IDirect3DDevice8Hook@@UAGJW4_D3DTRANSFORMSTATETYPE@@PAU_D3DMATRIX@@@Z ; IDirect3DDevice8Hook::GetTransform
PUBLIC	?MultiplyTransform@IDirect3DDevice8Hook@@UAGJW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ; IDirect3DDevice8Hook::MultiplyTransform
PUBLIC	?SetViewport@IDirect3DDevice8Hook@@UAGJPBU_D3DVIEWPORT8@@@Z ; IDirect3DDevice8Hook::SetViewport
PUBLIC	?GetViewport@IDirect3DDevice8Hook@@UAGJPAU_D3DVIEWPORT8@@@Z ; IDirect3DDevice8Hook::GetViewport
PUBLIC	?SetMaterial@IDirect3DDevice8Hook@@UAGJPBU_D3DMATERIAL8@@@Z ; IDirect3DDevice8Hook::SetMaterial
PUBLIC	?GetMaterial@IDirect3DDevice8Hook@@UAGJPAU_D3DMATERIAL8@@@Z ; IDirect3DDevice8Hook::GetMaterial
PUBLIC	?SetLight@IDirect3DDevice8Hook@@UAGJKPBU_D3DLIGHT8@@@Z ; IDirect3DDevice8Hook::SetLight
PUBLIC	?GetLight@IDirect3DDevice8Hook@@UAGJKPAU_D3DLIGHT8@@@Z ; IDirect3DDevice8Hook::GetLight
PUBLIC	?LightEnable@IDirect3DDevice8Hook@@UAGJKH@Z	; IDirect3DDevice8Hook::LightEnable
PUBLIC	?GetLightEnable@IDirect3DDevice8Hook@@UAGJKPAH@Z ; IDirect3DDevice8Hook::GetLightEnable
PUBLIC	?SetClipPlane@IDirect3DDevice8Hook@@UAGJKPBM@Z	; IDirect3DDevice8Hook::SetClipPlane
PUBLIC	?GetClipPlane@IDirect3DDevice8Hook@@UAGJKPAM@Z	; IDirect3DDevice8Hook::GetClipPlane
PUBLIC	?SetRenderState@IDirect3DDevice8Hook@@UAGJW4_D3DRENDERSTATETYPE@@K@Z ; IDirect3DDevice8Hook::SetRenderState
PUBLIC	?GetRenderState@IDirect3DDevice8Hook@@UAGJW4_D3DRENDERSTATETYPE@@PAK@Z ; IDirect3DDevice8Hook::GetRenderState
PUBLIC	?BeginStateBlock@IDirect3DDevice8Hook@@UAGJXZ	; IDirect3DDevice8Hook::BeginStateBlock
PUBLIC	?EndStateBlock@IDirect3DDevice8Hook@@UAGJPAK@Z	; IDirect3DDevice8Hook::EndStateBlock
PUBLIC	?ApplyStateBlock@IDirect3DDevice8Hook@@UAGJK@Z	; IDirect3DDevice8Hook::ApplyStateBlock
PUBLIC	?CaptureStateBlock@IDirect3DDevice8Hook@@UAGJK@Z ; IDirect3DDevice8Hook::CaptureStateBlock
PUBLIC	?DeleteStateBlock@IDirect3DDevice8Hook@@UAGJK@Z	; IDirect3DDevice8Hook::DeleteStateBlock
PUBLIC	?CreateStateBlock@IDirect3DDevice8Hook@@UAGJW4_D3DSTATEBLOCKTYPE@@PAK@Z ; IDirect3DDevice8Hook::CreateStateBlock
PUBLIC	?SetClipStatus@IDirect3DDevice8Hook@@UAGJPBU_D3DCLIPSTATUS8@@@Z ; IDirect3DDevice8Hook::SetClipStatus
PUBLIC	?GetClipStatus@IDirect3DDevice8Hook@@UAGJPAU_D3DCLIPSTATUS8@@@Z ; IDirect3DDevice8Hook::GetClipStatus
PUBLIC	?GetTexture@IDirect3DDevice8Hook@@UAGJKPAPAUIDirect3DBaseTexture8@@@Z ; IDirect3DDevice8Hook::GetTexture
PUBLIC	?SetTexture@IDirect3DDevice8Hook@@UAGJKPAUIDirect3DBaseTexture8@@@Z ; IDirect3DDevice8Hook::SetTexture
PUBLIC	?GetTextureStageState@IDirect3DDevice8Hook@@UAGJKW4_D3DTEXTURESTAGESTATETYPE@@PAK@Z ; IDirect3DDevice8Hook::GetTextureStageState
PUBLIC	?SetTextureStageState@IDirect3DDevice8Hook@@UAGJKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ; IDirect3DDevice8Hook::SetTextureStageState
PUBLIC	?ValidateDevice@IDirect3DDevice8Hook@@UAGJPAK@Z	; IDirect3DDevice8Hook::ValidateDevice
PUBLIC	?GetInfo@IDirect3DDevice8Hook@@UAGJKPAXK@Z	; IDirect3DDevice8Hook::GetInfo
PUBLIC	?SetPaletteEntries@IDirect3DDevice8Hook@@UAGJIPBUtagPALETTEENTRY@@@Z ; IDirect3DDevice8Hook::SetPaletteEntries
PUBLIC	?GetPaletteEntries@IDirect3DDevice8Hook@@UAGJIPAUtagPALETTEENTRY@@@Z ; IDirect3DDevice8Hook::GetPaletteEntries
PUBLIC	?SetCurrentTexturePalette@IDirect3DDevice8Hook@@UAGJI@Z ; IDirect3DDevice8Hook::SetCurrentTexturePalette
PUBLIC	?GetCurrentTexturePalette@IDirect3DDevice8Hook@@UAGJPAI@Z ; IDirect3DDevice8Hook::GetCurrentTexturePalette
PUBLIC	?DrawPrimitive@IDirect3DDevice8Hook@@UAGJW4_D3DPRIMITIVETYPE@@II@Z ; IDirect3DDevice8Hook::DrawPrimitive
PUBLIC	?DrawIndexedPrimitive@IDirect3DDevice8Hook@@UAGJW4_D3DPRIMITIVETYPE@@IIII@Z ; IDirect3DDevice8Hook::DrawIndexedPrimitive
PUBLIC	?DrawPrimitiveUP@IDirect3DDevice8Hook@@UAGJW4_D3DPRIMITIVETYPE@@IPBXI@Z ; IDirect3DDevice8Hook::DrawPrimitiveUP
PUBLIC	?DrawIndexedPrimitiveUP@IDirect3DDevice8Hook@@UAGJW4_D3DPRIMITIVETYPE@@IIIPBXW4_D3DFORMAT@@1I@Z ; IDirect3DDevice8Hook::DrawIndexedPrimitiveUP
PUBLIC	?ProcessVertices@IDirect3DDevice8Hook@@UAGJIIIPAUIDirect3DVertexBuffer8@@K@Z ; IDirect3DDevice8Hook::ProcessVertices
PUBLIC	?CreateVertexShader@IDirect3DDevice8Hook@@UAGJPBK0PAKK@Z ; IDirect3DDevice8Hook::CreateVertexShader
PUBLIC	?SetVertexShader@IDirect3DDevice8Hook@@UAGJK@Z	; IDirect3DDevice8Hook::SetVertexShader
PUBLIC	?GetVertexShader@IDirect3DDevice8Hook@@UAGJPAK@Z ; IDirect3DDevice8Hook::GetVertexShader
PUBLIC	?DeleteVertexShader@IDirect3DDevice8Hook@@UAGJK@Z ; IDirect3DDevice8Hook::DeleteVertexShader
PUBLIC	?SetVertexShaderConstant@IDirect3DDevice8Hook@@UAGJKPBXK@Z ; IDirect3DDevice8Hook::SetVertexShaderConstant
PUBLIC	?GetVertexShaderConstant@IDirect3DDevice8Hook@@UAGJKPAXK@Z ; IDirect3DDevice8Hook::GetVertexShaderConstant
PUBLIC	?GetVertexShaderDeclaration@IDirect3DDevice8Hook@@UAGJKPAXPAK@Z ; IDirect3DDevice8Hook::GetVertexShaderDeclaration
PUBLIC	?GetVertexShaderFunction@IDirect3DDevice8Hook@@UAGJKPAXPAK@Z ; IDirect3DDevice8Hook::GetVertexShaderFunction
PUBLIC	?SetStreamSource@IDirect3DDevice8Hook@@UAGJIPAUIDirect3DVertexBuffer8@@I@Z ; IDirect3DDevice8Hook::SetStreamSource
PUBLIC	?GetStreamSource@IDirect3DDevice8Hook@@UAGJIPAPAUIDirect3DVertexBuffer8@@PAI@Z ; IDirect3DDevice8Hook::GetStreamSource
PUBLIC	?SetIndices@IDirect3DDevice8Hook@@UAGJPAUIDirect3DIndexBuffer8@@I@Z ; IDirect3DDevice8Hook::SetIndices
PUBLIC	?GetIndices@IDirect3DDevice8Hook@@UAGJPAPAUIDirect3DIndexBuffer8@@PAI@Z ; IDirect3DDevice8Hook::GetIndices
PUBLIC	?CreatePixelShader@IDirect3DDevice8Hook@@UAGJPBKPAK@Z ; IDirect3DDevice8Hook::CreatePixelShader
PUBLIC	?SetPixelShader@IDirect3DDevice8Hook@@UAGJK@Z	; IDirect3DDevice8Hook::SetPixelShader
PUBLIC	?GetPixelShader@IDirect3DDevice8Hook@@UAGJPAK@Z	; IDirect3DDevice8Hook::GetPixelShader
PUBLIC	?DeletePixelShader@IDirect3DDevice8Hook@@UAGJK@Z ; IDirect3DDevice8Hook::DeletePixelShader
PUBLIC	?SetPixelShaderConstant@IDirect3DDevice8Hook@@UAGJKPBXK@Z ; IDirect3DDevice8Hook::SetPixelShaderConstant
PUBLIC	?GetPixelShaderConstant@IDirect3DDevice8Hook@@UAGJKPAXK@Z ; IDirect3DDevice8Hook::GetPixelShaderConstant
PUBLIC	?GetPixelShaderFunction@IDirect3DDevice8Hook@@UAGJKPAXPAK@Z ; IDirect3DDevice8Hook::GetPixelShaderFunction
PUBLIC	?DrawRectPatch@IDirect3DDevice8Hook@@UAGJIPBMPBU_D3DRECTPATCH_INFO@@@Z ; IDirect3DDevice8Hook::DrawRectPatch
PUBLIC	?DrawTriPatch@IDirect3DDevice8Hook@@UAGJIPBMPBU_D3DTRIPATCH_INFO@@@Z ; IDirect3DDevice8Hook::DrawTriPatch
PUBLIC	?DeletePatch@IDirect3DDevice8Hook@@UAGJI@Z	; IDirect3DDevice8Hook::DeletePatch
EXTRN	?InitD3DStuff@@YAXXZ:PROC			; InitD3DStuff
EXTRN	?pD3DDevice@@3PAUIDirect3DDevice8@@A:DWORD	; pD3DDevice
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R2IUnknown@@8
; File d:\vice-players-master\client\d3dhook\idirect3ddevice8hook.cpp
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IDirect3DDevice8@@8
rdata$r	SEGMENT
??_R2IDirect3DDevice8@@8 DD FLAT:??_R1A@?0A@EA@IDirect3DDevice8@@8 ; IDirect3DDevice8::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IDirect3DDevice8@@8
rdata$r	SEGMENT
??_R3IDirect3DDevice8@@8 DD 00H				; IDirect3DDevice8::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IDirect3DDevice8@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIDirect3DDevice8@@@8
_DATA	SEGMENT
??_R0?AUIDirect3DDevice8@@@8 DD FLAT:??_7type_info@@6B@	; IDirect3DDevice8 `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIDirect3DDevice8@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IDirect3DDevice8@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IDirect3DDevice8@@8 DD FLAT:??_R0?AUIDirect3DDevice8@@@8 ; IDirect3DDevice8::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IDirect3DDevice8@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@IDirect3DDevice8Hook@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IDirect3DDevice8Hook@@8 DD FLAT:??_R0?AVIDirect3DDevice8Hook@@@8 ; IDirect3DDevice8Hook::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IDirect3DDevice8Hook@@8
rdata$r	ENDS
;	COMDAT ??_R2IDirect3DDevice8Hook@@8
rdata$r	SEGMENT
??_R2IDirect3DDevice8Hook@@8 DD FLAT:??_R1A@?0A@EA@IDirect3DDevice8Hook@@8 ; IDirect3DDevice8Hook::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IDirect3DDevice8@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IDirect3DDevice8Hook@@8
rdata$r	SEGMENT
??_R3IDirect3DDevice8Hook@@8 DD 00H			; IDirect3DDevice8Hook::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2IDirect3DDevice8Hook@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVIDirect3DDevice8Hook@@@8
_DATA	SEGMENT
??_R0?AVIDirect3DDevice8Hook@@@8 DD FLAT:??_7type_info@@6B@ ; IDirect3DDevice8Hook `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVIDirect3DDevice8Hook@@', 00H
_DATA	ENDS
;	COMDAT ??_R4IDirect3DDevice8Hook@@6B@
rdata$r	SEGMENT
??_R4IDirect3DDevice8Hook@@6B@ DD 00H			; IDirect3DDevice8Hook::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVIDirect3DDevice8Hook@@@8
	DD	FLAT:??_R3IDirect3DDevice8Hook@@8
rdata$r	ENDS
;	COMDAT ??_7IDirect3DDevice8Hook@@6B@
CONST	SEGMENT
??_7IDirect3DDevice8Hook@@6B@ DD FLAT:??_R4IDirect3DDevice8Hook@@6B@ ; IDirect3DDevice8Hook::`vftable'
	DD	FLAT:?QueryInterface@IDirect3DDevice8Hook@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@IDirect3DDevice8Hook@@UAGKXZ
	DD	FLAT:?Release@IDirect3DDevice8Hook@@UAGKXZ
	DD	FLAT:?TestCooperativeLevel@IDirect3DDevice8Hook@@UAGJXZ
	DD	FLAT:?GetAvailableTextureMem@IDirect3DDevice8Hook@@UAGIXZ
	DD	FLAT:?ResourceManagerDiscardBytes@IDirect3DDevice8Hook@@UAGJK@Z
	DD	FLAT:?GetDirect3D@IDirect3DDevice8Hook@@UAGJPAPAUIDirect3D8@@@Z
	DD	FLAT:?GetDeviceCaps@IDirect3DDevice8Hook@@UAGJPAU_D3DCAPS8@@@Z
	DD	FLAT:?GetDisplayMode@IDirect3DDevice8Hook@@UAGJPAU_D3DDISPLAYMODE@@@Z
	DD	FLAT:?GetCreationParameters@IDirect3DDevice8Hook@@UAGJPAU_D3DDEVICE_CREATION_PARAMETERS@@@Z
	DD	FLAT:?SetCursorProperties@IDirect3DDevice8Hook@@UAGJIIPAUIDirect3DSurface8@@@Z
	DD	FLAT:?SetCursorPosition@IDirect3DDevice8Hook@@UAGXIIK@Z
	DD	FLAT:?ShowCursor@IDirect3DDevice8Hook@@UAGHH@Z
	DD	FLAT:?CreateAdditionalSwapChain@IDirect3DDevice8Hook@@UAGJPAU_D3DPRESENT_PARAMETERS_@@PAPAUIDirect3DSwapChain8@@@Z
	DD	FLAT:?Reset@IDirect3DDevice8Hook@@UAGJPAU_D3DPRESENT_PARAMETERS_@@@Z
	DD	FLAT:?Present@IDirect3DDevice8Hook@@UAGJPBUtagRECT@@0PAUHWND__@@PBU_RGNDATA@@@Z
	DD	FLAT:?GetBackBuffer@IDirect3DDevice8Hook@@UAGJIW4_D3DBACKBUFFER_TYPE@@PAPAUIDirect3DSurface8@@@Z
	DD	FLAT:?GetRasterStatus@IDirect3DDevice8Hook@@UAGJPAU_D3DRASTER_STATUS@@@Z
	DD	FLAT:?SetGammaRamp@IDirect3DDevice8Hook@@UAGXKPBU_D3DGAMMARAMP@@@Z
	DD	FLAT:?GetGammaRamp@IDirect3DDevice8Hook@@UAGXPAU_D3DGAMMARAMP@@@Z
	DD	FLAT:?CreateTexture@IDirect3DDevice8Hook@@UAGJIIIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DTexture8@@@Z
	DD	FLAT:?CreateVolumeTexture@IDirect3DDevice8Hook@@UAGJIIIIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DVolumeTexture8@@@Z
	DD	FLAT:?CreateCubeTexture@IDirect3DDevice8Hook@@UAGJIIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DCubeTexture8@@@Z
	DD	FLAT:?CreateVertexBuffer@IDirect3DDevice8Hook@@UAGJIKKW4_D3DPOOL@@PAPAUIDirect3DVertexBuffer8@@@Z
	DD	FLAT:?CreateIndexBuffer@IDirect3DDevice8Hook@@UAGJIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DIndexBuffer8@@@Z
	DD	FLAT:?CreateRenderTarget@IDirect3DDevice8Hook@@UAGJIIW4_D3DFORMAT@@W4_D3DMULTISAMPLE_TYPE@@HPAPAUIDirect3DSurface8@@@Z
	DD	FLAT:?CreateDepthStencilSurface@IDirect3DDevice8Hook@@UAGJIIW4_D3DFORMAT@@W4_D3DMULTISAMPLE_TYPE@@PAPAUIDirect3DSurface8@@@Z
	DD	FLAT:?CreateImageSurface@IDirect3DDevice8Hook@@UAGJIIW4_D3DFORMAT@@PAPAUIDirect3DSurface8@@@Z
	DD	FLAT:?CopyRects@IDirect3DDevice8Hook@@UAGJPAUIDirect3DSurface8@@PBUtagRECT@@I0PBUtagPOINT@@@Z
	DD	FLAT:?UpdateTexture@IDirect3DDevice8Hook@@UAGJPAUIDirect3DBaseTexture8@@0@Z
	DD	FLAT:?GetFrontBuffer@IDirect3DDevice8Hook@@UAGJPAUIDirect3DSurface8@@@Z
	DD	FLAT:?SetRenderTarget@IDirect3DDevice8Hook@@UAGJPAUIDirect3DSurface8@@0@Z
	DD	FLAT:?GetRenderTarget@IDirect3DDevice8Hook@@UAGJPAPAUIDirect3DSurface8@@@Z
	DD	FLAT:?GetDepthStencilSurface@IDirect3DDevice8Hook@@UAGJPAPAUIDirect3DSurface8@@@Z
	DD	FLAT:?BeginScene@IDirect3DDevice8Hook@@UAGJXZ
	DD	FLAT:?EndScene@IDirect3DDevice8Hook@@UAGJXZ
	DD	FLAT:?Clear@IDirect3DDevice8Hook@@UAGJKPBU_D3DRECT@@KKMK@Z
	DD	FLAT:?SetTransform@IDirect3DDevice8Hook@@UAGJW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z
	DD	FLAT:?GetTransform@IDirect3DDevice8Hook@@UAGJW4_D3DTRANSFORMSTATETYPE@@PAU_D3DMATRIX@@@Z
	DD	FLAT:?MultiplyTransform@IDirect3DDevice8Hook@@UAGJW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z
	DD	FLAT:?SetViewport@IDirect3DDevice8Hook@@UAGJPBU_D3DVIEWPORT8@@@Z
	DD	FLAT:?GetViewport@IDirect3DDevice8Hook@@UAGJPAU_D3DVIEWPORT8@@@Z
	DD	FLAT:?SetMaterial@IDirect3DDevice8Hook@@UAGJPBU_D3DMATERIAL8@@@Z
	DD	FLAT:?GetMaterial@IDirect3DDevice8Hook@@UAGJPAU_D3DMATERIAL8@@@Z
	DD	FLAT:?SetLight@IDirect3DDevice8Hook@@UAGJKPBU_D3DLIGHT8@@@Z
	DD	FLAT:?GetLight@IDirect3DDevice8Hook@@UAGJKPAU_D3DLIGHT8@@@Z
	DD	FLAT:?LightEnable@IDirect3DDevice8Hook@@UAGJKH@Z
	DD	FLAT:?GetLightEnable@IDirect3DDevice8Hook@@UAGJKPAH@Z
	DD	FLAT:?SetClipPlane@IDirect3DDevice8Hook@@UAGJKPBM@Z
	DD	FLAT:?GetClipPlane@IDirect3DDevice8Hook@@UAGJKPAM@Z
	DD	FLAT:?SetRenderState@IDirect3DDevice8Hook@@UAGJW4_D3DRENDERSTATETYPE@@K@Z
	DD	FLAT:?GetRenderState@IDirect3DDevice8Hook@@UAGJW4_D3DRENDERSTATETYPE@@PAK@Z
	DD	FLAT:?BeginStateBlock@IDirect3DDevice8Hook@@UAGJXZ
	DD	FLAT:?EndStateBlock@IDirect3DDevice8Hook@@UAGJPAK@Z
	DD	FLAT:?ApplyStateBlock@IDirect3DDevice8Hook@@UAGJK@Z
	DD	FLAT:?CaptureStateBlock@IDirect3DDevice8Hook@@UAGJK@Z
	DD	FLAT:?DeleteStateBlock@IDirect3DDevice8Hook@@UAGJK@Z
	DD	FLAT:?CreateStateBlock@IDirect3DDevice8Hook@@UAGJW4_D3DSTATEBLOCKTYPE@@PAK@Z
	DD	FLAT:?SetClipStatus@IDirect3DDevice8Hook@@UAGJPBU_D3DCLIPSTATUS8@@@Z
	DD	FLAT:?GetClipStatus@IDirect3DDevice8Hook@@UAGJPAU_D3DCLIPSTATUS8@@@Z
	DD	FLAT:?GetTexture@IDirect3DDevice8Hook@@UAGJKPAPAUIDirect3DBaseTexture8@@@Z
	DD	FLAT:?SetTexture@IDirect3DDevice8Hook@@UAGJKPAUIDirect3DBaseTexture8@@@Z
	DD	FLAT:?GetTextureStageState@IDirect3DDevice8Hook@@UAGJKW4_D3DTEXTURESTAGESTATETYPE@@PAK@Z
	DD	FLAT:?SetTextureStageState@IDirect3DDevice8Hook@@UAGJKW4_D3DTEXTURESTAGESTATETYPE@@K@Z
	DD	FLAT:?ValidateDevice@IDirect3DDevice8Hook@@UAGJPAK@Z
	DD	FLAT:?GetInfo@IDirect3DDevice8Hook@@UAGJKPAXK@Z
	DD	FLAT:?SetPaletteEntries@IDirect3DDevice8Hook@@UAGJIPBUtagPALETTEENTRY@@@Z
	DD	FLAT:?GetPaletteEntries@IDirect3DDevice8Hook@@UAGJIPAUtagPALETTEENTRY@@@Z
	DD	FLAT:?SetCurrentTexturePalette@IDirect3DDevice8Hook@@UAGJI@Z
	DD	FLAT:?GetCurrentTexturePalette@IDirect3DDevice8Hook@@UAGJPAI@Z
	DD	FLAT:?DrawPrimitive@IDirect3DDevice8Hook@@UAGJW4_D3DPRIMITIVETYPE@@II@Z
	DD	FLAT:?DrawIndexedPrimitive@IDirect3DDevice8Hook@@UAGJW4_D3DPRIMITIVETYPE@@IIII@Z
	DD	FLAT:?DrawPrimitiveUP@IDirect3DDevice8Hook@@UAGJW4_D3DPRIMITIVETYPE@@IPBXI@Z
	DD	FLAT:?DrawIndexedPrimitiveUP@IDirect3DDevice8Hook@@UAGJW4_D3DPRIMITIVETYPE@@IIIPBXW4_D3DFORMAT@@1I@Z
	DD	FLAT:?ProcessVertices@IDirect3DDevice8Hook@@UAGJIIIPAUIDirect3DVertexBuffer8@@K@Z
	DD	FLAT:?CreateVertexShader@IDirect3DDevice8Hook@@UAGJPBK0PAKK@Z
	DD	FLAT:?SetVertexShader@IDirect3DDevice8Hook@@UAGJK@Z
	DD	FLAT:?GetVertexShader@IDirect3DDevice8Hook@@UAGJPAK@Z
	DD	FLAT:?DeleteVertexShader@IDirect3DDevice8Hook@@UAGJK@Z
	DD	FLAT:?SetVertexShaderConstant@IDirect3DDevice8Hook@@UAGJKPBXK@Z
	DD	FLAT:?GetVertexShaderConstant@IDirect3DDevice8Hook@@UAGJKPAXK@Z
	DD	FLAT:?GetVertexShaderDeclaration@IDirect3DDevice8Hook@@UAGJKPAXPAK@Z
	DD	FLAT:?GetVertexShaderFunction@IDirect3DDevice8Hook@@UAGJKPAXPAK@Z
	DD	FLAT:?SetStreamSource@IDirect3DDevice8Hook@@UAGJIPAUIDirect3DVertexBuffer8@@I@Z
	DD	FLAT:?GetStreamSource@IDirect3DDevice8Hook@@UAGJIPAPAUIDirect3DVertexBuffer8@@PAI@Z
	DD	FLAT:?SetIndices@IDirect3DDevice8Hook@@UAGJPAUIDirect3DIndexBuffer8@@I@Z
	DD	FLAT:?GetIndices@IDirect3DDevice8Hook@@UAGJPAPAUIDirect3DIndexBuffer8@@PAI@Z
	DD	FLAT:?CreatePixelShader@IDirect3DDevice8Hook@@UAGJPBKPAK@Z
	DD	FLAT:?SetPixelShader@IDirect3DDevice8Hook@@UAGJK@Z
	DD	FLAT:?GetPixelShader@IDirect3DDevice8Hook@@UAGJPAK@Z
	DD	FLAT:?DeletePixelShader@IDirect3DDevice8Hook@@UAGJK@Z
	DD	FLAT:?SetPixelShaderConstant@IDirect3DDevice8Hook@@UAGJKPBXK@Z
	DD	FLAT:?GetPixelShaderConstant@IDirect3DDevice8Hook@@UAGJKPAXK@Z
	DD	FLAT:?GetPixelShaderFunction@IDirect3DDevice8Hook@@UAGJKPAXPAK@Z
	DD	FLAT:?DrawRectPatch@IDirect3DDevice8Hook@@UAGJIPBMPBU_D3DRECTPATCH_INFO@@@Z
	DD	FLAT:?DrawTriPatch@IDirect3DDevice8Hook@@UAGJIPBMPBU_D3DTRIPATCH_INFO@@@Z
	DD	FLAT:?DeletePatch@IDirect3DDevice8Hook@@UAGJI@Z
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??0IDirect3DDevice8Hook@@QAE@PAUIDirect3D8@@PAUIDirect3DDevice8@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_pD3D$ = 8						; size = 4
_pDevice$ = 12						; size = 4
??0IDirect3DDevice8Hook@@QAE@PAUIDirect3D8@@PAUIDirect3DDevice8@@@Z PROC ; IDirect3DDevice8Hook::IDirect3DDevice8Hook, COMDAT
; _this$ = ecx

; 32   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IDirect3DDevice8@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IDirect3DDevice8Hook@@6B@

; 33   : 	m_pD3D = pD3D;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pD3D$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 34   : 	m_pDevice = pDevice;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pDevice$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 35   : 	pD3DDevice = pDevice;

	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	DWORD PTR ?pD3DDevice@@3PAUIDirect3DDevice8@@A, eax ; pD3DDevice

; 36   : 
; 37   : 	InitD3DStuff();

	call	?InitD3DStuff@@YAXXZ			; InitD3DStuff

; 38   : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0IDirect3DDevice8Hook@@QAE@PAUIDirect3D8@@PAUIDirect3DDevice8@@@Z ENDP ; IDirect3DDevice8Hook::IDirect3DDevice8Hook
_TEXT	ENDS
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0IDirect3DDevice8@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0IDirect3DDevice8@@QAE@XZ PROC			; IDirect3DDevice8::IDirect3DDevice8, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0IUnknown@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0IDirect3DDevice8@@QAE@XZ ENDP			; IDirect3DDevice8::IDirect3DDevice8
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0IUnknown@@QAE@XZ PROC				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
_TEXT	ENDS
PUBLIC	??1IDirect3DDevice8Hook@@QAE@XZ			; IDirect3DDevice8Hook::~IDirect3DDevice8Hook
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1IDirect3DDevice8Hook@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1IDirect3DDevice8Hook@@QAE@XZ PROC			; IDirect3DDevice8Hook::~IDirect3DDevice8Hook, COMDAT
; _this$ = ecx

; 41   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7IDirect3DDevice8Hook@@6B@

; 42   : 
; 43   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1IDirect3DDevice8Hook@@QAE@XZ ENDP			; IDirect3DDevice8Hook::~IDirect3DDevice8Hook
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?QueryInterface@IDirect3DDevice8Hook@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_iid$ = 12						; size = 4
_ppvObject$ = 16					; size = 4
?QueryInterface@IDirect3DDevice8Hook@@UAGJABU_GUID@@PAPAX@Z PROC ; IDirect3DDevice8Hook::QueryInterface, COMDAT

; 47   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 48   : 	return m_pDevice->QueryInterface(iid, ppvObject);

	mov	esi, esp
	mov	eax, DWORD PTR _ppvObject$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 49   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?QueryInterface@IDirect3DDevice8Hook@@UAGJABU_GUID@@PAPAX@Z ENDP ; IDirect3DDevice8Hook::QueryInterface
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?AddRef@IDirect3DDevice8Hook@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?AddRef@IDirect3DDevice8Hook@@UAGKXZ PROC		; IDirect3DDevice8Hook::AddRef, COMDAT

; 52   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 53   : 	return m_pDevice->AddRef();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 54   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AddRef@IDirect3DDevice8Hook@@UAGKXZ ENDP		; IDirect3DDevice8Hook::AddRef
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?Release@IDirect3DDevice8Hook@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Release@IDirect3DDevice8Hook@@UAGKXZ PROC		; IDirect3DDevice8Hook::Release, COMDAT

; 57   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 58   : 	return m_pDevice->Release();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 59   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Release@IDirect3DDevice8Hook@@UAGKXZ ENDP		; IDirect3DDevice8Hook::Release
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?TestCooperativeLevel@IDirect3DDevice8Hook@@UAGJXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?TestCooperativeLevel@IDirect3DDevice8Hook@@UAGJXZ PROC	; IDirect3DDevice8Hook::TestCooperativeLevel, COMDAT

; 62   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 63   : 	return m_pDevice->TestCooperativeLevel();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 64   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?TestCooperativeLevel@IDirect3DDevice8Hook@@UAGJXZ ENDP	; IDirect3DDevice8Hook::TestCooperativeLevel
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetAvailableTextureMem@IDirect3DDevice8Hook@@UAGIXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?GetAvailableTextureMem@IDirect3DDevice8Hook@@UAGIXZ PROC ; IDirect3DDevice8Hook::GetAvailableTextureMem, COMDAT

; 67   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 68   : 	return m_pDevice->GetAvailableTextureMem();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 69   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetAvailableTextureMem@IDirect3DDevice8Hook@@UAGIXZ ENDP ; IDirect3DDevice8Hook::GetAvailableTextureMem
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ResourceManagerDiscardBytes@IDirect3DDevice8Hook@@UAGJK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Bytes$ = 12						; size = 4
?ResourceManagerDiscardBytes@IDirect3DDevice8Hook@@UAGJK@Z PROC ; IDirect3DDevice8Hook::ResourceManagerDiscardBytes, COMDAT

; 72   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 73   : 	return m_pDevice->ResourceManagerDiscardBytes(Bytes);

	mov	esi, esp
	mov	eax, DWORD PTR _Bytes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 74   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?ResourceManagerDiscardBytes@IDirect3DDevice8Hook@@UAGJK@Z ENDP ; IDirect3DDevice8Hook::ResourceManagerDiscardBytes
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetDirect3D@IDirect3DDevice8Hook@@UAGJPAPAUIDirect3D8@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_ppD3D$ = 12						; size = 4
?GetDirect3D@IDirect3DDevice8Hook@@UAGJPAPAUIDirect3D8@@@Z PROC ; IDirect3DDevice8Hook::GetDirect3D, COMDAT

; 77   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 78   : 	return m_pDevice->GetDirect3D(ppD3D);

	mov	esi, esp
	mov	eax, DWORD PTR _ppD3D$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 79   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetDirect3D@IDirect3DDevice8Hook@@UAGJPAPAUIDirect3D8@@@Z ENDP ; IDirect3DDevice8Hook::GetDirect3D
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetDeviceCaps@IDirect3DDevice8Hook@@UAGJPAU_D3DCAPS8@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pCaps$ = 12						; size = 4
?GetDeviceCaps@IDirect3DDevice8Hook@@UAGJPAU_D3DCAPS8@@@Z PROC ; IDirect3DDevice8Hook::GetDeviceCaps, COMDAT

; 82   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 83   : 	return m_pDevice->GetDeviceCaps(pCaps);

	mov	esi, esp
	mov	eax, DWORD PTR _pCaps$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 84   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetDeviceCaps@IDirect3DDevice8Hook@@UAGJPAU_D3DCAPS8@@@Z ENDP ; IDirect3DDevice8Hook::GetDeviceCaps
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetDisplayMode@IDirect3DDevice8Hook@@UAGJPAU_D3DDISPLAYMODE@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pMode$ = 12						; size = 4
?GetDisplayMode@IDirect3DDevice8Hook@@UAGJPAU_D3DDISPLAYMODE@@@Z PROC ; IDirect3DDevice8Hook::GetDisplayMode, COMDAT

; 87   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 88   : 	return m_pDevice->GetDisplayMode(pMode);

	mov	esi, esp
	mov	eax, DWORD PTR _pMode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 89   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetDisplayMode@IDirect3DDevice8Hook@@UAGJPAU_D3DDISPLAYMODE@@@Z ENDP ; IDirect3DDevice8Hook::GetDisplayMode
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetCreationParameters@IDirect3DDevice8Hook@@UAGJPAU_D3DDEVICE_CREATION_PARAMETERS@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pParameters$ = 12					; size = 4
?GetCreationParameters@IDirect3DDevice8Hook@@UAGJPAU_D3DDEVICE_CREATION_PARAMETERS@@@Z PROC ; IDirect3DDevice8Hook::GetCreationParameters, COMDAT

; 92   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 93   : 	return m_pDevice->GetCreationParameters(pParameters);

	mov	esi, esp
	mov	eax, DWORD PTR _pParameters$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 94   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetCreationParameters@IDirect3DDevice8Hook@@UAGJPAU_D3DDEVICE_CREATION_PARAMETERS@@@Z ENDP ; IDirect3DDevice8Hook::GetCreationParameters
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetCursorProperties@IDirect3DDevice8Hook@@UAGJIIPAUIDirect3DSurface8@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_XHotSpot$ = 12						; size = 4
_YHotSpot$ = 16						; size = 4
_pCursorBitmap$ = 20					; size = 4
?SetCursorProperties@IDirect3DDevice8Hook@@UAGJIIPAUIDirect3DSurface8@@@Z PROC ; IDirect3DDevice8Hook::SetCursorProperties, COMDAT

; 97   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 98   : 	return m_pDevice->SetCursorProperties(XHotSpot, YHotSpot, pCursorBitmap);

	mov	esi, esp
	mov	eax, DWORD PTR _pCursorBitmap$[ebp]
	push	eax
	mov	ecx, DWORD PTR _YHotSpot$[ebp]
	push	ecx
	mov	edx, DWORD PTR _XHotSpot$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+40]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 99   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetCursorProperties@IDirect3DDevice8Hook@@UAGJIIPAUIDirect3DSurface8@@@Z ENDP ; IDirect3DDevice8Hook::SetCursorProperties
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetCursorPosition@IDirect3DDevice8Hook@@UAGXIIK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_X$ = 12						; size = 4
_Y$ = 16						; size = 4
_Flags$ = 20						; size = 4
?SetCursorPosition@IDirect3DDevice8Hook@@UAGXIIK@Z PROC	; IDirect3DDevice8Hook::SetCursorPosition, COMDAT

; 102  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 103  : 	m_pDevice->SetCursorPosition(X, Y, Flags);

	mov	esi, esp
	mov	eax, DWORD PTR _Flags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _X$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+44]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 104  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetCursorPosition@IDirect3DDevice8Hook@@UAGXIIK@Z ENDP	; IDirect3DDevice8Hook::SetCursorPosition
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ShowCursor@IDirect3DDevice8Hook@@UAGHH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_bShow$ = 12						; size = 4
?ShowCursor@IDirect3DDevice8Hook@@UAGHH@Z PROC		; IDirect3DDevice8Hook::ShowCursor, COMDAT

; 107  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 108  : 	return m_pDevice->ShowCursor(bShow);

	mov	esi, esp
	mov	eax, DWORD PTR _bShow$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 109  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?ShowCursor@IDirect3DDevice8Hook@@UAGHH@Z ENDP		; IDirect3DDevice8Hook::ShowCursor
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?CreateAdditionalSwapChain@IDirect3DDevice8Hook@@UAGJPAU_D3DPRESENT_PARAMETERS_@@PAPAUIDirect3DSwapChain8@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pPresentationParameters$ = 12				; size = 4
_ppSwapChain$ = 16					; size = 4
?CreateAdditionalSwapChain@IDirect3DDevice8Hook@@UAGJPAU_D3DPRESENT_PARAMETERS_@@PAPAUIDirect3DSwapChain8@@@Z PROC ; IDirect3DDevice8Hook::CreateAdditionalSwapChain, COMDAT

; 112  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 113  : 	return m_pDevice->CreateAdditionalSwapChain(pPresentationParameters, ppSwapChain);

	mov	esi, esp
	mov	eax, DWORD PTR _ppSwapChain$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPresentationParameters$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+52]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 114  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?CreateAdditionalSwapChain@IDirect3DDevice8Hook@@UAGJPAU_D3DPRESENT_PARAMETERS_@@PAPAUIDirect3DSwapChain8@@@Z ENDP ; IDirect3DDevice8Hook::CreateAdditionalSwapChain
_TEXT	ENDS
PUBLIC	??_GCBBFont@@QAEPAXI@Z				; CBBFont::`scalar deleting destructor'
EXTRN	?OnResetDevice@CGUI@@QAEXXZ:PROC		; CGUI::OnResetDevice
EXTRN	?DeleteDeviceObjects@CCmdWindow@@QAEXXZ:PROC	; CCmdWindow::DeleteDeviceObjects
EXTRN	?pCmdWindow@@3PAVCCmdWindow@@A:DWORD		; pCmdWindow
EXTRN	?DeleteDeviceObjects@CChatWindow@@QAEXXZ:PROC	; CChatWindow::DeleteDeviceObjects
EXTRN	?pChatWindow@@3PAVCChatWindow@@A:DWORD		; pChatWindow
EXTRN	?BarNewStateBlock@@3KA:DWORD			; BarNewStateBlock
EXTRN	?BarOldStateBlock@@3KA:DWORD			; BarOldStateBlock
EXTRN	?bbfont@@3PAVCBBFont@@A:DWORD			; bbfont
EXTRN	?OnLostDevice@CGUI@@QAEXXZ:PROC			; CGUI::OnLostDevice
EXTRN	?pGUI@@3PAVCGUI@@A:DWORD			; pGUI
EXTRN	__imp__SetWindowPos@28:PROC
EXTRN	?bWindowedMode@@3HA:DWORD			; bWindowedMode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Reset@IDirect3DDevice8Hook@@UAGJPAU_D3DPRESENT_PARAMETERS_@@@Z
_TEXT	SEGMENT
tv85 = -232						; size = 4
$T209986 = -224						; size = 4
$T209987 = -212						; size = 4
_hr$ = -8						; size = 4
_this$ = 8						; size = 4
_pPresentationParameters$ = 12				; size = 4
?Reset@IDirect3DDevice8Hook@@UAGJPAU_D3DPRESENT_PARAMETERS_@@@Z PROC ; IDirect3DDevice8Hook::Reset, COMDAT

; 117  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 118  : 	if(bWindowedMode)

	cmp	DWORD PTR ?bWindowedMode@@3HA, 0	; bWindowedMode
	je	SHORT $LN8@Reset

; 119  : 	{
; 120  : 		pPresentationParameters->Windowed = 1;

	mov	eax, DWORD PTR _pPresentationParameters$[ebp]
	mov	DWORD PTR [eax+28], 1

; 121  : 		pPresentationParameters->Flags = 0;

	mov	eax, DWORD PTR _pPresentationParameters$[ebp]
	mov	DWORD PTR [eax+40], 0

; 122  : 		pPresentationParameters->FullScreen_RefreshRateInHz = 0;

	mov	eax, DWORD PTR _pPresentationParameters$[ebp]
	mov	DWORD PTR [eax+44], 0

; 123  : 		pPresentationParameters->FullScreen_PresentationInterval = 0;

	mov	eax, DWORD PTR _pPresentationParameters$[ebp]
	mov	DWORD PTR [eax+48], 0

; 124  : 
; 125  : 		//pPresentationParameters->BackBufferFormat = D3DDisplayMode.Format;
; 126  : 
; 127  : 		SetWindowPos(pPresentationParameters->hDeviceWindow, HWND_NOTOPMOST, 0, 0, pPresentationParameters->BackBufferWidth, pPresentationParameters->BackBufferHeight, SWP_SHOWWINDOW);

	mov	esi, esp
	push	64					; 00000040H
	mov	eax, DWORD PTR _pPresentationParameters$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _pPresentationParameters$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	push	0
	push	0
	push	-2					; fffffffeH
	mov	ecx, DWORD PTR _pPresentationParameters$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	call	DWORD PTR __imp__SetWindowPos@28
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@Reset:

; 128  : 	}
; 129  : 
; 130  : 	if(pGUI)

	cmp	DWORD PTR ?pGUI@@3PAVCGUI@@A, 0		; pGUI
	je	SHORT $LN7@Reset

; 131  : 		pGUI->OnLostDevice();

	mov	ecx, DWORD PTR ?pGUI@@3PAVCGUI@@A	; pGUI
	call	?OnLostDevice@CGUI@@QAEXXZ		; CGUI::OnLostDevice
$LN7@Reset:

; 132  : 
; 133  : 	if(bbfont)

	cmp	DWORD PTR ?bbfont@@3PAVCBBFont@@A, 0	; bbfont
	je	SHORT $LN6@Reset

; 134  : 	{
; 135  : 		delete bbfont;

	mov	eax, DWORD PTR ?bbfont@@3PAVCBBFont@@A	; bbfont
	mov	DWORD PTR $T209987[ebp], eax
	mov	ecx, DWORD PTR $T209987[ebp]
	mov	DWORD PTR $T209986[ebp], ecx
	cmp	DWORD PTR $T209986[ebp], 0
	je	SHORT $LN11@Reset
	push	1
	mov	ecx, DWORD PTR $T209986[ebp]
	call	??_GCBBFont@@QAEPAXI@Z
	mov	DWORD PTR tv85[ebp], eax
	jmp	SHORT $LN12@Reset
$LN11@Reset:
	mov	DWORD PTR tv85[ebp], 0
$LN12@Reset:

; 136  : 		bbfont = NULL;

	mov	DWORD PTR ?bbfont@@3PAVCBBFont@@A, 0	; bbfont
$LN6@Reset:

; 137  : 	}
; 138  : 
; 139  : 	if(BarOldStateBlock)

	cmp	DWORD PTR ?BarOldStateBlock@@3KA, 0	; BarOldStateBlock
	je	SHORT $LN5@Reset

; 140  : 	{
; 141  : 		m_pDevice->DeleteStateBlock(BarOldStateBlock);

	mov	esi, esp
	mov	eax, DWORD PTR ?BarOldStateBlock@@3KA	; BarOldStateBlock
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+224]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 142  : 		BarOldStateBlock = 0;

	mov	DWORD PTR ?BarOldStateBlock@@3KA, 0	; BarOldStateBlock
$LN5@Reset:

; 143  : 	}
; 144  : 
; 145  : 	if(BarNewStateBlock)

	cmp	DWORD PTR ?BarNewStateBlock@@3KA, 0	; BarNewStateBlock
	je	SHORT $LN4@Reset

; 146  : 	{
; 147  : 		m_pDevice->DeleteStateBlock(BarNewStateBlock);

	mov	esi, esp
	mov	eax, DWORD PTR ?BarNewStateBlock@@3KA	; BarNewStateBlock
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+224]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 148  : 		BarNewStateBlock = 0;

	mov	DWORD PTR ?BarNewStateBlock@@3KA, 0	; BarNewStateBlock
$LN4@Reset:

; 149  : 	}
; 150  : 
; 151  : 	if(pChatWindow)

	cmp	DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A, 0 ; pChatWindow
	je	SHORT $LN3@Reset

; 152  : 	{
; 153  : 		pChatWindow->DeleteDeviceObjects();

	mov	ecx, DWORD PTR ?pChatWindow@@3PAVCChatWindow@@A ; pChatWindow
	call	?DeleteDeviceObjects@CChatWindow@@QAEXXZ ; CChatWindow::DeleteDeviceObjects
$LN3@Reset:

; 154  : 	}
; 155  : 
; 156  : 	if(pCmdWindow)

	cmp	DWORD PTR ?pCmdWindow@@3PAVCCmdWindow@@A, 0 ; pCmdWindow
	je	SHORT $LN2@Reset

; 157  : 	{
; 158  : 		pCmdWindow->DeleteDeviceObjects();

	mov	ecx, DWORD PTR ?pCmdWindow@@3PAVCCmdWindow@@A ; pCmdWindow
	call	?DeleteDeviceObjects@CCmdWindow@@QAEXXZ	; CCmdWindow::DeleteDeviceObjects
$LN2@Reset:

; 159  : 	}
; 160  : 
; 161  : 	HRESULT hr = m_pDevice->Reset(pPresentationParameters);

	mov	esi, esp
	mov	eax, DWORD PTR _pPresentationParameters$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+56]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax

; 162  : 
; 163  : 	if(pGUI)

	cmp	DWORD PTR ?pGUI@@3PAVCGUI@@A, 0		; pGUI
	je	SHORT $LN1@Reset

; 164  : 		pGUI->OnResetDevice();

	mov	ecx, DWORD PTR ?pGUI@@3PAVCGUI@@A	; pGUI
	call	?OnResetDevice@CGUI@@QAEXXZ		; CGUI::OnResetDevice
$LN1@Reset:

; 165  : 
; 166  : 	return hr;

	mov	eax, DWORD PTR _hr$[ebp]

; 167  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Reset@IDirect3DDevice8Hook@@UAGJPAU_D3DPRESENT_PARAMETERS_@@@Z ENDP ; IDirect3DDevice8Hook::Reset
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??1CBBFont@@QAE@XZ:PROC				; CBBFont::~CBBFont
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCBBFont@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCBBFont@@QAEPAXI@Z PROC				; CBBFont::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CBBFont@@QAE@XZ			; CBBFont::~CBBFont
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCBBFont@@QAEPAXI@Z ENDP				; CBBFont::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?Present@IDirect3DDevice8Hook@@UAGJPBUtagRECT@@0PAUHWND__@@PBU_RGNDATA@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pSourceRect$ = 12					; size = 4
_pDestRect$ = 16					; size = 4
_hDestWindowOverride$ = 20				; size = 4
_pDirtyRegion$ = 24					; size = 4
?Present@IDirect3DDevice8Hook@@UAGJPBUtagRECT@@0PAUHWND__@@PBU_RGNDATA@@@Z PROC ; IDirect3DDevice8Hook::Present, COMDAT

; 170  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 171  : 	return m_pDevice->Present(pSourceRect, pDestRect, hDestWindowOverride, pDirtyRegion);

	mov	esi, esp
	mov	eax, DWORD PTR _pDirtyRegion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hDestWindowOverride$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDestRect$[ebp]
	push	edx
	mov	eax, DWORD PTR _pSourceRect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+60]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 172  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?Present@IDirect3DDevice8Hook@@UAGJPBUtagRECT@@0PAUHWND__@@PBU_RGNDATA@@@Z ENDP ; IDirect3DDevice8Hook::Present
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetBackBuffer@IDirect3DDevice8Hook@@UAGJIW4_D3DBACKBUFFER_TYPE@@PAPAUIDirect3DSurface8@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_BackBuffer$ = 12					; size = 4
_Type$ = 16						; size = 4
_ppBackBuffer$ = 20					; size = 4
?GetBackBuffer@IDirect3DDevice8Hook@@UAGJIW4_D3DBACKBUFFER_TYPE@@PAPAUIDirect3DSurface8@@@Z PROC ; IDirect3DDevice8Hook::GetBackBuffer, COMDAT

; 175  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 176  : 	return m_pDevice->GetBackBuffer(BackBuffer, Type, ppBackBuffer);

	mov	esi, esp
	mov	eax, DWORD PTR _ppBackBuffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _BackBuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+64]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 177  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GetBackBuffer@IDirect3DDevice8Hook@@UAGJIW4_D3DBACKBUFFER_TYPE@@PAPAUIDirect3DSurface8@@@Z ENDP ; IDirect3DDevice8Hook::GetBackBuffer
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetRasterStatus@IDirect3DDevice8Hook@@UAGJPAU_D3DRASTER_STATUS@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pRasterStatus$ = 12					; size = 4
?GetRasterStatus@IDirect3DDevice8Hook@@UAGJPAU_D3DRASTER_STATUS@@@Z PROC ; IDirect3DDevice8Hook::GetRasterStatus, COMDAT

; 180  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 181  : 	return m_pDevice->GetRasterStatus(pRasterStatus);

	mov	esi, esp
	mov	eax, DWORD PTR _pRasterStatus$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+68]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 182  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetRasterStatus@IDirect3DDevice8Hook@@UAGJPAU_D3DRASTER_STATUS@@@Z ENDP ; IDirect3DDevice8Hook::GetRasterStatus
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetGammaRamp@IDirect3DDevice8Hook@@UAGXKPBU_D3DGAMMARAMP@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Flags$ = 12						; size = 4
_pRamp$ = 16						; size = 4
?SetGammaRamp@IDirect3DDevice8Hook@@UAGXKPBU_D3DGAMMARAMP@@@Z PROC ; IDirect3DDevice8Hook::SetGammaRamp, COMDAT

; 185  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 186  : 	m_pDevice->SetGammaRamp(Flags, pRamp);

	mov	esi, esp
	mov	eax, DWORD PTR _pRamp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Flags$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+72]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 187  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetGammaRamp@IDirect3DDevice8Hook@@UAGXKPBU_D3DGAMMARAMP@@@Z ENDP ; IDirect3DDevice8Hook::SetGammaRamp
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetGammaRamp@IDirect3DDevice8Hook@@UAGXPAU_D3DGAMMARAMP@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pRamp$ = 12						; size = 4
?GetGammaRamp@IDirect3DDevice8Hook@@UAGXPAU_D3DGAMMARAMP@@@Z PROC ; IDirect3DDevice8Hook::GetGammaRamp, COMDAT

; 190  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 191  : 	m_pDevice->GetGammaRamp(pRamp);

	mov	esi, esp
	mov	eax, DWORD PTR _pRamp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+76]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 192  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetGammaRamp@IDirect3DDevice8Hook@@UAGXPAU_D3DGAMMARAMP@@@Z ENDP ; IDirect3DDevice8Hook::GetGammaRamp
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?CreateTexture@IDirect3DDevice8Hook@@UAGJIIIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DTexture8@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Width$ = 12						; size = 4
_Height$ = 16						; size = 4
_Levels$ = 20						; size = 4
_Usage$ = 24						; size = 4
_Format$ = 28						; size = 4
_Pool$ = 32						; size = 4
_ppTexture$ = 36					; size = 4
?CreateTexture@IDirect3DDevice8Hook@@UAGJIIIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DTexture8@@@Z PROC ; IDirect3DDevice8Hook::CreateTexture, COMDAT

; 195  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 196  : 	return m_pDevice->CreateTexture(Width, Height, Levels, Usage, Format, Pool, ppTexture);

	mov	esi, esp
	mov	eax, DWORD PTR _ppTexture$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Pool$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Format$[ebp]
	push	edx
	mov	eax, DWORD PTR _Usage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Levels$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Height$[ebp]
	push	edx
	mov	eax, DWORD PTR _Width$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+80]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 197  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
?CreateTexture@IDirect3DDevice8Hook@@UAGJIIIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DTexture8@@@Z ENDP ; IDirect3DDevice8Hook::CreateTexture
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?CreateVolumeTexture@IDirect3DDevice8Hook@@UAGJIIIIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DVolumeTexture8@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Width$ = 12						; size = 4
_Height$ = 16						; size = 4
_Depth$ = 20						; size = 4
_Levels$ = 24						; size = 4
_Usage$ = 28						; size = 4
_Format$ = 32						; size = 4
_Pool$ = 36						; size = 4
_ppVolumeTexture$ = 40					; size = 4
?CreateVolumeTexture@IDirect3DDevice8Hook@@UAGJIIIIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DVolumeTexture8@@@Z PROC ; IDirect3DDevice8Hook::CreateVolumeTexture, COMDAT

; 200  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 201  : 	return m_pDevice->CreateVolumeTexture(Width, Height, Depth, Levels, Usage, Format, Pool, ppVolumeTexture);

	mov	esi, esp
	mov	eax, DWORD PTR _ppVolumeTexture$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Pool$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Format$[ebp]
	push	edx
	mov	eax, DWORD PTR _Usage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Levels$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Depth$[ebp]
	push	edx
	mov	eax, DWORD PTR _Height$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Width$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+84]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 202  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
?CreateVolumeTexture@IDirect3DDevice8Hook@@UAGJIIIIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DVolumeTexture8@@@Z ENDP ; IDirect3DDevice8Hook::CreateVolumeTexture
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?CreateCubeTexture@IDirect3DDevice8Hook@@UAGJIIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DCubeTexture8@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_EdgeLength$ = 12					; size = 4
_Levels$ = 16						; size = 4
_Usage$ = 20						; size = 4
_Format$ = 24						; size = 4
_Pool$ = 28						; size = 4
_ppCubeTexture$ = 32					; size = 4
?CreateCubeTexture@IDirect3DDevice8Hook@@UAGJIIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DCubeTexture8@@@Z PROC ; IDirect3DDevice8Hook::CreateCubeTexture, COMDAT

; 205  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 206  : 	return m_pDevice->CreateCubeTexture(EdgeLength, Levels, Usage, Format, Pool, ppCubeTexture);

	mov	esi, esp
	mov	eax, DWORD PTR _ppCubeTexture$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Pool$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Format$[ebp]
	push	edx
	mov	eax, DWORD PTR _Usage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Levels$[ebp]
	push	ecx
	mov	edx, DWORD PTR _EdgeLength$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+88]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 207  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?CreateCubeTexture@IDirect3DDevice8Hook@@UAGJIIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DCubeTexture8@@@Z ENDP ; IDirect3DDevice8Hook::CreateCubeTexture
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?CreateVertexBuffer@IDirect3DDevice8Hook@@UAGJIKKW4_D3DPOOL@@PAPAUIDirect3DVertexBuffer8@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Length$ = 12						; size = 4
_Usage$ = 16						; size = 4
_FVF$ = 20						; size = 4
_Pool$ = 24						; size = 4
_ppVertexBuffer$ = 28					; size = 4
?CreateVertexBuffer@IDirect3DDevice8Hook@@UAGJIKKW4_D3DPOOL@@PAPAUIDirect3DVertexBuffer8@@@Z PROC ; IDirect3DDevice8Hook::CreateVertexBuffer, COMDAT

; 210  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 211  : 	return m_pDevice->CreateVertexBuffer(Length, Usage, FVF, Pool, ppVertexBuffer);

	mov	esi, esp
	mov	eax, DWORD PTR _ppVertexBuffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Pool$[ebp]
	push	ecx
	mov	edx, DWORD PTR _FVF$[ebp]
	push	edx
	mov	eax, DWORD PTR _Usage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+92]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 212  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?CreateVertexBuffer@IDirect3DDevice8Hook@@UAGJIKKW4_D3DPOOL@@PAPAUIDirect3DVertexBuffer8@@@Z ENDP ; IDirect3DDevice8Hook::CreateVertexBuffer
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?CreateIndexBuffer@IDirect3DDevice8Hook@@UAGJIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DIndexBuffer8@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Length$ = 12						; size = 4
_Usage$ = 16						; size = 4
_Format$ = 20						; size = 4
_Pool$ = 24						; size = 4
_ppIndexBuffer$ = 28					; size = 4
?CreateIndexBuffer@IDirect3DDevice8Hook@@UAGJIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DIndexBuffer8@@@Z PROC ; IDirect3DDevice8Hook::CreateIndexBuffer, COMDAT

; 215  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 216  : 	return m_pDevice->CreateIndexBuffer(Length, Usage, Format, Pool, ppIndexBuffer);

	mov	esi, esp
	mov	eax, DWORD PTR _ppIndexBuffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Pool$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Format$[ebp]
	push	edx
	mov	eax, DWORD PTR _Usage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+96]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 217  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?CreateIndexBuffer@IDirect3DDevice8Hook@@UAGJIKW4_D3DFORMAT@@W4_D3DPOOL@@PAPAUIDirect3DIndexBuffer8@@@Z ENDP ; IDirect3DDevice8Hook::CreateIndexBuffer
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?CreateRenderTarget@IDirect3DDevice8Hook@@UAGJIIW4_D3DFORMAT@@W4_D3DMULTISAMPLE_TYPE@@HPAPAUIDirect3DSurface8@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Width$ = 12						; size = 4
_Height$ = 16						; size = 4
_Format$ = 20						; size = 4
_MultiSample$ = 24					; size = 4
_Lockable$ = 28						; size = 4
_ppSurface$ = 32					; size = 4
?CreateRenderTarget@IDirect3DDevice8Hook@@UAGJIIW4_D3DFORMAT@@W4_D3DMULTISAMPLE_TYPE@@HPAPAUIDirect3DSurface8@@@Z PROC ; IDirect3DDevice8Hook::CreateRenderTarget, COMDAT

; 220  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 221  : 	return m_pDevice->CreateRenderTarget(Width, Height, Format, MultiSample, Lockable, ppSurface);

	mov	esi, esp
	mov	eax, DWORD PTR _ppSurface$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Lockable$[ebp]
	push	ecx
	mov	edx, DWORD PTR _MultiSample$[ebp]
	push	edx
	mov	eax, DWORD PTR _Format$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Height$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Width$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+100]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 222  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?CreateRenderTarget@IDirect3DDevice8Hook@@UAGJIIW4_D3DFORMAT@@W4_D3DMULTISAMPLE_TYPE@@HPAPAUIDirect3DSurface8@@@Z ENDP ; IDirect3DDevice8Hook::CreateRenderTarget
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?CreateDepthStencilSurface@IDirect3DDevice8Hook@@UAGJIIW4_D3DFORMAT@@W4_D3DMULTISAMPLE_TYPE@@PAPAUIDirect3DSurface8@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Width$ = 12						; size = 4
_Height$ = 16						; size = 4
_Format$ = 20						; size = 4
_MultiSample$ = 24					; size = 4
_ppSurface$ = 28					; size = 4
?CreateDepthStencilSurface@IDirect3DDevice8Hook@@UAGJIIW4_D3DFORMAT@@W4_D3DMULTISAMPLE_TYPE@@PAPAUIDirect3DSurface8@@@Z PROC ; IDirect3DDevice8Hook::CreateDepthStencilSurface, COMDAT

; 225  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 226  : 	return m_pDevice->CreateDepthStencilSurface(Width, Height, Format, MultiSample, ppSurface);

	mov	esi, esp
	mov	eax, DWORD PTR _ppSurface$[ebp]
	push	eax
	mov	ecx, DWORD PTR _MultiSample$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Format$[ebp]
	push	edx
	mov	eax, DWORD PTR _Height$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Width$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+104]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 227  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?CreateDepthStencilSurface@IDirect3DDevice8Hook@@UAGJIIW4_D3DFORMAT@@W4_D3DMULTISAMPLE_TYPE@@PAPAUIDirect3DSurface8@@@Z ENDP ; IDirect3DDevice8Hook::CreateDepthStencilSurface
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?CreateImageSurface@IDirect3DDevice8Hook@@UAGJIIW4_D3DFORMAT@@PAPAUIDirect3DSurface8@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Width$ = 12						; size = 4
_Height$ = 16						; size = 4
_Format$ = 20						; size = 4
_ppSurface$ = 24					; size = 4
?CreateImageSurface@IDirect3DDevice8Hook@@UAGJIIW4_D3DFORMAT@@PAPAUIDirect3DSurface8@@@Z PROC ; IDirect3DDevice8Hook::CreateImageSurface, COMDAT

; 230  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 231  : 	return m_pDevice->CreateImageSurface(Width, Height, Format, ppSurface);

	mov	esi, esp
	mov	eax, DWORD PTR _ppSurface$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Format$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Height$[ebp]
	push	edx
	mov	eax, DWORD PTR _Width$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+108]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 232  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?CreateImageSurface@IDirect3DDevice8Hook@@UAGJIIW4_D3DFORMAT@@PAPAUIDirect3DSurface8@@@Z ENDP ; IDirect3DDevice8Hook::CreateImageSurface
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?CopyRects@IDirect3DDevice8Hook@@UAGJPAUIDirect3DSurface8@@PBUtagRECT@@I0PBUtagPOINT@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pSourceSurface$ = 12					; size = 4
_pSourceRectsArray$ = 16				; size = 4
_cRects$ = 20						; size = 4
_pDestinationSurface$ = 24				; size = 4
_pDestPointsArray$ = 28					; size = 4
?CopyRects@IDirect3DDevice8Hook@@UAGJPAUIDirect3DSurface8@@PBUtagRECT@@I0PBUtagPOINT@@@Z PROC ; IDirect3DDevice8Hook::CopyRects, COMDAT

; 235  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 236  : 	return m_pDevice->CopyRects(pSourceSurface, pSourceRectsArray, cRects, pDestinationSurface, pDestPointsArray);

	mov	esi, esp
	mov	eax, DWORD PTR _pDestPointsArray$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDestinationSurface$[ebp]
	push	ecx
	mov	edx, DWORD PTR _cRects$[ebp]
	push	edx
	mov	eax, DWORD PTR _pSourceRectsArray$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pSourceSurface$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+112]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 237  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?CopyRects@IDirect3DDevice8Hook@@UAGJPAUIDirect3DSurface8@@PBUtagRECT@@I0PBUtagPOINT@@@Z ENDP ; IDirect3DDevice8Hook::CopyRects
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?UpdateTexture@IDirect3DDevice8Hook@@UAGJPAUIDirect3DBaseTexture8@@0@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pSourceTexture$ = 12					; size = 4
_pDestinationTexture$ = 16				; size = 4
?UpdateTexture@IDirect3DDevice8Hook@@UAGJPAUIDirect3DBaseTexture8@@0@Z PROC ; IDirect3DDevice8Hook::UpdateTexture, COMDAT

; 240  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 241  : 	return m_pDevice->UpdateTexture(pSourceTexture, pDestinationTexture);

	mov	esi, esp
	mov	eax, DWORD PTR _pDestinationTexture$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pSourceTexture$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+116]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 242  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?UpdateTexture@IDirect3DDevice8Hook@@UAGJPAUIDirect3DBaseTexture8@@0@Z ENDP ; IDirect3DDevice8Hook::UpdateTexture
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetFrontBuffer@IDirect3DDevice8Hook@@UAGJPAUIDirect3DSurface8@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pDestSurface$ = 12					; size = 4
?GetFrontBuffer@IDirect3DDevice8Hook@@UAGJPAUIDirect3DSurface8@@@Z PROC ; IDirect3DDevice8Hook::GetFrontBuffer, COMDAT

; 245  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 246  : 	return m_pDevice->GetFrontBuffer(pDestSurface);

	mov	esi, esp
	mov	eax, DWORD PTR _pDestSurface$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+120]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 247  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetFrontBuffer@IDirect3DDevice8Hook@@UAGJPAUIDirect3DSurface8@@@Z ENDP ; IDirect3DDevice8Hook::GetFrontBuffer
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetRenderTarget@IDirect3DDevice8Hook@@UAGJPAUIDirect3DSurface8@@0@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pRenderTarget$ = 12					; size = 4
_pNewZStencil$ = 16					; size = 4
?SetRenderTarget@IDirect3DDevice8Hook@@UAGJPAUIDirect3DSurface8@@0@Z PROC ; IDirect3DDevice8Hook::SetRenderTarget, COMDAT

; 250  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 251  : 	return m_pDevice->SetRenderTarget(pRenderTarget, pNewZStencil);

	mov	esi, esp
	mov	eax, DWORD PTR _pNewZStencil$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pRenderTarget$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+124]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 252  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetRenderTarget@IDirect3DDevice8Hook@@UAGJPAUIDirect3DSurface8@@0@Z ENDP ; IDirect3DDevice8Hook::SetRenderTarget
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetRenderTarget@IDirect3DDevice8Hook@@UAGJPAPAUIDirect3DSurface8@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_ppRenderTarget$ = 12					; size = 4
?GetRenderTarget@IDirect3DDevice8Hook@@UAGJPAPAUIDirect3DSurface8@@@Z PROC ; IDirect3DDevice8Hook::GetRenderTarget, COMDAT

; 255  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 256  : 	return m_pDevice->GetRenderTarget(ppRenderTarget);

	mov	esi, esp
	mov	eax, DWORD PTR _ppRenderTarget$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+128]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 257  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetRenderTarget@IDirect3DDevice8Hook@@UAGJPAPAUIDirect3DSurface8@@@Z ENDP ; IDirect3DDevice8Hook::GetRenderTarget
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetDepthStencilSurface@IDirect3DDevice8Hook@@UAGJPAPAUIDirect3DSurface8@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_ppZStencilSurface$ = 12				; size = 4
?GetDepthStencilSurface@IDirect3DDevice8Hook@@UAGJPAPAUIDirect3DSurface8@@@Z PROC ; IDirect3DDevice8Hook::GetDepthStencilSurface, COMDAT

; 260  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 261  : 	return m_pDevice->GetDepthStencilSurface(ppZStencilSurface);

	mov	esi, esp
	mov	eax, DWORD PTR _ppZStencilSurface$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+132]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 262  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetDepthStencilSurface@IDirect3DDevice8Hook@@UAGJPAPAUIDirect3DSurface8@@@Z ENDP ; IDirect3DDevice8Hook::GetDepthStencilSurface
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?BeginScene@IDirect3DDevice8Hook@@UAGJXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?BeginScene@IDirect3DDevice8Hook@@UAGJXZ PROC		; IDirect3DDevice8Hook::BeginScene, COMDAT

; 265  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 266  : 	return m_pDevice->BeginScene();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+136]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 267  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?BeginScene@IDirect3DDevice8Hook@@UAGJXZ ENDP		; IDirect3DDevice8Hook::BeginScene
_TEXT	ENDS
EXTRN	?TheSceneEnd@@YAXXZ:PROC			; TheSceneEnd
EXTRN	?Render@CGUI@@QAEXXZ:PROC			; CGUI::Render
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?EndScene@IDirect3DDevice8Hook@@UAGJXZ
_TEXT	SEGMENT
_token$ = -8						; size = 4
_this$ = 8						; size = 4
?EndScene@IDirect3DDevice8Hook@@UAGJXZ PROC		; IDirect3DDevice8Hook::EndScene, COMDAT

; 270  : {	

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 271  : 	DWORD token = 0;

	mov	DWORD PTR _token$[ebp], 0

; 272  :     CreateStateBlock ( D3DSBT_ALL, &token );

	mov	esi, esp
	lea	eax, DWORD PTR _token$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+228]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 273  : 
; 274  : 	if(pGUI) pGUI->Render();

	cmp	DWORD PTR ?pGUI@@3PAVCGUI@@A, 0		; pGUI
	je	SHORT $LN2@EndScene
	mov	ecx, DWORD PTR ?pGUI@@3PAVCGUI@@A	; pGUI
	call	?Render@CGUI@@QAEXXZ			; CGUI::Render
$LN2@EndScene:

; 275  : 
; 276  :     // Restore the render states
; 277  :     if ( token != 0 )

	cmp	DWORD PTR _token$[ebp], 0
	je	SHORT $LN1@EndScene

; 278  :     {
; 279  : 		ApplyStateBlock(token);

	mov	esi, esp
	mov	eax, DWORD PTR _token$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+216]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@EndScene:

; 280  :     }
; 281  : 
; 282  : 	DeleteStateBlock(token);

	mov	esi, esp
	mov	eax, DWORD PTR _token$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+224]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 283  : 	TheSceneEnd();

	call	?TheSceneEnd@@YAXXZ			; TheSceneEnd

; 284  : 	return m_pDevice->EndScene();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+140]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 285  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@EndScene
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN7@EndScene:
	DD	1
	DD	$LN6@EndScene
$LN6@EndScene:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@EndScene
$LN5@EndScene:
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
?EndScene@IDirect3DDevice8Hook@@UAGJXZ ENDP		; IDirect3DDevice8Hook::EndScene
_TEXT	ENDS
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Clear@IDirect3DDevice8Hook@@UAGJKPBU_D3DRECT@@KKMK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Count$ = 12						; size = 4
_pRects$ = 16						; size = 4
_Flags$ = 20						; size = 4
_Color$ = 24						; size = 4
_Z$ = 28						; size = 4
_Stencil$ = 32						; size = 4
?Clear@IDirect3DDevice8Hook@@UAGJKPBU_D3DRECT@@KKMK@Z PROC ; IDirect3DDevice8Hook::Clear, COMDAT

; 288  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 289  : 	return m_pDevice->Clear(Count, pRects, Flags, Color, Z, Stencil);

	mov	esi, esp
	mov	eax, DWORD PTR _Stencil$[ebp]
	push	eax
	push	ecx
	fld	DWORD PTR _Z$[ebp]
	fstp	DWORD PTR [esp]
	mov	ecx, DWORD PTR _Color$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Flags$[ebp]
	push	edx
	mov	eax, DWORD PTR _pRects$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+144]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 290  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	28					; 0000001cH
?Clear@IDirect3DDevice8Hook@@UAGJKPBU_D3DRECT@@KKMK@Z ENDP ; IDirect3DDevice8Hook::Clear
_TEXT	ENDS
EXTRN	?matView@@3U_D3DMATRIX@@A:BYTE			; matView
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetTransform@IDirect3DDevice8Hook@@UAGJW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_State$ = 12						; size = 4
_pMatrix$ = 16						; size = 4
?SetTransform@IDirect3DDevice8Hook@@UAGJW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z PROC ; IDirect3DDevice8Hook::SetTransform, COMDAT

; 293  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 294  : 	if (State == D3DTS_VIEW) matView = *pMatrix;

	cmp	DWORD PTR _State$[ebp], 2
	jne	SHORT $LN1@SetTransfo
	mov	esi, DWORD PTR _pMatrix$[ebp]
	mov	ecx, 16					; 00000010H
	mov	edi, OFFSET ?matView@@3U_D3DMATRIX@@A	; matView
	rep movsd
$LN1@SetTransfo:

; 295  : 
; 296  : 	return m_pDevice->SetTransform(State, pMatrix);

	mov	esi, esp
	mov	eax, DWORD PTR _pMatrix$[ebp]
	push	eax
	mov	ecx, DWORD PTR _State$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+148]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 297  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetTransform@IDirect3DDevice8Hook@@UAGJW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ENDP ; IDirect3DDevice8Hook::SetTransform
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetTransform@IDirect3DDevice8Hook@@UAGJW4_D3DTRANSFORMSTATETYPE@@PAU_D3DMATRIX@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_State$ = 12						; size = 4
_pMatrix$ = 16						; size = 4
?GetTransform@IDirect3DDevice8Hook@@UAGJW4_D3DTRANSFORMSTATETYPE@@PAU_D3DMATRIX@@@Z PROC ; IDirect3DDevice8Hook::GetTransform, COMDAT

; 300  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 301  : 	return m_pDevice->GetTransform(State, pMatrix);

	mov	esi, esp
	mov	eax, DWORD PTR _pMatrix$[ebp]
	push	eax
	mov	ecx, DWORD PTR _State$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+152]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 302  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetTransform@IDirect3DDevice8Hook@@UAGJW4_D3DTRANSFORMSTATETYPE@@PAU_D3DMATRIX@@@Z ENDP ; IDirect3DDevice8Hook::GetTransform
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?MultiplyTransform@IDirect3DDevice8Hook@@UAGJW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_State$ = 12						; size = 4
_pMatrix$ = 16						; size = 4
?MultiplyTransform@IDirect3DDevice8Hook@@UAGJW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z PROC ; IDirect3DDevice8Hook::MultiplyTransform, COMDAT

; 305  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 306  : 	return m_pDevice->MultiplyTransform(State, pMatrix);

	mov	esi, esp
	mov	eax, DWORD PTR _pMatrix$[ebp]
	push	eax
	mov	ecx, DWORD PTR _State$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+156]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 307  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?MultiplyTransform@IDirect3DDevice8Hook@@UAGJW4_D3DTRANSFORMSTATETYPE@@PBU_D3DMATRIX@@@Z ENDP ; IDirect3DDevice8Hook::MultiplyTransform
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetViewport@IDirect3DDevice8Hook@@UAGJPBU_D3DVIEWPORT8@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pViewport$ = 12					; size = 4
?SetViewport@IDirect3DDevice8Hook@@UAGJPBU_D3DVIEWPORT8@@@Z PROC ; IDirect3DDevice8Hook::SetViewport, COMDAT

; 310  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 311  : 	return m_pDevice->SetViewport(pViewport);

	mov	esi, esp
	mov	eax, DWORD PTR _pViewport$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+160]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 312  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetViewport@IDirect3DDevice8Hook@@UAGJPBU_D3DVIEWPORT8@@@Z ENDP ; IDirect3DDevice8Hook::SetViewport
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetViewport@IDirect3DDevice8Hook@@UAGJPAU_D3DVIEWPORT8@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pViewport$ = 12					; size = 4
?GetViewport@IDirect3DDevice8Hook@@UAGJPAU_D3DVIEWPORT8@@@Z PROC ; IDirect3DDevice8Hook::GetViewport, COMDAT

; 315  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 316  : 	return m_pDevice->GetViewport(pViewport);

	mov	esi, esp
	mov	eax, DWORD PTR _pViewport$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+164]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 317  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetViewport@IDirect3DDevice8Hook@@UAGJPAU_D3DVIEWPORT8@@@Z ENDP ; IDirect3DDevice8Hook::GetViewport
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetMaterial@IDirect3DDevice8Hook@@UAGJPBU_D3DMATERIAL8@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pMaterial$ = 12					; size = 4
?SetMaterial@IDirect3DDevice8Hook@@UAGJPBU_D3DMATERIAL8@@@Z PROC ; IDirect3DDevice8Hook::SetMaterial, COMDAT

; 320  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 321  : 	return m_pDevice->SetMaterial(pMaterial);

	mov	esi, esp
	mov	eax, DWORD PTR _pMaterial$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+168]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 322  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetMaterial@IDirect3DDevice8Hook@@UAGJPBU_D3DMATERIAL8@@@Z ENDP ; IDirect3DDevice8Hook::SetMaterial
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetMaterial@IDirect3DDevice8Hook@@UAGJPAU_D3DMATERIAL8@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pMaterial$ = 12					; size = 4
?GetMaterial@IDirect3DDevice8Hook@@UAGJPAU_D3DMATERIAL8@@@Z PROC ; IDirect3DDevice8Hook::GetMaterial, COMDAT

; 325  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 326  : 	return m_pDevice->GetMaterial(pMaterial);

	mov	esi, esp
	mov	eax, DWORD PTR _pMaterial$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+172]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 327  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetMaterial@IDirect3DDevice8Hook@@UAGJPAU_D3DMATERIAL8@@@Z ENDP ; IDirect3DDevice8Hook::GetMaterial
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetLight@IDirect3DDevice8Hook@@UAGJKPBU_D3DLIGHT8@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Index$ = 12						; size = 4
_pLight$ = 16						; size = 4
?SetLight@IDirect3DDevice8Hook@@UAGJKPBU_D3DLIGHT8@@@Z PROC ; IDirect3DDevice8Hook::SetLight, COMDAT

; 330  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 331  : 	return m_pDevice->SetLight(Index, pLight);

	mov	esi, esp
	mov	eax, DWORD PTR _pLight$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+176]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 332  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetLight@IDirect3DDevice8Hook@@UAGJKPBU_D3DLIGHT8@@@Z ENDP ; IDirect3DDevice8Hook::SetLight
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetLight@IDirect3DDevice8Hook@@UAGJKPAU_D3DLIGHT8@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Index$ = 12						; size = 4
_pLight$ = 16						; size = 4
?GetLight@IDirect3DDevice8Hook@@UAGJKPAU_D3DLIGHT8@@@Z PROC ; IDirect3DDevice8Hook::GetLight, COMDAT

; 335  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 336  : 	return m_pDevice->GetLight(Index, pLight);

	mov	esi, esp
	mov	eax, DWORD PTR _pLight$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+180]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 337  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetLight@IDirect3DDevice8Hook@@UAGJKPAU_D3DLIGHT8@@@Z ENDP ; IDirect3DDevice8Hook::GetLight
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?LightEnable@IDirect3DDevice8Hook@@UAGJKH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_LightIndex$ = 12					; size = 4
_bEnable$ = 16						; size = 4
?LightEnable@IDirect3DDevice8Hook@@UAGJKH@Z PROC	; IDirect3DDevice8Hook::LightEnable, COMDAT

; 340  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 341  : 	return m_pDevice->LightEnable(LightIndex, bEnable);

	mov	esi, esp
	mov	eax, DWORD PTR _bEnable$[ebp]
	push	eax
	mov	ecx, DWORD PTR _LightIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+184]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 342  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?LightEnable@IDirect3DDevice8Hook@@UAGJKH@Z ENDP	; IDirect3DDevice8Hook::LightEnable
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetLightEnable@IDirect3DDevice8Hook@@UAGJKPAH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Index$ = 12						; size = 4
_pEnable$ = 16						; size = 4
?GetLightEnable@IDirect3DDevice8Hook@@UAGJKPAH@Z PROC	; IDirect3DDevice8Hook::GetLightEnable, COMDAT

; 345  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 346  : 	return m_pDevice->GetLightEnable(Index, pEnable);

	mov	esi, esp
	mov	eax, DWORD PTR _pEnable$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+188]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 347  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetLightEnable@IDirect3DDevice8Hook@@UAGJKPAH@Z ENDP	; IDirect3DDevice8Hook::GetLightEnable
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetClipPlane@IDirect3DDevice8Hook@@UAGJKPBM@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Index$ = 12						; size = 4
_pPlane$ = 16						; size = 4
?SetClipPlane@IDirect3DDevice8Hook@@UAGJKPBM@Z PROC	; IDirect3DDevice8Hook::SetClipPlane, COMDAT

; 350  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 351  : 	return m_pDevice->SetClipPlane(Index, pPlane);

	mov	esi, esp
	mov	eax, DWORD PTR _pPlane$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+192]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 352  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetClipPlane@IDirect3DDevice8Hook@@UAGJKPBM@Z ENDP	; IDirect3DDevice8Hook::SetClipPlane
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetClipPlane@IDirect3DDevice8Hook@@UAGJKPAM@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Index$ = 12						; size = 4
_pPlane$ = 16						; size = 4
?GetClipPlane@IDirect3DDevice8Hook@@UAGJKPAM@Z PROC	; IDirect3DDevice8Hook::GetClipPlane, COMDAT

; 355  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 356  : 	return m_pDevice->GetClipPlane(Index, pPlane);

	mov	esi, esp
	mov	eax, DWORD PTR _pPlane$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+196]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 357  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetClipPlane@IDirect3DDevice8Hook@@UAGJKPAM@Z ENDP	; IDirect3DDevice8Hook::GetClipPlane
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetRenderState@IDirect3DDevice8Hook@@UAGJW4_D3DRENDERSTATETYPE@@K@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_State$ = 12						; size = 4
_Value$ = 16						; size = 4
?SetRenderState@IDirect3DDevice8Hook@@UAGJW4_D3DRENDERSTATETYPE@@K@Z PROC ; IDirect3DDevice8Hook::SetRenderState, COMDAT

; 360  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 361  : 	return m_pDevice->SetRenderState(State, Value);

	mov	esi, esp
	mov	eax, DWORD PTR _Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _State$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+200]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 362  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetRenderState@IDirect3DDevice8Hook@@UAGJW4_D3DRENDERSTATETYPE@@K@Z ENDP ; IDirect3DDevice8Hook::SetRenderState
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetRenderState@IDirect3DDevice8Hook@@UAGJW4_D3DRENDERSTATETYPE@@PAK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_State$ = 12						; size = 4
_pValue$ = 16						; size = 4
?GetRenderState@IDirect3DDevice8Hook@@UAGJW4_D3DRENDERSTATETYPE@@PAK@Z PROC ; IDirect3DDevice8Hook::GetRenderState, COMDAT

; 365  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 366  : 	return m_pDevice->GetRenderState(State, pValue);

	mov	esi, esp
	mov	eax, DWORD PTR _pValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _State$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+204]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 367  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetRenderState@IDirect3DDevice8Hook@@UAGJW4_D3DRENDERSTATETYPE@@PAK@Z ENDP ; IDirect3DDevice8Hook::GetRenderState
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?BeginStateBlock@IDirect3DDevice8Hook@@UAGJXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?BeginStateBlock@IDirect3DDevice8Hook@@UAGJXZ PROC	; IDirect3DDevice8Hook::BeginStateBlock, COMDAT

; 370  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 371  : 	return m_pDevice->BeginStateBlock();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	mov	esi, esp
	push	eax
	mov	edx, DWORD PTR [ecx+208]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 372  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?BeginStateBlock@IDirect3DDevice8Hook@@UAGJXZ ENDP	; IDirect3DDevice8Hook::BeginStateBlock
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?EndStateBlock@IDirect3DDevice8Hook@@UAGJPAK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pToken$ = 12						; size = 4
?EndStateBlock@IDirect3DDevice8Hook@@UAGJPAK@Z PROC	; IDirect3DDevice8Hook::EndStateBlock, COMDAT

; 375  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 376  : 	return m_pDevice->EndStateBlock(pToken);

	mov	esi, esp
	mov	eax, DWORD PTR _pToken$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+212]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 377  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?EndStateBlock@IDirect3DDevice8Hook@@UAGJPAK@Z ENDP	; IDirect3DDevice8Hook::EndStateBlock
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ApplyStateBlock@IDirect3DDevice8Hook@@UAGJK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Token$ = 12						; size = 4
?ApplyStateBlock@IDirect3DDevice8Hook@@UAGJK@Z PROC	; IDirect3DDevice8Hook::ApplyStateBlock, COMDAT

; 380  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 381  : 	return m_pDevice->ApplyStateBlock(Token);

	mov	esi, esp
	mov	eax, DWORD PTR _Token$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+216]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 382  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?ApplyStateBlock@IDirect3DDevice8Hook@@UAGJK@Z ENDP	; IDirect3DDevice8Hook::ApplyStateBlock
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?CaptureStateBlock@IDirect3DDevice8Hook@@UAGJK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Token$ = 12						; size = 4
?CaptureStateBlock@IDirect3DDevice8Hook@@UAGJK@Z PROC	; IDirect3DDevice8Hook::CaptureStateBlock, COMDAT

; 385  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 386  : 	return m_pDevice->CaptureStateBlock(Token);

	mov	esi, esp
	mov	eax, DWORD PTR _Token$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+220]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 387  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?CaptureStateBlock@IDirect3DDevice8Hook@@UAGJK@Z ENDP	; IDirect3DDevice8Hook::CaptureStateBlock
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?DeleteStateBlock@IDirect3DDevice8Hook@@UAGJK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Token$ = 12						; size = 4
?DeleteStateBlock@IDirect3DDevice8Hook@@UAGJK@Z PROC	; IDirect3DDevice8Hook::DeleteStateBlock, COMDAT

; 390  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 391  : 	return m_pDevice->DeleteStateBlock(Token);

	mov	esi, esp
	mov	eax, DWORD PTR _Token$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+224]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 392  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?DeleteStateBlock@IDirect3DDevice8Hook@@UAGJK@Z ENDP	; IDirect3DDevice8Hook::DeleteStateBlock
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?CreateStateBlock@IDirect3DDevice8Hook@@UAGJW4_D3DSTATEBLOCKTYPE@@PAK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Type$ = 12						; size = 4
_pToken$ = 16						; size = 4
?CreateStateBlock@IDirect3DDevice8Hook@@UAGJW4_D3DSTATEBLOCKTYPE@@PAK@Z PROC ; IDirect3DDevice8Hook::CreateStateBlock, COMDAT

; 395  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 396  : 	return m_pDevice->CreateStateBlock(Type, pToken);

	mov	esi, esp
	mov	eax, DWORD PTR _pToken$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+228]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 397  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?CreateStateBlock@IDirect3DDevice8Hook@@UAGJW4_D3DSTATEBLOCKTYPE@@PAK@Z ENDP ; IDirect3DDevice8Hook::CreateStateBlock
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetClipStatus@IDirect3DDevice8Hook@@UAGJPBU_D3DCLIPSTATUS8@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pClipStatus$ = 12					; size = 4
?SetClipStatus@IDirect3DDevice8Hook@@UAGJPBU_D3DCLIPSTATUS8@@@Z PROC ; IDirect3DDevice8Hook::SetClipStatus, COMDAT

; 400  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 401  : 	return m_pDevice->SetClipStatus(pClipStatus);

	mov	esi, esp
	mov	eax, DWORD PTR _pClipStatus$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+232]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 402  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetClipStatus@IDirect3DDevice8Hook@@UAGJPBU_D3DCLIPSTATUS8@@@Z ENDP ; IDirect3DDevice8Hook::SetClipStatus
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetClipStatus@IDirect3DDevice8Hook@@UAGJPAU_D3DCLIPSTATUS8@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pClipStatus$ = 12					; size = 4
?GetClipStatus@IDirect3DDevice8Hook@@UAGJPAU_D3DCLIPSTATUS8@@@Z PROC ; IDirect3DDevice8Hook::GetClipStatus, COMDAT

; 405  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 406  : 	return m_pDevice->GetClipStatus(pClipStatus);

	mov	esi, esp
	mov	eax, DWORD PTR _pClipStatus$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+236]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 407  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetClipStatus@IDirect3DDevice8Hook@@UAGJPAU_D3DCLIPSTATUS8@@@Z ENDP ; IDirect3DDevice8Hook::GetClipStatus
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetTexture@IDirect3DDevice8Hook@@UAGJKPAPAUIDirect3DBaseTexture8@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Stage$ = 12						; size = 4
_ppTexture$ = 16					; size = 4
?GetTexture@IDirect3DDevice8Hook@@UAGJKPAPAUIDirect3DBaseTexture8@@@Z PROC ; IDirect3DDevice8Hook::GetTexture, COMDAT

; 410  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 411  : 	return m_pDevice->GetTexture(Stage, ppTexture);

	mov	esi, esp
	mov	eax, DWORD PTR _ppTexture$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Stage$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+240]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 412  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetTexture@IDirect3DDevice8Hook@@UAGJKPAPAUIDirect3DBaseTexture8@@@Z ENDP ; IDirect3DDevice8Hook::GetTexture
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetTexture@IDirect3DDevice8Hook@@UAGJKPAUIDirect3DBaseTexture8@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Stage$ = 12						; size = 4
_pTexture$ = 16						; size = 4
?SetTexture@IDirect3DDevice8Hook@@UAGJKPAUIDirect3DBaseTexture8@@@Z PROC ; IDirect3DDevice8Hook::SetTexture, COMDAT

; 415  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 416  : 	return m_pDevice->SetTexture(Stage, pTexture);

	mov	esi, esp
	mov	eax, DWORD PTR _pTexture$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Stage$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+244]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 417  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetTexture@IDirect3DDevice8Hook@@UAGJKPAUIDirect3DBaseTexture8@@@Z ENDP ; IDirect3DDevice8Hook::SetTexture
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetTextureStageState@IDirect3DDevice8Hook@@UAGJKW4_D3DTEXTURESTAGESTATETYPE@@PAK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Stage$ = 12						; size = 4
_Type$ = 16						; size = 4
_pValue$ = 20						; size = 4
?GetTextureStageState@IDirect3DDevice8Hook@@UAGJKW4_D3DTEXTURESTAGESTATETYPE@@PAK@Z PROC ; IDirect3DDevice8Hook::GetTextureStageState, COMDAT

; 420  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 421  : 	return m_pDevice->GetTextureStageState(Stage, Type, pValue);

	mov	esi, esp
	mov	eax, DWORD PTR _pValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Stage$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+248]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 422  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GetTextureStageState@IDirect3DDevice8Hook@@UAGJKW4_D3DTEXTURESTAGESTATETYPE@@PAK@Z ENDP ; IDirect3DDevice8Hook::GetTextureStageState
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetTextureStageState@IDirect3DDevice8Hook@@UAGJKW4_D3DTEXTURESTAGESTATETYPE@@K@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Stage$ = 12						; size = 4
_Type$ = 16						; size = 4
_Value$ = 20						; size = 4
?SetTextureStageState@IDirect3DDevice8Hook@@UAGJKW4_D3DTEXTURESTAGESTATETYPE@@K@Z PROC ; IDirect3DDevice8Hook::SetTextureStageState, COMDAT

; 425  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 426  : 	return m_pDevice->SetTextureStageState(Stage, Type, Value);

	mov	esi, esp
	mov	eax, DWORD PTR _Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Stage$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+252]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 427  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetTextureStageState@IDirect3DDevice8Hook@@UAGJKW4_D3DTEXTURESTAGESTATETYPE@@K@Z ENDP ; IDirect3DDevice8Hook::SetTextureStageState
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ValidateDevice@IDirect3DDevice8Hook@@UAGJPAK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pNumPasses$ = 12					; size = 4
?ValidateDevice@IDirect3DDevice8Hook@@UAGJPAK@Z PROC	; IDirect3DDevice8Hook::ValidateDevice, COMDAT

; 430  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 431  : 	return m_pDevice->ValidateDevice(pNumPasses);

	mov	esi, esp
	mov	eax, DWORD PTR _pNumPasses$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+256]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 432  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?ValidateDevice@IDirect3DDevice8Hook@@UAGJPAK@Z ENDP	; IDirect3DDevice8Hook::ValidateDevice
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetInfo@IDirect3DDevice8Hook@@UAGJKPAXK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_DevInfoID$ = 12					; size = 4
_pDevInfoStruct$ = 16					; size = 4
_DevInfoStructSize$ = 20				; size = 4
?GetInfo@IDirect3DDevice8Hook@@UAGJKPAXK@Z PROC		; IDirect3DDevice8Hook::GetInfo, COMDAT

; 435  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 436  : 	return m_pDevice->GetInfo(DevInfoID, pDevInfoStruct, DevInfoStructSize);

	mov	esi, esp
	mov	eax, DWORD PTR _DevInfoStructSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevInfoStruct$[ebp]
	push	ecx
	mov	edx, DWORD PTR _DevInfoID$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+260]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 437  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GetInfo@IDirect3DDevice8Hook@@UAGJKPAXK@Z ENDP		; IDirect3DDevice8Hook::GetInfo
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetPaletteEntries@IDirect3DDevice8Hook@@UAGJIPBUtagPALETTEENTRY@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_PaletteNumber$ = 12					; size = 4
_pEntries$ = 16						; size = 4
?SetPaletteEntries@IDirect3DDevice8Hook@@UAGJIPBUtagPALETTEENTRY@@@Z PROC ; IDirect3DDevice8Hook::SetPaletteEntries, COMDAT

; 440  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 441  : 	return m_pDevice->SetPaletteEntries(PaletteNumber, pEntries);

	mov	esi, esp
	mov	eax, DWORD PTR _pEntries$[ebp]
	push	eax
	mov	ecx, DWORD PTR _PaletteNumber$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+264]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 442  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetPaletteEntries@IDirect3DDevice8Hook@@UAGJIPBUtagPALETTEENTRY@@@Z ENDP ; IDirect3DDevice8Hook::SetPaletteEntries
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetPaletteEntries@IDirect3DDevice8Hook@@UAGJIPAUtagPALETTEENTRY@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_PaletteNumber$ = 12					; size = 4
_pEntries$ = 16						; size = 4
?GetPaletteEntries@IDirect3DDevice8Hook@@UAGJIPAUtagPALETTEENTRY@@@Z PROC ; IDirect3DDevice8Hook::GetPaletteEntries, COMDAT

; 445  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 446  : 	return m_pDevice->GetPaletteEntries(PaletteNumber, pEntries);

	mov	esi, esp
	mov	eax, DWORD PTR _pEntries$[ebp]
	push	eax
	mov	ecx, DWORD PTR _PaletteNumber$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+268]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 447  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetPaletteEntries@IDirect3DDevice8Hook@@UAGJIPAUtagPALETTEENTRY@@@Z ENDP ; IDirect3DDevice8Hook::GetPaletteEntries
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetCurrentTexturePalette@IDirect3DDevice8Hook@@UAGJI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_PaletteNumber$ = 12					; size = 4
?SetCurrentTexturePalette@IDirect3DDevice8Hook@@UAGJI@Z PROC ; IDirect3DDevice8Hook::SetCurrentTexturePalette, COMDAT

; 450  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 451  : 	return m_pDevice->SetCurrentTexturePalette(PaletteNumber);

	mov	esi, esp
	mov	eax, DWORD PTR _PaletteNumber$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+272]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 452  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetCurrentTexturePalette@IDirect3DDevice8Hook@@UAGJI@Z ENDP ; IDirect3DDevice8Hook::SetCurrentTexturePalette
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetCurrentTexturePalette@IDirect3DDevice8Hook@@UAGJPAI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pPaletteNumber$ = 12					; size = 4
?GetCurrentTexturePalette@IDirect3DDevice8Hook@@UAGJPAI@Z PROC ; IDirect3DDevice8Hook::GetCurrentTexturePalette, COMDAT

; 455  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 456  : 	return m_pDevice->GetCurrentTexturePalette(pPaletteNumber);

	mov	esi, esp
	mov	eax, DWORD PTR _pPaletteNumber$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+276]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 457  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetCurrentTexturePalette@IDirect3DDevice8Hook@@UAGJPAI@Z ENDP ; IDirect3DDevice8Hook::GetCurrentTexturePalette
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?DrawPrimitive@IDirect3DDevice8Hook@@UAGJW4_D3DPRIMITIVETYPE@@II@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_PrimitiveType$ = 12					; size = 4
_StartVertex$ = 16					; size = 4
_PrimitiveCount$ = 20					; size = 4
?DrawPrimitive@IDirect3DDevice8Hook@@UAGJW4_D3DPRIMITIVETYPE@@II@Z PROC ; IDirect3DDevice8Hook::DrawPrimitive, COMDAT

; 460  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 461  : 	return m_pDevice->DrawPrimitive(PrimitiveType, StartVertex, PrimitiveCount);

	mov	esi, esp
	mov	eax, DWORD PTR _PrimitiveCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _StartVertex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _PrimitiveType$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+280]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 462  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?DrawPrimitive@IDirect3DDevice8Hook@@UAGJW4_D3DPRIMITIVETYPE@@II@Z ENDP ; IDirect3DDevice8Hook::DrawPrimitive
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?DrawIndexedPrimitive@IDirect3DDevice8Hook@@UAGJW4_D3DPRIMITIVETYPE@@IIII@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Type$ = 12						; size = 4
_MinIndex$ = 16						; size = 4
_NumVertices$ = 20					; size = 4
_StartIndex$ = 24					; size = 4
_PrimitiveCount$ = 28					; size = 4
?DrawIndexedPrimitive@IDirect3DDevice8Hook@@UAGJW4_D3DPRIMITIVETYPE@@IIII@Z PROC ; IDirect3DDevice8Hook::DrawIndexedPrimitive, COMDAT

; 465  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 466  : 	return m_pDevice->DrawIndexedPrimitive(Type, MinIndex, NumVertices, StartIndex, PrimitiveCount);

	mov	esi, esp
	mov	eax, DWORD PTR _PrimitiveCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _StartIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _NumVertices$[ebp]
	push	edx
	mov	eax, DWORD PTR _MinIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+284]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 467  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?DrawIndexedPrimitive@IDirect3DDevice8Hook@@UAGJW4_D3DPRIMITIVETYPE@@IIII@Z ENDP ; IDirect3DDevice8Hook::DrawIndexedPrimitive
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?DrawPrimitiveUP@IDirect3DDevice8Hook@@UAGJW4_D3DPRIMITIVETYPE@@IPBXI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_PrimitiveType$ = 12					; size = 4
_PrimitiveCount$ = 16					; size = 4
_pVertexStreamZeroData$ = 20				; size = 4
_VertexStreamZeroStride$ = 24				; size = 4
?DrawPrimitiveUP@IDirect3DDevice8Hook@@UAGJW4_D3DPRIMITIVETYPE@@IPBXI@Z PROC ; IDirect3DDevice8Hook::DrawPrimitiveUP, COMDAT

; 470  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 471  : 	return m_pDevice->DrawPrimitiveUP(PrimitiveType, PrimitiveCount, pVertexStreamZeroData, VertexStreamZeroStride);

	mov	esi, esp
	mov	eax, DWORD PTR _VertexStreamZeroStride$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pVertexStreamZeroData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _PrimitiveCount$[ebp]
	push	edx
	mov	eax, DWORD PTR _PrimitiveType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+288]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 472  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?DrawPrimitiveUP@IDirect3DDevice8Hook@@UAGJW4_D3DPRIMITIVETYPE@@IPBXI@Z ENDP ; IDirect3DDevice8Hook::DrawPrimitiveUP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?DrawIndexedPrimitiveUP@IDirect3DDevice8Hook@@UAGJW4_D3DPRIMITIVETYPE@@IIIPBXW4_D3DFORMAT@@1I@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_PrimitiveType$ = 12					; size = 4
_MinIndex$ = 16						; size = 4
_NumVertices$ = 20					; size = 4
_PrimitiveCount$ = 24					; size = 4
_pIndexData$ = 28					; size = 4
_IndexDataFormat$ = 32					; size = 4
_pVertexStreamZeroData$ = 36				; size = 4
_VertexStreamZeroStride$ = 40				; size = 4
?DrawIndexedPrimitiveUP@IDirect3DDevice8Hook@@UAGJW4_D3DPRIMITIVETYPE@@IIIPBXW4_D3DFORMAT@@1I@Z PROC ; IDirect3DDevice8Hook::DrawIndexedPrimitiveUP, COMDAT

; 475  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 476  : 	return m_pDevice->DrawIndexedPrimitiveUP(PrimitiveType, MinIndex, NumVertices, PrimitiveCount, pIndexData, IndexDataFormat, pVertexStreamZeroData, VertexStreamZeroStride);

	mov	esi, esp
	mov	eax, DWORD PTR _VertexStreamZeroStride$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pVertexStreamZeroData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _IndexDataFormat$[ebp]
	push	edx
	mov	eax, DWORD PTR _pIndexData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _PrimitiveCount$[ebp]
	push	ecx
	mov	edx, DWORD PTR _NumVertices$[ebp]
	push	edx
	mov	eax, DWORD PTR _MinIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _PrimitiveType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+292]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 477  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	36					; 00000024H
?DrawIndexedPrimitiveUP@IDirect3DDevice8Hook@@UAGJW4_D3DPRIMITIVETYPE@@IIIPBXW4_D3DFORMAT@@1I@Z ENDP ; IDirect3DDevice8Hook::DrawIndexedPrimitiveUP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ProcessVertices@IDirect3DDevice8Hook@@UAGJIIIPAUIDirect3DVertexBuffer8@@K@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_SrcStartIndex$ = 12					; size = 4
_DestIndex$ = 16					; size = 4
_VertexCount$ = 20					; size = 4
_pDestBuffer$ = 24					; size = 4
_Flags$ = 28						; size = 4
?ProcessVertices@IDirect3DDevice8Hook@@UAGJIIIPAUIDirect3DVertexBuffer8@@K@Z PROC ; IDirect3DDevice8Hook::ProcessVertices, COMDAT

; 480  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 481  : 	return m_pDevice->ProcessVertices(SrcStartIndex, DestIndex, VertexCount, pDestBuffer, Flags);

	mov	esi, esp
	mov	eax, DWORD PTR _Flags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDestBuffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _VertexCount$[ebp]
	push	edx
	mov	eax, DWORD PTR _DestIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _SrcStartIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+296]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 482  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?ProcessVertices@IDirect3DDevice8Hook@@UAGJIIIPAUIDirect3DVertexBuffer8@@K@Z ENDP ; IDirect3DDevice8Hook::ProcessVertices
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?CreateVertexShader@IDirect3DDevice8Hook@@UAGJPBK0PAKK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pDeclaration$ = 12					; size = 4
_pFunction$ = 16					; size = 4
_pHandle$ = 20						; size = 4
_Usage$ = 24						; size = 4
?CreateVertexShader@IDirect3DDevice8Hook@@UAGJPBK0PAKK@Z PROC ; IDirect3DDevice8Hook::CreateVertexShader, COMDAT

; 485  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 486  : 	return m_pDevice->CreateVertexShader(pDeclaration, pFunction, pHandle, Usage);

	mov	esi, esp
	mov	eax, DWORD PTR _Usage$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pHandle$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pFunction$[ebp]
	push	edx
	mov	eax, DWORD PTR _pDeclaration$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+300]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 487  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?CreateVertexShader@IDirect3DDevice8Hook@@UAGJPBK0PAKK@Z ENDP ; IDirect3DDevice8Hook::CreateVertexShader
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetVertexShader@IDirect3DDevice8Hook@@UAGJK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Handle$ = 12						; size = 4
?SetVertexShader@IDirect3DDevice8Hook@@UAGJK@Z PROC	; IDirect3DDevice8Hook::SetVertexShader, COMDAT

; 490  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 491  : 	return m_pDevice->SetVertexShader(Handle);

	mov	esi, esp
	mov	eax, DWORD PTR _Handle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+304]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 492  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetVertexShader@IDirect3DDevice8Hook@@UAGJK@Z ENDP	; IDirect3DDevice8Hook::SetVertexShader
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetVertexShader@IDirect3DDevice8Hook@@UAGJPAK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pHandle$ = 12						; size = 4
?GetVertexShader@IDirect3DDevice8Hook@@UAGJPAK@Z PROC	; IDirect3DDevice8Hook::GetVertexShader, COMDAT

; 495  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 496  : 	return m_pDevice->GetVertexShader(pHandle);

	mov	esi, esp
	mov	eax, DWORD PTR _pHandle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+308]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 497  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetVertexShader@IDirect3DDevice8Hook@@UAGJPAK@Z ENDP	; IDirect3DDevice8Hook::GetVertexShader
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?DeleteVertexShader@IDirect3DDevice8Hook@@UAGJK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Handle$ = 12						; size = 4
?DeleteVertexShader@IDirect3DDevice8Hook@@UAGJK@Z PROC	; IDirect3DDevice8Hook::DeleteVertexShader, COMDAT

; 500  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 501  : 	return m_pDevice->DeleteVertexShader(Handle);

	mov	esi, esp
	mov	eax, DWORD PTR _Handle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+312]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 502  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?DeleteVertexShader@IDirect3DDevice8Hook@@UAGJK@Z ENDP	; IDirect3DDevice8Hook::DeleteVertexShader
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetVertexShaderConstant@IDirect3DDevice8Hook@@UAGJKPBXK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Register$ = 12						; size = 4
_pConstantData$ = 16					; size = 4
_ConstantCount$ = 20					; size = 4
?SetVertexShaderConstant@IDirect3DDevice8Hook@@UAGJKPBXK@Z PROC ; IDirect3DDevice8Hook::SetVertexShaderConstant, COMDAT

; 505  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 506  : 	return m_pDevice->SetVertexShaderConstant(Register, pConstantData, ConstantCount);

	mov	esi, esp
	mov	eax, DWORD PTR _ConstantCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pConstantData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Register$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+316]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 507  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetVertexShaderConstant@IDirect3DDevice8Hook@@UAGJKPBXK@Z ENDP ; IDirect3DDevice8Hook::SetVertexShaderConstant
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetVertexShaderConstant@IDirect3DDevice8Hook@@UAGJKPAXK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Register$ = 12						; size = 4
_pConstantData$ = 16					; size = 4
_ConstantCount$ = 20					; size = 4
?GetVertexShaderConstant@IDirect3DDevice8Hook@@UAGJKPAXK@Z PROC ; IDirect3DDevice8Hook::GetVertexShaderConstant, COMDAT

; 510  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 511  : 	return m_pDevice->GetVertexShaderConstant(Register, pConstantData, ConstantCount);

	mov	esi, esp
	mov	eax, DWORD PTR _ConstantCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pConstantData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Register$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+320]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 512  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GetVertexShaderConstant@IDirect3DDevice8Hook@@UAGJKPAXK@Z ENDP ; IDirect3DDevice8Hook::GetVertexShaderConstant
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetVertexShaderDeclaration@IDirect3DDevice8Hook@@UAGJKPAXPAK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Handle$ = 12						; size = 4
_pData$ = 16						; size = 4
_pSizeOfData$ = 20					; size = 4
?GetVertexShaderDeclaration@IDirect3DDevice8Hook@@UAGJKPAXPAK@Z PROC ; IDirect3DDevice8Hook::GetVertexShaderDeclaration, COMDAT

; 515  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 516  : 	return m_pDevice->GetVertexShaderDeclaration(Handle, pData, pSizeOfData);

	mov	esi, esp
	mov	eax, DWORD PTR _pSizeOfData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Handle$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+324]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 517  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GetVertexShaderDeclaration@IDirect3DDevice8Hook@@UAGJKPAXPAK@Z ENDP ; IDirect3DDevice8Hook::GetVertexShaderDeclaration
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetVertexShaderFunction@IDirect3DDevice8Hook@@UAGJKPAXPAK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Handle$ = 12						; size = 4
_pData$ = 16						; size = 4
_pSizeOfData$ = 20					; size = 4
?GetVertexShaderFunction@IDirect3DDevice8Hook@@UAGJKPAXPAK@Z PROC ; IDirect3DDevice8Hook::GetVertexShaderFunction, COMDAT

; 520  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 521  : 	return m_pDevice->GetVertexShaderFunction(Handle, pData, pSizeOfData);

	mov	esi, esp
	mov	eax, DWORD PTR _pSizeOfData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Handle$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+328]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 522  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GetVertexShaderFunction@IDirect3DDevice8Hook@@UAGJKPAXPAK@Z ENDP ; IDirect3DDevice8Hook::GetVertexShaderFunction
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetStreamSource@IDirect3DDevice8Hook@@UAGJIPAUIDirect3DVertexBuffer8@@I@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_StreamNumber$ = 12					; size = 4
_pStreamData$ = 16					; size = 4
_Stride$ = 20						; size = 4
?SetStreamSource@IDirect3DDevice8Hook@@UAGJIPAUIDirect3DVertexBuffer8@@I@Z PROC ; IDirect3DDevice8Hook::SetStreamSource, COMDAT

; 525  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 526  : 	return m_pDevice->SetStreamSource(StreamNumber, pStreamData, Stride);

	mov	esi, esp
	mov	eax, DWORD PTR _Stride$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pStreamData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _StreamNumber$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+332]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 527  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetStreamSource@IDirect3DDevice8Hook@@UAGJIPAUIDirect3DVertexBuffer8@@I@Z ENDP ; IDirect3DDevice8Hook::SetStreamSource
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetStreamSource@IDirect3DDevice8Hook@@UAGJIPAPAUIDirect3DVertexBuffer8@@PAI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_StreamNumber$ = 12					; size = 4
_ppStreamData$ = 16					; size = 4
_pStride$ = 20						; size = 4
?GetStreamSource@IDirect3DDevice8Hook@@UAGJIPAPAUIDirect3DVertexBuffer8@@PAI@Z PROC ; IDirect3DDevice8Hook::GetStreamSource, COMDAT

; 530  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 531  : 	return m_pDevice->GetStreamSource(StreamNumber, ppStreamData, pStride);

	mov	esi, esp
	mov	eax, DWORD PTR _pStride$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ppStreamData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _StreamNumber$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+336]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 532  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GetStreamSource@IDirect3DDevice8Hook@@UAGJIPAPAUIDirect3DVertexBuffer8@@PAI@Z ENDP ; IDirect3DDevice8Hook::GetStreamSource
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetIndices@IDirect3DDevice8Hook@@UAGJPAUIDirect3DIndexBuffer8@@I@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pIndexData$ = 12					; size = 4
_BaseVertexIndex$ = 16					; size = 4
?SetIndices@IDirect3DDevice8Hook@@UAGJPAUIDirect3DIndexBuffer8@@I@Z PROC ; IDirect3DDevice8Hook::SetIndices, COMDAT

; 535  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 536  : 	return m_pDevice->SetIndices(pIndexData, BaseVertexIndex);

	mov	esi, esp
	mov	eax, DWORD PTR _BaseVertexIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pIndexData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+340]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 537  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?SetIndices@IDirect3DDevice8Hook@@UAGJPAUIDirect3DIndexBuffer8@@I@Z ENDP ; IDirect3DDevice8Hook::SetIndices
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetIndices@IDirect3DDevice8Hook@@UAGJPAPAUIDirect3DIndexBuffer8@@PAI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_ppIndexData$ = 12					; size = 4
_pBaseVertexIndex$ = 16					; size = 4
?GetIndices@IDirect3DDevice8Hook@@UAGJPAPAUIDirect3DIndexBuffer8@@PAI@Z PROC ; IDirect3DDevice8Hook::GetIndices, COMDAT

; 540  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 541  : 	return m_pDevice->GetIndices(ppIndexData, pBaseVertexIndex);

	mov	esi, esp
	mov	eax, DWORD PTR _pBaseVertexIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ppIndexData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+344]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 542  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?GetIndices@IDirect3DDevice8Hook@@UAGJPAPAUIDirect3DIndexBuffer8@@PAI@Z ENDP ; IDirect3DDevice8Hook::GetIndices
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?CreatePixelShader@IDirect3DDevice8Hook@@UAGJPBKPAK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pFunction$ = 12					; size = 4
_pHandle$ = 16						; size = 4
?CreatePixelShader@IDirect3DDevice8Hook@@UAGJPBKPAK@Z PROC ; IDirect3DDevice8Hook::CreatePixelShader, COMDAT

; 545  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 546  : 	return m_pDevice->CreatePixelShader(pFunction, pHandle);

	mov	esi, esp
	mov	eax, DWORD PTR _pHandle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pFunction$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR [eax+348]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 547  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?CreatePixelShader@IDirect3DDevice8Hook@@UAGJPBKPAK@Z ENDP ; IDirect3DDevice8Hook::CreatePixelShader
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetPixelShader@IDirect3DDevice8Hook@@UAGJK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Handle$ = 12						; size = 4
?SetPixelShader@IDirect3DDevice8Hook@@UAGJK@Z PROC	; IDirect3DDevice8Hook::SetPixelShader, COMDAT

; 550  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 551  : 	return m_pDevice->SetPixelShader(Handle);

	mov	esi, esp
	mov	eax, DWORD PTR _Handle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+352]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 552  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetPixelShader@IDirect3DDevice8Hook@@UAGJK@Z ENDP	; IDirect3DDevice8Hook::SetPixelShader
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetPixelShader@IDirect3DDevice8Hook@@UAGJPAK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pHandle$ = 12						; size = 4
?GetPixelShader@IDirect3DDevice8Hook@@UAGJPAK@Z PROC	; IDirect3DDevice8Hook::GetPixelShader, COMDAT

; 555  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 556  : 	return m_pDevice->GetPixelShader(pHandle);

	mov	esi, esp
	mov	eax, DWORD PTR _pHandle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+356]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 557  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetPixelShader@IDirect3DDevice8Hook@@UAGJPAK@Z ENDP	; IDirect3DDevice8Hook::GetPixelShader
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?DeletePixelShader@IDirect3DDevice8Hook@@UAGJK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Handle$ = 12						; size = 4
?DeletePixelShader@IDirect3DDevice8Hook@@UAGJK@Z PROC	; IDirect3DDevice8Hook::DeletePixelShader, COMDAT

; 560  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 561  : 	return m_pDevice->DeletePixelShader(Handle);

	mov	esi, esp
	mov	eax, DWORD PTR _Handle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+360]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 562  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?DeletePixelShader@IDirect3DDevice8Hook@@UAGJK@Z ENDP	; IDirect3DDevice8Hook::DeletePixelShader
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetPixelShaderConstant@IDirect3DDevice8Hook@@UAGJKPBXK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Register$ = 12						; size = 4
_pConstantData$ = 16					; size = 4
_ConstantCount$ = 20					; size = 4
?SetPixelShaderConstant@IDirect3DDevice8Hook@@UAGJKPBXK@Z PROC ; IDirect3DDevice8Hook::SetPixelShaderConstant, COMDAT

; 565  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 566  : 	return m_pDevice->SetPixelShaderConstant(Register, pConstantData, ConstantCount);

	mov	esi, esp
	mov	eax, DWORD PTR _ConstantCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pConstantData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Register$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+364]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 567  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?SetPixelShaderConstant@IDirect3DDevice8Hook@@UAGJKPBXK@Z ENDP ; IDirect3DDevice8Hook::SetPixelShaderConstant
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetPixelShaderConstant@IDirect3DDevice8Hook@@UAGJKPAXK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Register$ = 12						; size = 4
_pConstantData$ = 16					; size = 4
_ConstantCount$ = 20					; size = 4
?GetPixelShaderConstant@IDirect3DDevice8Hook@@UAGJKPAXK@Z PROC ; IDirect3DDevice8Hook::GetPixelShaderConstant, COMDAT

; 570  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 571  : 	return m_pDevice->GetPixelShaderConstant(Register, pConstantData, ConstantCount);

	mov	esi, esp
	mov	eax, DWORD PTR _ConstantCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pConstantData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Register$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+368]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 572  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GetPixelShaderConstant@IDirect3DDevice8Hook@@UAGJKPAXK@Z ENDP ; IDirect3DDevice8Hook::GetPixelShaderConstant
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetPixelShaderFunction@IDirect3DDevice8Hook@@UAGJKPAXPAK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Handle$ = 12						; size = 4
_pData$ = 16						; size = 4
_pSizeOfData$ = 20					; size = 4
?GetPixelShaderFunction@IDirect3DDevice8Hook@@UAGJKPAXPAK@Z PROC ; IDirect3DDevice8Hook::GetPixelShaderFunction, COMDAT

; 575  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 576  : 	return m_pDevice->GetPixelShaderFunction(Handle, pData, pSizeOfData);

	mov	esi, esp
	mov	eax, DWORD PTR _pSizeOfData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Handle$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+372]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 577  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?GetPixelShaderFunction@IDirect3DDevice8Hook@@UAGJKPAXPAK@Z ENDP ; IDirect3DDevice8Hook::GetPixelShaderFunction
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?DrawRectPatch@IDirect3DDevice8Hook@@UAGJIPBMPBU_D3DRECTPATCH_INFO@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Handle$ = 12						; size = 4
_pNumSegs$ = 16						; size = 4
_pRectPatchInfo$ = 20					; size = 4
?DrawRectPatch@IDirect3DDevice8Hook@@UAGJIPBMPBU_D3DRECTPATCH_INFO@@@Z PROC ; IDirect3DDevice8Hook::DrawRectPatch, COMDAT

; 580  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 581  : 	return m_pDevice->DrawRectPatch(Handle, pNumSegs, pRectPatchInfo);

	mov	esi, esp
	mov	eax, DWORD PTR _pRectPatchInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pNumSegs$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Handle$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+376]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 582  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?DrawRectPatch@IDirect3DDevice8Hook@@UAGJIPBMPBU_D3DRECTPATCH_INFO@@@Z ENDP ; IDirect3DDevice8Hook::DrawRectPatch
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?DrawTriPatch@IDirect3DDevice8Hook@@UAGJIPBMPBU_D3DTRIPATCH_INFO@@@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Handle$ = 12						; size = 4
_pNumSegs$ = 16						; size = 4
_pTriPatchInfo$ = 20					; size = 4
?DrawTriPatch@IDirect3DDevice8Hook@@UAGJIPBMPBU_D3DTRIPATCH_INFO@@@Z PROC ; IDirect3DDevice8Hook::DrawTriPatch, COMDAT

; 585  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 586  : 	return m_pDevice->DrawTriPatch(Handle, pNumSegs, pTriPatchInfo);

	mov	esi, esp
	mov	eax, DWORD PTR _pTriPatchInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pNumSegs$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Handle$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [ecx]
	push	eax
	mov	edx, DWORD PTR [ecx+380]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 587  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?DrawTriPatch@IDirect3DDevice8Hook@@UAGJIPBMPBU_D3DTRIPATCH_INFO@@@Z ENDP ; IDirect3DDevice8Hook::DrawTriPatch
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?DeletePatch@IDirect3DDevice8Hook@@UAGJI@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_Handle$ = 12						; size = 4
?DeletePatch@IDirect3DDevice8Hook@@UAGJI@Z PROC		; IDirect3DDevice8Hook::DeletePatch, COMDAT

; 590  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 591  : 	return m_pDevice->DeletePatch(Handle);

	mov	esi, esp
	mov	eax, DWORD PTR _Handle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [edx]
	push	ecx
	mov	eax, DWORD PTR [edx+384]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 592  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?DeletePatch@IDirect3DDevice8Hook@@UAGJI@Z ENDP		; IDirect3DDevice8Hook::DeletePatch
_TEXT	ENDS
END
