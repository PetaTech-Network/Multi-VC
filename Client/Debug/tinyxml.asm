; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	d:\vice-players-master\Shared\TinyXML\tinyxml.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?condenseWhiteSpace@TiXmlBase@@0_NA		; TiXmlBase::condenseWhiteSpace
_DATA	SEGMENT
?condenseWhiteSpace@TiXmlBase@@0_NA DB 01H		; TiXmlBase::condenseWhiteSpace
_DATA	ENDS
PUBLIC	?TiXmlFOpen@@YAPAU_iobuf@@PBD0@Z		; TiXmlFOpen
EXTRN	_fopen_s:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File d:\vice-players-master\shared\tinyxml\tinyxml.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ?TiXmlFOpen@@YAPAU_iobuf@@PBD0@Z
_TEXT	SEGMENT
_err$ = -20						; size = 4
_fp$ = -8						; size = 4
_filename$ = 8						; size = 4
_mode$ = 12						; size = 4
?TiXmlFOpen@@YAPAU_iobuf@@PBD0@Z PROC			; TiXmlFOpen, COMDAT

; 39   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 40   : 	#if defined(_MSC_VER) && (_MSC_VER >= 1400 )
; 41   : 		FILE* fp = 0;

	mov	DWORD PTR _fp$[ebp], 0

; 42   : 		errno_t err = fopen_s( &fp, filename, mode );

	mov	eax, DWORD PTR _mode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	lea	edx, DWORD PTR _fp$[ebp]
	push	edx
	call	_fopen_s
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _err$[ebp], eax

; 43   : 		if ( !err && fp )

	cmp	DWORD PTR _err$[ebp], 0
	jne	SHORT $LN1@TiXmlFOpen
	cmp	DWORD PTR _fp$[ebp], 0
	je	SHORT $LN1@TiXmlFOpen

; 44   : 			return fp;

	mov	eax, DWORD PTR _fp$[ebp]
	jmp	SHORT $LN2@TiXmlFOpen
$LN1@TiXmlFOpen:

; 45   : 		return 0;

	xor	eax, eax
$LN2@TiXmlFOpen:

; 46   : 	#else
; 47   : 		return fopen( filename, mode );
; 48   : 	#endif
; 49   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@TiXmlFOpen
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@TiXmlFOpen:
	DD	1
	DD	$LN5@TiXmlFOpen
$LN5@TiXmlFOpen:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@TiXmlFOpen
$LN4@TiXmlFOpen:
	DB	102					; 00000066H
	DB	112					; 00000070H
	DB	0
?TiXmlFOpen@@YAPAU_iobuf@@PBD0@Z ENDP			; TiXmlFOpen
_TEXT	ENDS
PUBLIC	??YTiXmlString@@QAEAAV0@D@Z			; TiXmlString::operator+=
PUBLIC	??$_snprintf_s@$0CA@@@YAHAAY0CA@DIPBDZZ		; _snprintf_s<32>
PUBLIC	??_C@_08LCBMGHJI@?$CG?$CDx?$CF02X?$DL?$AA@	; `string'
PUBLIC	?c_str@TiXmlString@@QBEPBDXZ			; TiXmlString::c_str
PUBLIC	??ATiXmlString@@QBEAADI@Z			; TiXmlString::operator[]
PUBLIC	?length@TiXmlString@@QBEIXZ			; TiXmlString::length
PUBLIC	__$ArrayPad$
PUBLIC	?EncodeString@TiXmlBase@@SAXABVTiXmlString@@PAV2@@Z ; TiXmlBase::EncodeString
EXTRN	_strlen:PROC
EXTRN	?entity@TiXmlBase@@0PAUEntity@1@A:BYTE		; TiXmlBase::entity
EXTRN	?append@TiXmlString@@QAEAAV1@PBDI@Z:PROC	; TiXmlString::append
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
;	COMDAT ??_C@_08LCBMGHJI@?$CG?$CDx?$CF02X?$DL?$AA@
CONST	SEGMENT
??_C@_08LCBMGHJI@?$CG?$CDx?$CF02X?$DL?$AA@ DB '&#x%02X;', 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?EncodeString@TiXmlBase@@SAXABVTiXmlString@@PAV2@@Z
_TEXT	SEGMENT
_buf$209282 = -64					; size = 32
_c$209261 = -21						; size = 1
_i$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_str$ = 8						; size = 4
_outString$ = 12					; size = 4
?EncodeString@TiXmlBase@@SAXABVTiXmlString@@PAV2@@Z PROC ; TiXmlBase::EncodeString, COMDAT

; 52   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 53   : 	int i=0;

	mov	DWORD PTR _i$[ebp], 0
$LN19@EncodeStri:

; 54   : 
; 55   : 	while( i<(int)str.length() )

	mov	ecx, DWORD PTR _str$[ebp]
	call	?length@TiXmlString@@QBEIXZ		; TiXmlString::length
	cmp	DWORD PTR _i$[ebp], eax
	jge	$LN20@EncodeStri

; 56   : 	{
; 57   : 		unsigned char c = (unsigned char) str[i];

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	??ATiXmlString@@QBEAADI@Z		; TiXmlString::operator[]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c$209261[ebp], cl

; 58   : 
; 59   : 		if (    c == '&'
; 60   : 		     && i < ( (int)str.length() - 2 )
; 61   : 			 && str[i+1] == '#'
; 62   : 			 && str[i+2] == 'x' )

	movzx	eax, BYTE PTR _c$209261[ebp]
	cmp	eax, 38					; 00000026H
	jne	$LN17@EncodeStri
	mov	ecx, DWORD PTR _str$[ebp]
	call	?length@TiXmlString@@QBEIXZ		; TiXmlString::length
	sub	eax, 2
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN17@EncodeStri
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	??ATiXmlString@@QBEAADI@Z		; TiXmlString::operator[]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 35					; 00000023H
	jne	SHORT $LN17@EncodeStri
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 2
	push	eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	??ATiXmlString@@QBEAADI@Z		; TiXmlString::operator[]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 120				; 00000078H
	jne	SHORT $LN17@EncodeStri
$LN16@EncodeStri:

; 63   : 		{
; 64   : 			// Hexadecimal character reference.
; 65   : 			// Pass through unchanged.
; 66   : 			// &#xA9;	-- copyright symbol, for example.
; 67   : 			//
; 68   : 			// The -1 is a bug fix from Rob Laveaux. It keeps
; 69   : 			// an overflow from happening if there is no ';'.
; 70   : 			// There are actually 2 ways to exit this loop -
; 71   : 			// while fails (error case) and break (semicolon found).
; 72   : 			// However, there is no mechanism (currently) for
; 73   : 			// this function to return an error.
; 74   : 			while ( i<(int)str.length()-1 )

	mov	ecx, DWORD PTR _str$[ebp]
	call	?length@TiXmlString@@QBEIXZ		; TiXmlString::length
	sub	eax, 1
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN15@EncodeStri

; 75   : 			{
; 76   : 				outString->append( str.c_str() + i, 1 );

	push	1
	mov	ecx, DWORD PTR _str$[ebp]
	call	?c_str@TiXmlString@@QBEPBDXZ		; TiXmlString::c_str
	add	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _outString$[ebp]
	call	?append@TiXmlString@@QAEAAV1@PBDI@Z	; TiXmlString::append

; 77   : 				++i;

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax

; 78   : 				if ( str[i] == ';' )

	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	??ATiXmlString@@QBEAADI@Z		; TiXmlString::operator[]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 59					; 0000003bH
	jne	SHORT $LN14@EncodeStri

; 79   : 					break;

	jmp	SHORT $LN15@EncodeStri
$LN14@EncodeStri:

; 80   : 			}

	jmp	SHORT $LN16@EncodeStri
$LN15@EncodeStri:

; 81   : 		}
; 82   : 		else if ( c == '&' )

	jmp	$LN13@EncodeStri
$LN17@EncodeStri:
	movzx	eax, BYTE PTR _c$209261[ebp]
	cmp	eax, 38					; 00000026H
	jne	SHORT $LN12@EncodeStri

; 83   : 		{
; 84   : 			outString->append( entity[0].str, entity[0].strLength );

	mov	eax, DWORD PTR ?entity@TiXmlBase@@0PAUEntity@1@A+4
	push	eax
	mov	ecx, DWORD PTR ?entity@TiXmlBase@@0PAUEntity@1@A
	push	ecx
	mov	ecx, DWORD PTR _outString$[ebp]
	call	?append@TiXmlString@@QAEAAV1@PBDI@Z	; TiXmlString::append

; 85   : 			++i;

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	jmp	$LN13@EncodeStri
$LN12@EncodeStri:

; 86   : 		}
; 87   : 		else if ( c == '<' )

	movzx	eax, BYTE PTR _c$209261[ebp]
	cmp	eax, 60					; 0000003cH
	jne	SHORT $LN10@EncodeStri

; 88   : 		{
; 89   : 			outString->append( entity[1].str, entity[1].strLength );

	mov	eax, DWORD PTR ?entity@TiXmlBase@@0PAUEntity@1@A+16
	push	eax
	mov	ecx, DWORD PTR ?entity@TiXmlBase@@0PAUEntity@1@A+12
	push	ecx
	mov	ecx, DWORD PTR _outString$[ebp]
	call	?append@TiXmlString@@QAEAAV1@PBDI@Z	; TiXmlString::append

; 90   : 			++i;

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	jmp	$LN13@EncodeStri
$LN10@EncodeStri:

; 91   : 		}
; 92   : 		else if ( c == '>' )

	movzx	eax, BYTE PTR _c$209261[ebp]
	cmp	eax, 62					; 0000003eH
	jne	SHORT $LN8@EncodeStri

; 93   : 		{
; 94   : 			outString->append( entity[2].str, entity[2].strLength );

	mov	eax, DWORD PTR ?entity@TiXmlBase@@0PAUEntity@1@A+28
	push	eax
	mov	ecx, DWORD PTR ?entity@TiXmlBase@@0PAUEntity@1@A+24
	push	ecx
	mov	ecx, DWORD PTR _outString$[ebp]
	call	?append@TiXmlString@@QAEAAV1@PBDI@Z	; TiXmlString::append

; 95   : 			++i;

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	jmp	$LN13@EncodeStri
$LN8@EncodeStri:

; 96   : 		}
; 97   : 		else if ( c == '\"' )

	movzx	eax, BYTE PTR _c$209261[ebp]
	cmp	eax, 34					; 00000022H
	jne	SHORT $LN6@EncodeStri

; 98   : 		{
; 99   : 			outString->append( entity[3].str, entity[3].strLength );

	mov	eax, DWORD PTR ?entity@TiXmlBase@@0PAUEntity@1@A+40
	push	eax
	mov	ecx, DWORD PTR ?entity@TiXmlBase@@0PAUEntity@1@A+36
	push	ecx
	mov	ecx, DWORD PTR _outString$[ebp]
	call	?append@TiXmlString@@QAEAAV1@PBDI@Z	; TiXmlString::append

; 100  : 			++i;

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	jmp	$LN13@EncodeStri
$LN6@EncodeStri:

; 101  : 		}
; 102  : 		else if ( c == '\'' )

	movzx	eax, BYTE PTR _c$209261[ebp]
	cmp	eax, 39					; 00000027H
	jne	SHORT $LN4@EncodeStri

; 103  : 		{
; 104  : 			outString->append( entity[4].str, entity[4].strLength );

	mov	eax, DWORD PTR ?entity@TiXmlBase@@0PAUEntity@1@A+52
	push	eax
	mov	ecx, DWORD PTR ?entity@TiXmlBase@@0PAUEntity@1@A+48
	push	ecx
	mov	ecx, DWORD PTR _outString$[ebp]
	call	?append@TiXmlString@@QAEAAV1@PBDI@Z	; TiXmlString::append

; 105  : 			++i;

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	jmp	SHORT $LN13@EncodeStri
$LN4@EncodeStri:

; 106  : 		}
; 107  : 		else if ( c < 32 )

	movzx	eax, BYTE PTR _c$209261[ebp]
	cmp	eax, 32					; 00000020H
	jge	SHORT $LN2@EncodeStri

; 108  : 		{
; 109  : 			// Easy pass at non-alpha/numeric/symbol
; 110  : 			// Below 32 is symbolic.
; 111  : 			char buf[ 32 ];
; 112  : 
; 113  : 			#if defined(TIXML_SNPRINTF)
; 114  : 				TIXML_SNPRINTF( buf, sizeof(buf), "&#x%02X;", (unsigned) ( c & 0xff ) );

	movzx	eax, BYTE PTR _c$209261[ebp]
	and	eax, 255				; 000000ffH
	push	eax
	push	OFFSET ??_C@_08LCBMGHJI@?$CG?$CDx?$CF02X?$DL?$AA@
	push	32					; 00000020H
	lea	ecx, DWORD PTR _buf$209282[ebp]
	push	ecx
	call	??$_snprintf_s@$0CA@@@YAHAAY0CA@DIPBDZZ	; _snprintf_s<32>
	add	esp, 16					; 00000010H

; 115  : 			#else
; 116  : 				sprintf( buf, "&#x%02X;", (unsigned) ( c & 0xff ) );
; 117  : 			#endif
; 118  : 
; 119  : 			//*ME:	warning C4267: convert 'size_t' to 'int'
; 120  : 			//*ME:	Int-Cast to make compiler happy ...
; 121  : 			outString->append( buf, (int)strlen( buf ) );

	lea	eax, DWORD PTR _buf$209282[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR _buf$209282[ebp]
	push	ecx
	mov	ecx, DWORD PTR _outString$[ebp]
	call	?append@TiXmlString@@QAEAAV1@PBDI@Z	; TiXmlString::append

; 122  : 			++i;

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax

; 123  : 		}
; 124  : 		else

	jmp	SHORT $LN13@EncodeStri
$LN2@EncodeStri:

; 125  : 		{
; 126  : 			//char realc = (char) c;
; 127  : 			//outString->append( &realc, 1 );
; 128  : 			*outString += (char) c;	// somewhat more efficient function call.

	movzx	eax, BYTE PTR _c$209261[ebp]
	push	eax
	mov	ecx, DWORD PTR _outString$[ebp]
	call	??YTiXmlString@@QAEAAV0@D@Z		; TiXmlString::operator+=

; 129  : 			++i;

	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN13@EncodeStri:

; 130  : 		}
; 131  : 	}

	jmp	$LN19@EncodeStri
$LN20@EncodeStri:

; 132  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN24@EncodeStri
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN24@EncodeStri:
	DD	1
	DD	$LN23@EncodeStri
$LN23@EncodeStri:
	DD	-64					; ffffffc0H
	DD	32					; 00000020H
	DD	$LN22@EncodeStri
$LN22@EncodeStri:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?EncodeString@TiXmlBase@@SAXABVTiXmlString@@PAV2@@Z ENDP ; TiXmlBase::EncodeString
_TEXT	ENDS
PUBLIC	??1TiXmlBase@@UAE@XZ				; TiXmlBase::~TiXmlBase
PUBLIC	??0TiXmlString@@QAE@XZ				; TiXmlString::TiXmlString
PUBLIC	??_7TiXmlNode@@6B@				; TiXmlNode::`vftable'
PUBLIC	??0TiXmlBase@@QAE@XZ				; TiXmlBase::TiXmlBase
PUBLIC	??0TiXmlNode@@IAE@W4NodeType@0@@Z		; TiXmlNode::TiXmlNode
PUBLIC	??_R4TiXmlNode@@6B@				; TiXmlNode::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTiXmlNode@@@8				; TiXmlNode `RTTI Type Descriptor'
PUBLIC	??_R3TiXmlNode@@8				; TiXmlNode::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TiXmlNode@@8				; TiXmlNode::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TiXmlNode@@8			; TiXmlNode::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@TiXmlBase@@8			; TiXmlBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVTiXmlBase@@@8				; TiXmlBase `RTTI Type Descriptor'
PUBLIC	??_R3TiXmlBase@@8				; TiXmlBase::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TiXmlBase@@8				; TiXmlBase::`RTTI Base Class Array'
PUBLIC	?ToDocument@TiXmlNode@@UAEPAVTiXmlDocument@@XZ	; TiXmlNode::ToDocument
PUBLIC	?ToDocument@TiXmlNode@@UBEPBVTiXmlDocument@@XZ	; TiXmlNode::ToDocument
PUBLIC	?ToElement@TiXmlNode@@UAEPAVTiXmlElement@@XZ	; TiXmlNode::ToElement
PUBLIC	?ToElement@TiXmlNode@@UBEPBVTiXmlElement@@XZ	; TiXmlNode::ToElement
PUBLIC	?ToComment@TiXmlNode@@UAEPAVTiXmlComment@@XZ	; TiXmlNode::ToComment
PUBLIC	?ToComment@TiXmlNode@@UBEPBVTiXmlComment@@XZ	; TiXmlNode::ToComment
PUBLIC	?ToUnknown@TiXmlNode@@UAEPAVTiXmlUnknown@@XZ	; TiXmlNode::ToUnknown
PUBLIC	?ToUnknown@TiXmlNode@@UBEPBVTiXmlUnknown@@XZ	; TiXmlNode::ToUnknown
PUBLIC	?ToText@TiXmlNode@@UAEPAVTiXmlText@@XZ		; TiXmlNode::ToText
PUBLIC	?ToText@TiXmlNode@@UBEPBVTiXmlText@@XZ		; TiXmlNode::ToText
PUBLIC	?ToDeclaration@TiXmlNode@@UAEPAVTiXmlDeclaration@@XZ ; TiXmlNode::ToDeclaration
PUBLIC	?ToDeclaration@TiXmlNode@@UBEPBVTiXmlDeclaration@@XZ ; TiXmlNode::ToDeclaration
PUBLIC	?ToStylesheetReference@TiXmlNode@@UAEPAVTiXmlStylesheetReference@@XZ ; TiXmlNode::ToStylesheetReference
PUBLIC	?ToStylesheetReference@TiXmlNode@@UBEPBVTiXmlStylesheetReference@@XZ ; TiXmlNode::ToStylesheetReference
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	??_ETiXmlNode@@UAEPAXI@Z:PROC			; TiXmlNode::`vector deleting destructor'
EXTRN	__purecall:PROC
;	COMDAT ??_R2TiXmlBase@@8
rdata$r	SEGMENT
??_R2TiXmlBase@@8 DD FLAT:??_R1A@?0A@EA@TiXmlBase@@8	; TiXmlBase::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3TiXmlBase@@8
rdata$r	SEGMENT
??_R3TiXmlBase@@8 DD 00H				; TiXmlBase::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2TiXmlBase@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTiXmlBase@@@8
_DATA	SEGMENT
??_R0?AVTiXmlBase@@@8 DD FLAT:??_7type_info@@6B@	; TiXmlBase `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTiXmlBase@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@TiXmlBase@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TiXmlBase@@8 DD FLAT:??_R0?AVTiXmlBase@@@8 ; TiXmlBase::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TiXmlBase@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@TiXmlNode@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TiXmlNode@@8 DD FLAT:??_R0?AVTiXmlNode@@@8 ; TiXmlNode::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TiXmlNode@@8
rdata$r	ENDS
;	COMDAT ??_R2TiXmlNode@@8
rdata$r	SEGMENT
??_R2TiXmlNode@@8 DD FLAT:??_R1A@?0A@EA@TiXmlNode@@8	; TiXmlNode::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@TiXmlBase@@8
rdata$r	ENDS
;	COMDAT ??_R3TiXmlNode@@8
rdata$r	SEGMENT
??_R3TiXmlNode@@8 DD 00H				; TiXmlNode::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2TiXmlNode@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTiXmlNode@@@8
_DATA	SEGMENT
??_R0?AVTiXmlNode@@@8 DD FLAT:??_7type_info@@6B@	; TiXmlNode `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTiXmlNode@@', 00H
_DATA	ENDS
;	COMDAT ??_R4TiXmlNode@@6B@
rdata$r	SEGMENT
??_R4TiXmlNode@@6B@ DD 00H				; TiXmlNode::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTiXmlNode@@@8
	DD	FLAT:??_R3TiXmlNode@@8
rdata$r	ENDS
;	COMDAT ??_7TiXmlNode@@6B@
CONST	SEGMENT
??_7TiXmlNode@@6B@ DD FLAT:??_R4TiXmlNode@@6B@		; TiXmlNode::`vftable'
	DD	FLAT:??_ETiXmlNode@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?ToDocument@TiXmlNode@@UAEPAVTiXmlDocument@@XZ
	DD	FLAT:?ToDocument@TiXmlNode@@UBEPBVTiXmlDocument@@XZ
	DD	FLAT:?ToElement@TiXmlNode@@UAEPAVTiXmlElement@@XZ
	DD	FLAT:?ToElement@TiXmlNode@@UBEPBVTiXmlElement@@XZ
	DD	FLAT:?ToComment@TiXmlNode@@UAEPAVTiXmlComment@@XZ
	DD	FLAT:?ToComment@TiXmlNode@@UBEPBVTiXmlComment@@XZ
	DD	FLAT:?ToUnknown@TiXmlNode@@UAEPAVTiXmlUnknown@@XZ
	DD	FLAT:?ToUnknown@TiXmlNode@@UBEPBVTiXmlUnknown@@XZ
	DD	FLAT:?ToText@TiXmlNode@@UAEPAVTiXmlText@@XZ
	DD	FLAT:?ToText@TiXmlNode@@UBEPBVTiXmlText@@XZ
	DD	FLAT:?ToDeclaration@TiXmlNode@@UAEPAVTiXmlDeclaration@@XZ
	DD	FLAT:?ToDeclaration@TiXmlNode@@UBEPBVTiXmlDeclaration@@XZ
	DD	FLAT:?ToStylesheetReference@TiXmlNode@@UAEPAVTiXmlStylesheetReference@@XZ
	DD	FLAT:?ToStylesheetReference@TiXmlNode@@UBEPBVTiXmlStylesheetReference@@XZ
	DD	FLAT:__purecall
	DD	FLAT:__purecall
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0TiXmlNode@@IAE@W4NodeType@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0TiXmlNode@@IAE@W4NodeType@0@@Z$0
__ehfuncinfo$??0TiXmlNode@@IAE@W4NodeType@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0TiXmlNode@@IAE@W4NodeType@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0TiXmlNode@@IAE@W4NodeType@0@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__type$ = 8						; size = 4
??0TiXmlNode@@IAE@W4NodeType@0@@Z PROC			; TiXmlNode::TiXmlNode, COMDAT
; _this$ = ecx

; 136  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0TiXmlNode@@IAE@W4NodeType@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TiXmlBase@@QAE@XZ			; TiXmlBase::TiXmlBase
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TiXmlNode@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??0TiXmlString@@QAE@XZ			; TiXmlString::TiXmlString

; 137  : 	parent = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 138  : 	type = _type;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __type$[ebp]
	mov	DWORD PTR [eax+20], ecx

; 139  : 	firstChild = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0

; 140  : 	lastChild = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 141  : 	prev = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 0

; 142  : 	next = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+40], 0

; 143  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0TiXmlNode@@IAE@W4NodeType@0@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1TiXmlBase@@UAE@XZ			; TiXmlBase::~TiXmlBase
__ehhandler$??0TiXmlNode@@IAE@W4NodeType@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0TiXmlNode@@IAE@W4NodeType@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0TiXmlNode@@IAE@W4NodeType@0@@Z ENDP			; TiXmlNode::TiXmlNode
PUBLIC	??1TiXmlNode@@UAE@XZ				; TiXmlNode::~TiXmlNode
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GTiXmlNode@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GTiXmlNode@@UAEPAXI@Z PROC				; TiXmlNode::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TiXmlNode@@UAE@XZ			; TiXmlNode::~TiXmlNode
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GTiXmlNode@@UAEPAXI@Z ENDP				; TiXmlNode::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1TiXmlString@@QAE@XZ				; TiXmlString::~TiXmlString
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1TiXmlNode@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1TiXmlNode@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1TiXmlNode@@UAE@XZ$1
__ehfuncinfo$??1TiXmlNode@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1TiXmlNode@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1TiXmlNode@@UAE@XZ
_TEXT	SEGMENT
tv89 = -268						; size = 4
$T210715 = -260						; size = 4
$T210716 = -248						; size = 4
_temp$ = -44						; size = 4
_node$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1TiXmlNode@@UAE@XZ PROC				; TiXmlNode::~TiXmlNode, COMDAT
; _this$ = ecx

; 147  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1TiXmlNode@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TiXmlNode@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 148  : 	TiXmlNode* node = firstChild;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _node$[ebp], ecx

; 149  : 	TiXmlNode* temp = 0;

	mov	DWORD PTR _temp$[ebp], 0
$LN2@TiXmlNode:

; 150  : 
; 151  : 	while ( node )

	cmp	DWORD PTR _node$[ebp], 0
	je	SHORT $LN3@TiXmlNode

; 152  : 	{
; 153  : 		temp = node;

	mov	eax, DWORD PTR _node$[ebp]
	mov	DWORD PTR _temp$[ebp], eax

; 154  : 		node = node->next;

	mov	eax, DWORD PTR _node$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR _node$[ebp], ecx

; 155  : 		delete temp;

	mov	eax, DWORD PTR _temp$[ebp]
	mov	DWORD PTR $T210716[ebp], eax
	mov	ecx, DWORD PTR $T210716[ebp]
	mov	DWORD PTR $T210715[ebp], ecx
	cmp	DWORD PTR $T210715[ebp], 0
	je	SHORT $LN5@TiXmlNode
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T210715[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T210715[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN6@TiXmlNode
$LN5@TiXmlNode:
	mov	DWORD PTR tv89[ebp], 0
$LN6@TiXmlNode:

; 156  : 	}

	jmp	SHORT $LN2@TiXmlNode
$LN3@TiXmlNode:

; 157  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TiXmlBase@@UAE@XZ			; TiXmlBase::~TiXmlBase
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1TiXmlNode@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1TiXmlBase@@UAE@XZ			; TiXmlBase::~TiXmlBase
__unwindfunclet$??1TiXmlNode@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__ehhandler$??1TiXmlNode@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1TiXmlNode@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1TiXmlNode@@UAE@XZ ENDP				; TiXmlNode::~TiXmlNode
PUBLIC	?SetValue@TiXmlNode@@QAEXPBD@Z			; TiXmlNode::SetValue
PUBLIC	?CopyTo@TiXmlNode@@IBEXPAV1@@Z			; TiXmlNode::CopyTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CopyTo@TiXmlNode@@IBEXPAV1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_target$ = 8						; size = 4
?CopyTo@TiXmlNode@@IBEXPAV1@@Z PROC			; TiXmlNode::CopyTo, COMDAT
; _this$ = ecx

; 161  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 162  : 	target->SetValue (value.c_str() );

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?c_str@TiXmlString@@QBEPBDXZ		; TiXmlString::c_str
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	call	?SetValue@TiXmlNode@@QAEXPBD@Z		; TiXmlNode::SetValue

; 163  : 	target->userData = userData;

	mov	eax, DWORD PTR _target$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx

; 164  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CopyTo@TiXmlNode@@IBEXPAV1@@Z ENDP			; TiXmlNode::CopyTo
_TEXT	ENDS
PUBLIC	?Clear@TiXmlNode@@QAEXXZ			; TiXmlNode::Clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Clear@TiXmlNode@@QAEXXZ
_TEXT	SEGMENT
tv77 = -256						; size = 4
$T210731 = -248						; size = 4
$T210732 = -236						; size = 4
_temp$ = -32						; size = 4
_node$ = -20						; size = 4
_this$ = -8						; size = 4
?Clear@TiXmlNode@@QAEXXZ PROC				; TiXmlNode::Clear, COMDAT
; _this$ = ecx

; 168  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 169  : 	TiXmlNode* node = firstChild;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _node$[ebp], ecx

; 170  : 	TiXmlNode* temp = 0;

	mov	DWORD PTR _temp$[ebp], 0
$LN2@Clear:

; 171  : 
; 172  : 	while ( node )

	cmp	DWORD PTR _node$[ebp], 0
	je	SHORT $LN1@Clear

; 173  : 	{
; 174  : 		temp = node;

	mov	eax, DWORD PTR _node$[ebp]
	mov	DWORD PTR _temp$[ebp], eax

; 175  : 		node = node->next;

	mov	eax, DWORD PTR _node$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR _node$[ebp], ecx

; 176  : 		delete temp;

	mov	eax, DWORD PTR _temp$[ebp]
	mov	DWORD PTR $T210732[ebp], eax
	mov	ecx, DWORD PTR $T210732[ebp]
	mov	DWORD PTR $T210731[ebp], ecx
	cmp	DWORD PTR $T210731[ebp], 0
	je	SHORT $LN5@Clear
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T210731[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T210731[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN6@Clear
$LN5@Clear:
	mov	DWORD PTR tv77[ebp], 0
$LN6@Clear:

; 177  : 	}

	jmp	SHORT $LN2@Clear
$LN1@Clear:

; 178  : 
; 179  : 	firstChild = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0

; 180  : 	lastChild = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0

; 181  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@TiXmlNode@@QAEXXZ ENDP				; TiXmlNode::Clear
_TEXT	ENDS
PUBLIC	?Type@TiXmlNode@@QBEHXZ				; TiXmlNode::Type
PUBLIC	??_C@_1IO@GOJOIIEP@?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAG?$AAe?$AAt?$AAD?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAn?$AAo?$AAd?$AAe@ ; `string'
PUBLIC	?GetDocument@TiXmlNode@@QAEPAVTiXmlDocument@@XZ	; TiXmlNode::GetDocument
PUBLIC	??_C@_1FE@KCNOEABA@?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAp?$AAa?$AAr?$AAe?$AAn@ ; `string'
PUBLIC	??_C@_1GE@HMDMHPBA@?$AAd?$AA?3?$AA?2?$AAv?$AAi?$AAc?$AAe?$AA?9?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAs?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs?$AAh?$AAa?$AAr?$AAe?$AAd?$AA?2?$AAt?$AAi@ ; `string'
PUBLIC	?__LINE__Var@?1??LinkEndChild@TiXmlNode@@QAEPAV2@PAV2@@Z@4JA ; `TiXmlNode::LinkEndChild'::`2'::__LINE__Var
PUBLIC	?LinkEndChild@TiXmlNode@@QAEPAV1@PAV1@@Z	; TiXmlNode::LinkEndChild
EXTRN	?SetError@TiXmlDocument@@QAEXHPBDPAVTiXmlParsingData@@W4TiXmlEncoding@@@Z:PROC ; TiXmlDocument::SetError
EXTRN	__wassert:PROC
;	COMDAT ??_C@_1IO@GOJOIIEP@?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAG?$AAe?$AAt?$AAD?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAn?$AAo?$AAd?$AAe@
CONST	SEGMENT
??_C@_1IO@GOJOIIEP@?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAG?$AAe?$AAt?$AAD?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAn?$AAo?$AAd?$AAe@ DB 'n'
	DB	00H, 'o', 00H, 'd', 00H, 'e', 00H, '-', 00H, '>', 00H, 'G', 00H
	DB	'e', 00H, 't', 00H, 'D', 00H, 'o', 00H, 'c', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '(', 00H, ')', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '|', 00H, '|'
	DB	00H, ' ', 00H, 'n', 00H, 'o', 00H, 'd', 00H, 'e', 00H, '-', 00H
	DB	'>', 00H, 'G', 00H, 'e', 00H, 't', 00H, 'D', 00H, 'o', 00H, 'c'
	DB	00H, 'u', 00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '(', 00H
	DB	')', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 't', 00H, 'h'
	DB	00H, 'i', 00H, 's', 00H, '-', 00H, '>', 00H, 'G', 00H, 'e', 00H
	DB	't', 00H, 'D', 00H, 'o', 00H, 'c', 00H, 'u', 00H, 'm', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, '(', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FE@KCNOEABA@?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAp?$AAa?$AAr?$AAe?$AAn@
CONST	SEGMENT
??_C@_1FE@KCNOEABA@?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAp?$AAa?$AAr?$AAe?$AAn@ DB 'n'
	DB	00H, 'o', 00H, 'd', 00H, 'e', 00H, '-', 00H, '>', 00H, 'p', 00H
	DB	'a', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H, ' ', 00H, '='
	DB	00H, '=', 00H, ' ', 00H, '0', 00H, ' ', 00H, '|', 00H, '|', 00H
	DB	' ', 00H, 'n', 00H, 'o', 00H, 'd', 00H, 'e', 00H, '-', 00H, '>'
	DB	00H, 'p', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'i'
	DB	00H, 's', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1GE@HMDMHPBA@?$AAd?$AA?3?$AA?2?$AAv?$AAi?$AAc?$AAe?$AA?9?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAs?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs?$AAh?$AAa?$AAr?$AAe?$AAd?$AA?2?$AAt?$AAi@
CONST	SEGMENT
??_C@_1GE@HMDMHPBA@?$AAd?$AA?3?$AA?2?$AAv?$AAi?$AAc?$AAe?$AA?9?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAs?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs?$AAh?$AAa?$AAr?$AAe?$AAd?$AA?2?$AAt?$AAi@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	'-', 00H, 'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'e', 00H, 'r'
	DB	00H, 's', 00H, '-', 00H, 'm', 00H, 'a', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, '\', 00H, 's', 00H, 'h', 00H, 'a', 00H, 'r'
	DB	00H, 'e', 00H, 'd', 00H, '\', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'y', 00H, 'x', 00H, 'm', 00H, 'l', 00H, '\', 00H, 't', 00H, 'i'
	DB	00H, 'n', 00H, 'y', 00H, 'x', 00H, 'm', 00H, 'l', 00H, '.', 00H
	DB	'c', 00H, 'p', 00H, 'p', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??LinkEndChild@TiXmlNode@@QAEPAV2@PAV2@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??LinkEndChild@TiXmlNode@@QAEPAV2@PAV2@@Z@4JA DD 0b9H ; `TiXmlNode::LinkEndChild'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?LinkEndChild@TiXmlNode@@QAEPAV1@PAV1@@Z
_TEXT	SEGMENT
tv131 = -232						; size = 4
$T210739 = -224						; size = 4
$T210740 = -212						; size = 4
_this$ = -8						; size = 4
_node$ = 8						; size = 4
?LinkEndChild@TiXmlNode@@QAEPAV1@PAV1@@Z PROC		; TiXmlNode::LinkEndChild, COMDAT
; _this$ = ecx

; 185  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 186  : 	assert( node->parent == 0 || node->parent == this );

	mov	eax, DWORD PTR _node$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN7@LinkEndChi
	mov	ecx, DWORD PTR _node$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	cmp	edx, DWORD PTR _this$[ebp]
	je	SHORT $LN7@LinkEndChi
	mov	eax, DWORD PTR ?__LINE__Var@?1??LinkEndChild@TiXmlNode@@QAEPAV2@PAV2@@Z@4JA
	add	eax, 1
	push	eax
	push	OFFSET ??_C@_1GE@HMDMHPBA@?$AAd?$AA?3?$AA?2?$AAv?$AAi?$AAc?$AAe?$AA?9?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAs?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs?$AAh?$AAa?$AAr?$AAe?$AAd?$AA?2?$AAt?$AAi@
	push	OFFSET ??_C@_1FE@KCNOEABA@?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAp?$AAa?$AAr?$AAe?$AAn@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN7@LinkEndChi:

; 187  : 	assert( node->GetDocument() == 0 || node->GetDocument() == this->GetDocument() );

	mov	ecx, DWORD PTR _node$[ebp]
	call	?GetDocument@TiXmlNode@@QAEPAVTiXmlDocument@@XZ ; TiXmlNode::GetDocument
	test	eax, eax
	je	SHORT $LN8@LinkEndChi
	mov	ecx, DWORD PTR _node$[ebp]
	call	?GetDocument@TiXmlNode@@QAEPAVTiXmlDocument@@XZ ; TiXmlNode::GetDocument
	mov	esi, eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetDocument@TiXmlNode@@QAEPAVTiXmlDocument@@XZ ; TiXmlNode::GetDocument
	cmp	esi, eax
	je	SHORT $LN8@LinkEndChi
	mov	eax, DWORD PTR ?__LINE__Var@?1??LinkEndChild@TiXmlNode@@QAEPAV2@PAV2@@Z@4JA
	add	eax, 2
	push	eax
	push	OFFSET ??_C@_1GE@HMDMHPBA@?$AAd?$AA?3?$AA?2?$AAv?$AAi?$AAc?$AAe?$AA?9?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAs?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs?$AAh?$AAa?$AAr?$AAe?$AAd?$AA?2?$AAt?$AAi@
	push	OFFSET ??_C@_1IO@GOJOIIEP@?$AAn?$AAo?$AAd?$AAe?$AA?9?$AA?$DO?$AAG?$AAe?$AAt?$AAD?$AAo?$AAc?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAn?$AAo?$AAd?$AAe@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN8@LinkEndChi:

; 188  : 
; 189  : 	if ( node->Type() == TiXmlNode::DOCUMENT )

	mov	ecx, DWORD PTR _node$[ebp]
	call	?Type@TiXmlNode@@QBEHXZ			; TiXmlNode::Type
	test	eax, eax
	jne	SHORT $LN4@LinkEndChi

; 190  : 	{
; 191  : 		delete node;

	mov	eax, DWORD PTR _node$[ebp]
	mov	DWORD PTR $T210740[ebp], eax
	mov	ecx, DWORD PTR $T210740[ebp]
	mov	DWORD PTR $T210739[ebp], ecx
	cmp	DWORD PTR $T210739[ebp], 0
	je	SHORT $LN9@LinkEndChi
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T210739[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T210739[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv131[ebp], eax
	jmp	SHORT $LN10@LinkEndChi
$LN9@LinkEndChi:
	mov	DWORD PTR tv131[ebp], 0
$LN10@LinkEndChi:

; 192  : 		if ( GetDocument() ) GetDocument()->SetError( TIXML_ERROR_DOCUMENT_TOP_ONLY, 0, 0, TIXML_ENCODING_UNKNOWN );

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetDocument@TiXmlNode@@QAEPAVTiXmlDocument@@XZ ; TiXmlNode::GetDocument
	test	eax, eax
	je	SHORT $LN3@LinkEndChi
	push	0
	push	0
	push	0
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetDocument@TiXmlNode@@QAEPAVTiXmlDocument@@XZ ; TiXmlNode::GetDocument
	mov	ecx, eax
	call	?SetError@TiXmlDocument@@QAEXHPBDPAVTiXmlParsingData@@W4TiXmlEncoding@@@Z ; TiXmlDocument::SetError
$LN3@LinkEndChi:

; 193  : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN5@LinkEndChi
$LN4@LinkEndChi:

; 194  : 	}
; 195  : 
; 196  : 	node->parent = this;

	mov	eax, DWORD PTR _node$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], ecx

; 197  : 
; 198  : 	node->prev = lastChild;

	mov	eax, DWORD PTR _node$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+36], edx

; 199  : 	node->next = 0;

	mov	eax, DWORD PTR _node$[ebp]
	mov	DWORD PTR [eax+40], 0

; 200  : 
; 201  : 	if ( lastChild )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN2@LinkEndChi

; 202  : 		lastChild->next = node;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _node$[ebp]
	mov	DWORD PTR [ecx+40], edx

; 203  : 	else

	jmp	SHORT $LN1@LinkEndChi
$LN2@LinkEndChi:

; 204  : 		firstChild = node;			// it was an empty list.

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _node$[ebp]
	mov	DWORD PTR [eax+24], ecx
$LN1@LinkEndChi:

; 205  : 
; 206  : 	lastChild = node;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _node$[ebp]
	mov	DWORD PTR [eax+28], ecx

; 207  : 	return node;

	mov	eax, DWORD PTR _node$[ebp]
$LN5@LinkEndChi:

; 208  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?LinkEndChild@TiXmlNode@@QAEPAV1@PAV1@@Z ENDP		; TiXmlNode::LinkEndChild
_TEXT	ENDS
PUBLIC	?InsertEndChild@TiXmlNode@@QAEPAV1@ABV1@@Z	; TiXmlNode::InsertEndChild
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InsertEndChild@TiXmlNode@@QAEPAV1@ABV1@@Z
_TEXT	SEGMENT
_node$ = -20						; size = 4
_this$ = -8						; size = 4
_addThis$ = 8						; size = 4
?InsertEndChild@TiXmlNode@@QAEPAV1@ABV1@@Z PROC		; TiXmlNode::InsertEndChild, COMDAT
; _this$ = ecx

; 212  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 213  : 	if ( addThis.Type() == TiXmlNode::DOCUMENT )

	mov	ecx, DWORD PTR _addThis$[ebp]
	call	?Type@TiXmlNode@@QBEHXZ			; TiXmlNode::Type
	test	eax, eax
	jne	SHORT $LN3@InsertEndC

; 214  : 	{
; 215  : 		if ( GetDocument() ) GetDocument()->SetError( TIXML_ERROR_DOCUMENT_TOP_ONLY, 0, 0, TIXML_ENCODING_UNKNOWN );

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetDocument@TiXmlNode@@QAEPAVTiXmlDocument@@XZ ; TiXmlNode::GetDocument
	test	eax, eax
	je	SHORT $LN2@InsertEndC
	push	0
	push	0
	push	0
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetDocument@TiXmlNode@@QAEPAVTiXmlDocument@@XZ ; TiXmlNode::GetDocument
	mov	ecx, eax
	call	?SetError@TiXmlDocument@@QAEXHPBDPAVTiXmlParsingData@@W4TiXmlEncoding@@@Z ; TiXmlDocument::SetError
$LN2@InsertEndC:

; 216  : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN4@InsertEndC
$LN3@InsertEndC:

; 217  : 	}
; 218  : 	TiXmlNode* node = addThis.Clone();

	mov	eax, DWORD PTR _addThis$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _addThis$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _node$[ebp], eax

; 219  : 	if ( !node )

	cmp	DWORD PTR _node$[ebp], 0
	jne	SHORT $LN1@InsertEndC

; 220  : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN4@InsertEndC
$LN1@InsertEndC:

; 221  : 
; 222  : 	return LinkEndChild( node );

	mov	eax, DWORD PTR _node$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LinkEndChild@TiXmlNode@@QAEPAV1@PAV1@@Z ; TiXmlNode::LinkEndChild
$LN4@InsertEndC:

; 223  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?InsertEndChild@TiXmlNode@@QAEPAV1@ABV1@@Z ENDP		; TiXmlNode::InsertEndChild
_TEXT	ENDS
PUBLIC	??_C@_1DC@BIKDOIFI@?$AAf?$AAi?$AAr?$AAs?$AAt?$AAC?$AAh?$AAi?$AAl?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAb?$AAe?$AAf?$AAo?$AAr?$AAe?$AAT?$AAh?$AAi?$AAs?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??InsertBeforeChild@TiXmlNode@@QAEPAV2@PAV2@ABV2@@Z@4JA ; `TiXmlNode::InsertBeforeChild'::`2'::__LINE__Var
PUBLIC	?InsertBeforeChild@TiXmlNode@@QAEPAV1@PAV1@ABV1@@Z ; TiXmlNode::InsertBeforeChild
;	COMDAT ??_C@_1DC@BIKDOIFI@?$AAf?$AAi?$AAr?$AAs?$AAt?$AAC?$AAh?$AAi?$AAl?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAb?$AAe?$AAf?$AAo?$AAr?$AAe?$AAT?$AAh?$AAi?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@BIKDOIFI@?$AAf?$AAi?$AAr?$AAs?$AAt?$AAC?$AAh?$AAi?$AAl?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAb?$AAe?$AAf?$AAo?$AAr?$AAe?$AAT?$AAh?$AAi?$AAs?$AA?$AA@ DB 'f'
	DB	00H, 'i', 00H, 'r', 00H, 's', 00H, 't', 00H, 'C', 00H, 'h', 00H
	DB	'i', 00H, 'l', 00H, 'd', 00H, ' ', 00H, '=', 00H, '=', 00H, ' '
	DB	00H, 'b', 00H, 'e', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'e', 00H
	DB	'T', 00H, 'h', 00H, 'i', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??InsertBeforeChild@TiXmlNode@@QAEPAV2@PAV2@ABV2@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??InsertBeforeChild@TiXmlNode@@QAEPAV2@PAV2@ABV2@@Z@4JA DD 0e3H ; `TiXmlNode::InsertBeforeChild'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?InsertBeforeChild@TiXmlNode@@QAEPAV1@PAV1@ABV1@@Z
_TEXT	SEGMENT
_node$ = -20						; size = 4
_this$ = -8						; size = 4
_beforeThis$ = 8					; size = 4
_addThis$ = 12						; size = 4
?InsertBeforeChild@TiXmlNode@@QAEPAV1@PAV1@ABV1@@Z PROC	; TiXmlNode::InsertBeforeChild, COMDAT
; _this$ = ecx

; 227  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 228  : 	if ( !beforeThis || beforeThis->parent != this ) {

	cmp	DWORD PTR _beforeThis$[ebp], 0
	je	SHORT $LN6@InsertBefo
	mov	eax, DWORD PTR _beforeThis$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR _this$[ebp]
	je	SHORT $LN7@InsertBefo
$LN6@InsertBefo:

; 229  : 		return 0;

	xor	eax, eax
	jmp	$LN8@InsertBefo
$LN7@InsertBefo:

; 230  : 	}
; 231  : 	if ( addThis.Type() == TiXmlNode::DOCUMENT )

	mov	ecx, DWORD PTR _addThis$[ebp]
	call	?Type@TiXmlNode@@QBEHXZ			; TiXmlNode::Type
	test	eax, eax
	jne	SHORT $LN5@InsertBefo

; 232  : 	{
; 233  : 		if ( GetDocument() ) GetDocument()->SetError( TIXML_ERROR_DOCUMENT_TOP_ONLY, 0, 0, TIXML_ENCODING_UNKNOWN );

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetDocument@TiXmlNode@@QAEPAVTiXmlDocument@@XZ ; TiXmlNode::GetDocument
	test	eax, eax
	je	SHORT $LN4@InsertBefo
	push	0
	push	0
	push	0
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetDocument@TiXmlNode@@QAEPAVTiXmlDocument@@XZ ; TiXmlNode::GetDocument
	mov	ecx, eax
	call	?SetError@TiXmlDocument@@QAEXHPBDPAVTiXmlParsingData@@W4TiXmlEncoding@@@Z ; TiXmlDocument::SetError
$LN4@InsertBefo:

; 234  : 		return 0;

	xor	eax, eax
	jmp	$LN8@InsertBefo
$LN5@InsertBefo:

; 235  : 	}
; 236  : 
; 237  : 	TiXmlNode* node = addThis.Clone();

	mov	eax, DWORD PTR _addThis$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _addThis$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _node$[ebp], eax

; 238  : 	if ( !node )

	cmp	DWORD PTR _node$[ebp], 0
	jne	SHORT $LN3@InsertBefo

; 239  : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN8@InsertBefo
$LN3@InsertBefo:

; 240  : 	node->parent = this;

	mov	eax, DWORD PTR _node$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], ecx

; 241  : 
; 242  : 	node->next = beforeThis;

	mov	eax, DWORD PTR _node$[ebp]
	mov	ecx, DWORD PTR _beforeThis$[ebp]
	mov	DWORD PTR [eax+40], ecx

; 243  : 	node->prev = beforeThis->prev;

	mov	eax, DWORD PTR _node$[ebp]
	mov	ecx, DWORD PTR _beforeThis$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR [eax+36], edx

; 244  : 	if ( beforeThis->prev )

	mov	eax, DWORD PTR _beforeThis$[ebp]
	cmp	DWORD PTR [eax+36], 0
	je	SHORT $LN2@InsertBefo

; 245  : 	{
; 246  : 		beforeThis->prev->next = node;

	mov	eax, DWORD PTR _beforeThis$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR _node$[ebp]
	mov	DWORD PTR [ecx+40], edx

; 247  : 	}
; 248  : 	else

	jmp	SHORT $LN1@InsertBefo
$LN2@InsertBefo:

; 249  : 	{
; 250  : 		assert( firstChild == beforeThis );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR _beforeThis$[ebp]
	je	SHORT $LN10@InsertBefo
	mov	edx, DWORD PTR ?__LINE__Var@?1??InsertBeforeChild@TiXmlNode@@QAEPAV2@PAV2@ABV2@@Z@4JA
	add	edx, 23					; 00000017H
	push	edx
	push	OFFSET ??_C@_1GE@HMDMHPBA@?$AAd?$AA?3?$AA?2?$AAv?$AAi?$AAc?$AAe?$AA?9?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAs?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs?$AAh?$AAa?$AAr?$AAe?$AAd?$AA?2?$AAt?$AAi@
	push	OFFSET ??_C@_1DC@BIKDOIFI@?$AAf?$AAi?$AAr?$AAs?$AAt?$AAC?$AAh?$AAi?$AAl?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAb?$AAe?$AAf?$AAo?$AAr?$AAe?$AAT?$AAh?$AAi?$AAs?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN10@InsertBefo:

; 251  : 		firstChild = node;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _node$[ebp]
	mov	DWORD PTR [eax+24], ecx
$LN1@InsertBefo:

; 252  : 	}
; 253  : 	beforeThis->prev = node;

	mov	eax, DWORD PTR _beforeThis$[ebp]
	mov	ecx, DWORD PTR _node$[ebp]
	mov	DWORD PTR [eax+36], ecx

; 254  : 	return node;

	mov	eax, DWORD PTR _node$[ebp]
$LN8@InsertBefo:

; 255  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?InsertBeforeChild@TiXmlNode@@QAEPAV1@PAV1@ABV1@@Z ENDP	; TiXmlNode::InsertBeforeChild
_TEXT	ENDS
PUBLIC	??_C@_1CO@NMILEPCN@?$AAl?$AAa?$AAs?$AAt?$AAC?$AAh?$AAi?$AAl?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAa?$AAf?$AAt?$AAe?$AAr?$AAT?$AAh?$AAi?$AAs?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??InsertAfterChild@TiXmlNode@@QAEPAV2@PAV2@ABV2@@Z@4JA ; `TiXmlNode::InsertAfterChild'::`2'::__LINE__Var
PUBLIC	?InsertAfterChild@TiXmlNode@@QAEPAV1@PAV1@ABV1@@Z ; TiXmlNode::InsertAfterChild
;	COMDAT ??_C@_1CO@NMILEPCN@?$AAl?$AAa?$AAs?$AAt?$AAC?$AAh?$AAi?$AAl?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAa?$AAf?$AAt?$AAe?$AAr?$AAT?$AAh?$AAi?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_1CO@NMILEPCN@?$AAl?$AAa?$AAs?$AAt?$AAC?$AAh?$AAi?$AAl?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAa?$AAf?$AAt?$AAe?$AAr?$AAT?$AAh?$AAi?$AAs?$AA?$AA@ DB 'l'
	DB	00H, 'a', 00H, 's', 00H, 't', 00H, 'C', 00H, 'h', 00H, 'i', 00H
	DB	'l', 00H, 'd', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'a'
	DB	00H, 'f', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'T', 00H, 'h', 00H
	DB	'i', 00H, 's', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??InsertAfterChild@TiXmlNode@@QAEPAV2@PAV2@ABV2@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??InsertAfterChild@TiXmlNode@@QAEPAV2@PAV2@ABV2@@Z@4JA DD 0103H ; `TiXmlNode::InsertAfterChild'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?InsertAfterChild@TiXmlNode@@QAEPAV1@PAV1@ABV1@@Z
_TEXT	SEGMENT
_node$ = -20						; size = 4
_this$ = -8						; size = 4
_afterThis$ = 8						; size = 4
_addThis$ = 12						; size = 4
?InsertAfterChild@TiXmlNode@@QAEPAV1@PAV1@ABV1@@Z PROC	; TiXmlNode::InsertAfterChild, COMDAT
; _this$ = ecx

; 259  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 260  : 	if ( !afterThis || afterThis->parent != this ) {

	cmp	DWORD PTR _afterThis$[ebp], 0
	je	SHORT $LN6@InsertAfte
	mov	eax, DWORD PTR _afterThis$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR _this$[ebp]
	je	SHORT $LN7@InsertAfte
$LN6@InsertAfte:

; 261  : 		return 0;

	xor	eax, eax
	jmp	$LN8@InsertAfte
$LN7@InsertAfte:

; 262  : 	}
; 263  : 	if ( addThis.Type() == TiXmlNode::DOCUMENT )

	mov	ecx, DWORD PTR _addThis$[ebp]
	call	?Type@TiXmlNode@@QBEHXZ			; TiXmlNode::Type
	test	eax, eax
	jne	SHORT $LN5@InsertAfte

; 264  : 	{
; 265  : 		if ( GetDocument() ) GetDocument()->SetError( TIXML_ERROR_DOCUMENT_TOP_ONLY, 0, 0, TIXML_ENCODING_UNKNOWN );

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetDocument@TiXmlNode@@QAEPAVTiXmlDocument@@XZ ; TiXmlNode::GetDocument
	test	eax, eax
	je	SHORT $LN4@InsertAfte
	push	0
	push	0
	push	0
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetDocument@TiXmlNode@@QAEPAVTiXmlDocument@@XZ ; TiXmlNode::GetDocument
	mov	ecx, eax
	call	?SetError@TiXmlDocument@@QAEXHPBDPAVTiXmlParsingData@@W4TiXmlEncoding@@@Z ; TiXmlDocument::SetError
$LN4@InsertAfte:

; 266  : 		return 0;

	xor	eax, eax
	jmp	$LN8@InsertAfte
$LN5@InsertAfte:

; 267  : 	}
; 268  : 
; 269  : 	TiXmlNode* node = addThis.Clone();

	mov	eax, DWORD PTR _addThis$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _addThis$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _node$[ebp], eax

; 270  : 	if ( !node )

	cmp	DWORD PTR _node$[ebp], 0
	jne	SHORT $LN3@InsertAfte

; 271  : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN8@InsertAfte
$LN3@InsertAfte:

; 272  : 	node->parent = this;

	mov	eax, DWORD PTR _node$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], ecx

; 273  : 
; 274  : 	node->prev = afterThis;

	mov	eax, DWORD PTR _node$[ebp]
	mov	ecx, DWORD PTR _afterThis$[ebp]
	mov	DWORD PTR [eax+36], ecx

; 275  : 	node->next = afterThis->next;

	mov	eax, DWORD PTR _node$[ebp]
	mov	ecx, DWORD PTR _afterThis$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR [eax+40], edx

; 276  : 	if ( afterThis->next )

	mov	eax, DWORD PTR _afterThis$[ebp]
	cmp	DWORD PTR [eax+40], 0
	je	SHORT $LN2@InsertAfte

; 277  : 	{
; 278  : 		afterThis->next->prev = node;

	mov	eax, DWORD PTR _afterThis$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	edx, DWORD PTR _node$[ebp]
	mov	DWORD PTR [ecx+36], edx

; 279  : 	}
; 280  : 	else

	jmp	SHORT $LN1@InsertAfte
$LN2@InsertAfte:

; 281  : 	{
; 282  : 		assert( lastChild == afterThis );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	ecx, DWORD PTR _afterThis$[ebp]
	je	SHORT $LN10@InsertAfte
	mov	edx, DWORD PTR ?__LINE__Var@?1??InsertAfterChild@TiXmlNode@@QAEPAV2@PAV2@ABV2@@Z@4JA
	add	edx, 23					; 00000017H
	push	edx
	push	OFFSET ??_C@_1GE@HMDMHPBA@?$AAd?$AA?3?$AA?2?$AAv?$AAi?$AAc?$AAe?$AA?9?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAs?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs?$AAh?$AAa?$AAr?$AAe?$AAd?$AA?2?$AAt?$AAi@
	push	OFFSET ??_C@_1CO@NMILEPCN@?$AAl?$AAa?$AAs?$AAt?$AAC?$AAh?$AAi?$AAl?$AAd?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAa?$AAf?$AAt?$AAe?$AAr?$AAT?$AAh?$AAi?$AAs?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN10@InsertAfte:

; 283  : 		lastChild = node;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _node$[ebp]
	mov	DWORD PTR [eax+28], ecx
$LN1@InsertAfte:

; 284  : 	}
; 285  : 	afterThis->next = node;

	mov	eax, DWORD PTR _afterThis$[ebp]
	mov	ecx, DWORD PTR _node$[ebp]
	mov	DWORD PTR [eax+40], ecx

; 286  : 	return node;

	mov	eax, DWORD PTR _node$[ebp]
$LN8@InsertAfte:

; 287  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?InsertAfterChild@TiXmlNode@@QAEPAV1@PAV1@ABV1@@Z ENDP	; TiXmlNode::InsertAfterChild
_TEXT	ENDS
PUBLIC	?ReplaceChild@TiXmlNode@@QAEPAV1@PAV1@ABV1@@Z	; TiXmlNode::ReplaceChild
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ReplaceChild@TiXmlNode@@QAEPAV1@PAV1@ABV1@@Z
_TEXT	SEGMENT
tv95 = -244						; size = 4
$T210753 = -236						; size = 4
$T210754 = -224						; size = 4
_node$ = -20						; size = 4
_this$ = -8						; size = 4
_replaceThis$ = 8					; size = 4
_withThis$ = 12						; size = 4
?ReplaceChild@TiXmlNode@@QAEPAV1@PAV1@ABV1@@Z PROC	; TiXmlNode::ReplaceChild, COMDAT
; _this$ = ecx

; 291  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 292  : 	if ( replaceThis->parent != this )

	mov	eax, DWORD PTR _replaceThis$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR _this$[ebp]
	je	SHORT $LN6@ReplaceChi

; 293  : 		return 0;

	xor	eax, eax
	jmp	$LN7@ReplaceChi
$LN6@ReplaceChi:

; 294  : 
; 295  : 	TiXmlNode* node = withThis.Clone();

	mov	eax, DWORD PTR _withThis$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _withThis$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _node$[ebp], eax

; 296  : 	if ( !node )

	cmp	DWORD PTR _node$[ebp], 0
	jne	SHORT $LN5@ReplaceChi

; 297  : 		return 0;

	xor	eax, eax
	jmp	$LN7@ReplaceChi
$LN5@ReplaceChi:

; 298  : 
; 299  : 	node->next = replaceThis->next;

	mov	eax, DWORD PTR _node$[ebp]
	mov	ecx, DWORD PTR _replaceThis$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR [eax+40], edx

; 300  : 	node->prev = replaceThis->prev;

	mov	eax, DWORD PTR _node$[ebp]
	mov	ecx, DWORD PTR _replaceThis$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR [eax+36], edx

; 301  : 
; 302  : 	if ( replaceThis->next )

	mov	eax, DWORD PTR _replaceThis$[ebp]
	cmp	DWORD PTR [eax+40], 0
	je	SHORT $LN4@ReplaceChi

; 303  : 		replaceThis->next->prev = node;

	mov	eax, DWORD PTR _replaceThis$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	edx, DWORD PTR _node$[ebp]
	mov	DWORD PTR [ecx+36], edx

; 304  : 	else

	jmp	SHORT $LN3@ReplaceChi
$LN4@ReplaceChi:

; 305  : 		lastChild = node;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _node$[ebp]
	mov	DWORD PTR [eax+28], ecx
$LN3@ReplaceChi:

; 306  : 
; 307  : 	if ( replaceThis->prev )

	mov	eax, DWORD PTR _replaceThis$[ebp]
	cmp	DWORD PTR [eax+36], 0
	je	SHORT $LN2@ReplaceChi

; 308  : 		replaceThis->prev->next = node;

	mov	eax, DWORD PTR _replaceThis$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR _node$[ebp]
	mov	DWORD PTR [ecx+40], edx

; 309  : 	else

	jmp	SHORT $LN1@ReplaceChi
$LN2@ReplaceChi:

; 310  : 		firstChild = node;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _node$[ebp]
	mov	DWORD PTR [eax+24], ecx
$LN1@ReplaceChi:

; 311  : 
; 312  : 	delete replaceThis;

	mov	eax, DWORD PTR _replaceThis$[ebp]
	mov	DWORD PTR $T210754[ebp], eax
	mov	ecx, DWORD PTR $T210754[ebp]
	mov	DWORD PTR $T210753[ebp], ecx
	cmp	DWORD PTR $T210753[ebp], 0
	je	SHORT $LN9@ReplaceChi
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T210753[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T210753[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv95[ebp], eax
	jmp	SHORT $LN10@ReplaceChi
$LN9@ReplaceChi:
	mov	DWORD PTR tv95[ebp], 0
$LN10@ReplaceChi:

; 313  : 	node->parent = this;

	mov	eax, DWORD PTR _node$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], ecx

; 314  : 	return node;

	mov	eax, DWORD PTR _node$[ebp]
$LN7@ReplaceChi:

; 315  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?ReplaceChild@TiXmlNode@@QAEPAV1@PAV1@ABV1@@Z ENDP	; TiXmlNode::ReplaceChild
_TEXT	ENDS
PUBLIC	??_C@_13COJANIEC@?$AA0?$AA?$AA@			; `string'
PUBLIC	?__LINE__Var@?1??RemoveChild@TiXmlNode@@QAE_NPAV2@@Z@4JA ; `TiXmlNode::RemoveChild'::`2'::__LINE__Var
PUBLIC	?RemoveChild@TiXmlNode@@QAE_NPAV1@@Z		; TiXmlNode::RemoveChild
;	COMDAT ??_C@_13COJANIEC@?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_13COJANIEC@?$AA0?$AA?$AA@ DB '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??RemoveChild@TiXmlNode@@QAE_NPAV2@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??RemoveChild@TiXmlNode@@QAE_NPAV2@@Z@4JA DD 013fH ; `TiXmlNode::RemoveChild'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?RemoveChild@TiXmlNode@@QAE_NPAV1@@Z
_TEXT	SEGMENT
tv128 = -232						; size = 4
$T210760 = -224						; size = 4
$T210761 = -212						; size = 4
_this$ = -8						; size = 4
_removeThis$ = 8					; size = 4
?RemoveChild@TiXmlNode@@QAE_NPAV1@@Z PROC		; TiXmlNode::RemoveChild, COMDAT
; _this$ = ecx

; 319  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 320  : 	if ( removeThis->parent != this )

	mov	eax, DWORD PTR _removeThis$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR _this$[ebp]
	je	SHORT $LN5@RemoveChil

; 321  : 	{
; 322  : 		assert( 0 );

	xor	eax, eax
	jne	SHORT $LN8@RemoveChil
	mov	ecx, DWORD PTR ?__LINE__Var@?1??RemoveChild@TiXmlNode@@QAE_NPAV2@@Z@4JA
	add	ecx, 3
	push	ecx
	push	OFFSET ??_C@_1GE@HMDMHPBA@?$AAd?$AA?3?$AA?2?$AAv?$AAi?$AAc?$AAe?$AA?9?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAs?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs?$AAh?$AAa?$AAr?$AAe?$AAd?$AA?2?$AAt?$AAi@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN8@RemoveChil:

; 323  : 		return false;

	xor	al, al
	jmp	$LN6@RemoveChil
$LN5@RemoveChil:

; 324  : 	}
; 325  : 
; 326  : 	if ( removeThis->next )

	mov	eax, DWORD PTR _removeThis$[ebp]
	cmp	DWORD PTR [eax+40], 0
	je	SHORT $LN4@RemoveChil

; 327  : 		removeThis->next->prev = removeThis->prev;

	mov	eax, DWORD PTR _removeThis$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	edx, DWORD PTR _removeThis$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	DWORD PTR [ecx+36], eax

; 328  : 	else

	jmp	SHORT $LN3@RemoveChil
$LN4@RemoveChil:

; 329  : 		lastChild = removeThis->prev;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _removeThis$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR [eax+28], edx
$LN3@RemoveChil:

; 330  : 
; 331  : 	if ( removeThis->prev )

	mov	eax, DWORD PTR _removeThis$[ebp]
	cmp	DWORD PTR [eax+36], 0
	je	SHORT $LN2@RemoveChil

; 332  : 		removeThis->prev->next = removeThis->next;

	mov	eax, DWORD PTR _removeThis$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	edx, DWORD PTR _removeThis$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	DWORD PTR [ecx+40], eax

; 333  : 	else

	jmp	SHORT $LN1@RemoveChil
$LN2@RemoveChil:

; 334  : 		firstChild = removeThis->next;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _removeThis$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR [eax+24], edx
$LN1@RemoveChil:

; 335  : 
; 336  : 	delete removeThis;

	mov	eax, DWORD PTR _removeThis$[ebp]
	mov	DWORD PTR $T210761[ebp], eax
	mov	ecx, DWORD PTR $T210761[ebp]
	mov	DWORD PTR $T210760[ebp], ecx
	cmp	DWORD PTR $T210760[ebp], 0
	je	SHORT $LN9@RemoveChil
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T210760[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T210760[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv128[ebp], eax
	jmp	SHORT $LN10@RemoveChil
$LN9@RemoveChil:
	mov	DWORD PTR tv128[ebp], 0
$LN10@RemoveChil:

; 337  : 	return true;

	mov	al, 1
$LN6@RemoveChil:

; 338  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveChild@TiXmlNode@@QAE_NPAV1@@Z ENDP		; TiXmlNode::RemoveChild
_TEXT	ENDS
PUBLIC	?Value@TiXmlNode@@QBEPBDXZ			; TiXmlNode::Value
PUBLIC	?FirstChild@TiXmlNode@@QBEPBV1@PBD@Z		; TiXmlNode::FirstChild
EXTRN	_strcmp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FirstChild@TiXmlNode@@QBEPBV1@PBD@Z
_TEXT	SEGMENT
_node$ = -20						; size = 4
_this$ = -8						; size = 4
__value$ = 8						; size = 4
?FirstChild@TiXmlNode@@QBEPBV1@PBD@Z PROC		; TiXmlNode::FirstChild, COMDAT
; _this$ = ecx

; 341  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 342  : 	const TiXmlNode* node;
; 343  : 	for ( node = firstChild; node; node = node->next )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _node$[ebp], ecx
	jmp	SHORT $LN4@FirstChild
$LN3@FirstChild:
	mov	eax, DWORD PTR _node$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR _node$[ebp], ecx
$LN4@FirstChild:
	cmp	DWORD PTR _node$[ebp], 0
	je	SHORT $LN2@FirstChild

; 344  : 	{
; 345  : 		if ( strcmp( node->Value(), _value ) == 0 )

	mov	eax, DWORD PTR __value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _node$[ebp]
	call	?Value@TiXmlNode@@QBEPBDXZ		; TiXmlNode::Value
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@FirstChild

; 346  : 			return node;

	mov	eax, DWORD PTR _node$[ebp]
	jmp	SHORT $LN5@FirstChild
$LN1@FirstChild:

; 347  : 	}

	jmp	SHORT $LN3@FirstChild
$LN2@FirstChild:

; 348  : 	return 0;

	xor	eax, eax
$LN5@FirstChild:

; 349  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?FirstChild@TiXmlNode@@QBEPBV1@PBD@Z ENDP		; TiXmlNode::FirstChild
_TEXT	ENDS
PUBLIC	?LastChild@TiXmlNode@@QBEPBV1@PBD@Z		; TiXmlNode::LastChild
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?LastChild@TiXmlNode@@QBEPBV1@PBD@Z
_TEXT	SEGMENT
_node$ = -20						; size = 4
_this$ = -8						; size = 4
__value$ = 8						; size = 4
?LastChild@TiXmlNode@@QBEPBV1@PBD@Z PROC		; TiXmlNode::LastChild, COMDAT
; _this$ = ecx

; 353  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 354  : 	const TiXmlNode* node;
; 355  : 	for ( node = lastChild; node; node = node->prev )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _node$[ebp], ecx
	jmp	SHORT $LN4@LastChild
$LN3@LastChild:
	mov	eax, DWORD PTR _node$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	DWORD PTR _node$[ebp], ecx
$LN4@LastChild:
	cmp	DWORD PTR _node$[ebp], 0
	je	SHORT $LN2@LastChild

; 356  : 	{
; 357  : 		if ( strcmp( node->Value(), _value ) == 0 )

	mov	eax, DWORD PTR __value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _node$[ebp]
	call	?Value@TiXmlNode@@QBEPBDXZ		; TiXmlNode::Value
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@LastChild

; 358  : 			return node;

	mov	eax, DWORD PTR _node$[ebp]
	jmp	SHORT $LN5@LastChild
$LN1@LastChild:

; 359  : 	}

	jmp	SHORT $LN3@LastChild
$LN2@LastChild:

; 360  : 	return 0;

	xor	eax, eax
$LN5@LastChild:

; 361  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?LastChild@TiXmlNode@@QBEPBV1@PBD@Z ENDP		; TiXmlNode::LastChild
_TEXT	ENDS
PUBLIC	?NextSibling@TiXmlNode@@QBEPBV1@XZ		; TiXmlNode::NextSibling
PUBLIC	??_C@_1DC@LEADHCOJ@?$AAp?$AAr?$AAe?$AAv?$AAi?$AAo?$AAu?$AAs?$AA?9?$AA?$DO?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??IterateChildren@TiXmlNode@@QBEPBV2@PBV2@@Z@4JA ; `TiXmlNode::IterateChildren'::`2'::__LINE__Var
PUBLIC	?FirstChild@TiXmlNode@@QBEPBV1@XZ		; TiXmlNode::FirstChild
PUBLIC	?IterateChildren@TiXmlNode@@QBEPBV1@PBV1@@Z	; TiXmlNode::IterateChildren
;	COMDAT ??_C@_1DC@LEADHCOJ@?$AAp?$AAr?$AAe?$AAv?$AAi?$AAo?$AAu?$AAs?$AA?9?$AA?$DO?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@LEADHCOJ@?$AAp?$AAr?$AAe?$AAv?$AAi?$AAo?$AAu?$AAs?$AA?9?$AA?$DO?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?$AA@ DB 'p'
	DB	00H, 'r', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'o', 00H, 'u', 00H
	DB	's', 00H, '-', 00H, '>', 00H, 'p', 00H, 'a', 00H, 'r', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H
	DB	't', 00H, 'h', 00H, 'i', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??IterateChildren@TiXmlNode@@QBEPBV2@PBV2@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??IterateChildren@TiXmlNode@@QBEPBV2@PBV2@@Z@4JA DD 016dH ; `TiXmlNode::IterateChildren'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?IterateChildren@TiXmlNode@@QBEPBV1@PBV1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_previous$ = 8						; size = 4
?IterateChildren@TiXmlNode@@QBEPBV1@PBV1@@Z PROC	; TiXmlNode::IterateChildren, COMDAT
; _this$ = ecx

; 365  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 366  : 	if ( !previous )

	cmp	DWORD PTR _previous$[ebp], 0
	jne	SHORT $LN2@IterateChi

; 367  : 	{
; 368  : 		return FirstChild();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?FirstChild@TiXmlNode@@QBEPBV1@XZ	; TiXmlNode::FirstChild
	jmp	SHORT $LN3@IterateChi

; 369  : 	}
; 370  : 	else

	jmp	SHORT $LN3@IterateChi
$LN2@IterateChi:

; 371  : 	{
; 372  : 		assert( previous->parent == this );

	mov	eax, DWORD PTR _previous$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR _this$[ebp]
	je	SHORT $LN5@IterateChi
	mov	edx, DWORD PTR ?__LINE__Var@?1??IterateChildren@TiXmlNode@@QBEPBV2@PBV2@@Z@4JA
	add	edx, 7
	push	edx
	push	OFFSET ??_C@_1GE@HMDMHPBA@?$AAd?$AA?3?$AA?2?$AAv?$AAi?$AAc?$AAe?$AA?9?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAs?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs?$AAh?$AAa?$AAr?$AAe?$AAd?$AA?2?$AAt?$AAi@
	push	OFFSET ??_C@_1DC@LEADHCOJ@?$AAp?$AAr?$AAe?$AAv?$AAi?$AAo?$AAu?$AAs?$AA?9?$AA?$DO?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN5@IterateChi:

; 373  : 		return previous->NextSibling();

	mov	ecx, DWORD PTR _previous$[ebp]
	call	?NextSibling@TiXmlNode@@QBEPBV1@XZ	; TiXmlNode::NextSibling
$LN3@IterateChi:

; 374  : 	}
; 375  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?IterateChildren@TiXmlNode@@QBEPBV1@PBV1@@Z ENDP	; TiXmlNode::IterateChildren
_TEXT	ENDS
PUBLIC	?NextSibling@TiXmlNode@@QBEPBV1@PBD@Z		; TiXmlNode::NextSibling
PUBLIC	?__LINE__Var@?1??IterateChildren@TiXmlNode@@QBEPBV2@PBDPBV2@@Z@4JA ; `TiXmlNode::IterateChildren'::`2'::__LINE__Var
PUBLIC	?IterateChildren@TiXmlNode@@QBEPBV1@PBDPBV1@@Z	; TiXmlNode::IterateChildren
;	COMDAT ?__LINE__Var@?1??IterateChildren@TiXmlNode@@QBEPBV2@PBDPBV2@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??IterateChildren@TiXmlNode@@QBEPBV2@PBDPBV2@@Z@4JA DD 017bH ; `TiXmlNode::IterateChildren'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?IterateChildren@TiXmlNode@@QBEPBV1@PBDPBV1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_val$ = 8						; size = 4
_previous$ = 12						; size = 4
?IterateChildren@TiXmlNode@@QBEPBV1@PBDPBV1@@Z PROC	; TiXmlNode::IterateChildren, COMDAT
; _this$ = ecx

; 379  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 380  : 	if ( !previous )

	cmp	DWORD PTR _previous$[ebp], 0
	jne	SHORT $LN2@IterateChi@2

; 381  : 	{
; 382  : 		return FirstChild( val );

	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FirstChild@TiXmlNode@@QBEPBV1@PBD@Z	; TiXmlNode::FirstChild
	jmp	SHORT $LN3@IterateChi@2

; 383  : 	}
; 384  : 	else

	jmp	SHORT $LN3@IterateChi@2
$LN2@IterateChi@2:

; 385  : 	{
; 386  : 		assert( previous->parent == this );

	mov	eax, DWORD PTR _previous$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	cmp	ecx, DWORD PTR _this$[ebp]
	je	SHORT $LN5@IterateChi@2
	mov	edx, DWORD PTR ?__LINE__Var@?1??IterateChildren@TiXmlNode@@QBEPBV2@PBDPBV2@@Z@4JA
	add	edx, 7
	push	edx
	push	OFFSET ??_C@_1GE@HMDMHPBA@?$AAd?$AA?3?$AA?2?$AAv?$AAi?$AAc?$AAe?$AA?9?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAs?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs?$AAh?$AAa?$AAr?$AAe?$AAd?$AA?2?$AAt?$AAi@
	push	OFFSET ??_C@_1DC@LEADHCOJ@?$AAp?$AAr?$AAe?$AAv?$AAi?$AAo?$AAu?$AAs?$AA?9?$AA?$DO?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAt?$AAh?$AAi?$AAs?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN5@IterateChi@2:

; 387  : 		return previous->NextSibling( val );

	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _previous$[ebp]
	call	?NextSibling@TiXmlNode@@QBEPBV1@PBD@Z	; TiXmlNode::NextSibling
$LN3@IterateChi@2:

; 388  : 	}
; 389  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?IterateChildren@TiXmlNode@@QBEPBV1@PBDPBV1@@Z ENDP	; TiXmlNode::IterateChildren
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?NextSibling@TiXmlNode@@QBEPBV1@PBD@Z
_TEXT	SEGMENT
_node$ = -20						; size = 4
_this$ = -8						; size = 4
__value$ = 8						; size = 4
?NextSibling@TiXmlNode@@QBEPBV1@PBD@Z PROC		; TiXmlNode::NextSibling, COMDAT
; _this$ = ecx

; 393  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 394  : 	const TiXmlNode* node;
; 395  : 	for ( node = next; node; node = node->next )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR _node$[ebp], ecx
	jmp	SHORT $LN4@NextSiblin
$LN3@NextSiblin:
	mov	eax, DWORD PTR _node$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	DWORD PTR _node$[ebp], ecx
$LN4@NextSiblin:
	cmp	DWORD PTR _node$[ebp], 0
	je	SHORT $LN2@NextSiblin

; 396  : 	{
; 397  : 		if ( strcmp( node->Value(), _value ) == 0 )

	mov	eax, DWORD PTR __value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _node$[ebp]
	call	?Value@TiXmlNode@@QBEPBDXZ		; TiXmlNode::Value
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@NextSiblin

; 398  : 			return node;

	mov	eax, DWORD PTR _node$[ebp]
	jmp	SHORT $LN5@NextSiblin
$LN1@NextSiblin:

; 399  : 	}

	jmp	SHORT $LN3@NextSiblin
$LN2@NextSiblin:

; 400  : 	return 0;

	xor	eax, eax
$LN5@NextSiblin:

; 401  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?NextSibling@TiXmlNode@@QBEPBV1@PBD@Z ENDP		; TiXmlNode::NextSibling
_TEXT	ENDS
PUBLIC	?PreviousSibling@TiXmlNode@@QBEPBV1@PBD@Z	; TiXmlNode::PreviousSibling
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PreviousSibling@TiXmlNode@@QBEPBV1@PBD@Z
_TEXT	SEGMENT
_node$ = -20						; size = 4
_this$ = -8						; size = 4
__value$ = 8						; size = 4
?PreviousSibling@TiXmlNode@@QBEPBV1@PBD@Z PROC		; TiXmlNode::PreviousSibling, COMDAT
; _this$ = ecx

; 405  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 406  : 	const TiXmlNode* node;
; 407  : 	for ( node = prev; node; node = node->prev )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	DWORD PTR _node$[ebp], ecx
	jmp	SHORT $LN4@PreviousSi
$LN3@PreviousSi:
	mov	eax, DWORD PTR _node$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	mov	DWORD PTR _node$[ebp], ecx
$LN4@PreviousSi:
	cmp	DWORD PTR _node$[ebp], 0
	je	SHORT $LN2@PreviousSi

; 408  : 	{
; 409  : 		if ( strcmp( node->Value(), _value ) == 0 )

	mov	eax, DWORD PTR __value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _node$[ebp]
	call	?Value@TiXmlNode@@QBEPBDXZ		; TiXmlNode::Value
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@PreviousSi

; 410  : 			return node;

	mov	eax, DWORD PTR _node$[ebp]
	jmp	SHORT $LN5@PreviousSi
$LN1@PreviousSi:

; 411  : 	}

	jmp	SHORT $LN3@PreviousSi
$LN2@PreviousSi:

; 412  : 	return 0;

	xor	eax, eax
$LN5@PreviousSi:

; 413  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?PreviousSibling@TiXmlNode@@QBEPBV1@PBD@Z ENDP		; TiXmlNode::PreviousSibling
_TEXT	ENDS
PUBLIC	?Remove@TiXmlAttributeSet@@QAEXPAVTiXmlAttribute@@@Z ; TiXmlAttributeSet::Remove
PUBLIC	?Find@TiXmlAttributeSet@@QAEPAVTiXmlAttribute@@PBD@Z ; TiXmlAttributeSet::Find
PUBLIC	?RemoveAttribute@TiXmlElement@@QAEXPBD@Z	; TiXmlElement::RemoveAttribute
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?RemoveAttribute@TiXmlElement@@QAEXPBD@Z
_TEXT	SEGMENT
tv82 = -244						; size = 4
$T210780 = -236						; size = 4
$T210781 = -224						; size = 4
_node$ = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
?RemoveAttribute@TiXmlElement@@QAEXPBD@Z PROC		; TiXmlElement::RemoveAttribute, COMDAT
; _this$ = ecx

; 417  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 418  :     #ifdef TIXML_USE_STL
; 419  : 	TIXML_STRING str( name );
; 420  : 	TiXmlAttribute* node = attributeSet.Find( str );
; 421  : 	#else
; 422  : 	TiXmlAttribute* node = attributeSet.Find( name );

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?Find@TiXmlAttributeSet@@QAEPAVTiXmlAttribute@@PBD@Z ; TiXmlAttributeSet::Find
	mov	DWORD PTR _node$[ebp], eax

; 423  : 	#endif
; 424  : 	if ( node )

	cmp	DWORD PTR _node$[ebp], 0
	je	SHORT $LN2@RemoveAttr

; 425  : 	{
; 426  : 		attributeSet.Remove( node );

	mov	eax, DWORD PTR _node$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?Remove@TiXmlAttributeSet@@QAEXPAVTiXmlAttribute@@@Z ; TiXmlAttributeSet::Remove

; 427  : 		delete node;

	mov	eax, DWORD PTR _node$[ebp]
	mov	DWORD PTR $T210781[ebp], eax
	mov	ecx, DWORD PTR $T210781[ebp]
	mov	DWORD PTR $T210780[ebp], ecx
	cmp	DWORD PTR $T210780[ebp], 0
	je	SHORT $LN4@RemoveAttr
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T210780[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T210780[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv82[ebp], eax
	jmp	SHORT $LN2@RemoveAttr
$LN4@RemoveAttr:
	mov	DWORD PTR tv82[ebp], 0
$LN2@RemoveAttr:

; 428  : 	}
; 429  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?RemoveAttribute@TiXmlElement@@QAEXPBD@Z ENDP		; TiXmlElement::RemoveAttribute
_TEXT	ENDS
PUBLIC	?FirstChildElement@TiXmlNode@@QBEPBVTiXmlElement@@XZ ; TiXmlNode::FirstChildElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FirstChildElement@TiXmlNode@@QBEPBVTiXmlElement@@XZ
_TEXT	SEGMENT
_node$ = -20						; size = 4
_this$ = -8						; size = 4
?FirstChildElement@TiXmlNode@@QBEPBVTiXmlElement@@XZ PROC ; TiXmlNode::FirstChildElement, COMDAT
; _this$ = ecx

; 432  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 433  : 	const TiXmlNode* node;
; 434  : 
; 435  : 	for (	node = FirstChild();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?FirstChild@TiXmlNode@@QBEPBV1@XZ	; TiXmlNode::FirstChild
	mov	DWORD PTR _node$[ebp], eax

; 436  : 			node;

	jmp	SHORT $LN4@FirstChild@2
$LN3@FirstChild@2:

; 437  : 			node = node->NextSibling() )

	mov	ecx, DWORD PTR _node$[ebp]
	call	?NextSibling@TiXmlNode@@QBEPBV1@XZ	; TiXmlNode::NextSibling
	mov	DWORD PTR _node$[ebp], eax
$LN4@FirstChild@2:
	cmp	DWORD PTR _node$[ebp], 0
	je	SHORT $LN2@FirstChild@2

; 438  : 	{
; 439  : 		if ( node->ToElement() )

	mov	eax, DWORD PTR _node$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _node$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN1@FirstChild@2

; 440  : 			return node->ToElement();

	mov	eax, DWORD PTR _node$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _node$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN5@FirstChild@2
$LN1@FirstChild@2:

; 441  : 	}

	jmp	SHORT $LN3@FirstChild@2
$LN2@FirstChild@2:

; 442  : 	return 0;

	xor	eax, eax
$LN5@FirstChild@2:

; 443  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FirstChildElement@TiXmlNode@@QBEPBVTiXmlElement@@XZ ENDP ; TiXmlNode::FirstChildElement
_TEXT	ENDS
PUBLIC	?FirstChildElement@TiXmlNode@@QBEPBVTiXmlElement@@PBD@Z ; TiXmlNode::FirstChildElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FirstChildElement@TiXmlNode@@QBEPBVTiXmlElement@@PBD@Z
_TEXT	SEGMENT
_node$ = -20						; size = 4
_this$ = -8						; size = 4
__value$ = 8						; size = 4
?FirstChildElement@TiXmlNode@@QBEPBVTiXmlElement@@PBD@Z PROC ; TiXmlNode::FirstChildElement, COMDAT
; _this$ = ecx

; 447  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 448  : 	const TiXmlNode* node;
; 449  : 
; 450  : 	for (	node = FirstChild( _value );

	mov	eax, DWORD PTR __value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FirstChild@TiXmlNode@@QBEPBV1@PBD@Z	; TiXmlNode::FirstChild
	mov	DWORD PTR _node$[ebp], eax

; 451  : 			node;

	jmp	SHORT $LN4@FirstChild@3
$LN3@FirstChild@3:

; 452  : 			node = node->NextSibling( _value ) )

	mov	eax, DWORD PTR __value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _node$[ebp]
	call	?NextSibling@TiXmlNode@@QBEPBV1@PBD@Z	; TiXmlNode::NextSibling
	mov	DWORD PTR _node$[ebp], eax
$LN4@FirstChild@3:
	cmp	DWORD PTR _node$[ebp], 0
	je	SHORT $LN2@FirstChild@3

; 453  : 	{
; 454  : 		if ( node->ToElement() )

	mov	eax, DWORD PTR _node$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _node$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN1@FirstChild@3

; 455  : 			return node->ToElement();

	mov	eax, DWORD PTR _node$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _node$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN5@FirstChild@3
$LN1@FirstChild@3:

; 456  : 	}

	jmp	SHORT $LN3@FirstChild@3
$LN2@FirstChild@3:

; 457  : 	return 0;

	xor	eax, eax
$LN5@FirstChild@3:

; 458  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?FirstChildElement@TiXmlNode@@QBEPBVTiXmlElement@@PBD@Z ENDP ; TiXmlNode::FirstChildElement
_TEXT	ENDS
PUBLIC	?NextSiblingElement@TiXmlNode@@QBEPBVTiXmlElement@@XZ ; TiXmlNode::NextSiblingElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NextSiblingElement@TiXmlNode@@QBEPBVTiXmlElement@@XZ
_TEXT	SEGMENT
_node$ = -20						; size = 4
_this$ = -8						; size = 4
?NextSiblingElement@TiXmlNode@@QBEPBVTiXmlElement@@XZ PROC ; TiXmlNode::NextSiblingElement, COMDAT
; _this$ = ecx

; 462  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 463  : 	const TiXmlNode* node;
; 464  : 
; 465  : 	for (	node = NextSibling();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?NextSibling@TiXmlNode@@QBEPBV1@XZ	; TiXmlNode::NextSibling
	mov	DWORD PTR _node$[ebp], eax

; 466  : 			node;

	jmp	SHORT $LN4@NextSiblin@2
$LN3@NextSiblin@2:

; 467  : 			node = node->NextSibling() )

	mov	ecx, DWORD PTR _node$[ebp]
	call	?NextSibling@TiXmlNode@@QBEPBV1@XZ	; TiXmlNode::NextSibling
	mov	DWORD PTR _node$[ebp], eax
$LN4@NextSiblin@2:
	cmp	DWORD PTR _node$[ebp], 0
	je	SHORT $LN2@NextSiblin@2

; 468  : 	{
; 469  : 		if ( node->ToElement() )

	mov	eax, DWORD PTR _node$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _node$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN1@NextSiblin@2

; 470  : 			return node->ToElement();

	mov	eax, DWORD PTR _node$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _node$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN5@NextSiblin@2
$LN1@NextSiblin@2:

; 471  : 	}

	jmp	SHORT $LN3@NextSiblin@2
$LN2@NextSiblin@2:

; 472  : 	return 0;

	xor	eax, eax
$LN5@NextSiblin@2:

; 473  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?NextSiblingElement@TiXmlNode@@QBEPBVTiXmlElement@@XZ ENDP ; TiXmlNode::NextSiblingElement
_TEXT	ENDS
PUBLIC	?NextSiblingElement@TiXmlNode@@QBEPBVTiXmlElement@@PBD@Z ; TiXmlNode::NextSiblingElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?NextSiblingElement@TiXmlNode@@QBEPBVTiXmlElement@@PBD@Z
_TEXT	SEGMENT
_node$ = -20						; size = 4
_this$ = -8						; size = 4
__value$ = 8						; size = 4
?NextSiblingElement@TiXmlNode@@QBEPBVTiXmlElement@@PBD@Z PROC ; TiXmlNode::NextSiblingElement, COMDAT
; _this$ = ecx

; 477  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 478  : 	const TiXmlNode* node;
; 479  : 
; 480  : 	for (	node = NextSibling( _value );

	mov	eax, DWORD PTR __value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NextSibling@TiXmlNode@@QBEPBV1@PBD@Z	; TiXmlNode::NextSibling
	mov	DWORD PTR _node$[ebp], eax

; 481  : 			node;

	jmp	SHORT $LN4@NextSiblin@3
$LN3@NextSiblin@3:

; 482  : 			node = node->NextSibling( _value ) )

	mov	eax, DWORD PTR __value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _node$[ebp]
	call	?NextSibling@TiXmlNode@@QBEPBV1@PBD@Z	; TiXmlNode::NextSibling
	mov	DWORD PTR _node$[ebp], eax
$LN4@NextSiblin@3:
	cmp	DWORD PTR _node$[ebp], 0
	je	SHORT $LN2@NextSiblin@3

; 483  : 	{
; 484  : 		if ( node->ToElement() )

	mov	eax, DWORD PTR _node$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _node$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN1@NextSiblin@3

; 485  : 			return node->ToElement();

	mov	eax, DWORD PTR _node$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _node$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN5@NextSiblin@3
$LN1@NextSiblin@3:

; 486  : 	}

	jmp	SHORT $LN3@NextSiblin@3
$LN2@NextSiblin@3:

; 487  : 	return 0;

	xor	eax, eax
$LN5@NextSiblin@3:

; 488  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?NextSiblingElement@TiXmlNode@@QBEPBVTiXmlElement@@PBD@Z ENDP ; TiXmlNode::NextSiblingElement
_TEXT	ENDS
PUBLIC	?GetDocument@TiXmlNode@@QBEPBVTiXmlDocument@@XZ	; TiXmlNode::GetDocument
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetDocument@TiXmlNode@@QBEPBVTiXmlDocument@@XZ
_TEXT	SEGMENT
_node$ = -20						; size = 4
_this$ = -8						; size = 4
?GetDocument@TiXmlNode@@QBEPBVTiXmlDocument@@XZ PROC	; TiXmlNode::GetDocument, COMDAT
; _this$ = ecx

; 492  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 493  : 	const TiXmlNode* node;
; 494  : 
; 495  : 	for( node = this; node; node = node->parent )

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR _node$[ebp], eax
	jmp	SHORT $LN4@GetDocumen
$LN3@GetDocumen:
	mov	eax, DWORD PTR _node$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _node$[ebp], ecx
$LN4@GetDocumen:
	cmp	DWORD PTR _node$[ebp], 0
	je	SHORT $LN2@GetDocumen

; 496  : 	{
; 497  : 		if ( node->ToDocument() )

	mov	eax, DWORD PTR _node$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _node$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN1@GetDocumen

; 498  : 			return node->ToDocument();

	mov	eax, DWORD PTR _node$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _node$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN5@GetDocumen
$LN1@GetDocumen:

; 499  : 	}

	jmp	SHORT $LN3@GetDocumen
$LN2@GetDocumen:

; 500  : 	return 0;

	xor	eax, eax
$LN5@GetDocumen:

; 501  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDocument@TiXmlNode@@QBEPBVTiXmlDocument@@XZ ENDP	; TiXmlNode::GetDocument
_TEXT	ENDS
PUBLIC	??1TiXmlAttributeSet@@QAE@XZ			; TiXmlAttributeSet::~TiXmlAttributeSet
PUBLIC	??4TiXmlString@@QAEAAV0@PBD@Z			; TiXmlString::operator=
PUBLIC	??0TiXmlAttributeSet@@QAE@XZ			; TiXmlAttributeSet::TiXmlAttributeSet
PUBLIC	??_7TiXmlElement@@6B@				; TiXmlElement::`vftable'
PUBLIC	??0TiXmlElement@@QAE@PBD@Z			; TiXmlElement::TiXmlElement
PUBLIC	??_R4TiXmlElement@@6B@				; TiXmlElement::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTiXmlElement@@@8			; TiXmlElement `RTTI Type Descriptor'
PUBLIC	??_R3TiXmlElement@@8				; TiXmlElement::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TiXmlElement@@8				; TiXmlElement::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TiXmlElement@@8			; TiXmlElement::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?Print@TiXmlElement@@UBEXPAU_iobuf@@H@Z		; TiXmlElement::Print
PUBLIC	?ToElement@TiXmlElement@@UAEPAV1@XZ		; TiXmlElement::ToElement
PUBLIC	?ToElement@TiXmlElement@@UBEPBV1@XZ		; TiXmlElement::ToElement
PUBLIC	?Clone@TiXmlElement@@UBEPAVTiXmlNode@@XZ	; TiXmlElement::Clone
PUBLIC	?Accept@TiXmlElement@@UBE_NPAVTiXmlVisitor@@@Z	; TiXmlElement::Accept
EXTRN	??_ETiXmlElement@@UAEPAXI@Z:PROC		; TiXmlElement::`vector deleting destructor'
EXTRN	?Parse@TiXmlElement@@UAEPBDPBDPAVTiXmlParsingData@@W4TiXmlEncoding@@@Z:PROC ; TiXmlElement::Parse
;	COMDAT ??_R1A@?0A@EA@TiXmlElement@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TiXmlElement@@8 DD FLAT:??_R0?AVTiXmlElement@@@8 ; TiXmlElement::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TiXmlElement@@8
rdata$r	ENDS
;	COMDAT ??_R2TiXmlElement@@8
rdata$r	SEGMENT
??_R2TiXmlElement@@8 DD FLAT:??_R1A@?0A@EA@TiXmlElement@@8 ; TiXmlElement::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@TiXmlNode@@8
	DD	FLAT:??_R1A@?0A@EA@TiXmlBase@@8
rdata$r	ENDS
;	COMDAT ??_R3TiXmlElement@@8
rdata$r	SEGMENT
??_R3TiXmlElement@@8 DD 00H				; TiXmlElement::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2TiXmlElement@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTiXmlElement@@@8
_DATA	SEGMENT
??_R0?AVTiXmlElement@@@8 DD FLAT:??_7type_info@@6B@	; TiXmlElement `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTiXmlElement@@', 00H
_DATA	ENDS
;	COMDAT ??_R4TiXmlElement@@6B@
rdata$r	SEGMENT
??_R4TiXmlElement@@6B@ DD 00H				; TiXmlElement::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTiXmlElement@@@8
	DD	FLAT:??_R3TiXmlElement@@8
rdata$r	ENDS
;	COMDAT ??_7TiXmlElement@@6B@
CONST	SEGMENT
??_7TiXmlElement@@6B@ DD FLAT:??_R4TiXmlElement@@6B@	; TiXmlElement::`vftable'
	DD	FLAT:??_ETiXmlElement@@UAEPAXI@Z
	DD	FLAT:?Print@TiXmlElement@@UBEXPAU_iobuf@@H@Z
	DD	FLAT:?Parse@TiXmlElement@@UAEPBDPBDPAVTiXmlParsingData@@W4TiXmlEncoding@@@Z
	DD	FLAT:?ToDocument@TiXmlNode@@UAEPAVTiXmlDocument@@XZ
	DD	FLAT:?ToDocument@TiXmlNode@@UBEPBVTiXmlDocument@@XZ
	DD	FLAT:?ToElement@TiXmlElement@@UAEPAV1@XZ
	DD	FLAT:?ToElement@TiXmlElement@@UBEPBV1@XZ
	DD	FLAT:?ToComment@TiXmlNode@@UAEPAVTiXmlComment@@XZ
	DD	FLAT:?ToComment@TiXmlNode@@UBEPBVTiXmlComment@@XZ
	DD	FLAT:?ToUnknown@TiXmlNode@@UAEPAVTiXmlUnknown@@XZ
	DD	FLAT:?ToUnknown@TiXmlNode@@UBEPBVTiXmlUnknown@@XZ
	DD	FLAT:?ToText@TiXmlNode@@UAEPAVTiXmlText@@XZ
	DD	FLAT:?ToText@TiXmlNode@@UBEPBVTiXmlText@@XZ
	DD	FLAT:?ToDeclaration@TiXmlNode@@UAEPAVTiXmlDeclaration@@XZ
	DD	FLAT:?ToDeclaration@TiXmlNode@@UBEPBVTiXmlDeclaration@@XZ
	DD	FLAT:?ToStylesheetReference@TiXmlNode@@UAEPAVTiXmlStylesheetReference@@XZ
	DD	FLAT:?ToStylesheetReference@TiXmlNode@@UBEPBVTiXmlStylesheetReference@@XZ
	DD	FLAT:?Clone@TiXmlElement@@UBEPAVTiXmlNode@@XZ
	DD	FLAT:?Accept@TiXmlElement@@UBE_NPAVTiXmlVisitor@@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0TiXmlElement@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0TiXmlElement@@QAE@PBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0TiXmlElement@@QAE@PBD@Z$1
__ehfuncinfo$??0TiXmlElement@@QAE@PBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0TiXmlElement@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0TiXmlElement@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__value$ = 8						; size = 4
??0TiXmlElement@@QAE@PBD@Z PROC				; TiXmlElement::TiXmlElement, COMDAT
; _this$ = ecx

; 506  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0TiXmlElement@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TiXmlNode@@IAE@W4NodeType@0@@Z	; TiXmlNode::TiXmlNode
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TiXmlElement@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0TiXmlAttributeSet@@QAE@XZ		; TiXmlAttributeSet::TiXmlAttributeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 507  : 	firstChild = lastChild = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 0

; 508  : 	value = _value;

	mov	eax, DWORD PTR __value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??4TiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator=

; 509  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0TiXmlElement@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1TiXmlNode@@UAE@XZ			; TiXmlNode::~TiXmlNode
__unwindfunclet$??0TiXmlElement@@QAE@PBD@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1TiXmlAttributeSet@@QAE@XZ		; TiXmlAttributeSet::~TiXmlAttributeSet
__ehhandler$??0TiXmlElement@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0TiXmlElement@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0TiXmlElement@@QAE@PBD@Z ENDP				; TiXmlElement::TiXmlElement
PUBLIC	??1TiXmlElement@@UAE@XZ				; TiXmlElement::~TiXmlElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GTiXmlElement@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GTiXmlElement@@UAEPAXI@Z PROC			; TiXmlElement::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TiXmlElement@@UAE@XZ			; TiXmlElement::~TiXmlElement
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@2
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@2:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GTiXmlElement@@UAEPAXI@Z ENDP			; TiXmlElement::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?CopyTo@TiXmlElement@@IBEXPAV1@@Z		; TiXmlElement::CopyTo
PUBLIC	??0TiXmlElement@@QAE@ABV0@@Z			; TiXmlElement::TiXmlElement
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0TiXmlElement@@QAE@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0TiXmlElement@@QAE@ABV0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0TiXmlElement@@QAE@ABV0@@Z$1
__ehfuncinfo$??0TiXmlElement@@QAE@ABV0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0TiXmlElement@@QAE@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0TiXmlElement@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_copy$ = 8						; size = 4
??0TiXmlElement@@QAE@ABV0@@Z PROC			; TiXmlElement::TiXmlElement, COMDAT
; _this$ = ecx

; 524  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0TiXmlElement@@QAE@ABV0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TiXmlNode@@IAE@W4NodeType@0@@Z	; TiXmlNode::TiXmlNode
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TiXmlElement@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0TiXmlAttributeSet@@QAE@XZ		; TiXmlAttributeSet::TiXmlAttributeSet
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 525  : 	firstChild = lastChild = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+24], 0

; 526  : 	copy.CopyTo( this );

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _copy$[ebp]
	call	?CopyTo@TiXmlElement@@IBEXPAV1@@Z	; TiXmlElement::CopyTo

; 527  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0TiXmlElement@@QAE@ABV0@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1TiXmlNode@@UAE@XZ			; TiXmlNode::~TiXmlNode
__unwindfunclet$??0TiXmlElement@@QAE@ABV0@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1TiXmlAttributeSet@@QAE@XZ		; TiXmlAttributeSet::~TiXmlAttributeSet
__ehhandler$??0TiXmlElement@@QAE@ABV0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0TiXmlElement@@QAE@ABV0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0TiXmlElement@@QAE@ABV0@@Z ENDP			; TiXmlElement::TiXmlElement
PUBLIC	?ClearThis@TiXmlElement@@IAEXXZ			; TiXmlElement::ClearThis
PUBLIC	??4TiXmlElement@@QAEXABV0@@Z			; TiXmlElement::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4TiXmlElement@@QAEXABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_base$ = 8						; size = 4
??4TiXmlElement@@QAEXABV0@@Z PROC			; TiXmlElement::operator=, COMDAT
; _this$ = ecx

; 531  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 532  : 	ClearThis();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearThis@TiXmlElement@@IAEXXZ		; TiXmlElement::ClearThis

; 533  : 	base.CopyTo( this );

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _base$[ebp]
	call	?CopyTo@TiXmlElement@@IBEXPAV1@@Z	; TiXmlElement::CopyTo

; 534  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4TiXmlElement@@QAEXABV0@@Z ENDP			; TiXmlElement::operator=
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1TiXmlElement@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1TiXmlElement@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1TiXmlElement@@UAE@XZ$1
__ehfuncinfo$??1TiXmlElement@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1TiXmlElement@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1TiXmlElement@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1TiXmlElement@@UAE@XZ PROC				; TiXmlElement::~TiXmlElement, COMDAT
; _this$ = ecx

; 538  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1TiXmlElement@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TiXmlElement@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 539  : 	ClearThis();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearThis@TiXmlElement@@IAEXXZ		; TiXmlElement::ClearThis

; 540  : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??1TiXmlAttributeSet@@QAE@XZ		; TiXmlAttributeSet::~TiXmlAttributeSet
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TiXmlNode@@UAE@XZ			; TiXmlNode::~TiXmlNode
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1TiXmlElement@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1TiXmlNode@@UAE@XZ			; TiXmlNode::~TiXmlNode
__unwindfunclet$??1TiXmlElement@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1TiXmlAttributeSet@@QAE@XZ		; TiXmlAttributeSet::~TiXmlAttributeSet
__ehhandler$??1TiXmlElement@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1TiXmlElement@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1TiXmlElement@@UAE@XZ ENDP				; TiXmlElement::~TiXmlElement
PUBLIC	?First@TiXmlAttributeSet@@QAEPAVTiXmlAttribute@@XZ ; TiXmlAttributeSet::First
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ClearThis@TiXmlElement@@IAEXXZ
_TEXT	SEGMENT
tv89 = -244						; size = 4
$T210830 = -236						; size = 4
$T210831 = -224						; size = 4
_node$209538 = -20					; size = 4
_this$ = -8						; size = 4
?ClearThis@TiXmlElement@@IAEXXZ PROC			; TiXmlElement::ClearThis, COMDAT
; _this$ = ecx

; 544  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 545  : 	Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@TiXmlNode@@QAEXXZ		; TiXmlNode::Clear
$LN2@ClearThis:

; 546  : 	while( attributeSet.First() )

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?First@TiXmlAttributeSet@@QAEPAVTiXmlAttribute@@XZ ; TiXmlAttributeSet::First
	test	eax, eax
	je	SHORT $LN3@ClearThis

; 547  : 	{
; 548  : 		TiXmlAttribute* node = attributeSet.First();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?First@TiXmlAttributeSet@@QAEPAVTiXmlAttribute@@XZ ; TiXmlAttributeSet::First
	mov	DWORD PTR _node$209538[ebp], eax

; 549  : 		attributeSet.Remove( node );

	mov	eax, DWORD PTR _node$209538[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?Remove@TiXmlAttributeSet@@QAEXPAVTiXmlAttribute@@@Z ; TiXmlAttributeSet::Remove

; 550  : 		delete node;

	mov	eax, DWORD PTR _node$209538[ebp]
	mov	DWORD PTR $T210831[ebp], eax
	mov	ecx, DWORD PTR $T210831[ebp]
	mov	DWORD PTR $T210830[ebp], ecx
	cmp	DWORD PTR $T210830[ebp], 0
	je	SHORT $LN5@ClearThis
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T210830[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T210830[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN6@ClearThis
$LN5@ClearThis:
	mov	DWORD PTR tv89[ebp], 0
$LN6@ClearThis:

; 551  : 	}

	jmp	SHORT $LN2@ClearThis
$LN3@ClearThis:

; 552  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ClearThis@TiXmlElement@@IAEXXZ ENDP			; TiXmlElement::ClearThis
_TEXT	ENDS
PUBLIC	?Value@TiXmlAttribute@@QBEPBDXZ			; TiXmlAttribute::Value
PUBLIC	?Find@TiXmlAttributeSet@@QBEPBVTiXmlAttribute@@PBD@Z ; TiXmlAttributeSet::Find
PUBLIC	?Attribute@TiXmlElement@@QBEPBDPBD@Z		; TiXmlElement::Attribute
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Attribute@TiXmlElement@@QBEPBDPBD@Z
_TEXT	SEGMENT
_node$ = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
?Attribute@TiXmlElement@@QBEPBDPBD@Z PROC		; TiXmlElement::Attribute, COMDAT
; _this$ = ecx

; 556  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 557  : 	const TiXmlAttribute* node = attributeSet.Find( name );

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?Find@TiXmlAttributeSet@@QBEPBVTiXmlAttribute@@PBD@Z ; TiXmlAttributeSet::Find
	mov	DWORD PTR _node$[ebp], eax

; 558  : 	if ( node )

	cmp	DWORD PTR _node$[ebp], 0
	je	SHORT $LN1@Attribute

; 559  : 		return node->Value();

	mov	ecx, DWORD PTR _node$[ebp]
	call	?Value@TiXmlAttribute@@QBEPBDXZ		; TiXmlAttribute::Value
	jmp	SHORT $LN2@Attribute
$LN1@Attribute:

; 560  : 	return 0;

	xor	eax, eax
$LN2@Attribute:

; 561  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Attribute@TiXmlElement@@QBEPBDPBD@Z ENDP		; TiXmlElement::Attribute
_TEXT	ENDS
PUBLIC	?Attribute@TiXmlElement@@QBEPBDPBDPAH@Z		; TiXmlElement::Attribute
EXTRN	_atoi:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Attribute@TiXmlElement@@QBEPBDPBDPAH@Z
_TEXT	SEGMENT
_s$ = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_i$ = 12						; size = 4
?Attribute@TiXmlElement@@QBEPBDPBDPAH@Z PROC		; TiXmlElement::Attribute, COMDAT
; _this$ = ecx

; 576  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 577  : 	const char* s = Attribute( name );

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attribute@TiXmlElement@@QBEPBDPBD@Z	; TiXmlElement::Attribute
	mov	DWORD PTR _s$[ebp], eax

; 578  : 	if ( i )

	cmp	DWORD PTR _i$[ebp], 0
	je	SHORT $LN3@Attribute@2

; 579  : 	{
; 580  : 		if ( s ) {

	cmp	DWORD PTR _s$[ebp], 0
	je	SHORT $LN2@Attribute@2

; 581  : 			*i = atoi( s );

	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_atoi
	add	esp, 4
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR [ecx], eax

; 582  : 		}
; 583  : 		else {

	jmp	SHORT $LN3@Attribute@2
$LN2@Attribute@2:

; 584  : 			*i = 0;

	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR [eax], 0
$LN3@Attribute@2:

; 585  : 		}
; 586  : 	}
; 587  : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 588  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Attribute@TiXmlElement@@QBEPBDPBDPAH@Z ENDP		; TiXmlElement::Attribute
_TEXT	ENDS
PUBLIC	__real@0000000000000000
PUBLIC	?Attribute@TiXmlElement@@QBEPBDPBDPAN@Z		; TiXmlElement::Attribute
EXTRN	_atof:PROC
EXTRN	__fltused:DWORD
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?Attribute@TiXmlElement@@QBEPBDPBDPAN@Z
_TEXT	SEGMENT
_s$ = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_d$ = 12						; size = 4
?Attribute@TiXmlElement@@QBEPBDPBDPAN@Z PROC		; TiXmlElement::Attribute, COMDAT
; _this$ = ecx

; 610  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 611  : 	const char* s = Attribute( name );

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Attribute@TiXmlElement@@QBEPBDPBD@Z	; TiXmlElement::Attribute
	mov	DWORD PTR _s$[ebp], eax

; 612  : 	if ( d )

	cmp	DWORD PTR _d$[ebp], 0
	je	SHORT $LN1@Attribute@3

; 613  : 	{
; 614  : 		if ( s ) {

	cmp	DWORD PTR _s$[ebp], 0
	je	SHORT $LN2@Attribute@3

; 615  : 			*d = atof( s );

	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_atof
	add	esp, 4
	mov	ecx, DWORD PTR _d$[ebp]
	fstp	QWORD PTR [ecx]

; 616  : 		}
; 617  : 		else {

	jmp	SHORT $LN1@Attribute@3
$LN2@Attribute@3:

; 618  : 			*d = 0;

	mov	eax, DWORD PTR _d$[ebp]
	fldz
	fstp	QWORD PTR [eax]
$LN1@Attribute@3:

; 619  : 		}
; 620  : 	}
; 621  : 	return s;

	mov	eax, DWORD PTR _s$[ebp]

; 622  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Attribute@TiXmlElement@@QBEPBDPBDPAN@Z ENDP		; TiXmlElement::Attribute
_TEXT	ENDS
PUBLIC	?QueryIntValue@TiXmlAttribute@@QBEHPAH@Z	; TiXmlAttribute::QueryIntValue
PUBLIC	?QueryIntAttribute@TiXmlElement@@QBEHPBDPAH@Z	; TiXmlElement::QueryIntAttribute
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?QueryIntAttribute@TiXmlElement@@QBEHPBDPAH@Z
_TEXT	SEGMENT
_node$ = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_ival$ = 12						; size = 4
?QueryIntAttribute@TiXmlElement@@QBEHPBDPAH@Z PROC	; TiXmlElement::QueryIntAttribute, COMDAT
; _this$ = ecx

; 644  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 645  : 	const TiXmlAttribute* node = attributeSet.Find( name );

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?Find@TiXmlAttributeSet@@QBEPBVTiXmlAttribute@@PBD@Z ; TiXmlAttributeSet::Find
	mov	DWORD PTR _node$[ebp], eax

; 646  : 	if ( !node )

	cmp	DWORD PTR _node$[ebp], 0
	jne	SHORT $LN1@QueryIntAt

; 647  : 		return TIXML_NO_ATTRIBUTE;

	mov	eax, 1
	jmp	SHORT $LN2@QueryIntAt
$LN1@QueryIntAt:

; 648  : 	return node->QueryIntValue( ival );

	mov	eax, DWORD PTR _ival$[ebp]
	push	eax
	mov	ecx, DWORD PTR _node$[ebp]
	call	?QueryIntValue@TiXmlAttribute@@QBEHPAH@Z ; TiXmlAttribute::QueryIntValue
$LN2@QueryIntAt:

; 649  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?QueryIntAttribute@TiXmlElement@@QBEHPBDPAH@Z ENDP	; TiXmlElement::QueryIntAttribute
_TEXT	ENDS
PUBLIC	?QueryDoubleValue@TiXmlAttribute@@QBEHPAN@Z	; TiXmlAttribute::QueryDoubleValue
PUBLIC	?QueryDoubleAttribute@TiXmlElement@@QBEHPBDPAN@Z ; TiXmlElement::QueryDoubleAttribute
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?QueryDoubleAttribute@TiXmlElement@@QBEHPBDPAN@Z
_TEXT	SEGMENT
_node$ = -20						; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
_dval$ = 12						; size = 4
?QueryDoubleAttribute@TiXmlElement@@QBEHPBDPAN@Z PROC	; TiXmlElement::QueryDoubleAttribute, COMDAT
; _this$ = ecx

; 664  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 665  : 	const TiXmlAttribute* node = attributeSet.Find( name );

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?Find@TiXmlAttributeSet@@QBEPBVTiXmlAttribute@@PBD@Z ; TiXmlAttributeSet::Find
	mov	DWORD PTR _node$[ebp], eax

; 666  : 	if ( !node )

	cmp	DWORD PTR _node$[ebp], 0
	jne	SHORT $LN1@QueryDoubl

; 667  : 		return TIXML_NO_ATTRIBUTE;

	mov	eax, 1
	jmp	SHORT $LN2@QueryDoubl
$LN1@QueryDoubl:

; 668  : 	return node->QueryDoubleValue( dval );

	mov	eax, DWORD PTR _dval$[ebp]
	push	eax
	mov	ecx, DWORD PTR _node$[ebp]
	call	?QueryDoubleValue@TiXmlAttribute@@QBEHPAN@Z ; TiXmlAttribute::QueryDoubleValue
$LN2@QueryDoubl:

; 669  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?QueryDoubleAttribute@TiXmlElement@@QBEHPBDPAN@Z ENDP	; TiXmlElement::QueryDoubleAttribute
_TEXT	ENDS
PUBLIC	?SetAttribute@TiXmlElement@@QAEXPBD0@Z		; TiXmlElement::SetAttribute
PUBLIC	??$_snprintf_s@$0EA@@@YAHAAY0EA@DIPBDZZ		; _snprintf_s<64>
PUBLIC	??_C@_02DPKJAMEF@?$CFd?$AA@			; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?SetAttribute@TiXmlElement@@QAEXPBDH@Z		; TiXmlElement::SetAttribute
;	COMDAT ??_C@_02DPKJAMEF@?$CFd?$AA@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd?$AA@ DB '%d', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?SetAttribute@TiXmlElement@@QAEXPBDH@Z
_TEXT	SEGMENT
_buf$ = -84						; size = 64
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_name$ = 8						; size = 4
_val$ = 12						; size = 4
?SetAttribute@TiXmlElement@@QAEXPBDH@Z PROC		; TiXmlElement::SetAttribute, COMDAT
; _this$ = ecx

; 684  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 685  : 	char buf[64];
; 686  : 	#if defined(TIXML_SNPRINTF)
; 687  : 		TIXML_SNPRINTF( buf, sizeof(buf), "%d", val );

	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	push	OFFSET ??_C@_02DPKJAMEF@?$CFd?$AA@
	push	64					; 00000040H
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	??$_snprintf_s@$0EA@@@YAHAAY0EA@DIPBDZZ	; _snprintf_s<64>
	add	esp, 16					; 00000010H

; 688  : 	#else
; 689  : 		sprintf( buf, "%d", val );
; 690  : 	#endif
; 691  : 	SetAttribute( name, buf );

	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetAttribute@TiXmlElement@@QAEXPBD0@Z	; TiXmlElement::SetAttribute

; 692  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@SetAttribu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN5@SetAttribu:
	DD	1
	DD	$LN4@SetAttribu
$LN4@SetAttribu:
	DD	-84					; ffffffacH
	DD	64					; 00000040H
	DD	$LN3@SetAttribu
$LN3@SetAttribu:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?SetAttribute@TiXmlElement@@QAEXPBDH@Z ENDP		; TiXmlElement::SetAttribute
_TEXT	ENDS
PUBLIC	??$_snprintf_s@$0BAA@@@YAHAAY0BAA@DIPBDZZ	; _snprintf_s<256>
PUBLIC	??_C@_02NJPGOMH@?$CFf?$AA@			; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?SetDoubleAttribute@TiXmlElement@@QAEXPBDN@Z	; TiXmlElement::SetDoubleAttribute
;	COMDAT ??_C@_02NJPGOMH@?$CFf?$AA@
CONST	SEGMENT
??_C@_02NJPGOMH@?$CFf?$AA@ DB '%f', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?SetDoubleAttribute@TiXmlElement@@QAEXPBDN@Z
_TEXT	SEGMENT
_buf$ = -276						; size = 256
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_name$ = 8						; size = 4
_val$ = 12						; size = 8
?SetDoubleAttribute@TiXmlElement@@QAEXPBDN@Z PROC	; TiXmlElement::SetDoubleAttribute, COMDAT
; _this$ = ecx

; 706  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 472				; 000001d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-472]
	mov	ecx, 118				; 00000076H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 707  : 	char buf[256];
; 708  : 	#if defined(TIXML_SNPRINTF)
; 709  : 		TIXML_SNPRINTF( buf, sizeof(buf), "%f", val );

	sub	esp, 8
	fld	QWORD PTR _val$[ebp]
	fstp	QWORD PTR [esp]
	push	OFFSET ??_C@_02NJPGOMH@?$CFf?$AA@
	push	256					; 00000100H
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	??$_snprintf_s@$0BAA@@@YAHAAY0BAA@DIPBDZZ ; _snprintf_s<256>
	add	esp, 20					; 00000014H

; 710  : 	#else
; 711  : 		sprintf( buf, "%f", val );
; 712  : 	#endif
; 713  : 	SetAttribute( name, buf );

	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetAttribute@TiXmlElement@@QAEXPBD0@Z	; TiXmlElement::SetAttribute

; 714  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@SetDoubleA
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 472				; 000001d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN5@SetDoubleA:
	DD	1
	DD	$LN4@SetDoubleA
$LN4@SetDoubleA:
	DD	-276					; fffffeecH
	DD	256					; 00000100H
	DD	$LN3@SetDoubleA
$LN3@SetDoubleA:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?SetDoubleAttribute@TiXmlElement@@QAEXPBDN@Z ENDP	; TiXmlElement::SetDoubleAttribute
_TEXT	ENDS
PUBLIC	?Add@TiXmlAttributeSet@@QAEXPAVTiXmlAttribute@@@Z ; TiXmlAttributeSet::Add
PUBLIC	??0TiXmlAttribute@@QAE@PBD0@Z			; TiXmlAttribute::TiXmlAttribute
PUBLIC	?SetValue@TiXmlAttribute@@QAEXPBD@Z		; TiXmlAttribute::SetValue
EXTRN	??2@YAPAXI@Z:PROC				; operator new
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?SetAttribute@TiXmlElement@@QAEXPBD0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?SetAttribute@TiXmlElement@@QAEXPBD0@Z$0
__ehfuncinfo$?SetAttribute@TiXmlElement@@QAEXPBD0@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?SetAttribute@TiXmlElement@@QAEXPBD0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?SetAttribute@TiXmlElement@@QAEXPBD0@Z
_TEXT	SEGMENT
tv80 = -304						; size = 4
$T210861 = -296						; size = 4
$T210862 = -284						; size = 4
_document$209621 = -80					; size = 4
_attrib$ = -68						; size = 4
_node$ = -56						; size = 4
__value$ = -44						; size = 4
__name$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_cname$ = 8						; size = 4
_cvalue$ = 12						; size = 4
?SetAttribute@TiXmlElement@@QAEXPBD0@Z PROC		; TiXmlElement::SetAttribute, COMDAT
; _this$ = ecx

; 718  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?SetAttribute@TiXmlElement@@QAEXPBD0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 719  :     #ifdef TIXML_USE_STL
; 720  : 	TIXML_STRING _name( cname );
; 721  : 	TIXML_STRING _value( cvalue );
; 722  : 	#else
; 723  : 	const char* _name = cname;

	mov	eax, DWORD PTR _cname$[ebp]
	mov	DWORD PTR __name$[ebp], eax

; 724  : 	const char* _value = cvalue;

	mov	eax, DWORD PTR _cvalue$[ebp]
	mov	DWORD PTR __value$[ebp], eax

; 725  : 	#endif
; 726  : 
; 727  : 	TiXmlAttribute* node = attributeSet.Find( _name );

	mov	eax, DWORD PTR __name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?Find@TiXmlAttributeSet@@QAEPAVTiXmlAttribute@@PBD@Z ; TiXmlAttributeSet::Find
	mov	DWORD PTR _node$[ebp], eax

; 728  : 	if ( node )

	cmp	DWORD PTR _node$[ebp], 0
	je	SHORT $LN4@SetAttribu@2

; 729  : 	{
; 730  : 		node->SetValue( _value );

	mov	eax, DWORD PTR __value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _node$[ebp]
	call	?SetValue@TiXmlAttribute@@QAEXPBD@Z	; TiXmlAttribute::SetValue

; 731  : 		return;

	jmp	$LN5@SetAttribu@2
$LN4@SetAttribu@2:

; 732  : 	}
; 733  : 
; 734  : 	TiXmlAttribute* attrib = new TiXmlAttribute( cname, cvalue );

	push	36					; 00000024H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T210862[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T210862[ebp], 0
	je	SHORT $LN7@SetAttribu@2
	mov	eax, DWORD PTR _cvalue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cname$[ebp]
	push	ecx
	mov	ecx, DWORD PTR $T210862[ebp]
	call	??0TiXmlAttribute@@QAE@PBD0@Z		; TiXmlAttribute::TiXmlAttribute
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN8@SetAttribu@2
$LN7@SetAttribu@2:
	mov	DWORD PTR tv80[ebp], 0
$LN8@SetAttribu@2:
	mov	edx, DWORD PTR tv80[ebp]
	mov	DWORD PTR $T210861[ebp], edx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR $T210861[ebp]
	mov	DWORD PTR _attrib$[ebp], eax

; 735  : 	if ( attrib )

	cmp	DWORD PTR _attrib$[ebp], 0
	je	SHORT $LN3@SetAttribu@2

; 736  : 	{
; 737  : 		attributeSet.Add( attrib );

	mov	eax, DWORD PTR _attrib$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?Add@TiXmlAttributeSet@@QAEXPAVTiXmlAttribute@@@Z ; TiXmlAttributeSet::Add

; 738  : 	}
; 739  : 	else

	jmp	SHORT $LN5@SetAttribu@2
$LN3@SetAttribu@2:

; 740  : 	{
; 741  : 		TiXmlDocument* document = GetDocument();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetDocument@TiXmlNode@@QAEPAVTiXmlDocument@@XZ ; TiXmlNode::GetDocument
	mov	DWORD PTR _document$209621[ebp], eax

; 742  : 		if ( document ) document->SetError( TIXML_ERROR_OUT_OF_MEMORY, 0, 0, TIXML_ENCODING_UNKNOWN );

	cmp	DWORD PTR _document$209621[ebp], 0
	je	SHORT $LN5@SetAttribu@2
	push	0
	push	0
	push	0
	push	3
	mov	ecx, DWORD PTR _document$209621[ebp]
	call	?SetError@TiXmlDocument@@QAEXHPBDPAVTiXmlParsingData@@W4TiXmlEncoding@@@Z ; TiXmlDocument::SetError
$LN5@SetAttribu@2:

; 743  : 	}
; 744  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?SetAttribute@TiXmlElement@@QAEXPBD0@Z$0:
	mov	eax, DWORD PTR $T210862[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?SetAttribute@TiXmlElement@@QAEXPBD0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-308]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?SetAttribute@TiXmlElement@@QAEXPBD0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?SetAttribute@TiXmlElement@@QAEXPBD0@Z ENDP		; TiXmlElement::SetAttribute
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	?NextSibling@TiXmlNode@@QAEPAV1@XZ		; TiXmlNode::NextSibling
PUBLIC	??_C@_05POIKLDCH@?$DM?1?$CFs?$DO?$AA@		; `string'
PUBLIC	??_C@_01PPODPGHN@?$DO?$AA@			; `string'
PUBLIC	??_C@_03MFNJFHN@?5?1?$DO?$AA@			; `string'
PUBLIC	??_C@_01CLKCMJKC@?5?$AA@			; `string'
PUBLIC	?Next@TiXmlAttribute@@QBEPBV1@XZ		; TiXmlAttribute::Next
PUBLIC	?First@TiXmlAttributeSet@@QBEPBVTiXmlAttribute@@XZ ; TiXmlAttributeSet::First
PUBLIC	??_C@_03FONCMJME@?$DM?$CFs?$AA@			; `string'
PUBLIC	??_C@_04PFOHOKJK@?5?5?5?5?$AA@			; `string'
PUBLIC	??_C@_1M@LLHFIANP@?$AAc?$AAf?$AAi?$AAl?$AAe?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??Print@TiXmlElement@@UBEXPAU_iobuf@@H@Z@4JA ; `TiXmlElement::Print'::`2'::__LINE__Var
EXTRN	_fprintf:PROC
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05POIKLDCH@?$DM?1?$CFs?$DO?$AA@
CONST	SEGMENT
??_C@_05POIKLDCH@?$DM?1?$CFs?$DO?$AA@ DB '</%s>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01PPODPGHN@?$DO?$AA@
CONST	SEGMENT
??_C@_01PPODPGHN@?$DO?$AA@ DB '>', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MFNJFHN@?5?1?$DO?$AA@
CONST	SEGMENT
??_C@_03MFNJFHN@?5?1?$DO?$AA@ DB ' />', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5?$AA@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5?$AA@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03FONCMJME@?$DM?$CFs?$AA@
CONST	SEGMENT
??_C@_03FONCMJME@?$DM?$CFs?$AA@ DB '<%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PFOHOKJK@?5?5?5?5?$AA@
CONST	SEGMENT
??_C@_04PFOHOKJK@?5?5?5?5?$AA@ DB '    ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@LLHFIANP@?$AAc?$AAf?$AAi?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1M@LLHFIANP@?$AAc?$AAf?$AAi?$AAl?$AAe?$AA?$AA@ DB 'c', 00H, 'f', 00H
	DB	'i', 00H, 'l', 00H, 'e', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??Print@TiXmlElement@@UBEXPAU_iobuf@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??Print@TiXmlElement@@UBEXPAU_iobuf@@H@Z@4JA DD 0304H ; `TiXmlElement::Print'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?Print@TiXmlElement@@UBEXPAU_iobuf@@H@Z
_TEXT	SEGMENT
_node$ = -44						; size = 4
_attrib$ = -32						; size = 4
_i$ = -20						; size = 4
_this$ = -8						; size = 4
_cfile$ = 8						; size = 4
_depth$ = 12						; size = 4
?Print@TiXmlElement@@UBEXPAU_iobuf@@H@Z PROC		; TiXmlElement::Print, COMDAT
; _this$ = ecx

; 772  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 773  : 	int i;
; 774  : 	assert( cfile );

	cmp	DWORD PTR _cfile$[ebp], 0
	jne	SHORT $LN20@Print
	mov	eax, DWORD PTR ?__LINE__Var@?1??Print@TiXmlElement@@UBEXPAU_iobuf@@H@Z@4JA
	add	eax, 2
	push	eax
	push	OFFSET ??_C@_1GE@HMDMHPBA@?$AAd?$AA?3?$AA?2?$AAv?$AAi?$AAc?$AAe?$AA?9?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAs?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs?$AAh?$AAa?$AAr?$AAe?$AAd?$AA?2?$AAt?$AAi@
	push	OFFSET ??_C@_1M@LLHFIANP@?$AAc?$AAf?$AAi?$AAl?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN20@Print:

; 775  : 	for ( i=0; i<depth; i++ ) {

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN17@Print
$LN16@Print:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN17@Print:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _depth$[ebp]
	jge	SHORT $LN15@Print

; 776  : 		fprintf( cfile, "    " );

	push	OFFSET ??_C@_04PFOHOKJK@?5?5?5?5?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 8

; 777  : 	}

	jmp	SHORT $LN16@Print
$LN15@Print:

; 778  : 
; 779  : 	fprintf( cfile, "<%s", value.c_str() );

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?c_str@TiXmlString@@QBEPBDXZ		; TiXmlString::c_str
	push	eax
	push	OFFSET ??_C@_03FONCMJME@?$DM?$CFs?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH

; 780  : 
; 781  : 	const TiXmlAttribute* attrib;
; 782  : 	for ( attrib = attributeSet.First(); attrib; attrib = attrib->Next() )

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?First@TiXmlAttributeSet@@QBEPBVTiXmlAttribute@@XZ ; TiXmlAttributeSet::First
	mov	DWORD PTR _attrib$[ebp], eax
	jmp	SHORT $LN14@Print
$LN13@Print:
	mov	ecx, DWORD PTR _attrib$[ebp]
	call	?Next@TiXmlAttribute@@QBEPBV1@XZ	; TiXmlAttribute::Next
	mov	DWORD PTR _attrib$[ebp], eax
$LN14@Print:
	cmp	DWORD PTR _attrib$[ebp], 0
	je	SHORT $LN12@Print

; 783  : 	{
; 784  : 		fprintf( cfile, " " );

	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 8

; 785  : 		attrib->Print( cfile, depth );

	mov	esi, esp
	mov	eax, DWORD PTR _depth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cfile$[ebp]
	push	ecx
	mov	edx, DWORD PTR _attrib$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _attrib$[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 786  : 	}

	jmp	SHORT $LN13@Print
$LN12@Print:

; 787  : 
; 788  : 	// There are 3 different formatting approaches:
; 789  : 	// 1) An element without children is printed as a <foo /> node
; 790  : 	// 2) An element with only a text child is printed as <foo> text </foo>
; 791  : 	// 3) An element with children is printed on multiple lines.
; 792  : 	TiXmlNode* node;
; 793  : 	if ( !firstChild )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 0
	jne	SHORT $LN11@Print

; 794  : 	{
; 795  : 		fprintf( cfile, " />" );

	push	OFFSET ??_C@_03MFNJFHN@?5?1?$DO?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 8
	jmp	$LN18@Print
$LN11@Print:

; 796  : 	}
; 797  : 	else if ( firstChild == lastChild && firstChild->ToText() )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+24]
	cmp	edx, DWORD PTR [ecx+28]
	jne	SHORT $LN9@Print
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN9@Print

; 798  : 	{
; 799  : 		fprintf( cfile, ">" );

	push	OFFSET ??_C@_01PPODPGHN@?$DO?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 8

; 800  : 		firstChild->Print( cfile, depth + 1 );

	mov	eax, DWORD PTR _depth$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _cfile$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx+24]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 801  : 		fprintf( cfile, "</%s>", value.c_str() );

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?c_str@TiXmlString@@QBEPBDXZ		; TiXmlString::c_str
	push	eax
	push	OFFSET ??_C@_05POIKLDCH@?$DM?1?$CFs?$DO?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH

; 802  : 	}
; 803  : 	else

	jmp	$LN18@Print
$LN9@Print:

; 804  : 	{
; 805  : 		fprintf( cfile, ">" );

	push	OFFSET ??_C@_01PPODPGHN@?$DO?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 8

; 806  : 
; 807  : 		for ( node = firstChild; node; node=node->NextSibling() )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _node$[ebp], ecx
	jmp	SHORT $LN7@Print
$LN6@Print:
	mov	ecx, DWORD PTR _node$[ebp]
	call	?NextSibling@TiXmlNode@@QAEPAV1@XZ	; TiXmlNode::NextSibling
	mov	DWORD PTR _node$[ebp], eax
$LN7@Print:
	cmp	DWORD PTR _node$[ebp], 0
	je	SHORT $LN5@Print

; 808  : 		{
; 809  : 			if ( !node->ToText() )

	mov	eax, DWORD PTR _node$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _node$[ebp]
	mov	eax, DWORD PTR [edx+44]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN4@Print

; 810  : 			{
; 811  : 				fprintf( cfile, "\n" );

	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 8
$LN4@Print:

; 812  : 			}
; 813  : 			node->Print( cfile, depth+1 );

	mov	eax, DWORD PTR _depth$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _cfile$[ebp]
	push	ecx
	mov	edx, DWORD PTR _node$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _node$[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 814  : 		}

	jmp	SHORT $LN6@Print
$LN5@Print:

; 815  : 		fprintf( cfile, "\n" );

	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 8

; 816  : 		for( i=0; i<depth; ++i ) {

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@Print
$LN2@Print:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@Print:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _depth$[ebp]
	jge	SHORT $LN1@Print

; 817  : 			fprintf( cfile, "    " );

	push	OFFSET ??_C@_04PFOHOKJK@?5?5?5?5?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 8

; 818  : 		}

	jmp	SHORT $LN2@Print
$LN1@Print:

; 819  : 		fprintf( cfile, "</%s>", value.c_str() );

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?c_str@TiXmlString@@QBEPBDXZ		; TiXmlString::c_str
	push	eax
	push	OFFSET ??_C@_05POIKLDCH@?$DM?1?$CFs?$DO?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
$LN18@Print:

; 820  : 	}
; 821  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Print@TiXmlElement@@UBEXPAU_iobuf@@H@Z ENDP		; TiXmlElement::Print
_TEXT	ENDS
PUBLIC	?Name@TiXmlAttribute@@QBEPBDXZ			; TiXmlAttribute::Name
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CopyTo@TiXmlElement@@IBEXPAV1@@Z
_TEXT	SEGMENT
_node$ = -32						; size = 4
_attribute$ = -20					; size = 4
_this$ = -8						; size = 4
_target$ = 8						; size = 4
?CopyTo@TiXmlElement@@IBEXPAV1@@Z PROC			; TiXmlElement::CopyTo, COMDAT
; _this$ = ecx

; 825  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 826  : 	// superclass:
; 827  : 	TiXmlNode::CopyTo( target );

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CopyTo@TiXmlNode@@IBEXPAV1@@Z		; TiXmlNode::CopyTo

; 828  : 
; 829  : 	// Element class:
; 830  : 	// Clone the attributes, then clone the children.
; 831  : 	const TiXmlAttribute* attribute = 0;

	mov	DWORD PTR _attribute$[ebp], 0

; 832  : 	for(	attribute = attributeSet.First();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?First@TiXmlAttributeSet@@QBEPBVTiXmlAttribute@@XZ ; TiXmlAttributeSet::First
	mov	DWORD PTR _attribute$[ebp], eax

; 833  : 	attribute;

	jmp	SHORT $LN6@CopyTo
$LN5@CopyTo:

; 834  : 	attribute = attribute->Next() )

	mov	ecx, DWORD PTR _attribute$[ebp]
	call	?Next@TiXmlAttribute@@QBEPBV1@XZ	; TiXmlAttribute::Next
	mov	DWORD PTR _attribute$[ebp], eax
$LN6@CopyTo:
	cmp	DWORD PTR _attribute$[ebp], 0
	je	SHORT $LN4@CopyTo

; 835  : 	{
; 836  : 		target->SetAttribute( attribute->Name(), attribute->Value() );

	mov	ecx, DWORD PTR _attribute$[ebp]
	call	?Value@TiXmlAttribute@@QBEPBDXZ		; TiXmlAttribute::Value
	push	eax
	mov	ecx, DWORD PTR _attribute$[ebp]
	call	?Name@TiXmlAttribute@@QBEPBDXZ		; TiXmlAttribute::Name
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	call	?SetAttribute@TiXmlElement@@QAEXPBD0@Z	; TiXmlElement::SetAttribute

; 837  : 	}

	jmp	SHORT $LN5@CopyTo
$LN4@CopyTo:

; 838  : 
; 839  : 	TiXmlNode* node = 0;

	mov	DWORD PTR _node$[ebp], 0

; 840  : 	for ( node = firstChild; node; node = node->NextSibling() )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _node$[ebp], ecx
	jmp	SHORT $LN3@CopyTo
$LN2@CopyTo:
	mov	ecx, DWORD PTR _node$[ebp]
	call	?NextSibling@TiXmlNode@@QAEPAV1@XZ	; TiXmlNode::NextSibling
	mov	DWORD PTR _node$[ebp], eax
$LN3@CopyTo:
	cmp	DWORD PTR _node$[ebp], 0
	je	SHORT $LN7@CopyTo

; 841  : 	{
; 842  : 		target->LinkEndChild( node->Clone() );

	mov	eax, DWORD PTR _node$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _node$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	call	?LinkEndChild@TiXmlNode@@QAEPAV1@PAV1@@Z ; TiXmlNode::LinkEndChild
	jmp	SHORT $LN2@CopyTo
$LN7@CopyTo:

; 843  : 	}
; 844  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CopyTo@TiXmlElement@@IBEXPAV1@@Z ENDP			; TiXmlElement::CopyTo
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?Accept@TiXmlElement@@UBE_NPAVTiXmlVisitor@@@Z
_TEXT	SEGMENT
_node$209673 = -20					; size = 4
_this$ = -8						; size = 4
_visitor$ = 8						; size = 4
?Accept@TiXmlElement@@UBE_NPAVTiXmlVisitor@@@Z PROC	; TiXmlElement::Accept, COMDAT
; _this$ = ecx

; 847  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 848  : 	if ( visitor->VisitEnter( *this, attributeSet.First() ) )

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?First@TiXmlAttributeSet@@QBEPBVTiXmlAttribute@@XZ ; TiXmlAttributeSet::First
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _visitor$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _visitor$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@Accept

; 849  : 	{
; 850  : 		for ( const TiXmlNode* node=FirstChild(); node; node=node->NextSibling() )

	mov	ecx, DWORD PTR _this$[ebp]
	call	?FirstChild@TiXmlNode@@QBEPBV1@XZ	; TiXmlNode::FirstChild
	mov	DWORD PTR _node$209673[ebp], eax
	jmp	SHORT $LN4@Accept
$LN3@Accept:
	mov	ecx, DWORD PTR _node$209673[ebp]
	call	?NextSibling@TiXmlNode@@QBEPBV1@XZ	; TiXmlNode::NextSibling
	mov	DWORD PTR _node$209673[ebp], eax
$LN4@Accept:
	cmp	DWORD PTR _node$209673[ebp], 0
	je	SHORT $LN5@Accept

; 851  : 		{
; 852  : 			if ( !node->Accept( visitor ) )

	mov	esi, esp
	mov	eax, DWORD PTR _visitor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _node$209673[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _node$209673[ebp]
	mov	eax, DWORD PTR [edx+72]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@Accept

; 853  : 				break;

	jmp	SHORT $LN5@Accept
$LN1@Accept:

; 854  : 		}

	jmp	SHORT $LN3@Accept
$LN5@Accept:

; 855  : 	}
; 856  : 	return visitor->VisitExit( *this );

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _visitor$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _visitor$[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 857  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Accept@TiXmlElement@@UBE_NPAVTiXmlVisitor@@@Z ENDP	; TiXmlElement::Accept
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Clone@TiXmlElement@@UBEPAVTiXmlNode@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Clone@TiXmlElement@@UBEPAVTiXmlNode@@XZ$0
__ehfuncinfo$?Clone@TiXmlElement@@UBEPAVTiXmlNode@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Clone@TiXmlElement@@UBEPAVTiXmlNode@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?Clone@TiXmlElement@@UBEPAVTiXmlNode@@XZ
_TEXT	SEGMENT
tv78 = -256						; size = 4
$T210881 = -248						; size = 4
$T210882 = -236						; size = 4
_clone$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?Clone@TiXmlElement@@UBEPAVTiXmlNode@@XZ PROC		; TiXmlElement::Clone, COMDAT
; _this$ = ecx

; 861  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Clone@TiXmlElement@@UBEPAVTiXmlNode@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 862  : 	TiXmlElement* clone = new TiXmlElement( Value() );

	push	80					; 00000050H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T210882[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T210882[ebp], 0
	je	SHORT $LN4@Clone
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Value@TiXmlNode@@QBEPBDXZ		; TiXmlNode::Value
	push	eax
	mov	ecx, DWORD PTR $T210882[ebp]
	call	??0TiXmlElement@@QAE@PBD@Z		; TiXmlElement::TiXmlElement
	mov	DWORD PTR tv78[ebp], eax
	jmp	SHORT $LN5@Clone
$LN4@Clone:
	mov	DWORD PTR tv78[ebp], 0
$LN5@Clone:
	mov	eax, DWORD PTR tv78[ebp]
	mov	DWORD PTR $T210881[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T210881[ebp]
	mov	DWORD PTR _clone$[ebp], ecx

; 863  : 	if ( !clone )

	cmp	DWORD PTR _clone$[ebp], 0
	jne	SHORT $LN1@Clone

; 864  : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN2@Clone
$LN1@Clone:

; 865  : 
; 866  : 	CopyTo( clone );

	mov	eax, DWORD PTR _clone$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CopyTo@TiXmlElement@@IBEXPAV1@@Z	; TiXmlElement::CopyTo

; 867  : 	return clone;

	mov	eax, DWORD PTR _clone$[ebp]
$LN2@Clone:

; 868  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Clone@TiXmlElement@@UBEPAVTiXmlNode@@XZ$0:
	mov	eax, DWORD PTR $T210882[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Clone@TiXmlElement@@UBEPAVTiXmlNode@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Clone@TiXmlElement@@UBEPAVTiXmlNode@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Clone@TiXmlElement@@UBEPAVTiXmlNode@@XZ ENDP		; TiXmlElement::Clone
PUBLIC	?GetText@TiXmlElement@@QBEPBDXZ			; TiXmlElement::GetText
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetText@TiXmlElement@@QBEPBDXZ
_TEXT	SEGMENT
_childText$209692 = -32					; size = 4
_child$ = -20						; size = 4
_this$ = -8						; size = 4
?GetText@TiXmlElement@@QBEPBDXZ PROC			; TiXmlElement::GetText, COMDAT
; _this$ = ecx

; 872  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 873  : 	const TiXmlNode* child = this->FirstChild();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?FirstChild@TiXmlNode@@QBEPBV1@XZ	; TiXmlNode::FirstChild
	mov	DWORD PTR _child$[ebp], eax

; 874  : 	if ( child ) {

	cmp	DWORD PTR _child$[ebp], 0
	je	SHORT $LN2@GetText

; 875  : 		const TiXmlText* childText = child->ToText();

	mov	eax, DWORD PTR _child$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _child$[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _childText$209692[ebp], eax

; 876  : 		if ( childText ) {

	cmp	DWORD PTR _childText$209692[ebp], 0
	je	SHORT $LN2@GetText

; 877  : 			return childText->Value();

	mov	ecx, DWORD PTR _childText$209692[ebp]
	call	?Value@TiXmlNode@@QBEPBDXZ		; TiXmlNode::Value
	jmp	SHORT $LN3@GetText
$LN2@GetText:

; 878  : 		}
; 879  : 	}
; 880  : 	return 0;

	xor	eax, eax
$LN3@GetText:

; 881  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetText@TiXmlElement@@QBEPBDXZ ENDP			; TiXmlElement::GetText
_TEXT	ENDS
PUBLIC	?ClearError@TiXmlDocument@@QAEXXZ		; TiXmlDocument::ClearError
PUBLIC	??0TiXmlCursor@@QAE@XZ				; TiXmlCursor::TiXmlCursor
PUBLIC	??_7TiXmlDocument@@6B@				; TiXmlDocument::`vftable'
PUBLIC	??0TiXmlDocument@@QAE@XZ			; TiXmlDocument::TiXmlDocument
PUBLIC	??_R4TiXmlDocument@@6B@				; TiXmlDocument::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTiXmlDocument@@@8			; TiXmlDocument `RTTI Type Descriptor'
PUBLIC	??_R3TiXmlDocument@@8				; TiXmlDocument::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TiXmlDocument@@8				; TiXmlDocument::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TiXmlDocument@@8			; TiXmlDocument::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?Print@TiXmlDocument@@UBEXPAU_iobuf@@H@Z	; TiXmlDocument::Print
PUBLIC	?ToDocument@TiXmlDocument@@UAEPAV1@XZ		; TiXmlDocument::ToDocument
PUBLIC	?ToDocument@TiXmlDocument@@UBEPBV1@XZ		; TiXmlDocument::ToDocument
PUBLIC	?Clone@TiXmlDocument@@MBEPAVTiXmlNode@@XZ	; TiXmlDocument::Clone
PUBLIC	?Accept@TiXmlDocument@@UBE_NPAVTiXmlVisitor@@@Z	; TiXmlDocument::Accept
EXTRN	??_ETiXmlDocument@@UAEPAXI@Z:PROC		; TiXmlDocument::`vector deleting destructor'
EXTRN	?Parse@TiXmlDocument@@UAEPBDPBDPAVTiXmlParsingData@@W4TiXmlEncoding@@@Z:PROC ; TiXmlDocument::Parse
;	COMDAT ??_R1A@?0A@EA@TiXmlDocument@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TiXmlDocument@@8 DD FLAT:??_R0?AVTiXmlDocument@@@8 ; TiXmlDocument::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TiXmlDocument@@8
rdata$r	ENDS
;	COMDAT ??_R2TiXmlDocument@@8
rdata$r	SEGMENT
??_R2TiXmlDocument@@8 DD FLAT:??_R1A@?0A@EA@TiXmlDocument@@8 ; TiXmlDocument::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@TiXmlNode@@8
	DD	FLAT:??_R1A@?0A@EA@TiXmlBase@@8
rdata$r	ENDS
;	COMDAT ??_R3TiXmlDocument@@8
rdata$r	SEGMENT
??_R3TiXmlDocument@@8 DD 00H				; TiXmlDocument::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2TiXmlDocument@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTiXmlDocument@@@8
_DATA	SEGMENT
??_R0?AVTiXmlDocument@@@8 DD FLAT:??_7type_info@@6B@	; TiXmlDocument `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTiXmlDocument@@', 00H
_DATA	ENDS
;	COMDAT ??_R4TiXmlDocument@@6B@
rdata$r	SEGMENT
??_R4TiXmlDocument@@6B@ DD 00H				; TiXmlDocument::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTiXmlDocument@@@8
	DD	FLAT:??_R3TiXmlDocument@@8
rdata$r	ENDS
;	COMDAT ??_7TiXmlDocument@@6B@
CONST	SEGMENT
??_7TiXmlDocument@@6B@ DD FLAT:??_R4TiXmlDocument@@6B@	; TiXmlDocument::`vftable'
	DD	FLAT:??_ETiXmlDocument@@UAEPAXI@Z
	DD	FLAT:?Print@TiXmlDocument@@UBEXPAU_iobuf@@H@Z
	DD	FLAT:?Parse@TiXmlDocument@@UAEPBDPBDPAVTiXmlParsingData@@W4TiXmlEncoding@@@Z
	DD	FLAT:?ToDocument@TiXmlDocument@@UAEPAV1@XZ
	DD	FLAT:?ToDocument@TiXmlDocument@@UBEPBV1@XZ
	DD	FLAT:?ToElement@TiXmlNode@@UAEPAVTiXmlElement@@XZ
	DD	FLAT:?ToElement@TiXmlNode@@UBEPBVTiXmlElement@@XZ
	DD	FLAT:?ToComment@TiXmlNode@@UAEPAVTiXmlComment@@XZ
	DD	FLAT:?ToComment@TiXmlNode@@UBEPBVTiXmlComment@@XZ
	DD	FLAT:?ToUnknown@TiXmlNode@@UAEPAVTiXmlUnknown@@XZ
	DD	FLAT:?ToUnknown@TiXmlNode@@UBEPBVTiXmlUnknown@@XZ
	DD	FLAT:?ToText@TiXmlNode@@UAEPAVTiXmlText@@XZ
	DD	FLAT:?ToText@TiXmlNode@@UBEPBVTiXmlText@@XZ
	DD	FLAT:?ToDeclaration@TiXmlNode@@UAEPAVTiXmlDeclaration@@XZ
	DD	FLAT:?ToDeclaration@TiXmlNode@@UBEPBVTiXmlDeclaration@@XZ
	DD	FLAT:?ToStylesheetReference@TiXmlNode@@UAEPAVTiXmlStylesheetReference@@XZ
	DD	FLAT:?ToStylesheetReference@TiXmlNode@@UBEPBVTiXmlStylesheetReference@@XZ
	DD	FLAT:?Clone@TiXmlDocument@@MBEPAVTiXmlNode@@XZ
	DD	FLAT:?Accept@TiXmlDocument@@UBE_NPAVTiXmlVisitor@@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0TiXmlDocument@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0TiXmlDocument@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0TiXmlDocument@@QAE@XZ$1
__ehfuncinfo$??0TiXmlDocument@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0TiXmlDocument@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0TiXmlDocument@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0TiXmlDocument@@QAE@XZ PROC				; TiXmlDocument::TiXmlDocument, COMDAT
; _this$ = ecx

; 885  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0TiXmlDocument@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TiXmlNode@@IAE@W4NodeType@0@@Z	; TiXmlNode::TiXmlNode
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TiXmlDocument@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??0TiXmlString@@QAE@XZ			; TiXmlString::TiXmlString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0TiXmlCursor@@QAE@XZ			; TiXmlCursor::TiXmlCursor

; 886  : 	tabsize = 4;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 4

; 887  : 	useMicrosoftBOM = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+68], 0

; 888  : 	ClearError();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearError@TiXmlDocument@@QAEXXZ	; TiXmlDocument::ClearError

; 889  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0TiXmlDocument@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1TiXmlNode@@UAE@XZ			; TiXmlNode::~TiXmlNode
__unwindfunclet$??0TiXmlDocument@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__ehhandler$??0TiXmlDocument@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0TiXmlDocument@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0TiXmlDocument@@QAE@XZ ENDP				; TiXmlDocument::TiXmlDocument
PUBLIC	??0TiXmlDocument@@QAE@PBD@Z			; TiXmlDocument::TiXmlDocument
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0TiXmlDocument@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0TiXmlDocument@@QAE@PBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0TiXmlDocument@@QAE@PBD@Z$1
__ehfuncinfo$??0TiXmlDocument@@QAE@PBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0TiXmlDocument@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0TiXmlDocument@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_documentName$ = 8					; size = 4
??0TiXmlDocument@@QAE@PBD@Z PROC			; TiXmlDocument::TiXmlDocument, COMDAT
; _this$ = ecx

; 892  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0TiXmlDocument@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TiXmlNode@@IAE@W4NodeType@0@@Z	; TiXmlNode::TiXmlNode
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TiXmlDocument@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??0TiXmlString@@QAE@XZ			; TiXmlString::TiXmlString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0TiXmlCursor@@QAE@XZ			; TiXmlCursor::TiXmlCursor

; 893  : 	tabsize = 4;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 4

; 894  : 	useMicrosoftBOM = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+68], 0

; 895  : 	value = documentName;

	mov	eax, DWORD PTR _documentName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??4TiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator=

; 896  : 	ClearError();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ClearError@TiXmlDocument@@QAEXXZ	; TiXmlDocument::ClearError

; 897  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0TiXmlDocument@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1TiXmlNode@@UAE@XZ			; TiXmlNode::~TiXmlNode
__unwindfunclet$??0TiXmlDocument@@QAE@PBD@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__ehhandler$??0TiXmlDocument@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0TiXmlDocument@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0TiXmlDocument@@QAE@PBD@Z ENDP			; TiXmlDocument::TiXmlDocument
PUBLIC	?CopyTo@TiXmlDocument@@ABEXPAV1@@Z		; TiXmlDocument::CopyTo
PUBLIC	??0TiXmlDocument@@QAE@ABV0@@Z			; TiXmlDocument::TiXmlDocument
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0TiXmlDocument@@QAE@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0TiXmlDocument@@QAE@ABV0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0TiXmlDocument@@QAE@ABV0@@Z$1
__ehfuncinfo$??0TiXmlDocument@@QAE@ABV0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0TiXmlDocument@@QAE@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0TiXmlDocument@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_copy$ = 8						; size = 4
??0TiXmlDocument@@QAE@ABV0@@Z PROC			; TiXmlDocument::TiXmlDocument, COMDAT
; _this$ = ecx

; 912  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0TiXmlDocument@@QAE@ABV0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TiXmlNode@@IAE@W4NodeType@0@@Z	; TiXmlNode::TiXmlNode
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TiXmlDocument@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??0TiXmlString@@QAE@XZ			; TiXmlString::TiXmlString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 60					; 0000003cH
	call	??0TiXmlCursor@@QAE@XZ			; TiXmlCursor::TiXmlCursor

; 913  : 	copy.CopyTo( this );

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _copy$[ebp]
	call	?CopyTo@TiXmlDocument@@ABEXPAV1@@Z	; TiXmlDocument::CopyTo

; 914  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0TiXmlDocument@@QAE@ABV0@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1TiXmlNode@@UAE@XZ			; TiXmlNode::~TiXmlNode
__unwindfunclet$??0TiXmlDocument@@QAE@ABV0@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__ehhandler$??0TiXmlDocument@@QAE@ABV0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0TiXmlDocument@@QAE@ABV0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0TiXmlDocument@@QAE@ABV0@@Z ENDP			; TiXmlDocument::TiXmlDocument
PUBLIC	??4TiXmlDocument@@QAEXABV0@@Z			; TiXmlDocument::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4TiXmlDocument@@QAEXABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??4TiXmlDocument@@QAEXABV0@@Z PROC			; TiXmlDocument::operator=, COMDAT
; _this$ = ecx

; 918  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 919  : 	Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@TiXmlNode@@QAEXXZ		; TiXmlNode::Clear

; 920  : 	copy.CopyTo( this );

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _copy$[ebp]
	call	?CopyTo@TiXmlDocument@@ABEXPAV1@@Z	; TiXmlDocument::CopyTo

; 921  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4TiXmlDocument@@QAEXABV0@@Z ENDP			; TiXmlDocument::operator=
_TEXT	ENDS
PUBLIC	?LoadFile@TiXmlDocument@@QAE_NPBDW4TiXmlEncoding@@@Z ; TiXmlDocument::LoadFile
PUBLIC	?LoadFile@TiXmlDocument@@QAE_NW4TiXmlEncoding@@@Z ; TiXmlDocument::LoadFile
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?LoadFile@TiXmlDocument@@QAE_NW4TiXmlEncoding@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_encoding$ = 8						; size = 4
?LoadFile@TiXmlDocument@@QAE_NW4TiXmlEncoding@@@Z PROC	; TiXmlDocument::LoadFile, COMDAT
; _this$ = ecx

; 925  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 926  : 	// See STL_STRING_BUG below.
; 927  : 	//StringToBuffer buf( value );
; 928  : 
; 929  : 	return LoadFile( Value(), encoding );

	mov	eax, DWORD PTR _encoding$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Value@TiXmlNode@@QBEPBDXZ		; TiXmlNode::Value
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LoadFile@TiXmlDocument@@QAE_NPBDW4TiXmlEncoding@@@Z ; TiXmlDocument::LoadFile

; 930  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?LoadFile@TiXmlDocument@@QAE_NW4TiXmlEncoding@@@Z ENDP	; TiXmlDocument::LoadFile
_TEXT	ENDS
PUBLIC	?SaveFile@TiXmlDocument@@QBE_NPBD@Z		; TiXmlDocument::SaveFile
PUBLIC	?SaveFile@TiXmlDocument@@QBE_NXZ		; TiXmlDocument::SaveFile
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SaveFile@TiXmlDocument@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?SaveFile@TiXmlDocument@@QBE_NXZ PROC			; TiXmlDocument::SaveFile, COMDAT
; _this$ = ecx

; 934  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 935  : 	// See STL_STRING_BUG below.
; 936  : //	StringToBuffer buf( value );
; 937  : //
; 938  : //	if ( buf.buffer && SaveFile( buf.buffer ) )
; 939  : //		return true;
; 940  : //
; 941  : //	return false;
; 942  : 	return SaveFile( Value() );

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Value@TiXmlNode@@QBEPBDXZ		; TiXmlNode::Value
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveFile@TiXmlDocument@@QBE_NPBD@Z	; TiXmlDocument::SaveFile

; 943  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?SaveFile@TiXmlDocument@@QBE_NXZ ENDP			; TiXmlDocument::SaveFile
_TEXT	ENDS
PUBLIC	?LoadFile@TiXmlDocument@@QAE_NPAU_iobuf@@W4TiXmlEncoding@@@Z ; TiXmlDocument::LoadFile
PUBLIC	??_C@_02JDPG@rb?$AA@				; `string'
PUBLIC	??4TiXmlString@@QAEAAV0@ABV0@@Z			; TiXmlString::operator=
PUBLIC	??0TiXmlString@@QAE@PBD@Z			; TiXmlString::TiXmlString
EXTRN	_fclose:PROC
;	COMDAT ??_C@_02JDPG@rb?$AA@
CONST	SEGMENT
??_C@_02JDPG@rb?$AA@ DB 'rb', 00H			; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LoadFile@TiXmlDocument@@QAE_NPBDW4TiXmlEncoding@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadFile@TiXmlDocument@@QAE_NPBDW4TiXmlEncoding@@@Z$0
__ehfuncinfo$?LoadFile@TiXmlDocument@@QAE_NPBDW4TiXmlEncoding@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadFile@TiXmlDocument@@QAE_NPBDW4TiXmlEncoding@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?LoadFile@TiXmlDocument@@QAE_NPBDW4TiXmlEncoding@@@Z
_TEXT	SEGMENT
$T210932 = -269						; size = 1
$T210933 = -257						; size = 1
_result$209725 = -53					; size = 1
_file$ = -44						; size = 4
_filename$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__filename$ = 8						; size = 4
_encoding$ = 12						; size = 4
?LoadFile@TiXmlDocument@@QAE_NPBDW4TiXmlEncoding@@@Z PROC ; TiXmlDocument::LoadFile, COMDAT
; _this$ = ecx

; 946  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LoadFile@TiXmlDocument@@QAE_NPBDW4TiXmlEncoding@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 947  : 	// There was a really terrifying little bug here. The code:
; 948  : 	//		value = filename
; 949  : 	// in the STL case, cause the assignment method of the std::string to
; 950  : 	// be called. What is strange, is that the std::string had the same
; 951  : 	// address as it's c_str() method, and so bad things happen. Looks
; 952  : 	// like a bug in the Microsoft STL implementation.
; 953  : 	// Add an extra string to avoid the crash.
; 954  : 	TIXML_STRING filename( _filename );

	mov	eax, DWORD PTR __filename$[ebp]
	push	eax
	lea	ecx, DWORD PTR _filename$[ebp]
	call	??0TiXmlString@@QAE@PBD@Z		; TiXmlString::TiXmlString
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 955  : 	value = filename;

	lea	eax, DWORD PTR _filename$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??4TiXmlString@@QAEAAV0@ABV0@@Z		; TiXmlString::operator=

; 956  : 
; 957  : 	// reading in binary mode so that tinyxml can normalize the EOL
; 958  : 	FILE* file = TiXmlFOpen( value.c_str (), "rb" );

	push	OFFSET ??_C@_02JDPG@rb?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?c_str@TiXmlString@@QBEPBDXZ		; TiXmlString::c_str
	push	eax
	call	?TiXmlFOpen@@YAPAU_iobuf@@PBD0@Z	; TiXmlFOpen
	add	esp, 8
	mov	DWORD PTR _file$[ebp], eax

; 959  : 
; 960  : 	if ( file )

	cmp	DWORD PTR _file$[ebp], 0
	je	SHORT $LN2@LoadFile

; 961  : 	{
; 962  : 		bool result = LoadFile( file, encoding );

	mov	eax, DWORD PTR _encoding$[ebp]
	push	eax
	mov	ecx, DWORD PTR _file$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?LoadFile@TiXmlDocument@@QAE_NPAU_iobuf@@W4TiXmlEncoding@@@Z ; TiXmlDocument::LoadFile
	mov	BYTE PTR _result$209725[ebp], al

; 963  : 		fclose( file );

	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	_fclose
	add	esp, 4

; 964  : 		return result;

	mov	al, BYTE PTR _result$209725[ebp]
	mov	BYTE PTR $T210932[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _filename$[ebp]
	call	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
	mov	al, BYTE PTR $T210932[ebp]
	jmp	SHORT $LN3@LoadFile

; 965  : 	}
; 966  : 	else

	jmp	SHORT $LN1@LoadFile
$LN2@LoadFile:

; 967  : 	{
; 968  : 		SetError( TIXML_ERROR_OPENING_FILE, 0, 0, TIXML_ENCODING_UNKNOWN );

	push	0
	push	0
	push	0
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetError@TiXmlDocument@@QAEXHPBDPAVTiXmlParsingData@@W4TiXmlEncoding@@@Z ; TiXmlDocument::SetError

; 969  : 		return false;

	mov	BYTE PTR $T210933[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _filename$[ebp]
	call	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
	mov	al, BYTE PTR $T210933[ebp]
	jmp	SHORT $LN3@LoadFile
$LN1@LoadFile:

; 970  : 	}
; 971  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _filename$[ebp]
	call	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
$LN3@LoadFile:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@LoadFile
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	2
$LN9@LoadFile:
	DD	1
	DD	$LN8@LoadFile
$LN8@LoadFile:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN6@LoadFile
$LN6@LoadFile:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadFile@TiXmlDocument@@QAE_NPBDW4TiXmlEncoding@@@Z$0:
	lea	ecx, DWORD PTR _filename$[ebp]
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__ehhandler$?LoadFile@TiXmlDocument@@QAE_NPBDW4TiXmlEncoding@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-280]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?LoadFile@TiXmlDocument@@QAE_NPBDW4TiXmlEncoding@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?LoadFile@TiXmlDocument@@QAE_NPBDW4TiXmlEncoding@@@Z ENDP ; TiXmlDocument::LoadFile
PUBLIC	?Error@TiXmlDocument@@QBE_NXZ			; TiXmlDocument::Error
PUBLIC	??_C@_1CE@PHANECNC@?$AAp?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAb?$AAu?$AAf?$AA?$CL?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CC@BHFGGFMK@?$AAp?$AA?5?$AA?$DM?$AA?5?$AA?$CI?$AAb?$AAu?$AAf?$AA?$CL?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??LoadFile@TiXmlDocument@@QAE_NPAU_iobuf@@W4TiXmlEncoding@@@Z@4JA ; `TiXmlDocument::LoadFile'::`2'::__LINE__Var
PUBLIC	?Clear@TiXmlCursor@@QAEXXZ			; TiXmlCursor::Clear
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	_fread:PROC
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	?reserve@TiXmlString@@QAEXI@Z:PROC		; TiXmlString::reserve
EXTRN	_ftell:PROC
EXTRN	_fseek:PROC
;	COMDAT ??_C@_1CE@PHANECNC@?$AAp?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAb?$AAu?$AAf?$AA?$CL?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1CE@PHANECNC@?$AAp?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAb?$AAu?$AAf?$AA?$CL?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CJ?$AA?$AA@ DB 'p'
	DB	00H, ' ', 00H, '<', 00H, '=', 00H, ' ', 00H, '(', 00H, 'b', 00H
	DB	'u', 00H, 'f', 00H, '+', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 'g'
	DB	00H, 't', 00H, 'h', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@BHFGGFMK@?$AAp?$AA?5?$AA?$DM?$AA?5?$AA?$CI?$AAb?$AAu?$AAf?$AA?$CL?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@BHFGGFMK@?$AAp?$AA?5?$AA?$DM?$AA?5?$AA?$CI?$AAb?$AAu?$AAf?$AA?$CL?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CJ?$AA?$AA@ DB 'p'
	DB	00H, ' ', 00H, '<', 00H, ' ', 00H, '(', 00H, 'b', 00H, 'u', 00H
	DB	'f', 00H, '+', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't'
	DB	00H, 'h', 00H, ')', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??LoadFile@TiXmlDocument@@QAE_NPAU_iobuf@@W4TiXmlEncoding@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??LoadFile@TiXmlDocument@@QAE_NPAU_iobuf@@W4TiXmlEncoding@@@Z@4JA DD 03ceH ; `TiXmlDocument::LoadFile'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?LoadFile@TiXmlDocument@@QAE_NPAU_iobuf@@W4TiXmlEncoding@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?LoadFile@TiXmlDocument@@QAE_NPAU_iobuf@@W4TiXmlEncoding@@@Z$0
__ehfuncinfo$?LoadFile@TiXmlDocument@@QAE_NPAU_iobuf@@W4TiXmlEncoding@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?LoadFile@TiXmlDocument@@QAE_NPAU_iobuf@@W4TiXmlEncoding@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?LoadFile@TiXmlDocument@@QAE_NPAU_iobuf@@W4TiXmlEncoding@@@Z
_TEXT	SEGMENT
$T210946 = -344						; size = 4
$T210947 = -332						; size = 4
$T210948 = -317						; size = 1
$T210953 = -308						; size = 4
$T210954 = -293						; size = 1
$T210955 = -281						; size = 1
_p$ = -80						; size = 4
_lastPos$ = -68						; size = 4
_buf$ = -56						; size = 4
_data$ = -44						; size = 4
_length$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_file$ = 8						; size = 4
_encoding$ = 12						; size = 4
?LoadFile@TiXmlDocument@@QAE_NPAU_iobuf@@W4TiXmlEncoding@@@Z PROC ; TiXmlDocument::LoadFile, COMDAT
; _this$ = ecx

; 974  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?LoadFile@TiXmlDocument@@QAE_NPAU_iobuf@@W4TiXmlEncoding@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 336				; 00000150H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-348]
	mov	ecx, 84					; 00000054H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 975  : 	if ( !file )

	cmp	DWORD PTR _file$[ebp], 0
	jne	SHORT $LN15@LoadFile@2

; 976  : 	{
; 977  : 		SetError( TIXML_ERROR_OPENING_FILE, 0, 0, TIXML_ENCODING_UNKNOWN );

	push	0
	push	0
	push	0
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetError@TiXmlDocument@@QAEXHPBDPAVTiXmlParsingData@@W4TiXmlEncoding@@@Z ; TiXmlDocument::SetError

; 978  : 		return false;

	xor	al, al
	jmp	$LN16@LoadFile@2
$LN15@LoadFile@2:

; 979  : 	}
; 980  : 
; 981  : 	// Delete the existing data:
; 982  : 	Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@TiXmlNode@@QAEXXZ		; TiXmlNode::Clear

; 983  : 	location.Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	?Clear@TiXmlCursor@@QAEXXZ		; TiXmlCursor::Clear

; 984  : 
; 985  : 	// Get the file size, so we can pre-allocate the string. HUGE speed impact.
; 986  : 	long length = 0;

	mov	DWORD PTR _length$[ebp], 0

; 987  : 	fseek( file, 0, SEEK_END );

	push	2
	push	0
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	_fseek
	add	esp, 12					; 0000000cH

; 988  : 	length = ftell( file );

	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	_ftell
	add	esp, 4
	mov	DWORD PTR _length$[ebp], eax

; 989  : 	fseek( file, 0, SEEK_SET );

	push	0
	push	0
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	_fseek
	add	esp, 12					; 0000000cH

; 990  : 
; 991  : 	// Strange case, but good to handle up front.
; 992  : 	if ( length <= 0 )

	cmp	DWORD PTR _length$[ebp], 0
	jg	SHORT $LN14@LoadFile@2

; 993  : 	{
; 994  : 		SetError( TIXML_ERROR_DOCUMENT_EMPTY, 0, 0, TIXML_ENCODING_UNKNOWN );

	push	0
	push	0
	push	0
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetError@TiXmlDocument@@QAEXHPBDPAVTiXmlParsingData@@W4TiXmlEncoding@@@Z ; TiXmlDocument::SetError

; 995  : 		return false;

	xor	al, al
	jmp	$LN16@LoadFile@2
$LN14@LoadFile@2:

; 996  : 	}
; 997  : 
; 998  : 	// If we have a file, assume it is all one big XML file, and read it in.
; 999  : 	// The document parser may decide the document ends sooner than the entire file, however.
; 1000 : 	TIXML_STRING data;

	lea	ecx, DWORD PTR _data$[ebp]
	call	??0TiXmlString@@QAE@XZ			; TiXmlString::TiXmlString
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1001 : 	data.reserve( length );

	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	lea	ecx, DWORD PTR _data$[ebp]
	call	?reserve@TiXmlString@@QAEXI@Z		; TiXmlString::reserve

; 1002 : 
; 1003 : 	// Subtle bug here. TinyXml did use fgets. But from the XML spec:
; 1004 : 	// 2.11 End-of-Line Handling
; 1005 : 	// <snip>
; 1006 : 	// <quote>
; 1007 : 	// ...the XML processor MUST behave as if it normalized all line breaks in external
; 1008 : 	// parsed entities (including the document entity) on input, before parsing, by translating
; 1009 : 	// both the two-character sequence #xD #xA and any #xD that is not followed by #xA to
; 1010 : 	// a single #xA character.
; 1011 : 	// </quote>
; 1012 : 	//
; 1013 : 	// It is not clear fgets does that, and certainly isn't clear it works cross platform.
; 1014 : 	// Generally, you expect fgets to translate from the convention of the OS to the c/unix
; 1015 : 	// convention, and not work generally.
; 1016 : 
; 1017 : 	/*
; 1018 : 	while( fgets( buf, sizeof(buf), file ) )
; 1019 : 	{
; 1020 : 		data += buf;
; 1021 : 	}
; 1022 : 	*/
; 1023 : 
; 1024 : 	char* buf = new char[ length+1 ];

	mov	eax, DWORD PTR _length$[ebp]
	add	eax, 1
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T210946[ebp], eax
	mov	ecx, DWORD PTR $T210946[ebp]
	mov	DWORD PTR _buf$[ebp], ecx

; 1025 : 	buf[0] = 0;

	mov	eax, DWORD PTR _buf$[ebp]
	mov	BYTE PTR [eax], 0

; 1026 : 
; 1027 : 	if ( fread( buf, length, 1, file ) != 1 ) {

	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _length$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_fread
	add	esp, 16					; 00000010H
	cmp	eax, 1
	je	SHORT $LN13@LoadFile@2

; 1028 : 		delete [] buf;

	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR $T210947[ebp], eax
	mov	ecx, DWORD PTR $T210947[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 1029 : 		SetError( TIXML_ERROR_OPENING_FILE, 0, 0, TIXML_ENCODING_UNKNOWN );

	push	0
	push	0
	push	0
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetError@TiXmlDocument@@QAEXHPBDPAVTiXmlParsingData@@W4TiXmlEncoding@@@Z ; TiXmlDocument::SetError

; 1030 : 		return false;

	mov	BYTE PTR $T210948[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _data$[ebp]
	call	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
	mov	al, BYTE PTR $T210948[ebp]
	jmp	$LN16@LoadFile@2
$LN13@LoadFile@2:

; 1031 : 	}
; 1032 : 
; 1033 : 	const char* lastPos = buf;

	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR _lastPos$[ebp], eax

; 1034 : 	const char* p = buf;

	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR _p$[ebp], eax

; 1035 : 
; 1036 : 	buf[length] = 0;

	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, DWORD PTR _length$[ebp]
	mov	BYTE PTR [eax], 0
$LN12@LoadFile@2:

; 1037 : 	while( *p ) {

	mov	eax, DWORD PTR _p$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	$LN11@LoadFile@2

; 1038 : 		assert( p < (buf+length) );

	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, DWORD PTR _length$[ebp]
	cmp	DWORD PTR _p$[ebp], eax
	jb	SHORT $LN18@LoadFile@2
	mov	ecx, DWORD PTR ?__LINE__Var@?1??LoadFile@TiXmlDocument@@QAE_NPAU_iobuf@@W4TiXmlEncoding@@@Z@4JA
	add	ecx, 64					; 00000040H
	push	ecx
	push	OFFSET ??_C@_1GE@HMDMHPBA@?$AAd?$AA?3?$AA?2?$AAv?$AAi?$AAc?$AAe?$AA?9?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAs?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs?$AAh?$AAa?$AAr?$AAe?$AAd?$AA?2?$AAt?$AAi@
	push	OFFSET ??_C@_1CC@BHFGGFMK@?$AAp?$AA?5?$AA?$DM?$AA?5?$AA?$CI?$AAb?$AAu?$AAf?$AA?$CL?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CJ?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN18@LoadFile@2:

; 1039 : 		if ( *p == 0xa ) {

	mov	eax, DWORD PTR _p$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 10					; 0000000aH
	jne	SHORT $LN10@LoadFile@2

; 1040 : 			// Newline character. No special rules for this. Append all the characters
; 1041 : 			// since the last string, and include the newline.
; 1042 : 			data.append( lastPos, (p-lastPos+1) );	// append, include the newline

	mov	eax, DWORD PTR _p$[ebp]
	sub	eax, DWORD PTR _lastPos$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _lastPos$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _data$[ebp]
	call	?append@TiXmlString@@QAEAAV1@PBDI@Z	; TiXmlString::append

; 1043 : 			++p;									// move past the newline

	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax

; 1044 : 			lastPos = p;							// and point to the new buffer (may be 0)

	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR _lastPos$[ebp], eax

; 1045 : 			assert( p <= (buf+length) );

	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, DWORD PTR _length$[ebp]
	cmp	DWORD PTR _p$[ebp], eax
	jbe	SHORT $LN19@LoadFile@2
	mov	ecx, DWORD PTR ?__LINE__Var@?1??LoadFile@TiXmlDocument@@QAE_NPAU_iobuf@@W4TiXmlEncoding@@@Z@4JA
	add	ecx, 71					; 00000047H
	push	ecx
	push	OFFSET ??_C@_1GE@HMDMHPBA@?$AAd?$AA?3?$AA?2?$AAv?$AAi?$AAc?$AAe?$AA?9?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAs?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs?$AAh?$AAa?$AAr?$AAe?$AAd?$AA?2?$AAt?$AAi@
	push	OFFSET ??_C@_1CE@PHANECNC@?$AAp?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAb?$AAu?$AAf?$AA?$CL?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CJ?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN19@LoadFile@2:

; 1046 : 		}
; 1047 : 		else if ( *p == 0xd ) {

	jmp	$LN9@LoadFile@2
$LN10@LoadFile@2:
	mov	eax, DWORD PTR _p$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 13					; 0000000dH
	jne	$LN8@LoadFile@2

; 1048 : 			// Carriage return. Append what we have so far, then
; 1049 : 			// handle moving forward in the buffer.
; 1050 : 			if ( (p-lastPos) > 0 ) {

	mov	eax, DWORD PTR _p$[ebp]
	sub	eax, DWORD PTR _lastPos$[ebp]
	test	eax, eax
	jle	SHORT $LN7@LoadFile@2

; 1051 : 				data.append( lastPos, p-lastPos );	// do not add the CR

	mov	eax, DWORD PTR _p$[ebp]
	sub	eax, DWORD PTR _lastPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lastPos$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _data$[ebp]
	call	?append@TiXmlString@@QAEAAV1@PBDI@Z	; TiXmlString::append
$LN7@LoadFile@2:

; 1052 : 			}
; 1053 : 			data += (char)0xa;						// a proper newline

	push	10					; 0000000aH
	lea	ecx, DWORD PTR _data$[ebp]
	call	??YTiXmlString@@QAEAAV0@D@Z		; TiXmlString::operator+=

; 1054 : 
; 1055 : 			if ( *(p+1) == 0xa ) {

	mov	eax, DWORD PTR _p$[ebp]
	movsx	ecx, BYTE PTR [eax+1]
	cmp	ecx, 10					; 0000000aH
	jne	SHORT $LN6@LoadFile@2

; 1056 : 				// Carriage return - new line sequence
; 1057 : 				p += 2;

	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 2
	mov	DWORD PTR _p$[ebp], eax

; 1058 : 				lastPos = p;

	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR _lastPos$[ebp], eax

; 1059 : 				assert( p <= (buf+length) );

	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, DWORD PTR _length$[ebp]
	cmp	DWORD PTR _p$[ebp], eax
	jbe	SHORT $LN20@LoadFile@2
	mov	ecx, DWORD PTR ?__LINE__Var@?1??LoadFile@TiXmlDocument@@QAE_NPAU_iobuf@@W4TiXmlEncoding@@@Z@4JA
	add	ecx, 85					; 00000055H
	push	ecx
	push	OFFSET ??_C@_1GE@HMDMHPBA@?$AAd?$AA?3?$AA?2?$AAv?$AAi?$AAc?$AAe?$AA?9?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAs?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs?$AAh?$AAa?$AAr?$AAe?$AAd?$AA?2?$AAt?$AAi@
	push	OFFSET ??_C@_1CE@PHANECNC@?$AAp?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAb?$AAu?$AAf?$AA?$CL?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CJ?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN20@LoadFile@2:

; 1060 : 			}
; 1061 : 			else {

	jmp	SHORT $LN5@LoadFile@2
$LN6@LoadFile@2:

; 1062 : 				// it was followed by something else...that is presumably characters again.
; 1063 : 				++p;

	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax

; 1064 : 				lastPos = p;

	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR _lastPos$[ebp], eax

; 1065 : 				assert( p <= (buf+length) );

	mov	eax, DWORD PTR _buf$[ebp]
	add	eax, DWORD PTR _length$[ebp]
	cmp	DWORD PTR _p$[ebp], eax
	jbe	SHORT $LN5@LoadFile@2
	mov	ecx, DWORD PTR ?__LINE__Var@?1??LoadFile@TiXmlDocument@@QAE_NPAU_iobuf@@W4TiXmlEncoding@@@Z@4JA
	add	ecx, 91					; 0000005bH
	push	ecx
	push	OFFSET ??_C@_1GE@HMDMHPBA@?$AAd?$AA?3?$AA?2?$AAv?$AAi?$AAc?$AAe?$AA?9?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAs?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs?$AAh?$AAa?$AAr?$AAe?$AAd?$AA?2?$AAt?$AAi@
	push	OFFSET ??_C@_1CE@PHANECNC@?$AAp?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA?$CI?$AAb?$AAu?$AAf?$AA?$CL?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CJ?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN5@LoadFile@2:

; 1066 : 			}
; 1067 : 		}
; 1068 : 		else {

	jmp	SHORT $LN9@LoadFile@2
$LN8@LoadFile@2:

; 1069 : 			++p;

	mov	eax, DWORD PTR _p$[ebp]
	add	eax, 1
	mov	DWORD PTR _p$[ebp], eax
$LN9@LoadFile@2:

; 1070 : 		}
; 1071 : 	}

	jmp	$LN12@LoadFile@2
$LN11@LoadFile@2:

; 1072 : 	// Handle any left over characters.
; 1073 : 	if ( p-lastPos ) {

	mov	eax, DWORD PTR _p$[ebp]
	sub	eax, DWORD PTR _lastPos$[ebp]
	je	SHORT $LN3@LoadFile@2

; 1074 : 		data.append( lastPos, p-lastPos );

	mov	eax, DWORD PTR _p$[ebp]
	sub	eax, DWORD PTR _lastPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lastPos$[ebp]
	push	ecx
	lea	ecx, DWORD PTR _data$[ebp]
	call	?append@TiXmlString@@QAEAAV1@PBDI@Z	; TiXmlString::append
$LN3@LoadFile@2:

; 1075 : 	}
; 1076 : 	delete [] buf;

	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR $T210953[ebp], eax
	mov	ecx, DWORD PTR $T210953[ebp]
	push	ecx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4

; 1077 : 	buf = 0;

	mov	DWORD PTR _buf$[ebp], 0

; 1078 : 
; 1079 : 	Parse( data.c_str(), 0, encoding );

	mov	esi, esp
	mov	eax, DWORD PTR _encoding$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _data$[ebp]
	call	?c_str@TiXmlString@@QBEPBDXZ		; TiXmlString::c_str
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1080 : 
; 1081 : 	if (  Error() )

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Error@TiXmlDocument@@QBE_NXZ		; TiXmlDocument::Error
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@LoadFile@2

; 1082 :         return false;

	mov	BYTE PTR $T210954[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _data$[ebp]
	call	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
	mov	al, BYTE PTR $T210954[ebp]
	jmp	SHORT $LN16@LoadFile@2

; 1083 :     else

	jmp	SHORT $LN1@LoadFile@2
$LN2@LoadFile@2:

; 1084 : 		return true;

	mov	BYTE PTR $T210955[ebp], 1
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _data$[ebp]
	call	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
	mov	al, BYTE PTR $T210955[ebp]
	jmp	SHORT $LN16@LoadFile@2
$LN1@LoadFile@2:

; 1085 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _data$[ebp]
	call	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
$LN16@LoadFile@2:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN26@LoadFile@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 348				; 0000015cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN26@LoadFile@2:
	DD	1
	DD	$LN25@LoadFile@2
$LN25@LoadFile@2:
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN23@LoadFile@2
$LN23@LoadFile@2:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?LoadFile@TiXmlDocument@@QAE_NPAU_iobuf@@W4TiXmlEncoding@@@Z$0:
	lea	ecx, DWORD PTR _data$[ebp]
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__ehhandler$?LoadFile@TiXmlDocument@@QAE_NPAU_iobuf@@W4TiXmlEncoding@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-352]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?LoadFile@TiXmlDocument@@QAE_NPAU_iobuf@@W4TiXmlEncoding@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?LoadFile@TiXmlDocument@@QAE_NPAU_iobuf@@W4TiXmlEncoding@@@Z ENDP ; TiXmlDocument::LoadFile
PUBLIC	?SaveFile@TiXmlDocument@@QBE_NPAU_iobuf@@@Z	; TiXmlDocument::SaveFile
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?SaveFile@TiXmlDocument@@QBE_NPBD@Z
_TEXT	SEGMENT
_result$209777 = -29					; size = 1
_fp$ = -20						; size = 4
_this$ = -8						; size = 4
_filename$ = 8						; size = 4
?SaveFile@TiXmlDocument@@QBE_NPBD@Z PROC		; TiXmlDocument::SaveFile, COMDAT
; _this$ = ecx

; 1089 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1090 : 	// The old c stuff lives on...
; 1091 : 	FILE* fp = TiXmlFOpen( filename, "w" );

	push	OFFSET ??_C@_01NOFIACDB@w?$AA@
	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	call	?TiXmlFOpen@@YAPAU_iobuf@@PBD0@Z	; TiXmlFOpen
	add	esp, 8
	mov	DWORD PTR _fp$[ebp], eax

; 1092 : 	if ( fp )

	cmp	DWORD PTR _fp$[ebp], 0
	je	SHORT $LN1@SaveFile

; 1093 : 	{
; 1094 : 		bool result = SaveFile( fp );

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SaveFile@TiXmlDocument@@QBE_NPAU_iobuf@@@Z ; TiXmlDocument::SaveFile
	mov	BYTE PTR _result$209777[ebp], al

; 1095 : 		fclose( fp );

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_fclose
	add	esp, 4

; 1096 : 		return result;

	mov	al, BYTE PTR _result$209777[ebp]
	jmp	SHORT $LN2@SaveFile
$LN1@SaveFile:

; 1097 : 	}
; 1098 : 	return false;

	xor	al, al
$LN2@SaveFile:

; 1099 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SaveFile@TiXmlDocument@@QBE_NPBD@Z ENDP		; TiXmlDocument::SaveFile
_TEXT	ENDS
EXTRN	_ferror:PROC
EXTRN	_fputc:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SaveFile@TiXmlDocument@@QBE_NPAU_iobuf@@@Z
_TEXT	SEGMENT
_TIXML_UTF_LEAD_2$209785 = -41				; size = 1
_TIXML_UTF_LEAD_1$209784 = -29				; size = 1
_TIXML_UTF_LEAD_0$209783 = -17				; size = 1
_this$ = -8						; size = 4
_fp$ = 8						; size = 4
?SaveFile@TiXmlDocument@@QBE_NPAU_iobuf@@@Z PROC	; TiXmlDocument::SaveFile, COMDAT
; _this$ = ecx

; 1103 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1104 : 	if ( useMicrosoftBOM )

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+68]
	test	ecx, ecx
	je	SHORT $LN1@SaveFile@2

; 1105 : 	{
; 1106 : 		const unsigned char TIXML_UTF_LEAD_0 = 0xefU;

	mov	BYTE PTR _TIXML_UTF_LEAD_0$209783[ebp], 239 ; 000000efH

; 1107 : 		const unsigned char TIXML_UTF_LEAD_1 = 0xbbU;

	mov	BYTE PTR _TIXML_UTF_LEAD_1$209784[ebp], 187 ; 000000bbH

; 1108 : 		const unsigned char TIXML_UTF_LEAD_2 = 0xbfU;

	mov	BYTE PTR _TIXML_UTF_LEAD_2$209785[ebp], 191 ; 000000bfH

; 1109 : 
; 1110 : 		fputc( TIXML_UTF_LEAD_0, fp );

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	push	239					; 000000efH
	call	_fputc
	add	esp, 8

; 1111 : 		fputc( TIXML_UTF_LEAD_1, fp );

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	push	187					; 000000bbH
	call	_fputc
	add	esp, 8

; 1112 : 		fputc( TIXML_UTF_LEAD_2, fp );

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	push	191					; 000000bfH
	call	_fputc
	add	esp, 8
$LN1@SaveFile@2:

; 1113 : 	}
; 1114 : 	Print( fp, 0 );

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1115 : 	return (ferror(fp) == 0);

	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	_ferror
	add	esp, 4
	neg	eax
	sbb	eax, eax
	add	eax, 1

; 1116 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SaveFile@TiXmlDocument@@QBE_NPAU_iobuf@@@Z ENDP	; TiXmlDocument::SaveFile
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?CopyTo@TiXmlDocument@@ABEXPAV1@@Z
_TEXT	SEGMENT
_node$ = -20						; size = 4
_this$ = -8						; size = 4
_target$ = 8						; size = 4
?CopyTo@TiXmlDocument@@ABEXPAV1@@Z PROC			; TiXmlDocument::CopyTo, COMDAT
; _this$ = ecx

; 1120 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1121 : 	TiXmlNode::CopyTo( target );

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CopyTo@TiXmlNode@@IBEXPAV1@@Z		; TiXmlNode::CopyTo

; 1122 : 
; 1123 : 	target->error = error;

	mov	eax, DWORD PTR _target$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [ecx+44]
	mov	BYTE PTR [eax+44], dl

; 1124 : 	target->errorId = errorId;

	mov	eax, DWORD PTR _target$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	DWORD PTR [eax+48], edx

; 1125 : 	target->errorDesc = errorDesc;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 52					; 00000034H
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	add	ecx, 52					; 00000034H
	call	??4TiXmlString@@QAEAAV0@ABV0@@Z		; TiXmlString::operator=

; 1126 : 	target->tabsize = tabsize;

	mov	eax, DWORD PTR _target$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	mov	DWORD PTR [eax+56], edx

; 1127 : 	target->errorLocation = errorLocation;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	edx, DWORD PTR [eax+64]
	mov	eax, DWORD PTR _target$[ebp]
	mov	DWORD PTR [eax+60], ecx
	mov	DWORD PTR [eax+64], edx

; 1128 : 	target->useMicrosoftBOM = useMicrosoftBOM;

	mov	eax, DWORD PTR _target$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [ecx+68]
	mov	BYTE PTR [eax+68], dl

; 1129 : 
; 1130 : 	TiXmlNode* node = 0;

	mov	DWORD PTR _node$[ebp], 0

; 1131 : 	for ( node = firstChild; node; node = node->NextSibling() )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _node$[ebp], ecx
	jmp	SHORT $LN3@CopyTo@2
$LN2@CopyTo@2:
	mov	ecx, DWORD PTR _node$[ebp]
	call	?NextSibling@TiXmlNode@@QAEPAV1@XZ	; TiXmlNode::NextSibling
	mov	DWORD PTR _node$[ebp], eax
$LN3@CopyTo@2:
	cmp	DWORD PTR _node$[ebp], 0
	je	SHORT $LN4@CopyTo@2

; 1132 : 	{
; 1133 : 		target->LinkEndChild( node->Clone() );

	mov	eax, DWORD PTR _node$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _node$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	call	?LinkEndChild@TiXmlNode@@QAEPAV1@PAV1@@Z ; TiXmlNode::LinkEndChild
	jmp	SHORT $LN2@CopyTo@2
$LN4@CopyTo@2:

; 1134 : 	}
; 1135 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CopyTo@TiXmlDocument@@ABEXPAV1@@Z ENDP			; TiXmlDocument::CopyTo
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Clone@TiXmlDocument@@MBEPAVTiXmlNode@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Clone@TiXmlDocument@@MBEPAVTiXmlNode@@XZ$0
__ehfuncinfo$?Clone@TiXmlDocument@@MBEPAVTiXmlNode@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Clone@TiXmlDocument@@MBEPAVTiXmlNode@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?Clone@TiXmlDocument@@MBEPAVTiXmlNode@@XZ
_TEXT	SEGMENT
tv71 = -256						; size = 4
$T210974 = -248						; size = 4
$T210975 = -236						; size = 4
_clone$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?Clone@TiXmlDocument@@MBEPAVTiXmlNode@@XZ PROC		; TiXmlDocument::Clone, COMDAT
; _this$ = ecx

; 1139 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Clone@TiXmlDocument@@MBEPAVTiXmlNode@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1140 : 	TiXmlDocument* clone = new TiXmlDocument();

	push	72					; 00000048H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T210975[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T210975[ebp], 0
	je	SHORT $LN4@Clone@2
	mov	ecx, DWORD PTR $T210975[ebp]
	call	??0TiXmlDocument@@QAE@XZ		; TiXmlDocument::TiXmlDocument
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN5@Clone@2
$LN4@Clone@2:
	mov	DWORD PTR tv71[ebp], 0
$LN5@Clone@2:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T210974[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T210974[ebp]
	mov	DWORD PTR _clone$[ebp], ecx

; 1141 : 	if ( !clone )

	cmp	DWORD PTR _clone$[ebp], 0
	jne	SHORT $LN1@Clone@2

; 1142 : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN2@Clone@2
$LN1@Clone@2:

; 1143 : 
; 1144 : 	CopyTo( clone );

	mov	eax, DWORD PTR _clone$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CopyTo@TiXmlDocument@@ABEXPAV1@@Z	; TiXmlDocument::CopyTo

; 1145 : 	return clone;

	mov	eax, DWORD PTR _clone$[ebp]
$LN2@Clone@2:

; 1146 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Clone@TiXmlDocument@@MBEPAVTiXmlNode@@XZ$0:
	mov	eax, DWORD PTR $T210975[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Clone@TiXmlDocument@@MBEPAVTiXmlNode@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Clone@TiXmlDocument@@MBEPAVTiXmlNode@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Clone@TiXmlDocument@@MBEPAVTiXmlNode@@XZ ENDP		; TiXmlDocument::Clone
PUBLIC	?__LINE__Var@?1??Print@TiXmlDocument@@UBEXPAU_iobuf@@H@Z@4JA ; `TiXmlDocument::Print'::`2'::__LINE__Var
;	COMDAT ?__LINE__Var@?1??Print@TiXmlDocument@@UBEXPAU_iobuf@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??Print@TiXmlDocument@@UBEXPAU_iobuf@@H@Z@4JA DD 047eH ; `TiXmlDocument::Print'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?Print@TiXmlDocument@@UBEXPAU_iobuf@@H@Z
_TEXT	SEGMENT
_node$209810 = -20					; size = 4
_this$ = -8						; size = 4
_cfile$ = 8						; size = 4
_depth$ = 12						; size = 4
?Print@TiXmlDocument@@UBEXPAU_iobuf@@H@Z PROC		; TiXmlDocument::Print, COMDAT
; _this$ = ecx

; 1150 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1151 : 	assert( cfile );

	cmp	DWORD PTR _cfile$[ebp], 0
	jne	SHORT $LN6@Print@2
	mov	eax, DWORD PTR ?__LINE__Var@?1??Print@TiXmlDocument@@UBEXPAU_iobuf@@H@Z@4JA
	add	eax, 1
	push	eax
	push	OFFSET ??_C@_1GE@HMDMHPBA@?$AAd?$AA?3?$AA?2?$AAv?$AAi?$AAc?$AAe?$AA?9?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAs?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs?$AAh?$AAa?$AAr?$AAe?$AAd?$AA?2?$AAt?$AAi@
	push	OFFSET ??_C@_1M@LLHFIANP@?$AAc?$AAf?$AAi?$AAl?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN6@Print@2:

; 1152 : 	for ( const TiXmlNode* node=FirstChild(); node; node=node->NextSibling() )

	mov	ecx, DWORD PTR _this$[ebp]
	call	?FirstChild@TiXmlNode@@QBEPBV1@XZ	; TiXmlNode::FirstChild
	mov	DWORD PTR _node$209810[ebp], eax
	jmp	SHORT $LN3@Print@2
$LN2@Print@2:
	mov	ecx, DWORD PTR _node$209810[ebp]
	call	?NextSibling@TiXmlNode@@QBEPBV1@XZ	; TiXmlNode::NextSibling
	mov	DWORD PTR _node$209810[ebp], eax
$LN3@Print@2:
	cmp	DWORD PTR _node$209810[ebp], 0
	je	SHORT $LN4@Print@2

; 1153 : 	{
; 1154 : 		node->Print( cfile, depth );

	mov	esi, esp
	mov	eax, DWORD PTR _depth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cfile$[ebp]
	push	ecx
	mov	edx, DWORD PTR _node$209810[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _node$209810[ebp]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1155 : 		fprintf( cfile, "\n" );

	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 8
	jmp	SHORT $LN2@Print@2
$LN4@Print@2:

; 1156 : 	}
; 1157 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Print@TiXmlDocument@@UBEXPAU_iobuf@@H@Z ENDP		; TiXmlDocument::Print
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?Accept@TiXmlDocument@@UBE_NPAVTiXmlVisitor@@@Z
_TEXT	SEGMENT
_node$209819 = -20					; size = 4
_this$ = -8						; size = 4
_visitor$ = 8						; size = 4
?Accept@TiXmlDocument@@UBE_NPAVTiXmlVisitor@@@Z PROC	; TiXmlDocument::Accept, COMDAT
; _this$ = ecx

; 1161 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1162 : 	if ( visitor->VisitEnter( *this ) )

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _visitor$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _visitor$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN5@Accept@2

; 1163 : 	{
; 1164 : 		for ( const TiXmlNode* node=FirstChild(); node; node=node->NextSibling() )

	mov	ecx, DWORD PTR _this$[ebp]
	call	?FirstChild@TiXmlNode@@QBEPBV1@XZ	; TiXmlNode::FirstChild
	mov	DWORD PTR _node$209819[ebp], eax
	jmp	SHORT $LN4@Accept@2
$LN3@Accept@2:
	mov	ecx, DWORD PTR _node$209819[ebp]
	call	?NextSibling@TiXmlNode@@QBEPBV1@XZ	; TiXmlNode::NextSibling
	mov	DWORD PTR _node$209819[ebp], eax
$LN4@Accept@2:
	cmp	DWORD PTR _node$209819[ebp], 0
	je	SHORT $LN5@Accept@2

; 1165 : 		{
; 1166 : 			if ( !node->Accept( visitor ) )

	mov	esi, esp
	mov	eax, DWORD PTR _visitor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _node$209819[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _node$209819[ebp]
	mov	eax, DWORD PTR [edx+72]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN1@Accept@2

; 1167 : 				break;

	jmp	SHORT $LN5@Accept@2
$LN1@Accept@2:

; 1168 : 		}

	jmp	SHORT $LN3@Accept@2
$LN5@Accept@2:

; 1169 : 	}
; 1170 : 	return visitor->VisitExit( *this );

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _visitor$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _visitor$[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1171 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Accept@TiXmlDocument@@UBE_NPAVTiXmlVisitor@@@Z ENDP	; TiXmlDocument::Accept
_TEXT	ENDS
PUBLIC	?empty@TiXmlString@@QBE_NXZ			; TiXmlString::empty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Next@TiXmlAttribute@@QBEPBV1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Next@TiXmlAttribute@@QBEPBV1@XZ PROC			; TiXmlAttribute::Next, COMDAT
; _this$ = ecx

; 1175 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1176 : 	// We are using knowledge of the sentinel. The sentinel
; 1177 : 	// have a value or name.
; 1178 : 	if ( next->value.empty() && next->name.empty() )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	add	ecx, 24					; 00000018H
	call	?empty@TiXmlString@@QBE_NXZ		; TiXmlString::empty
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@Next
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	add	ecx, 20					; 00000014H
	call	?empty@TiXmlString@@QBE_NXZ		; TiXmlString::empty
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@Next

; 1179 : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN2@Next
$LN1@Next:

; 1180 : 	return next;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+32]
$LN2@Next:

; 1181 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Next@TiXmlAttribute@@QBEPBV1@XZ ENDP			; TiXmlAttribute::Next
_TEXT	ENDS
PUBLIC	?Previous@TiXmlAttribute@@QBEPBV1@XZ		; TiXmlAttribute::Previous
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Previous@TiXmlAttribute@@QBEPBV1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Previous@TiXmlAttribute@@QBEPBV1@XZ PROC		; TiXmlAttribute::Previous, COMDAT
; _this$ = ecx

; 1195 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1196 : 	// We are using knowledge of the sentinel. The sentinel
; 1197 : 	// have a value or name.
; 1198 : 	if ( prev->value.empty() && prev->name.empty() )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	add	ecx, 24					; 00000018H
	call	?empty@TiXmlString@@QBE_NXZ		; TiXmlString::empty
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@Previous
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	add	ecx, 20					; 00000014H
	call	?empty@TiXmlString@@QBE_NXZ		; TiXmlString::empty
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@Previous

; 1199 : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN2@Previous
$LN1@Previous:

; 1200 : 	return prev;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+28]
$LN2@Previous:

; 1201 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Previous@TiXmlAttribute@@QBEPBV1@XZ ENDP		; TiXmlAttribute::Previous
_TEXT	ENDS
PUBLIC	??_C@_01GEODFPGF@?8?$AA@			; `string'
PUBLIC	??_C@_02PGMIOCEL@?$DN?8?$AA@			; `string'
PUBLIC	??_C@_07CGFAFKBF@?$CFs?$DN?8?$CFs?8?$AA@	; `string'
PUBLIC	??_C@_01BJJEKLCA@?$CC?$AA@			; `string'
PUBLIC	??YTiXmlString@@QAEAAV0@PBD@Z			; TiXmlString::operator+=
PUBLIC	??_C@_02ILLPBGAO@?$DN?$CC?$AA@			; `string'
PUBLIC	??YTiXmlString@@QAEAAV0@ABV0@@Z			; TiXmlString::operator+=
PUBLIC	??_C@_07JDMHCBCA@?$CFs?$DN?$CC?$CFs?$CC?$AA@	; `string'
PUBLIC	?find@TiXmlString@@QBEID@Z			; TiXmlString::find
PUBLIC	?Print@TiXmlAttribute@@QBEXPAU_iobuf@@HPAVTiXmlString@@@Z ; TiXmlAttribute::Print
EXTRN	?npos@TiXmlString@@2IB:DWORD			; TiXmlString::npos
;	COMDAT ??_C@_01GEODFPGF@?8?$AA@
CONST	SEGMENT
??_C@_01GEODFPGF@?8?$AA@ DB '''', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02PGMIOCEL@?$DN?8?$AA@
CONST	SEGMENT
??_C@_02PGMIOCEL@?$DN?8?$AA@ DB '=''', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07CGFAFKBF@?$CFs?$DN?8?$CFs?8?$AA@
CONST	SEGMENT
??_C@_07CGFAFKBF@?$CFs?$DN?8?$CFs?8?$AA@ DB '%s=''%s''', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01BJJEKLCA@?$CC?$AA@
CONST	SEGMENT
??_C@_01BJJEKLCA@?$CC?$AA@ DB '"', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02ILLPBGAO@?$DN?$CC?$AA@
CONST	SEGMENT
??_C@_02ILLPBGAO@?$DN?$CC?$AA@ DB '="', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07JDMHCBCA@?$CFs?$DN?$CC?$CFs?$CC?$AA@
CONST	SEGMENT
??_C@_07JDMHCBCA@?$CFs?$DN?$CC?$CFs?$CC?$AA@ DB '%s="%s"', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Print@TiXmlAttribute@@QBEXPAU_iobuf@@HPAVTiXmlString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Print@TiXmlAttribute@@QBEXPAU_iobuf@@HPAVTiXmlString@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Print@TiXmlAttribute@@QBEXPAU_iobuf@@HPAVTiXmlString@@@Z$1
__ehfuncinfo$?Print@TiXmlAttribute@@QBEXPAU_iobuf@@HPAVTiXmlString@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Print@TiXmlAttribute@@QBEXPAU_iobuf@@HPAVTiXmlString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?Print@TiXmlAttribute@@QBEXPAU_iobuf@@HPAVTiXmlString@@@Z
_TEXT	SEGMENT
_v$ = -44						; size = 4
_n$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_cfile$ = 8						; size = 4
___formal$ = 12						; size = 4
_str$ = 16						; size = 4
?Print@TiXmlAttribute@@QBEXPAU_iobuf@@HPAVTiXmlString@@@Z PROC ; TiXmlAttribute::Print, COMDAT
; _this$ = ecx

; 1215 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Print@TiXmlAttribute@@QBEXPAU_iobuf@@HPAVTiXmlString@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1216 : 	TIXML_STRING n, v;

	lea	ecx, DWORD PTR _n$[ebp]
	call	??0TiXmlString@@QAE@XZ			; TiXmlString::TiXmlString
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _v$[ebp]
	call	??0TiXmlString@@QAE@XZ			; TiXmlString::TiXmlString
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 1217 : 
; 1218 : 	EncodeString( name, &n );

	lea	eax, DWORD PTR _n$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	call	?EncodeString@TiXmlBase@@SAXABVTiXmlString@@PAV2@@Z ; TiXmlBase::EncodeString
	add	esp, 8

; 1219 : 	EncodeString( value, &v );

	lea	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	push	ecx
	call	?EncodeString@TiXmlBase@@SAXABVTiXmlString@@PAV2@@Z ; TiXmlBase::EncodeString
	add	esp, 8

; 1220 : 
; 1221 : 	if (value.find ('\"') == TIXML_STRING::npos) {

	push	34					; 00000022H
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?find@TiXmlString@@QBEID@Z		; TiXmlString::find
	cmp	eax, DWORD PTR ?npos@TiXmlString@@2IB	; TiXmlString::npos
	jne	SHORT $LN6@Print@3

; 1222 : 		if ( cfile ) {

	cmp	DWORD PTR _cfile$[ebp], 0
	je	SHORT $LN5@Print@3

; 1223 : 		fprintf (cfile, "%s=\"%s\"", n.c_str(), v.c_str() );

	lea	ecx, DWORD PTR _v$[ebp]
	call	?c_str@TiXmlString@@QBEPBDXZ		; TiXmlString::c_str
	push	eax
	lea	ecx, DWORD PTR _n$[ebp]
	call	?c_str@TiXmlString@@QBEPBDXZ		; TiXmlString::c_str
	push	eax
	push	OFFSET ??_C@_07JDMHCBCA@?$CFs?$DN?$CC?$CFs?$CC?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
$LN5@Print@3:

; 1224 : 		}
; 1225 : 		if ( str ) {

	cmp	DWORD PTR _str$[ebp], 0
	je	SHORT $LN4@Print@3

; 1226 : 			(*str) += n; (*str) += "=\""; (*str) += v; (*str) += "\"";

	lea	eax, DWORD PTR _n$[ebp]
	push	eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	??YTiXmlString@@QAEAAV0@ABV0@@Z		; TiXmlString::operator+=
	push	OFFSET ??_C@_02ILLPBGAO@?$DN?$CC?$AA@
	mov	ecx, DWORD PTR _str$[ebp]
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=
	lea	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	??YTiXmlString@@QAEAAV0@ABV0@@Z		; TiXmlString::operator+=
	push	OFFSET ??_C@_01BJJEKLCA@?$CC?$AA@
	mov	ecx, DWORD PTR _str$[ebp]
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=
$LN4@Print@3:

; 1227 : 		}
; 1228 : 	}
; 1229 : 	else {

	jmp	SHORT $LN3@Print@3
$LN6@Print@3:

; 1230 : 		if ( cfile ) {

	cmp	DWORD PTR _cfile$[ebp], 0
	je	SHORT $LN2@Print@3

; 1231 : 		fprintf (cfile, "%s='%s'", n.c_str(), v.c_str() );

	lea	ecx, DWORD PTR _v$[ebp]
	call	?c_str@TiXmlString@@QBEPBDXZ		; TiXmlString::c_str
	push	eax
	lea	ecx, DWORD PTR _n$[ebp]
	call	?c_str@TiXmlString@@QBEPBDXZ		; TiXmlString::c_str
	push	eax
	push	OFFSET ??_C@_07CGFAFKBF@?$CFs?$DN?8?$CFs?8?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 16					; 00000010H
$LN2@Print@3:

; 1232 : 		}
; 1233 : 		if ( str ) {

	cmp	DWORD PTR _str$[ebp], 0
	je	SHORT $LN3@Print@3

; 1234 : 			(*str) += n; (*str) += "='"; (*str) += v; (*str) += "'";

	lea	eax, DWORD PTR _n$[ebp]
	push	eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	??YTiXmlString@@QAEAAV0@ABV0@@Z		; TiXmlString::operator+=
	push	OFFSET ??_C@_02PGMIOCEL@?$DN?8?$AA@
	mov	ecx, DWORD PTR _str$[ebp]
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=
	lea	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	??YTiXmlString@@QAEAAV0@ABV0@@Z		; TiXmlString::operator+=
	push	OFFSET ??_C@_01GEODFPGF@?8?$AA@
	mov	ecx, DWORD PTR _str$[ebp]
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=
$LN3@Print@3:

; 1235 : 		}
; 1236 : 	}
; 1237 : }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _v$[ebp]
	call	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _n$[ebp]
	call	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@Print@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	3
$LN15@Print@3:
	DD	2
	DD	$LN14@Print@3
$LN14@Print@3:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN11@Print@3
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN12@Print@3
$LN12@Print@3:
	DB	118					; 00000076H
	DB	0
$LN11@Print@3:
	DB	110					; 0000006eH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Print@TiXmlAttribute@@QBEXPAU_iobuf@@HPAVTiXmlString@@@Z$0:
	lea	ecx, DWORD PTR _n$[ebp]
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__unwindfunclet$?Print@TiXmlAttribute@@QBEXPAU_iobuf@@HPAVTiXmlString@@@Z$1:
	lea	ecx, DWORD PTR _v$[ebp]
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__ehhandler$?Print@TiXmlAttribute@@QBEXPAU_iobuf@@HPAVTiXmlString@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Print@TiXmlAttribute@@QBEXPAU_iobuf@@HPAVTiXmlString@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Print@TiXmlAttribute@@QBEXPAU_iobuf@@HPAVTiXmlString@@@Z ENDP ; TiXmlAttribute::Print
EXTRN	_sscanf_s:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?QueryIntValue@TiXmlAttribute@@QBEHPAH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_ival$ = 8						; size = 4
?QueryIntValue@TiXmlAttribute@@QBEHPAH@Z PROC		; TiXmlAttribute::QueryIntValue, COMDAT
; _this$ = ecx

; 1241 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1242 : 	if ( TIXML_SSCANF( value.c_str(), "%d", ival ) == 1 )

	mov	eax, DWORD PTR _ival$[ebp]
	push	eax
	push	OFFSET ??_C@_02DPKJAMEF@?$CFd?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?c_str@TiXmlString@@QBEPBDXZ		; TiXmlString::c_str
	push	eax
	call	_sscanf_s
	add	esp, 12					; 0000000cH
	cmp	eax, 1
	jne	SHORT $LN1@QueryIntVa

; 1243 : 		return TIXML_SUCCESS;

	xor	eax, eax
	jmp	SHORT $LN2@QueryIntVa
$LN1@QueryIntVa:

; 1244 : 	return TIXML_WRONG_TYPE;

	mov	eax, 2
$LN2@QueryIntVa:

; 1245 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?QueryIntValue@TiXmlAttribute@@QBEHPAH@Z ENDP		; TiXmlAttribute::QueryIntValue
_TEXT	ENDS
PUBLIC	??_C@_03DLDNIBIK@?$CFlf?$AA@			; `string'
;	COMDAT ??_C@_03DLDNIBIK@?$CFlf?$AA@
CONST	SEGMENT
??_C@_03DLDNIBIK@?$CFlf?$AA@ DB '%lf', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?QueryDoubleValue@TiXmlAttribute@@QBEHPAN@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_dval$ = 8						; size = 4
?QueryDoubleValue@TiXmlAttribute@@QBEHPAN@Z PROC	; TiXmlAttribute::QueryDoubleValue, COMDAT
; _this$ = ecx

; 1248 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1249 : 	if ( TIXML_SSCANF( value.c_str(), "%lf", dval ) == 1 )

	mov	eax, DWORD PTR _dval$[ebp]
	push	eax
	push	OFFSET ??_C@_03DLDNIBIK@?$CFlf?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?c_str@TiXmlString@@QBEPBDXZ		; TiXmlString::c_str
	push	eax
	call	_sscanf_s
	add	esp, 12					; 0000000cH
	cmp	eax, 1
	jne	SHORT $LN1@QueryDoubl@2

; 1250 : 		return TIXML_SUCCESS;

	xor	eax, eax
	jmp	SHORT $LN2@QueryDoubl@2
$LN1@QueryDoubl@2:

; 1251 : 	return TIXML_WRONG_TYPE;

	mov	eax, 2
$LN2@QueryDoubl@2:

; 1252 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?QueryDoubleValue@TiXmlAttribute@@QBEHPAN@Z ENDP	; TiXmlAttribute::QueryDoubleValue
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SetIntValue@TiXmlAttribute@@QAEXH@Z		; TiXmlAttribute::SetIntValue
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetIntValue@TiXmlAttribute@@QAEXH@Z
_TEXT	SEGMENT
_buf$ = -84						; size = 64
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__value$ = 8						; size = 4
?SetIntValue@TiXmlAttribute@@QAEXH@Z PROC		; TiXmlAttribute::SetIntValue, COMDAT
; _this$ = ecx

; 1255 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1256 : 	char buf [64];
; 1257 : 	#if defined(TIXML_SNPRINTF)
; 1258 : 		TIXML_SNPRINTF(buf, sizeof(buf), "%d", _value);

	mov	eax, DWORD PTR __value$[ebp]
	push	eax
	push	OFFSET ??_C@_02DPKJAMEF@?$CFd?$AA@
	push	64					; 00000040H
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	??$_snprintf_s@$0EA@@@YAHAAY0EA@DIPBDZZ	; _snprintf_s<64>
	add	esp, 16					; 00000010H

; 1259 : 	#else
; 1260 : 		sprintf (buf, "%d", _value);
; 1261 : 	#endif
; 1262 : 	SetValue (buf);

	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetValue@TiXmlAttribute@@QAEXPBD@Z	; TiXmlAttribute::SetValue

; 1263 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@SetIntValu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN5@SetIntValu:
	DD	1
	DD	$LN4@SetIntValu
$LN4@SetIntValu:
	DD	-84					; ffffffacH
	DD	64					; 00000040H
	DD	$LN3@SetIntValu
$LN3@SetIntValu:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?SetIntValue@TiXmlAttribute@@QAEXH@Z ENDP		; TiXmlAttribute::SetIntValue
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?SetDoubleValue@TiXmlAttribute@@QAEXN@Z		; TiXmlAttribute::SetDoubleValue
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetDoubleValue@TiXmlAttribute@@QAEXN@Z
_TEXT	SEGMENT
_buf$ = -276						; size = 256
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__value$ = 8						; size = 8
?SetDoubleValue@TiXmlAttribute@@QAEXN@Z PROC		; TiXmlAttribute::SetDoubleValue, COMDAT
; _this$ = ecx

; 1266 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 472				; 000001d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-472]
	mov	ecx, 118				; 00000076H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 1267 : 	char buf [256];
; 1268 : 	#if defined(TIXML_SNPRINTF)
; 1269 : 		TIXML_SNPRINTF( buf, sizeof(buf), "%lf", _value);

	sub	esp, 8
	fld	QWORD PTR __value$[ebp]
	fstp	QWORD PTR [esp]
	push	OFFSET ??_C@_03DLDNIBIK@?$CFlf?$AA@
	push	256					; 00000100H
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	??$_snprintf_s@$0BAA@@@YAHAAY0BAA@DIPBDZZ ; _snprintf_s<256>
	add	esp, 20					; 00000014H

; 1270 : 	#else
; 1271 : 		sprintf (buf, "%lf", _value);
; 1272 : 	#endif
; 1273 : 	SetValue (buf);

	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetValue@TiXmlAttribute@@QAEXPBD@Z	; TiXmlAttribute::SetValue

; 1274 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@SetDoubleV
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 472				; 000001d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN5@SetDoubleV:
	DD	1
	DD	$LN4@SetDoubleV
$LN4@SetDoubleV:
	DD	-276					; fffffeecH
	DD	256					; 00000100H
	DD	$LN3@SetDoubleV
$LN3@SetDoubleV:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?SetDoubleValue@TiXmlAttribute@@QAEXN@Z ENDP		; TiXmlAttribute::SetDoubleValue
_TEXT	ENDS
PUBLIC	?IntValue@TiXmlAttribute@@QBEHXZ		; TiXmlAttribute::IntValue
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?IntValue@TiXmlAttribute@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?IntValue@TiXmlAttribute@@QBEHXZ PROC			; TiXmlAttribute::IntValue, COMDAT
; _this$ = ecx

; 1277 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1278 : 	return atoi (value.c_str ());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?c_str@TiXmlString@@QBEPBDXZ		; TiXmlString::c_str
	push	eax
	call	_atoi
	add	esp, 4

; 1279 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?IntValue@TiXmlAttribute@@QBEHXZ ENDP			; TiXmlAttribute::IntValue
_TEXT	ENDS
PUBLIC	?DoubleValue@TiXmlAttribute@@QBENXZ		; TiXmlAttribute::DoubleValue
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DoubleValue@TiXmlAttribute@@QBENXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?DoubleValue@TiXmlAttribute@@QBENXZ PROC		; TiXmlAttribute::DoubleValue, COMDAT
; _this$ = ecx

; 1282 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1283 : 	return atof (value.c_str ());

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?c_str@TiXmlString@@QBEPBDXZ		; TiXmlString::c_str
	push	eax
	call	_atof
	add	esp, 4

; 1284 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DoubleValue@TiXmlAttribute@@QBENXZ ENDP		; TiXmlAttribute::DoubleValue
_TEXT	ENDS
PUBLIC	?CopyTo@TiXmlComment@@IBEXPAV1@@Z		; TiXmlComment::CopyTo
PUBLIC	??_7TiXmlComment@@6B@				; TiXmlComment::`vftable'
PUBLIC	??0TiXmlComment@@QAE@ABV0@@Z			; TiXmlComment::TiXmlComment
PUBLIC	??_R4TiXmlComment@@6B@				; TiXmlComment::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTiXmlComment@@@8			; TiXmlComment `RTTI Type Descriptor'
PUBLIC	??_R3TiXmlComment@@8				; TiXmlComment::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TiXmlComment@@8				; TiXmlComment::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TiXmlComment@@8			; TiXmlComment::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?Print@TiXmlComment@@UBEXPAU_iobuf@@H@Z		; TiXmlComment::Print
PUBLIC	?ToComment@TiXmlComment@@UAEPAV1@XZ		; TiXmlComment::ToComment
PUBLIC	?ToComment@TiXmlComment@@UBEPBV1@XZ		; TiXmlComment::ToComment
PUBLIC	?Clone@TiXmlComment@@UBEPAVTiXmlNode@@XZ	; TiXmlComment::Clone
PUBLIC	?Accept@TiXmlComment@@UBE_NPAVTiXmlVisitor@@@Z	; TiXmlComment::Accept
EXTRN	??_ETiXmlComment@@UAEPAXI@Z:PROC		; TiXmlComment::`vector deleting destructor'
EXTRN	?Parse@TiXmlComment@@UAEPBDPBDPAVTiXmlParsingData@@W4TiXmlEncoding@@@Z:PROC ; TiXmlComment::Parse
;	COMDAT ??_R1A@?0A@EA@TiXmlComment@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TiXmlComment@@8 DD FLAT:??_R0?AVTiXmlComment@@@8 ; TiXmlComment::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TiXmlComment@@8
rdata$r	ENDS
;	COMDAT ??_R2TiXmlComment@@8
rdata$r	SEGMENT
??_R2TiXmlComment@@8 DD FLAT:??_R1A@?0A@EA@TiXmlComment@@8 ; TiXmlComment::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@TiXmlNode@@8
	DD	FLAT:??_R1A@?0A@EA@TiXmlBase@@8
rdata$r	ENDS
;	COMDAT ??_R3TiXmlComment@@8
rdata$r	SEGMENT
??_R3TiXmlComment@@8 DD 00H				; TiXmlComment::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2TiXmlComment@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTiXmlComment@@@8
_DATA	SEGMENT
??_R0?AVTiXmlComment@@@8 DD FLAT:??_7type_info@@6B@	; TiXmlComment `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTiXmlComment@@', 00H
_DATA	ENDS
;	COMDAT ??_R4TiXmlComment@@6B@
rdata$r	SEGMENT
??_R4TiXmlComment@@6B@ DD 00H				; TiXmlComment::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTiXmlComment@@@8
	DD	FLAT:??_R3TiXmlComment@@8
rdata$r	ENDS
;	COMDAT ??_7TiXmlComment@@6B@
CONST	SEGMENT
??_7TiXmlComment@@6B@ DD FLAT:??_R4TiXmlComment@@6B@	; TiXmlComment::`vftable'
	DD	FLAT:??_ETiXmlComment@@UAEPAXI@Z
	DD	FLAT:?Print@TiXmlComment@@UBEXPAU_iobuf@@H@Z
	DD	FLAT:?Parse@TiXmlComment@@UAEPBDPBDPAVTiXmlParsingData@@W4TiXmlEncoding@@@Z
	DD	FLAT:?ToDocument@TiXmlNode@@UAEPAVTiXmlDocument@@XZ
	DD	FLAT:?ToDocument@TiXmlNode@@UBEPBVTiXmlDocument@@XZ
	DD	FLAT:?ToElement@TiXmlNode@@UAEPAVTiXmlElement@@XZ
	DD	FLAT:?ToElement@TiXmlNode@@UBEPBVTiXmlElement@@XZ
	DD	FLAT:?ToComment@TiXmlComment@@UAEPAV1@XZ
	DD	FLAT:?ToComment@TiXmlComment@@UBEPBV1@XZ
	DD	FLAT:?ToUnknown@TiXmlNode@@UAEPAVTiXmlUnknown@@XZ
	DD	FLAT:?ToUnknown@TiXmlNode@@UBEPBVTiXmlUnknown@@XZ
	DD	FLAT:?ToText@TiXmlNode@@UAEPAVTiXmlText@@XZ
	DD	FLAT:?ToText@TiXmlNode@@UBEPBVTiXmlText@@XZ
	DD	FLAT:?ToDeclaration@TiXmlNode@@UAEPAVTiXmlDeclaration@@XZ
	DD	FLAT:?ToDeclaration@TiXmlNode@@UBEPBVTiXmlDeclaration@@XZ
	DD	FLAT:?ToStylesheetReference@TiXmlNode@@UAEPAVTiXmlStylesheetReference@@XZ
	DD	FLAT:?ToStylesheetReference@TiXmlNode@@UBEPBVTiXmlStylesheetReference@@XZ
	DD	FLAT:?Clone@TiXmlComment@@UBEPAVTiXmlNode@@XZ
	DD	FLAT:?Accept@TiXmlComment@@UBE_NPAVTiXmlVisitor@@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0TiXmlComment@@QAE@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0TiXmlComment@@QAE@ABV0@@Z$0
__ehfuncinfo$??0TiXmlComment@@QAE@ABV0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0TiXmlComment@@QAE@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0TiXmlComment@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_copy$ = 8						; size = 4
??0TiXmlComment@@QAE@ABV0@@Z PROC			; TiXmlComment::TiXmlComment, COMDAT
; _this$ = ecx

; 1288 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0TiXmlComment@@QAE@ABV0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TiXmlNode@@IAE@W4NodeType@0@@Z	; TiXmlNode::TiXmlNode
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TiXmlComment@@6B@

; 1289 : 	copy.CopyTo( this );

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _copy$[ebp]
	call	?CopyTo@TiXmlComment@@IBEXPAV1@@Z	; TiXmlComment::CopyTo

; 1290 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0TiXmlComment@@QAE@ABV0@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1TiXmlNode@@UAE@XZ			; TiXmlNode::~TiXmlNode
__ehhandler$??0TiXmlComment@@QAE@ABV0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0TiXmlComment@@QAE@ABV0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0TiXmlComment@@QAE@ABV0@@Z ENDP			; TiXmlComment::TiXmlComment
PUBLIC	??4TiXmlComment@@QAEXABV0@@Z			; TiXmlComment::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4TiXmlComment@@QAEXABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_base$ = 8						; size = 4
??4TiXmlComment@@QAEXABV0@@Z PROC			; TiXmlComment::operator=, COMDAT
; _this$ = ecx

; 1294 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1295 : 	Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@TiXmlNode@@QAEXXZ		; TiXmlNode::Clear

; 1296 : 	base.CopyTo( this );

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _base$[ebp]
	call	?CopyTo@TiXmlComment@@IBEXPAV1@@Z	; TiXmlComment::CopyTo

; 1297 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4TiXmlComment@@QAEXABV0@@Z ENDP			; TiXmlComment::operator=
_TEXT	ENDS
PUBLIC	??_C@_09PNDCPLLD@?$DM?$CB?9?9?$CFs?9?9?$DO?$AA@	; `string'
PUBLIC	?__LINE__Var@?1??Print@TiXmlComment@@UBEXPAU_iobuf@@H@Z@4JA ; `TiXmlComment::Print'::`2'::__LINE__Var
;	COMDAT ??_C@_09PNDCPLLD@?$DM?$CB?9?9?$CFs?9?9?$DO?$AA@
CONST	SEGMENT
??_C@_09PNDCPLLD@?$DM?$CB?9?9?$CFs?9?9?$DO?$AA@ DB '<!--%s-->', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??Print@TiXmlComment@@UBEXPAU_iobuf@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??Print@TiXmlComment@@UBEXPAU_iobuf@@H@Z@4JA DD 0515H ; `TiXmlComment::Print'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?Print@TiXmlComment@@UBEXPAU_iobuf@@H@Z
_TEXT	SEGMENT
_i$209894 = -20						; size = 4
_this$ = -8						; size = 4
_cfile$ = 8						; size = 4
_depth$ = 12						; size = 4
?Print@TiXmlComment@@UBEXPAU_iobuf@@H@Z PROC		; TiXmlComment::Print, COMDAT
; _this$ = ecx

; 1301 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1302 : 	assert( cfile );

	cmp	DWORD PTR _cfile$[ebp], 0
	jne	SHORT $LN6@Print@4
	mov	eax, DWORD PTR ?__LINE__Var@?1??Print@TiXmlComment@@UBEXPAU_iobuf@@H@Z@4JA
	add	eax, 1
	push	eax
	push	OFFSET ??_C@_1GE@HMDMHPBA@?$AAd?$AA?3?$AA?2?$AAv?$AAi?$AAc?$AAe?$AA?9?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAs?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs?$AAh?$AAa?$AAr?$AAe?$AAd?$AA?2?$AAt?$AAi@
	push	OFFSET ??_C@_1M@LLHFIANP@?$AAc?$AAf?$AAi?$AAl?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN6@Print@4:

; 1303 : 	for ( int i=0; i<depth; i++ )

	mov	DWORD PTR _i$209894[ebp], 0
	jmp	SHORT $LN3@Print@4
$LN2@Print@4:
	mov	eax, DWORD PTR _i$209894[ebp]
	add	eax, 1
	mov	DWORD PTR _i$209894[ebp], eax
$LN3@Print@4:
	mov	eax, DWORD PTR _i$209894[ebp]
	cmp	eax, DWORD PTR _depth$[ebp]
	jge	SHORT $LN1@Print@4

; 1304 : 	{
; 1305 : 		fprintf( cfile,  "    " );

	push	OFFSET ??_C@_04PFOHOKJK@?5?5?5?5?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 8

; 1306 : 	}

	jmp	SHORT $LN2@Print@4
$LN1@Print@4:

; 1307 : 	fprintf( cfile, "<!--%s-->", value.c_str() );

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?c_str@TiXmlString@@QBEPBDXZ		; TiXmlString::c_str
	push	eax
	push	OFFSET ??_C@_09PNDCPLLD@?$DM?$CB?9?9?$CFs?9?9?$DO?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH

; 1308 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Print@TiXmlComment@@UBEXPAU_iobuf@@H@Z ENDP		; TiXmlComment::Print
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?CopyTo@TiXmlComment@@IBEXPAV1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_target$ = 8						; size = 4
?CopyTo@TiXmlComment@@IBEXPAV1@@Z PROC			; TiXmlComment::CopyTo, COMDAT
; _this$ = ecx

; 1312 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1313 : 	TiXmlNode::CopyTo( target );

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CopyTo@TiXmlNode@@IBEXPAV1@@Z		; TiXmlNode::CopyTo

; 1314 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CopyTo@TiXmlComment@@IBEXPAV1@@Z ENDP			; TiXmlComment::CopyTo
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?Accept@TiXmlComment@@UBE_NPAVTiXmlVisitor@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_visitor$ = 8						; size = 4
?Accept@TiXmlComment@@UBE_NPAVTiXmlVisitor@@@Z PROC	; TiXmlComment::Accept, COMDAT
; _this$ = ecx

; 1318 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1319 : 	return visitor->Visit( *this );

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _visitor$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _visitor$[ebp]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1320 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Accept@TiXmlComment@@UBE_NPAVTiXmlVisitor@@@Z ENDP	; TiXmlComment::Accept
_TEXT	ENDS
PUBLIC	??0TiXmlComment@@QAE@XZ				; TiXmlComment::TiXmlComment
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Clone@TiXmlComment@@UBEPAVTiXmlNode@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Clone@TiXmlComment@@UBEPAVTiXmlNode@@XZ$0
__ehfuncinfo$?Clone@TiXmlComment@@UBEPAVTiXmlNode@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Clone@TiXmlComment@@UBEPAVTiXmlNode@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?Clone@TiXmlComment@@UBEPAVTiXmlNode@@XZ
_TEXT	SEGMENT
tv71 = -256						; size = 4
$T211048 = -248						; size = 4
$T211049 = -236						; size = 4
_clone$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?Clone@TiXmlComment@@UBEPAVTiXmlNode@@XZ PROC		; TiXmlComment::Clone, COMDAT
; _this$ = ecx

; 1324 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Clone@TiXmlComment@@UBEPAVTiXmlNode@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1325 : 	TiXmlComment* clone = new TiXmlComment();

	push	44					; 0000002cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T211049[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T211049[ebp], 0
	je	SHORT $LN4@Clone@3
	mov	ecx, DWORD PTR $T211049[ebp]
	call	??0TiXmlComment@@QAE@XZ			; TiXmlComment::TiXmlComment
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN5@Clone@3
$LN4@Clone@3:
	mov	DWORD PTR tv71[ebp], 0
$LN5@Clone@3:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T211048[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T211048[ebp]
	mov	DWORD PTR _clone$[ebp], ecx

; 1326 : 
; 1327 : 	if ( !clone )

	cmp	DWORD PTR _clone$[ebp], 0
	jne	SHORT $LN1@Clone@3

; 1328 : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN2@Clone@3
$LN1@Clone@3:

; 1329 : 
; 1330 : 	CopyTo( clone );

	mov	eax, DWORD PTR _clone$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CopyTo@TiXmlComment@@IBEXPAV1@@Z	; TiXmlComment::CopyTo

; 1331 : 	return clone;

	mov	eax, DWORD PTR _clone$[ebp]
$LN2@Clone@3:

; 1332 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Clone@TiXmlComment@@UBEPAVTiXmlNode@@XZ$0:
	mov	eax, DWORD PTR $T211049[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Clone@TiXmlComment@@UBEPAVTiXmlNode@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Clone@TiXmlComment@@UBEPAVTiXmlNode@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Clone@TiXmlComment@@UBEPAVTiXmlNode@@XZ ENDP		; TiXmlComment::Clone
PUBLIC	??_C@_02DKCKIIND@?$CFs?$AA@			; `string'
PUBLIC	??_C@_0BA@HEAAMLOF@?$DM?$CB?$FLCDATA?$FL?$CFs?$FN?$FN?$DO?6?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??Print@TiXmlText@@UBEXPAU_iobuf@@H@Z@4JA ; `TiXmlText::Print'::`2'::__LINE__Var
PUBLIC	?Print@TiXmlText@@UBEXPAU_iobuf@@H@Z		; TiXmlText::Print
;	COMDAT ??_C@_02DKCKIIND@?$CFs?$AA@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs?$AA@ DB '%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HEAAMLOF@?$DM?$CB?$FLCDATA?$FL?$CFs?$FN?$FN?$DO?6?$AA@
CONST	SEGMENT
??_C@_0BA@HEAAMLOF@?$DM?$CB?$FLCDATA?$FL?$CFs?$FN?$FN?$DO?6?$AA@ DB '<![C'
	DB	'DATA[%s]]>', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??Print@TiXmlText@@UBEXPAU_iobuf@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??Print@TiXmlText@@UBEXPAU_iobuf@@H@Z@4JA DD 0538H ; `TiXmlText::Print'::`2'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Print@TiXmlText@@UBEXPAU_iobuf@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Print@TiXmlText@@UBEXPAU_iobuf@@H@Z$0
__ehfuncinfo$?Print@TiXmlText@@UBEXPAU_iobuf@@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Print@TiXmlText@@UBEXPAU_iobuf@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?Print@TiXmlText@@UBEXPAU_iobuf@@H@Z
_TEXT	SEGMENT
_buffer$209930 = -44					; size = 4
_i$209924 = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_cfile$ = 8						; size = 4
_depth$ = 12						; size = 4
?Print@TiXmlText@@UBEXPAU_iobuf@@H@Z PROC		; TiXmlText::Print, COMDAT
; _this$ = ecx

; 1336 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Print@TiXmlText@@UBEXPAU_iobuf@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1337 : 	assert( cfile );

	cmp	DWORD PTR _cfile$[ebp], 0
	jne	SHORT $LN8@Print@5
	mov	eax, DWORD PTR ?__LINE__Var@?1??Print@TiXmlText@@UBEXPAU_iobuf@@H@Z@4JA
	add	eax, 1
	push	eax
	push	OFFSET ??_C@_1GE@HMDMHPBA@?$AAd?$AA?3?$AA?2?$AAv?$AAi?$AAc?$AAe?$AA?9?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAs?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs?$AAh?$AAa?$AAr?$AAe?$AAd?$AA?2?$AAt?$AAi@
	push	OFFSET ??_C@_1M@LLHFIANP@?$AAc?$AAf?$AAi?$AAl?$AAe?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN8@Print@5:

; 1338 : 	if ( cdata )

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+44]
	test	ecx, ecx
	je	SHORT $LN5@Print@5

; 1339 : 	{
; 1340 : 		int i;
; 1341 : 		fprintf( cfile, "\n" );

	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 8

; 1342 : 		for ( i=0; i<depth; i++ ) {

	mov	DWORD PTR _i$209924[ebp], 0
	jmp	SHORT $LN4@Print@5
$LN3@Print@5:
	mov	eax, DWORD PTR _i$209924[ebp]
	add	eax, 1
	mov	DWORD PTR _i$209924[ebp], eax
$LN4@Print@5:
	mov	eax, DWORD PTR _i$209924[ebp]
	cmp	eax, DWORD PTR _depth$[ebp]
	jge	SHORT $LN2@Print@5

; 1343 : 			fprintf( cfile, "    " );

	push	OFFSET ??_C@_04PFOHOKJK@?5?5?5?5?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 8

; 1344 : 		}

	jmp	SHORT $LN3@Print@5
$LN2@Print@5:

; 1345 : 		fprintf( cfile, "<![CDATA[%s]]>\n", value.c_str() );	// unformatted output

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?c_str@TiXmlString@@QBEPBDXZ		; TiXmlString::c_str
	push	eax
	push	OFFSET ??_C@_0BA@HEAAMLOF@?$DM?$CB?$FLCDATA?$FL?$CFs?$FN?$FN?$DO?6?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH

; 1346 : 	}
; 1347 : 	else

	jmp	SHORT $LN6@Print@5
$LN5@Print@5:

; 1348 : 	{
; 1349 : 		TIXML_STRING buffer;

	lea	ecx, DWORD PTR _buffer$209930[ebp]
	call	??0TiXmlString@@QAE@XZ			; TiXmlString::TiXmlString
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1350 : 		EncodeString( value, &buffer );

	lea	eax, DWORD PTR _buffer$209930[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	call	?EncodeString@TiXmlBase@@SAXABVTiXmlString@@PAV2@@Z ; TiXmlBase::EncodeString
	add	esp, 8

; 1351 : 		fprintf( cfile, "%s", buffer.c_str() );

	lea	ecx, DWORD PTR _buffer$209930[ebp]
	call	?c_str@TiXmlString@@QBEPBDXZ		; TiXmlString::c_str
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH

; 1352 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _buffer$209930[ebp]
	call	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
$LN6@Print@5:

; 1353 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Print@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
$LN13@Print@5:
	DD	1
	DD	$LN12@Print@5
$LN12@Print@5:
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN10@Print@5
$LN10@Print@5:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Print@TiXmlText@@UBEXPAU_iobuf@@H@Z$0:
	lea	ecx, DWORD PTR _buffer$209930[ebp]
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__ehhandler$?Print@TiXmlText@@UBEXPAU_iobuf@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Print@TiXmlText@@UBEXPAU_iobuf@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Print@TiXmlText@@UBEXPAU_iobuf@@H@Z ENDP		; TiXmlText::Print
PUBLIC	?CopyTo@TiXmlText@@IBEXPAV1@@Z			; TiXmlText::CopyTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CopyTo@TiXmlText@@IBEXPAV1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_target$ = 8						; size = 4
?CopyTo@TiXmlText@@IBEXPAV1@@Z PROC			; TiXmlText::CopyTo, COMDAT
; _this$ = ecx

; 1357 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1358 : 	TiXmlNode::CopyTo( target );

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CopyTo@TiXmlNode@@IBEXPAV1@@Z		; TiXmlNode::CopyTo

; 1359 : 	target->cdata = cdata;

	mov	eax, DWORD PTR _target$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	dl, BYTE PTR [ecx+44]
	mov	BYTE PTR [eax+44], dl

; 1360 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CopyTo@TiXmlText@@IBEXPAV1@@Z ENDP			; TiXmlText::CopyTo
_TEXT	ENDS
PUBLIC	?Accept@TiXmlText@@UBE_NPAVTiXmlVisitor@@@Z	; TiXmlText::Accept
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Accept@TiXmlText@@UBE_NPAVTiXmlVisitor@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_visitor$ = 8						; size = 4
?Accept@TiXmlText@@UBE_NPAVTiXmlVisitor@@@Z PROC	; TiXmlText::Accept, COMDAT
; _this$ = ecx

; 1364 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1365 : 	return visitor->Visit( *this );

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _visitor$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _visitor$[ebp]
	mov	eax, DWORD PTR [edx+28]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1366 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Accept@TiXmlText@@UBE_NPAVTiXmlVisitor@@@Z ENDP	; TiXmlText::Accept
_TEXT	ENDS
PUBLIC	??0TiXmlText@@QAE@PBD@Z				; TiXmlText::TiXmlText
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	?Clone@TiXmlText@@MBEPAVTiXmlNode@@XZ		; TiXmlText::Clone
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Clone@TiXmlText@@MBEPAVTiXmlNode@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Clone@TiXmlText@@MBEPAVTiXmlNode@@XZ$0
__ehfuncinfo$?Clone@TiXmlText@@MBEPAVTiXmlNode@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Clone@TiXmlText@@MBEPAVTiXmlNode@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?Clone@TiXmlText@@MBEPAVTiXmlNode@@XZ
_TEXT	SEGMENT
tv72 = -256						; size = 4
$T211078 = -248						; size = 4
$T211079 = -236						; size = 4
_clone$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?Clone@TiXmlText@@MBEPAVTiXmlNode@@XZ PROC		; TiXmlText::Clone, COMDAT
; _this$ = ecx

; 1370 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Clone@TiXmlText@@MBEPAVTiXmlNode@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1371 : 	TiXmlText* clone = 0;

	mov	DWORD PTR _clone$[ebp], 0

; 1372 : 	clone = new TiXmlText( "" );

	push	48					; 00000030H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T211079[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T211079[ebp], 0
	je	SHORT $LN4@Clone@4
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, DWORD PTR $T211079[ebp]
	call	??0TiXmlText@@QAE@PBD@Z			; TiXmlText::TiXmlText
	mov	DWORD PTR tv72[ebp], eax
	jmp	SHORT $LN5@Clone@4
$LN4@Clone@4:
	mov	DWORD PTR tv72[ebp], 0
$LN5@Clone@4:
	mov	eax, DWORD PTR tv72[ebp]
	mov	DWORD PTR $T211078[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T211078[ebp]
	mov	DWORD PTR _clone$[ebp], ecx

; 1373 : 
; 1374 : 	if ( !clone )

	cmp	DWORD PTR _clone$[ebp], 0
	jne	SHORT $LN1@Clone@4

; 1375 : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN2@Clone@4
$LN1@Clone@4:

; 1376 : 
; 1377 : 	CopyTo( clone );

	mov	eax, DWORD PTR _clone$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CopyTo@TiXmlText@@IBEXPAV1@@Z		; TiXmlText::CopyTo

; 1378 : 	return clone;

	mov	eax, DWORD PTR _clone$[ebp]
$LN2@Clone@4:

; 1379 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Clone@TiXmlText@@MBEPAVTiXmlNode@@XZ$0:
	mov	eax, DWORD PTR $T211079[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Clone@TiXmlText@@MBEPAVTiXmlNode@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Clone@TiXmlText@@MBEPAVTiXmlNode@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Clone@TiXmlText@@MBEPAVTiXmlNode@@XZ ENDP		; TiXmlText::Clone
PUBLIC	??_7TiXmlDeclaration@@6B@			; TiXmlDeclaration::`vftable'
PUBLIC	??0TiXmlDeclaration@@QAE@PBD00@Z		; TiXmlDeclaration::TiXmlDeclaration
PUBLIC	??_R4TiXmlDeclaration@@6B@			; TiXmlDeclaration::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTiXmlDeclaration@@@8			; TiXmlDeclaration `RTTI Type Descriptor'
PUBLIC	??_R3TiXmlDeclaration@@8			; TiXmlDeclaration::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TiXmlDeclaration@@8			; TiXmlDeclaration::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TiXmlDeclaration@@8		; TiXmlDeclaration::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?Print@TiXmlDeclaration@@UBEXPAU_iobuf@@H@Z	; TiXmlDeclaration::Print
PUBLIC	?ToDeclaration@TiXmlDeclaration@@UAEPAV1@XZ	; TiXmlDeclaration::ToDeclaration
PUBLIC	?ToDeclaration@TiXmlDeclaration@@UBEPBV1@XZ	; TiXmlDeclaration::ToDeclaration
PUBLIC	?Clone@TiXmlDeclaration@@UBEPAVTiXmlNode@@XZ	; TiXmlDeclaration::Clone
PUBLIC	?Accept@TiXmlDeclaration@@UBE_NPAVTiXmlVisitor@@@Z ; TiXmlDeclaration::Accept
PUBLIC	?Print@TiXmlDeclaration@@UBEXPAU_iobuf@@HPAVTiXmlString@@@Z ; TiXmlDeclaration::Print
EXTRN	??_ETiXmlDeclaration@@UAEPAXI@Z:PROC		; TiXmlDeclaration::`vector deleting destructor'
EXTRN	?Parse@TiXmlDeclaration@@UAEPBDPBDPAVTiXmlParsingData@@W4TiXmlEncoding@@@Z:PROC ; TiXmlDeclaration::Parse
;	COMDAT ??_R1A@?0A@EA@TiXmlDeclaration@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TiXmlDeclaration@@8 DD FLAT:??_R0?AVTiXmlDeclaration@@@8 ; TiXmlDeclaration::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TiXmlDeclaration@@8
rdata$r	ENDS
;	COMDAT ??_R2TiXmlDeclaration@@8
rdata$r	SEGMENT
??_R2TiXmlDeclaration@@8 DD FLAT:??_R1A@?0A@EA@TiXmlDeclaration@@8 ; TiXmlDeclaration::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@TiXmlNode@@8
	DD	FLAT:??_R1A@?0A@EA@TiXmlBase@@8
rdata$r	ENDS
;	COMDAT ??_R3TiXmlDeclaration@@8
rdata$r	SEGMENT
??_R3TiXmlDeclaration@@8 DD 00H				; TiXmlDeclaration::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2TiXmlDeclaration@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTiXmlDeclaration@@@8
_DATA	SEGMENT
??_R0?AVTiXmlDeclaration@@@8 DD FLAT:??_7type_info@@6B@	; TiXmlDeclaration `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTiXmlDeclaration@@', 00H
_DATA	ENDS
;	COMDAT ??_R4TiXmlDeclaration@@6B@
rdata$r	SEGMENT
??_R4TiXmlDeclaration@@6B@ DD 00H			; TiXmlDeclaration::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTiXmlDeclaration@@@8
	DD	FLAT:??_R3TiXmlDeclaration@@8
rdata$r	ENDS
;	COMDAT ??_7TiXmlDeclaration@@6B@
CONST	SEGMENT
??_7TiXmlDeclaration@@6B@ DD FLAT:??_R4TiXmlDeclaration@@6B@ ; TiXmlDeclaration::`vftable'
	DD	FLAT:??_ETiXmlDeclaration@@UAEPAXI@Z
	DD	FLAT:?Print@TiXmlDeclaration@@UBEXPAU_iobuf@@H@Z
	DD	FLAT:?Parse@TiXmlDeclaration@@UAEPBDPBDPAVTiXmlParsingData@@W4TiXmlEncoding@@@Z
	DD	FLAT:?ToDocument@TiXmlNode@@UAEPAVTiXmlDocument@@XZ
	DD	FLAT:?ToDocument@TiXmlNode@@UBEPBVTiXmlDocument@@XZ
	DD	FLAT:?ToElement@TiXmlNode@@UAEPAVTiXmlElement@@XZ
	DD	FLAT:?ToElement@TiXmlNode@@UBEPBVTiXmlElement@@XZ
	DD	FLAT:?ToComment@TiXmlNode@@UAEPAVTiXmlComment@@XZ
	DD	FLAT:?ToComment@TiXmlNode@@UBEPBVTiXmlComment@@XZ
	DD	FLAT:?ToUnknown@TiXmlNode@@UAEPAVTiXmlUnknown@@XZ
	DD	FLAT:?ToUnknown@TiXmlNode@@UBEPBVTiXmlUnknown@@XZ
	DD	FLAT:?ToText@TiXmlNode@@UAEPAVTiXmlText@@XZ
	DD	FLAT:?ToText@TiXmlNode@@UBEPBVTiXmlText@@XZ
	DD	FLAT:?ToDeclaration@TiXmlDeclaration@@UAEPAV1@XZ
	DD	FLAT:?ToDeclaration@TiXmlDeclaration@@UBEPBV1@XZ
	DD	FLAT:?ToStylesheetReference@TiXmlNode@@UAEPAVTiXmlStylesheetReference@@XZ
	DD	FLAT:?ToStylesheetReference@TiXmlNode@@UBEPBVTiXmlStylesheetReference@@XZ
	DD	FLAT:?Clone@TiXmlDeclaration@@UBEPAVTiXmlNode@@XZ
	DD	FLAT:?Accept@TiXmlDeclaration@@UBE_NPAVTiXmlVisitor@@@Z
	DD	FLAT:?Print@TiXmlDeclaration@@UBEXPAU_iobuf@@HPAVTiXmlString@@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0TiXmlDeclaration@@QAE@PBD00@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0TiXmlDeclaration@@QAE@PBD00@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0TiXmlDeclaration@@QAE@PBD00@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0TiXmlDeclaration@@QAE@PBD00@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0TiXmlDeclaration@@QAE@PBD00@Z$3
__ehfuncinfo$??0TiXmlDeclaration@@QAE@PBD00@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0TiXmlDeclaration@@QAE@PBD00@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0TiXmlDeclaration@@QAE@PBD00@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__version$ = 8						; size = 4
__encoding$ = 12					; size = 4
__standalone$ = 16					; size = 4
??0TiXmlDeclaration@@QAE@PBD00@Z PROC			; TiXmlDeclaration::TiXmlDeclaration, COMDAT
; _this$ = ecx

; 1386 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0TiXmlDeclaration@@QAE@PBD00@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	5
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TiXmlNode@@IAE@W4NodeType@0@@Z	; TiXmlNode::TiXmlNode
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TiXmlDeclaration@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0TiXmlString@@QAE@XZ			; TiXmlString::TiXmlString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??0TiXmlString@@QAE@XZ			; TiXmlString::TiXmlString
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??0TiXmlString@@QAE@XZ			; TiXmlString::TiXmlString
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 1387 : 	version = _version;

	mov	eax, DWORD PTR __version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??4TiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator=

; 1388 : 	encoding = _encoding;

	mov	eax, DWORD PTR __encoding$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??4TiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator=

; 1389 : 	standalone = _standalone;

	mov	eax, DWORD PTR __standalone$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??4TiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator=

; 1390 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0TiXmlDeclaration@@QAE@PBD00@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1TiXmlNode@@UAE@XZ			; TiXmlNode::~TiXmlNode
__unwindfunclet$??0TiXmlDeclaration@@QAE@PBD00@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__unwindfunclet$??0TiXmlDeclaration@@QAE@PBD00@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__unwindfunclet$??0TiXmlDeclaration@@QAE@PBD00@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__ehhandler$??0TiXmlDeclaration@@QAE@PBD00@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0TiXmlDeclaration@@QAE@PBD00@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0TiXmlDeclaration@@QAE@PBD00@Z ENDP			; TiXmlDeclaration::TiXmlDeclaration
PUBLIC	?CopyTo@TiXmlDeclaration@@IBEXPAV1@@Z		; TiXmlDeclaration::CopyTo
PUBLIC	??0TiXmlDeclaration@@QAE@ABV0@@Z		; TiXmlDeclaration::TiXmlDeclaration
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0TiXmlDeclaration@@QAE@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0TiXmlDeclaration@@QAE@ABV0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0TiXmlDeclaration@@QAE@ABV0@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0TiXmlDeclaration@@QAE@ABV0@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0TiXmlDeclaration@@QAE@ABV0@@Z$3
__ehfuncinfo$??0TiXmlDeclaration@@QAE@ABV0@@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0TiXmlDeclaration@@QAE@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0TiXmlDeclaration@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_copy$ = 8						; size = 4
??0TiXmlDeclaration@@QAE@ABV0@@Z PROC			; TiXmlDeclaration::TiXmlDeclaration, COMDAT
; _this$ = ecx

; 1408 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0TiXmlDeclaration@@QAE@ABV0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	5
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TiXmlNode@@IAE@W4NodeType@0@@Z	; TiXmlNode::TiXmlNode
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TiXmlDeclaration@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0TiXmlString@@QAE@XZ			; TiXmlString::TiXmlString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??0TiXmlString@@QAE@XZ			; TiXmlString::TiXmlString
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??0TiXmlString@@QAE@XZ			; TiXmlString::TiXmlString
	mov	BYTE PTR __$EHRec$[ebp+8], 3

; 1409 : 	copy.CopyTo( this );

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _copy$[ebp]
	call	?CopyTo@TiXmlDeclaration@@IBEXPAV1@@Z	; TiXmlDeclaration::CopyTo

; 1410 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0TiXmlDeclaration@@QAE@ABV0@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1TiXmlNode@@UAE@XZ			; TiXmlNode::~TiXmlNode
__unwindfunclet$??0TiXmlDeclaration@@QAE@ABV0@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__unwindfunclet$??0TiXmlDeclaration@@QAE@ABV0@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__unwindfunclet$??0TiXmlDeclaration@@QAE@ABV0@@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__ehhandler$??0TiXmlDeclaration@@QAE@ABV0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0TiXmlDeclaration@@QAE@ABV0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0TiXmlDeclaration@@QAE@ABV0@@Z ENDP			; TiXmlDeclaration::TiXmlDeclaration
PUBLIC	??4TiXmlDeclaration@@QAEXABV0@@Z		; TiXmlDeclaration::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4TiXmlDeclaration@@QAEXABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??4TiXmlDeclaration@@QAEXABV0@@Z PROC			; TiXmlDeclaration::operator=, COMDAT
; _this$ = ecx

; 1414 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1415 : 	Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@TiXmlNode@@QAEXXZ		; TiXmlNode::Clear

; 1416 : 	copy.CopyTo( this );

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _copy$[ebp]
	call	?CopyTo@TiXmlDeclaration@@IBEXPAV1@@Z	; TiXmlDeclaration::CopyTo

; 1417 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4TiXmlDeclaration@@QAEXABV0@@Z ENDP			; TiXmlDeclaration::operator=
_TEXT	ENDS
PUBLIC	??_C@_02GOEMJPDN@?$DP?$DO?$AA@			; `string'
PUBLIC	??_C@_0N@IHAMHLOK@standalone?$DN?$CC?$AA@	; `string'
PUBLIC	??_C@_0BB@OAOJGGEI@standalone?$DN?$CC?$CFs?$CC?5?$AA@ ; `string'
PUBLIC	??_C@_0L@ENAAEPMN@encoding?$DN?$CC?$AA@		; `string'
PUBLIC	??_C@_0P@CJGKNICB@encoding?$DN?$CC?$CFs?$CC?5?$AA@ ; `string'
PUBLIC	??_C@_02KOPDJAMB@?$CC?5?$AA@			; `string'
PUBLIC	??_C@_09KGECPEDL@version?$DN?$CC?$AA@		; `string'
PUBLIC	??_C@_0O@LGPLJGNM@version?$DN?$CC?$CFs?$CC?5?$AA@ ; `string'
PUBLIC	??_C@_06CMNLMIOJ@?$DM?$DPxml?5?$AA@		; `string'
;	COMDAT ??_C@_02GOEMJPDN@?$DP?$DO?$AA@
CONST	SEGMENT
??_C@_02GOEMJPDN@?$DP?$DO?$AA@ DB '?>', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IHAMHLOK@standalone?$DN?$CC?$AA@
CONST	SEGMENT
??_C@_0N@IHAMHLOK@standalone?$DN?$CC?$AA@ DB 'standalone="', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OAOJGGEI@standalone?$DN?$CC?$CFs?$CC?5?$AA@
CONST	SEGMENT
??_C@_0BB@OAOJGGEI@standalone?$DN?$CC?$CFs?$CC?5?$AA@ DB 'standalone="%s"'
	DB	' ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ENAAEPMN@encoding?$DN?$CC?$AA@
CONST	SEGMENT
??_C@_0L@ENAAEPMN@encoding?$DN?$CC?$AA@ DB 'encoding="', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CJGKNICB@encoding?$DN?$CC?$CFs?$CC?5?$AA@
CONST	SEGMENT
??_C@_0P@CJGKNICB@encoding?$DN?$CC?$CFs?$CC?5?$AA@ DB 'encoding="%s" ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02KOPDJAMB@?$CC?5?$AA@
CONST	SEGMENT
??_C@_02KOPDJAMB@?$CC?5?$AA@ DB '" ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09KGECPEDL@version?$DN?$CC?$AA@
CONST	SEGMENT
??_C@_09KGECPEDL@version?$DN?$CC?$AA@ DB 'version="', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LGPLJGNM@version?$DN?$CC?$CFs?$CC?5?$AA@
CONST	SEGMENT
??_C@_0O@LGPLJGNM@version?$DN?$CC?$CFs?$CC?5?$AA@ DB 'version="%s" ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06CMNLMIOJ@?$DM?$DPxml?5?$AA@
CONST	SEGMENT
??_C@_06CMNLMIOJ@?$DM?$DPxml?5?$AA@ DB '<?xml ', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?Print@TiXmlDeclaration@@UBEXPAU_iobuf@@HPAVTiXmlString@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_cfile$ = 8						; size = 4
___formal$ = 12						; size = 4
_str$ = 16						; size = 4
?Print@TiXmlDeclaration@@UBEXPAU_iobuf@@HPAVTiXmlString@@@Z PROC ; TiXmlDeclaration::Print, COMDAT
; _this$ = ecx

; 1421 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1422 : 	if ( cfile ) fprintf( cfile, "<?xml " );

	cmp	DWORD PTR _cfile$[ebp], 0
	je	SHORT $LN13@Print@6
	push	OFFSET ??_C@_06CMNLMIOJ@?$DM?$DPxml?5?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 8
$LN13@Print@6:

; 1423 : 	if ( str )	 (*str) += "<?xml ";

	cmp	DWORD PTR _str$[ebp], 0
	je	SHORT $LN12@Print@6
	push	OFFSET ??_C@_06CMNLMIOJ@?$DM?$DPxml?5?$AA@
	mov	ecx, DWORD PTR _str$[ebp]
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=
$LN12@Print@6:

; 1424 : 
; 1425 : 	if ( !version.empty() ) {

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?empty@TiXmlString@@QBE_NXZ		; TiXmlString::empty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN11@Print@6

; 1426 : 		if ( cfile ) fprintf (cfile, "version=\"%s\" ", version.c_str ());

	cmp	DWORD PTR _cfile$[ebp], 0
	je	SHORT $LN10@Print@6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?c_str@TiXmlString@@QBEPBDXZ		; TiXmlString::c_str
	push	eax
	push	OFFSET ??_C@_0O@LGPLJGNM@version?$DN?$CC?$CFs?$CC?5?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
$LN10@Print@6:

; 1427 : 		if ( str ) { (*str) += "version=\""; (*str) += version; (*str) += "\" "; }

	cmp	DWORD PTR _str$[ebp], 0
	je	SHORT $LN11@Print@6
	push	OFFSET ??_C@_09KGECPEDL@version?$DN?$CC?$AA@
	mov	ecx, DWORD PTR _str$[ebp]
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	??YTiXmlString@@QAEAAV0@ABV0@@Z		; TiXmlString::operator+=
	push	OFFSET ??_C@_02KOPDJAMB@?$CC?5?$AA@
	mov	ecx, DWORD PTR _str$[ebp]
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=
$LN11@Print@6:

; 1428 : 	}
; 1429 : 	if ( !encoding.empty() ) {

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?empty@TiXmlString@@QBE_NXZ		; TiXmlString::empty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN8@Print@6

; 1430 : 		if ( cfile ) fprintf (cfile, "encoding=\"%s\" ", encoding.c_str ());

	cmp	DWORD PTR _cfile$[ebp], 0
	je	SHORT $LN7@Print@6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?c_str@TiXmlString@@QBEPBDXZ		; TiXmlString::c_str
	push	eax
	push	OFFSET ??_C@_0P@CJGKNICB@encoding?$DN?$CC?$CFs?$CC?5?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
$LN7@Print@6:

; 1431 : 		if ( str ) { (*str) += "encoding=\""; (*str) += encoding; (*str) += "\" "; }

	cmp	DWORD PTR _str$[ebp], 0
	je	SHORT $LN8@Print@6
	push	OFFSET ??_C@_0L@ENAAEPMN@encoding?$DN?$CC?$AA@
	mov	ecx, DWORD PTR _str$[ebp]
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 48					; 00000030H
	push	eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	??YTiXmlString@@QAEAAV0@ABV0@@Z		; TiXmlString::operator+=
	push	OFFSET ??_C@_02KOPDJAMB@?$CC?5?$AA@
	mov	ecx, DWORD PTR _str$[ebp]
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=
$LN8@Print@6:

; 1432 : 	}
; 1433 : 	if ( !standalone.empty() ) {

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	?empty@TiXmlString@@QBE_NXZ		; TiXmlString::empty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@Print@6

; 1434 : 		if ( cfile ) fprintf (cfile, "standalone=\"%s\" ", standalone.c_str ());

	cmp	DWORD PTR _cfile$[ebp], 0
	je	SHORT $LN4@Print@6
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	?c_str@TiXmlString@@QBEPBDXZ		; TiXmlString::c_str
	push	eax
	push	OFFSET ??_C@_0BB@OAOJGGEI@standalone?$DN?$CC?$CFs?$CC?5?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
$LN4@Print@6:

; 1435 : 		if ( str ) { (*str) += "standalone=\""; (*str) += standalone; (*str) += "\" "; }

	cmp	DWORD PTR _str$[ebp], 0
	je	SHORT $LN5@Print@6
	push	OFFSET ??_C@_0N@IHAMHLOK@standalone?$DN?$CC?$AA@
	mov	ecx, DWORD PTR _str$[ebp]
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 52					; 00000034H
	push	eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	??YTiXmlString@@QAEAAV0@ABV0@@Z		; TiXmlString::operator+=
	push	OFFSET ??_C@_02KOPDJAMB@?$CC?5?$AA@
	mov	ecx, DWORD PTR _str$[ebp]
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=
$LN5@Print@6:

; 1436 : 	}
; 1437 : 	if ( cfile ) fprintf( cfile, "?>" );

	cmp	DWORD PTR _cfile$[ebp], 0
	je	SHORT $LN2@Print@6
	push	OFFSET ??_C@_02GOEMJPDN@?$DP?$DO?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 8
$LN2@Print@6:

; 1438 : 	if ( str )	 (*str) += "?>";

	cmp	DWORD PTR _str$[ebp], 0
	je	SHORT $LN14@Print@6
	push	OFFSET ??_C@_02GOEMJPDN@?$DP?$DO?$AA@
	mov	ecx, DWORD PTR _str$[ebp]
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=
$LN14@Print@6:

; 1439 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Print@TiXmlDeclaration@@UBEXPAU_iobuf@@HPAVTiXmlString@@@Z ENDP ; TiXmlDeclaration::Print
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?CopyTo@TiXmlDeclaration@@IBEXPAV1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_target$ = 8						; size = 4
?CopyTo@TiXmlDeclaration@@IBEXPAV1@@Z PROC		; TiXmlDeclaration::CopyTo, COMDAT
; _this$ = ecx

; 1443 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1444 : 	TiXmlNode::CopyTo( target );

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CopyTo@TiXmlNode@@IBEXPAV1@@Z		; TiXmlNode::CopyTo

; 1445 : 
; 1446 : 	target->version = version;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	add	ecx, 44					; 0000002cH
	call	??4TiXmlString@@QAEAAV0@ABV0@@Z		; TiXmlString::operator=

; 1447 : 	target->encoding = encoding;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 48					; 00000030H
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	add	ecx, 48					; 00000030H
	call	??4TiXmlString@@QAEAAV0@ABV0@@Z		; TiXmlString::operator=

; 1448 : 	target->standalone = standalone;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 52					; 00000034H
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	add	ecx, 52					; 00000034H
	call	??4TiXmlString@@QAEAAV0@ABV0@@Z		; TiXmlString::operator=

; 1449 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CopyTo@TiXmlDeclaration@@IBEXPAV1@@Z ENDP		; TiXmlDeclaration::CopyTo
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?Accept@TiXmlDeclaration@@UBE_NPAVTiXmlVisitor@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_visitor$ = 8						; size = 4
?Accept@TiXmlDeclaration@@UBE_NPAVTiXmlVisitor@@@Z PROC	; TiXmlDeclaration::Accept, COMDAT
; _this$ = ecx

; 1453 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1454 : 	return visitor->Visit( *this );

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _visitor$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _visitor$[ebp]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1455 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Accept@TiXmlDeclaration@@UBE_NPAVTiXmlVisitor@@@Z ENDP	; TiXmlDeclaration::Accept
_TEXT	ENDS
PUBLIC	??0TiXmlDeclaration@@QAE@XZ			; TiXmlDeclaration::TiXmlDeclaration
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Clone@TiXmlDeclaration@@UBEPAVTiXmlNode@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Clone@TiXmlDeclaration@@UBEPAVTiXmlNode@@XZ$0
__ehfuncinfo$?Clone@TiXmlDeclaration@@UBEPAVTiXmlNode@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Clone@TiXmlDeclaration@@UBEPAVTiXmlNode@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?Clone@TiXmlDeclaration@@UBEPAVTiXmlNode@@XZ
_TEXT	SEGMENT
tv71 = -256						; size = 4
$T211123 = -248						; size = 4
$T211124 = -236						; size = 4
_clone$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?Clone@TiXmlDeclaration@@UBEPAVTiXmlNode@@XZ PROC	; TiXmlDeclaration::Clone, COMDAT
; _this$ = ecx

; 1459 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Clone@TiXmlDeclaration@@UBEPAVTiXmlNode@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1460 : 	TiXmlDeclaration* clone = new TiXmlDeclaration();

	push	56					; 00000038H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T211124[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T211124[ebp], 0
	je	SHORT $LN4@Clone@5
	mov	ecx, DWORD PTR $T211124[ebp]
	call	??0TiXmlDeclaration@@QAE@XZ		; TiXmlDeclaration::TiXmlDeclaration
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN5@Clone@5
$LN4@Clone@5:
	mov	DWORD PTR tv71[ebp], 0
$LN5@Clone@5:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T211123[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T211123[ebp]
	mov	DWORD PTR _clone$[ebp], ecx

; 1461 : 
; 1462 : 	if ( !clone )

	cmp	DWORD PTR _clone$[ebp], 0
	jne	SHORT $LN1@Clone@5

; 1463 : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN2@Clone@5
$LN1@Clone@5:

; 1464 : 
; 1465 : 	CopyTo( clone );

	mov	eax, DWORD PTR _clone$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CopyTo@TiXmlDeclaration@@IBEXPAV1@@Z	; TiXmlDeclaration::CopyTo

; 1466 : 	return clone;

	mov	eax, DWORD PTR _clone$[ebp]
$LN2@Clone@5:

; 1467 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Clone@TiXmlDeclaration@@UBEPAVTiXmlNode@@XZ$0:
	mov	eax, DWORD PTR $T211124[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Clone@TiXmlDeclaration@@UBEPAVTiXmlNode@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Clone@TiXmlDeclaration@@UBEPAVTiXmlNode@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Clone@TiXmlDeclaration@@UBEPAVTiXmlNode@@XZ ENDP	; TiXmlDeclaration::Clone
PUBLIC	??_7TiXmlStylesheetReference@@6B@		; TiXmlStylesheetReference::`vftable'
PUBLIC	??0TiXmlStylesheetReference@@QAE@PBD0@Z		; TiXmlStylesheetReference::TiXmlStylesheetReference
PUBLIC	??_R4TiXmlStylesheetReference@@6B@		; TiXmlStylesheetReference::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTiXmlStylesheetReference@@@8		; TiXmlStylesheetReference `RTTI Type Descriptor'
PUBLIC	??_R3TiXmlStylesheetReference@@8		; TiXmlStylesheetReference::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TiXmlStylesheetReference@@8		; TiXmlStylesheetReference::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TiXmlStylesheetReference@@8	; TiXmlStylesheetReference::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?Print@TiXmlStylesheetReference@@UBEXPAU_iobuf@@H@Z ; TiXmlStylesheetReference::Print
PUBLIC	?ToStylesheetReference@TiXmlStylesheetReference@@UAEPAV1@XZ ; TiXmlStylesheetReference::ToStylesheetReference
PUBLIC	?ToStylesheetReference@TiXmlStylesheetReference@@UBEPBV1@XZ ; TiXmlStylesheetReference::ToStylesheetReference
PUBLIC	?Clone@TiXmlStylesheetReference@@UBEPAVTiXmlNode@@XZ ; TiXmlStylesheetReference::Clone
PUBLIC	?Accept@TiXmlStylesheetReference@@UBE_NPAVTiXmlVisitor@@@Z ; TiXmlStylesheetReference::Accept
PUBLIC	?Print@TiXmlStylesheetReference@@UBEXPAU_iobuf@@HPAVTiXmlString@@@Z ; TiXmlStylesheetReference::Print
EXTRN	??_ETiXmlStylesheetReference@@UAEPAXI@Z:PROC	; TiXmlStylesheetReference::`vector deleting destructor'
EXTRN	?Parse@TiXmlStylesheetReference@@UAEPBDPBDPAVTiXmlParsingData@@W4TiXmlEncoding@@@Z:PROC ; TiXmlStylesheetReference::Parse
;	COMDAT ??_R1A@?0A@EA@TiXmlStylesheetReference@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TiXmlStylesheetReference@@8 DD FLAT:??_R0?AVTiXmlStylesheetReference@@@8 ; TiXmlStylesheetReference::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TiXmlStylesheetReference@@8
rdata$r	ENDS
;	COMDAT ??_R2TiXmlStylesheetReference@@8
rdata$r	SEGMENT
??_R2TiXmlStylesheetReference@@8 DD FLAT:??_R1A@?0A@EA@TiXmlStylesheetReference@@8 ; TiXmlStylesheetReference::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@TiXmlNode@@8
	DD	FLAT:??_R1A@?0A@EA@TiXmlBase@@8
rdata$r	ENDS
;	COMDAT ??_R3TiXmlStylesheetReference@@8
rdata$r	SEGMENT
??_R3TiXmlStylesheetReference@@8 DD 00H			; TiXmlStylesheetReference::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2TiXmlStylesheetReference@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTiXmlStylesheetReference@@@8
_DATA	SEGMENT
??_R0?AVTiXmlStylesheetReference@@@8 DD FLAT:??_7type_info@@6B@ ; TiXmlStylesheetReference `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTiXmlStylesheetReference@@', 00H
_DATA	ENDS
;	COMDAT ??_R4TiXmlStylesheetReference@@6B@
rdata$r	SEGMENT
??_R4TiXmlStylesheetReference@@6B@ DD 00H		; TiXmlStylesheetReference::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTiXmlStylesheetReference@@@8
	DD	FLAT:??_R3TiXmlStylesheetReference@@8
rdata$r	ENDS
;	COMDAT ??_7TiXmlStylesheetReference@@6B@
CONST	SEGMENT
??_7TiXmlStylesheetReference@@6B@ DD FLAT:??_R4TiXmlStylesheetReference@@6B@ ; TiXmlStylesheetReference::`vftable'
	DD	FLAT:??_ETiXmlStylesheetReference@@UAEPAXI@Z
	DD	FLAT:?Print@TiXmlStylesheetReference@@UBEXPAU_iobuf@@H@Z
	DD	FLAT:?Parse@TiXmlStylesheetReference@@UAEPBDPBDPAVTiXmlParsingData@@W4TiXmlEncoding@@@Z
	DD	FLAT:?ToDocument@TiXmlNode@@UAEPAVTiXmlDocument@@XZ
	DD	FLAT:?ToDocument@TiXmlNode@@UBEPBVTiXmlDocument@@XZ
	DD	FLAT:?ToElement@TiXmlNode@@UAEPAVTiXmlElement@@XZ
	DD	FLAT:?ToElement@TiXmlNode@@UBEPBVTiXmlElement@@XZ
	DD	FLAT:?ToComment@TiXmlNode@@UAEPAVTiXmlComment@@XZ
	DD	FLAT:?ToComment@TiXmlNode@@UBEPBVTiXmlComment@@XZ
	DD	FLAT:?ToUnknown@TiXmlNode@@UAEPAVTiXmlUnknown@@XZ
	DD	FLAT:?ToUnknown@TiXmlNode@@UBEPBVTiXmlUnknown@@XZ
	DD	FLAT:?ToText@TiXmlNode@@UAEPAVTiXmlText@@XZ
	DD	FLAT:?ToText@TiXmlNode@@UBEPBVTiXmlText@@XZ
	DD	FLAT:?ToDeclaration@TiXmlNode@@UAEPAVTiXmlDeclaration@@XZ
	DD	FLAT:?ToDeclaration@TiXmlNode@@UBEPBVTiXmlDeclaration@@XZ
	DD	FLAT:?ToStylesheetReference@TiXmlStylesheetReference@@UAEPAV1@XZ
	DD	FLAT:?ToStylesheetReference@TiXmlStylesheetReference@@UBEPBV1@XZ
	DD	FLAT:?Clone@TiXmlStylesheetReference@@UBEPAVTiXmlNode@@XZ
	DD	FLAT:?Accept@TiXmlStylesheetReference@@UBE_NPAVTiXmlVisitor@@@Z
	DD	FLAT:?Print@TiXmlStylesheetReference@@UBEXPAU_iobuf@@HPAVTiXmlString@@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0TiXmlStylesheetReference@@QAE@PBD0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0TiXmlStylesheetReference@@QAE@PBD0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0TiXmlStylesheetReference@@QAE@PBD0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0TiXmlStylesheetReference@@QAE@PBD0@Z$2
__ehfuncinfo$??0TiXmlStylesheetReference@@QAE@PBD0@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0TiXmlStylesheetReference@@QAE@PBD0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0TiXmlStylesheetReference@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__type$ = 8						; size = 4
__href$ = 12						; size = 4
??0TiXmlStylesheetReference@@QAE@PBD0@Z PROC		; TiXmlStylesheetReference::TiXmlStylesheetReference, COMDAT
; _this$ = ecx

; 1472 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0TiXmlStylesheetReference@@QAE@PBD0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TiXmlNode@@IAE@W4NodeType@0@@Z	; TiXmlNode::TiXmlNode
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TiXmlStylesheetReference@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0TiXmlString@@QAE@XZ			; TiXmlString::TiXmlString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??0TiXmlString@@QAE@XZ			; TiXmlString::TiXmlString
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 1473 : 	type = _type;

	mov	eax, DWORD PTR __type$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??4TiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator=

; 1474 : 	href = _href;

	mov	eax, DWORD PTR __href$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??4TiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator=

; 1475 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0TiXmlStylesheetReference@@QAE@PBD0@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1TiXmlNode@@UAE@XZ			; TiXmlNode::~TiXmlNode
__unwindfunclet$??0TiXmlStylesheetReference@@QAE@PBD0@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__unwindfunclet$??0TiXmlStylesheetReference@@QAE@PBD0@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__ehhandler$??0TiXmlStylesheetReference@@QAE@PBD0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0TiXmlStylesheetReference@@QAE@PBD0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0TiXmlStylesheetReference@@QAE@PBD0@Z ENDP		; TiXmlStylesheetReference::TiXmlStylesheetReference
PUBLIC	?CopyTo@TiXmlStylesheetReference@@IBEXPAV1@@Z	; TiXmlStylesheetReference::CopyTo
PUBLIC	??0TiXmlStylesheetReference@@QAE@ABV0@@Z	; TiXmlStylesheetReference::TiXmlStylesheetReference
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0TiXmlStylesheetReference@@QAE@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0TiXmlStylesheetReference@@QAE@ABV0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0TiXmlStylesheetReference@@QAE@ABV0@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0TiXmlStylesheetReference@@QAE@ABV0@@Z$2
__ehfuncinfo$??0TiXmlStylesheetReference@@QAE@ABV0@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0TiXmlStylesheetReference@@QAE@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0TiXmlStylesheetReference@@QAE@ABV0@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_copy$ = 8						; size = 4
??0TiXmlStylesheetReference@@QAE@ABV0@@Z PROC		; TiXmlStylesheetReference::TiXmlStylesheetReference, COMDAT
; _this$ = ecx

; 1491 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0TiXmlStylesheetReference@@QAE@ABV0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TiXmlNode@@IAE@W4NodeType@0@@Z	; TiXmlNode::TiXmlNode
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TiXmlStylesheetReference@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0TiXmlString@@QAE@XZ			; TiXmlString::TiXmlString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??0TiXmlString@@QAE@XZ			; TiXmlString::TiXmlString
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 1492 : 	copy.CopyTo( this );

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _copy$[ebp]
	call	?CopyTo@TiXmlStylesheetReference@@IBEXPAV1@@Z ; TiXmlStylesheetReference::CopyTo

; 1493 : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0TiXmlStylesheetReference@@QAE@ABV0@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1TiXmlNode@@UAE@XZ			; TiXmlNode::~TiXmlNode
__unwindfunclet$??0TiXmlStylesheetReference@@QAE@ABV0@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__unwindfunclet$??0TiXmlStylesheetReference@@QAE@ABV0@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__ehhandler$??0TiXmlStylesheetReference@@QAE@ABV0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0TiXmlStylesheetReference@@QAE@ABV0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0TiXmlStylesheetReference@@QAE@ABV0@@Z ENDP		; TiXmlStylesheetReference::TiXmlStylesheetReference
PUBLIC	??4TiXmlStylesheetReference@@QAEXABV0@@Z	; TiXmlStylesheetReference::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4TiXmlStylesheetReference@@QAEXABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??4TiXmlStylesheetReference@@QAEXABV0@@Z PROC		; TiXmlStylesheetReference::operator=, COMDAT
; _this$ = ecx

; 1497 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1498 : 	Clear();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@TiXmlNode@@QAEXXZ		; TiXmlNode::Clear

; 1499 : 	copy.CopyTo( this );

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _copy$[ebp]
	call	?CopyTo@TiXmlStylesheetReference@@IBEXPAV1@@Z ; TiXmlStylesheetReference::CopyTo

; 1500 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4TiXmlStylesheetReference@@QAEXABV0@@Z ENDP		; TiXmlStylesheetReference::operator=
_TEXT	ENDS
PUBLIC	??_C@_06FILOOOMI@href?$DN?$CC?$AA@		; `string'
PUBLIC	??_C@_0L@NBJFHIJJ@href?$DN?$CC?$CFs?$CC?5?$AA@	; `string'
PUBLIC	??_C@_06CILCFPKN@type?$DN?$CC?$AA@		; `string'
PUBLIC	??_C@_0L@OFEBNFLP@type?$DN?$CC?$CFs?$CC?5?$AA@	; `string'
PUBLIC	??_C@_0BC@NPOJEHBP@?$DM?$DPxml?9stylesheet?5?$AA@ ; `string'
;	COMDAT ??_C@_06FILOOOMI@href?$DN?$CC?$AA@
CONST	SEGMENT
??_C@_06FILOOOMI@href?$DN?$CC?$AA@ DB 'href="', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NBJFHIJJ@href?$DN?$CC?$CFs?$CC?5?$AA@
CONST	SEGMENT
??_C@_0L@NBJFHIJJ@href?$DN?$CC?$CFs?$CC?5?$AA@ DB 'href="%s" ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06CILCFPKN@type?$DN?$CC?$AA@
CONST	SEGMENT
??_C@_06CILCFPKN@type?$DN?$CC?$AA@ DB 'type="', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OFEBNFLP@type?$DN?$CC?$CFs?$CC?5?$AA@
CONST	SEGMENT
??_C@_0L@OFEBNFLP@type?$DN?$CC?$CFs?$CC?5?$AA@ DB 'type="%s" ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NPOJEHBP@?$DM?$DPxml?9stylesheet?5?$AA@
CONST	SEGMENT
??_C@_0BC@NPOJEHBP@?$DM?$DPxml?9stylesheet?5?$AA@ DB '<?xml-stylesheet ', 00H ; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?Print@TiXmlStylesheetReference@@UBEXPAU_iobuf@@HPAVTiXmlString@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_cfile$ = 8						; size = 4
___formal$ = 12						; size = 4
_str$ = 16						; size = 4
?Print@TiXmlStylesheetReference@@UBEXPAU_iobuf@@HPAVTiXmlString@@@Z PROC ; TiXmlStylesheetReference::Print, COMDAT
; _this$ = ecx

; 1504 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1505 : 	if ( cfile ) fprintf( cfile, "<?xml-stylesheet " );

	cmp	DWORD PTR _cfile$[ebp], 0
	je	SHORT $LN10@Print@7
	push	OFFSET ??_C@_0BC@NPOJEHBP@?$DM?$DPxml?9stylesheet?5?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 8
$LN10@Print@7:

; 1506 : 	if ( str )	 (*str) += "<?xml-stylesheet ";

	cmp	DWORD PTR _str$[ebp], 0
	je	SHORT $LN9@Print@7
	push	OFFSET ??_C@_0BC@NPOJEHBP@?$DM?$DPxml?9stylesheet?5?$AA@
	mov	ecx, DWORD PTR _str$[ebp]
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=
$LN9@Print@7:

; 1507 : 
; 1508 : 	if ( !type.empty() ) {

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?empty@TiXmlString@@QBE_NXZ		; TiXmlString::empty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN8@Print@7

; 1509 : 		if ( cfile ) fprintf (cfile, "type=\"%s\" ", type.c_str ());

	cmp	DWORD PTR _cfile$[ebp], 0
	je	SHORT $LN7@Print@7
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?c_str@TiXmlString@@QBEPBDXZ		; TiXmlString::c_str
	push	eax
	push	OFFSET ??_C@_0L@OFEBNFLP@type?$DN?$CC?$CFs?$CC?5?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
$LN7@Print@7:

; 1510 : 		if ( str ) { (*str) += "type=\""; (*str) += type; (*str) += "\" "; }

	cmp	DWORD PTR _str$[ebp], 0
	je	SHORT $LN8@Print@7
	push	OFFSET ??_C@_06CILCFPKN@type?$DN?$CC?$AA@
	mov	ecx, DWORD PTR _str$[ebp]
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	??YTiXmlString@@QAEAAV0@ABV0@@Z		; TiXmlString::operator+=
	push	OFFSET ??_C@_02KOPDJAMB@?$CC?5?$AA@
	mov	ecx, DWORD PTR _str$[ebp]
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=
$LN8@Print@7:

; 1511 : 	}
; 1512 : 	if ( !href.empty() ) {

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?empty@TiXmlString@@QBE_NXZ		; TiXmlString::empty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@Print@7

; 1513 : 		if ( cfile ) fprintf (cfile, "href=\"%s\" ", href.c_str ());

	cmp	DWORD PTR _cfile$[ebp], 0
	je	SHORT $LN4@Print@7
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	?c_str@TiXmlString@@QBEPBDXZ		; TiXmlString::c_str
	push	eax
	push	OFFSET ??_C@_0L@NBJFHIJJ@href?$DN?$CC?$CFs?$CC?5?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH
$LN4@Print@7:

; 1514 : 		if ( str ) { (*str) += "href=\""; (*str) += href; (*str) += "\" "; }

	cmp	DWORD PTR _str$[ebp], 0
	je	SHORT $LN5@Print@7
	push	OFFSET ??_C@_06FILOOOMI@href?$DN?$CC?$AA@
	mov	ecx, DWORD PTR _str$[ebp]
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 48					; 00000030H
	push	eax
	mov	ecx, DWORD PTR _str$[ebp]
	call	??YTiXmlString@@QAEAAV0@ABV0@@Z		; TiXmlString::operator+=
	push	OFFSET ??_C@_02KOPDJAMB@?$CC?5?$AA@
	mov	ecx, DWORD PTR _str$[ebp]
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=
$LN5@Print@7:

; 1515 : 	}
; 1516 : 	if ( cfile ) fprintf (cfile, "?>");

	cmp	DWORD PTR _cfile$[ebp], 0
	je	SHORT $LN2@Print@7
	push	OFFSET ??_C@_02GOEMJPDN@?$DP?$DO?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 8
$LN2@Print@7:

; 1517 : 	if ( str )	 (*str) += "?>";

	cmp	DWORD PTR _str$[ebp], 0
	je	SHORT $LN11@Print@7
	push	OFFSET ??_C@_02GOEMJPDN@?$DP?$DO?$AA@
	mov	ecx, DWORD PTR _str$[ebp]
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=
$LN11@Print@7:

; 1518 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Print@TiXmlStylesheetReference@@UBEXPAU_iobuf@@HPAVTiXmlString@@@Z ENDP ; TiXmlStylesheetReference::Print
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?CopyTo@TiXmlStylesheetReference@@IBEXPAV1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_target$ = 8						; size = 4
?CopyTo@TiXmlStylesheetReference@@IBEXPAV1@@Z PROC	; TiXmlStylesheetReference::CopyTo, COMDAT
; _this$ = ecx

; 1521 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1522 : 	TiXmlNode::CopyTo( target );

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CopyTo@TiXmlNode@@IBEXPAV1@@Z		; TiXmlNode::CopyTo

; 1523 : 
; 1524 : 	target->type = type;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	add	ecx, 44					; 0000002cH
	call	??4TiXmlString@@QAEAAV0@ABV0@@Z		; TiXmlString::operator=

; 1525 : 	target->href = href;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 48					; 00000030H
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	add	ecx, 48					; 00000030H
	call	??4TiXmlString@@QAEAAV0@ABV0@@Z		; TiXmlString::operator=

; 1526 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CopyTo@TiXmlStylesheetReference@@IBEXPAV1@@Z ENDP	; TiXmlStylesheetReference::CopyTo
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?Accept@TiXmlStylesheetReference@@UBE_NPAVTiXmlVisitor@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_visitor$ = 8						; size = 4
?Accept@TiXmlStylesheetReference@@UBE_NPAVTiXmlVisitor@@@Z PROC ; TiXmlStylesheetReference::Accept, COMDAT
; _this$ = ecx

; 1529 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1530 : 	return visitor->Visit( *this );

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _visitor$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _visitor$[ebp]
	mov	eax, DWORD PTR [edx+32]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1531 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Accept@TiXmlStylesheetReference@@UBE_NPAVTiXmlVisitor@@@Z ENDP ; TiXmlStylesheetReference::Accept
_TEXT	ENDS
PUBLIC	??0TiXmlStylesheetReference@@QAE@XZ		; TiXmlStylesheetReference::TiXmlStylesheetReference
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Clone@TiXmlStylesheetReference@@UBEPAVTiXmlNode@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Clone@TiXmlStylesheetReference@@UBEPAVTiXmlNode@@XZ$0
__ehfuncinfo$?Clone@TiXmlStylesheetReference@@UBEPAVTiXmlNode@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Clone@TiXmlStylesheetReference@@UBEPAVTiXmlNode@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?Clone@TiXmlStylesheetReference@@UBEPAVTiXmlNode@@XZ
_TEXT	SEGMENT
tv71 = -256						; size = 4
$T211166 = -248						; size = 4
$T211167 = -236						; size = 4
_clone$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?Clone@TiXmlStylesheetReference@@UBEPAVTiXmlNode@@XZ PROC ; TiXmlStylesheetReference::Clone, COMDAT
; _this$ = ecx

; 1534 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Clone@TiXmlStylesheetReference@@UBEPAVTiXmlNode@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1535 : 	TiXmlStylesheetReference* clone = new TiXmlStylesheetReference();

	push	52					; 00000034H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T211167[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T211167[ebp], 0
	je	SHORT $LN4@Clone@6
	mov	ecx, DWORD PTR $T211167[ebp]
	call	??0TiXmlStylesheetReference@@QAE@XZ	; TiXmlStylesheetReference::TiXmlStylesheetReference
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN5@Clone@6
$LN4@Clone@6:
	mov	DWORD PTR tv71[ebp], 0
$LN5@Clone@6:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T211166[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T211166[ebp]
	mov	DWORD PTR _clone$[ebp], ecx

; 1536 : 
; 1537 : 	if ( !clone )

	cmp	DWORD PTR _clone$[ebp], 0
	jne	SHORT $LN1@Clone@6

; 1538 : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN2@Clone@6
$LN1@Clone@6:

; 1539 : 
; 1540 : 	CopyTo( clone );

	mov	eax, DWORD PTR _clone$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CopyTo@TiXmlStylesheetReference@@IBEXPAV1@@Z ; TiXmlStylesheetReference::CopyTo

; 1541 : 	return clone;

	mov	eax, DWORD PTR _clone$[ebp]
$LN2@Clone@6:

; 1542 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Clone@TiXmlStylesheetReference@@UBEPAVTiXmlNode@@XZ$0:
	mov	eax, DWORD PTR $T211167[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Clone@TiXmlStylesheetReference@@UBEPAVTiXmlNode@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Clone@TiXmlStylesheetReference@@UBEPAVTiXmlNode@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Clone@TiXmlStylesheetReference@@UBEPAVTiXmlNode@@XZ ENDP ; TiXmlStylesheetReference::Clone
PUBLIC	??_C@_04NNJCMPBN@?$DM?$CFs?$DO?$AA@		; `string'
PUBLIC	?Print@TiXmlUnknown@@UBEXPAU_iobuf@@H@Z		; TiXmlUnknown::Print
;	COMDAT ??_C@_04NNJCMPBN@?$DM?$CFs?$DO?$AA@
CONST	SEGMENT
??_C@_04NNJCMPBN@?$DM?$CFs?$DO?$AA@ DB '<%s>', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?Print@TiXmlUnknown@@UBEXPAU_iobuf@@H@Z
_TEXT	SEGMENT
_i$210064 = -20						; size = 4
_this$ = -8						; size = 4
_cfile$ = 8						; size = 4
_depth$ = 12						; size = 4
?Print@TiXmlUnknown@@UBEXPAU_iobuf@@H@Z PROC		; TiXmlUnknown::Print, COMDAT
; _this$ = ecx

; 1546 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1547 : 	for ( int i=0; i<depth; i++ )

	mov	DWORD PTR _i$210064[ebp], 0
	jmp	SHORT $LN3@Print@8
$LN2@Print@8:
	mov	eax, DWORD PTR _i$210064[ebp]
	add	eax, 1
	mov	DWORD PTR _i$210064[ebp], eax
$LN3@Print@8:
	mov	eax, DWORD PTR _i$210064[ebp]
	cmp	eax, DWORD PTR _depth$[ebp]
	jge	SHORT $LN1@Print@8

; 1548 : 		fprintf( cfile, "    " );

	push	OFFSET ??_C@_04PFOHOKJK@?5?5?5?5?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 8
	jmp	SHORT $LN2@Print@8
$LN1@Print@8:

; 1549 : 	fprintf( cfile, "<%s>", value.c_str() );

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?c_str@TiXmlString@@QBEPBDXZ		; TiXmlString::c_str
	push	eax
	push	OFFSET ??_C@_04NNJCMPBN@?$DM?$CFs?$DO?$AA@
	mov	eax, DWORD PTR _cfile$[ebp]
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH

; 1550 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Print@TiXmlUnknown@@UBEXPAU_iobuf@@H@Z ENDP		; TiXmlUnknown::Print
_TEXT	ENDS
PUBLIC	?CopyTo@TiXmlUnknown@@IBEXPAV1@@Z		; TiXmlUnknown::CopyTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CopyTo@TiXmlUnknown@@IBEXPAV1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_target$ = 8						; size = 4
?CopyTo@TiXmlUnknown@@IBEXPAV1@@Z PROC			; TiXmlUnknown::CopyTo, COMDAT
; _this$ = ecx

; 1554 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1555 : 	TiXmlNode::CopyTo( target );

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CopyTo@TiXmlNode@@IBEXPAV1@@Z		; TiXmlNode::CopyTo

; 1556 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?CopyTo@TiXmlUnknown@@IBEXPAV1@@Z ENDP			; TiXmlUnknown::CopyTo
_TEXT	ENDS
PUBLIC	?Accept@TiXmlUnknown@@UBE_NPAVTiXmlVisitor@@@Z	; TiXmlUnknown::Accept
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Accept@TiXmlUnknown@@UBE_NPAVTiXmlVisitor@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_visitor$ = 8						; size = 4
?Accept@TiXmlUnknown@@UBE_NPAVTiXmlVisitor@@@Z PROC	; TiXmlUnknown::Accept, COMDAT
; _this$ = ecx

; 1560 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1561 : 	return visitor->Visit( *this );

	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR _visitor$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _visitor$[ebp]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1562 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Accept@TiXmlUnknown@@UBE_NPAVTiXmlVisitor@@@Z ENDP	; TiXmlUnknown::Accept
_TEXT	ENDS
PUBLIC	??0TiXmlUnknown@@QAE@XZ				; TiXmlUnknown::TiXmlUnknown
PUBLIC	?Clone@TiXmlUnknown@@UBEPAVTiXmlNode@@XZ	; TiXmlUnknown::Clone
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Clone@TiXmlUnknown@@UBEPAVTiXmlNode@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Clone@TiXmlUnknown@@UBEPAVTiXmlNode@@XZ$0
__ehfuncinfo$?Clone@TiXmlUnknown@@UBEPAVTiXmlNode@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Clone@TiXmlUnknown@@UBEPAVTiXmlNode@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?Clone@TiXmlUnknown@@UBEPAVTiXmlNode@@XZ
_TEXT	SEGMENT
tv71 = -256						; size = 4
$T211185 = -248						; size = 4
$T211186 = -236						; size = 4
_clone$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?Clone@TiXmlUnknown@@UBEPAVTiXmlNode@@XZ PROC		; TiXmlUnknown::Clone, COMDAT
; _this$ = ecx

; 1566 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Clone@TiXmlUnknown@@UBEPAVTiXmlNode@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1567 : 	TiXmlUnknown* clone = new TiXmlUnknown();

	push	44					; 0000002cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T211186[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T211186[ebp], 0
	je	SHORT $LN4@Clone@7
	mov	ecx, DWORD PTR $T211186[ebp]
	call	??0TiXmlUnknown@@QAE@XZ			; TiXmlUnknown::TiXmlUnknown
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN5@Clone@7
$LN4@Clone@7:
	mov	DWORD PTR tv71[ebp], 0
$LN5@Clone@7:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR $T211185[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T211185[ebp]
	mov	DWORD PTR _clone$[ebp], ecx

; 1568 : 
; 1569 : 	if ( !clone )

	cmp	DWORD PTR _clone$[ebp], 0
	jne	SHORT $LN1@Clone@7

; 1570 : 		return 0;

	xor	eax, eax
	jmp	SHORT $LN2@Clone@7
$LN1@Clone@7:

; 1571 : 
; 1572 : 	CopyTo( clone );

	mov	eax, DWORD PTR _clone$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CopyTo@TiXmlUnknown@@IBEXPAV1@@Z	; TiXmlUnknown::CopyTo

; 1573 : 	return clone;

	mov	eax, DWORD PTR _clone$[ebp]
$LN2@Clone@7:

; 1574 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Clone@TiXmlUnknown@@UBEPAVTiXmlNode@@XZ$0:
	mov	eax, DWORD PTR $T211186[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?Clone@TiXmlUnknown@@UBEPAVTiXmlNode@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Clone@TiXmlUnknown@@UBEPAVTiXmlNode@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Clone@TiXmlUnknown@@UBEPAVTiXmlNode@@XZ ENDP		; TiXmlUnknown::Clone
PUBLIC	??0TiXmlAttribute@@QAE@XZ			; TiXmlAttribute::TiXmlAttribute
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0TiXmlAttributeSet@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0TiXmlAttributeSet@@QAE@XZ PROC			; TiXmlAttributeSet::TiXmlAttributeSet, COMDAT
; _this$ = ecx

; 1578 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TiXmlAttribute@@QAE@XZ		; TiXmlAttribute::TiXmlAttribute

; 1579 : 	sentinel.next = &sentinel;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], ecx

; 1580 : 	sentinel.prev = &sentinel;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], ecx

; 1581 : }

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0TiXmlAttributeSet@@QAE@XZ ENDP			; TiXmlAttributeSet::TiXmlAttributeSet
_TEXT	ENDS
PUBLIC	??1TiXmlAttribute@@UAE@XZ			; TiXmlAttribute::~TiXmlAttribute
PUBLIC	??_C@_1DG@LFHPEILE@?$AAs?$AAe?$AAn?$AAt?$AAi?$AAn?$AAe?$AAl?$AA?4?$AAp?$AAr?$AAe?$AAv?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?$CG?$AAs?$AAe?$AAn?$AAt?$AAi?$AAn?$AAe?$AAl?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DG@DBLLEBDG@?$AAs?$AAe?$AAn?$AAt?$AAi?$AAn?$AAe?$AAl?$AA?4?$AAn?$AAe?$AAx?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?$CG?$AAs?$AAe?$AAn?$AAt?$AAi?$AAn?$AAe?$AAl?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1???1TiXmlAttributeSet@@QAE@XZ@4JA ; `TiXmlAttributeSet::~TiXmlAttributeSet'::`2'::__LINE__Var
;	COMDAT ??_C@_1DG@LFHPEILE@?$AAs?$AAe?$AAn?$AAt?$AAi?$AAn?$AAe?$AAl?$AA?4?$AAp?$AAr?$AAe?$AAv?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?$CG?$AAs?$AAe?$AAn?$AAt?$AAi?$AAn?$AAe?$AAl?$AA?$AA@
CONST	SEGMENT
??_C@_1DG@LFHPEILE@?$AAs?$AAe?$AAn?$AAt?$AAi?$AAn?$AAe?$AAl?$AA?4?$AAp?$AAr?$AAe?$AAv?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?$CG?$AAs?$AAe?$AAn?$AAt?$AAi?$AAn?$AAe?$AAl?$AA?$AA@ DB 's'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'e', 00H
	DB	'l', 00H, '.', 00H, 'p', 00H, 'r', 00H, 'e', 00H, 'v', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, '&', 00H, 's', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'e', 00H, 'l', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@DBLLEBDG@?$AAs?$AAe?$AAn?$AAt?$AAi?$AAn?$AAe?$AAl?$AA?4?$AAn?$AAe?$AAx?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?$CG?$AAs?$AAe?$AAn?$AAt?$AAi?$AAn?$AAe?$AAl?$AA?$AA@
CONST	SEGMENT
??_C@_1DG@DBLLEBDG@?$AAs?$AAe?$AAn?$AAt?$AAi?$AAn?$AAe?$AAl?$AA?4?$AAn?$AAe?$AAx?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?$CG?$AAs?$AAe?$AAn?$AAt?$AAi?$AAn?$AAe?$AAl?$AA?$AA@ DB 's'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'e', 00H
	DB	'l', 00H, '.', 00H, 'n', 00H, 'e', 00H, 'x', 00H, 't', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, '&', 00H, 's', 00H, 'e', 00H
	DB	'n', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'e', 00H, 'l', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1???1TiXmlAttributeSet@@QAE@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?1???1TiXmlAttributeSet@@QAE@XZ@4JA DD 0631H ; `TiXmlAttributeSet::~TiXmlAttributeSet'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ??1TiXmlAttributeSet@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1TiXmlAttributeSet@@QAE@XZ PROC			; TiXmlAttributeSet::~TiXmlAttributeSet, COMDAT
; _this$ = ecx

; 1585 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1586 : 	assert( sentinel.next == &sentinel );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	cmp	ecx, DWORD PTR _this$[ebp]
	je	SHORT $LN3@TiXmlAttri
	mov	edx, DWORD PTR ?__LINE__Var@?1???1TiXmlAttributeSet@@QAE@XZ@4JA
	add	edx, 1
	push	edx
	push	OFFSET ??_C@_1GE@HMDMHPBA@?$AAd?$AA?3?$AA?2?$AAv?$AAi?$AAc?$AAe?$AA?9?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAs?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs?$AAh?$AAa?$AAr?$AAe?$AAd?$AA?2?$AAt?$AAi@
	push	OFFSET ??_C@_1DG@DBLLEBDG@?$AAs?$AAe?$AAn?$AAt?$AAi?$AAn?$AAe?$AAl?$AA?4?$AAn?$AAe?$AAx?$AAt?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?$CG?$AAs?$AAe?$AAn?$AAt?$AAi?$AAn?$AAe?$AAl?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@TiXmlAttri:

; 1587 : 	assert( sentinel.prev == &sentinel );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	ecx, DWORD PTR _this$[ebp]
	je	SHORT $LN1@TiXmlAttri
	mov	edx, DWORD PTR ?__LINE__Var@?1???1TiXmlAttributeSet@@QAE@XZ@4JA
	add	edx, 2
	push	edx
	push	OFFSET ??_C@_1GE@HMDMHPBA@?$AAd?$AA?3?$AA?2?$AAv?$AAi?$AAc?$AAe?$AA?9?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAs?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs?$AAh?$AAa?$AAr?$AAe?$AAd?$AA?2?$AAt?$AAi@
	push	OFFSET ??_C@_1DG@LFHPEILE@?$AAs?$AAe?$AAn?$AAt?$AAi?$AAn?$AAe?$AAl?$AA?4?$AAp?$AAr?$AAe?$AAv?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA?$CG?$AAs?$AAe?$AAn?$AAt?$AAi?$AAn?$AAe?$AAl?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN1@TiXmlAttri:

; 1588 : }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TiXmlAttribute@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1TiXmlAttributeSet@@QAE@XZ ENDP			; TiXmlAttributeSet::~TiXmlAttributeSet
_TEXT	ENDS
PUBLIC	??_C@_1CO@FPCHJIP@?$AA?$CB?$AAF?$AAi?$AAn?$AAd?$AA?$CI?$AA?5?$AAa?$AAd?$AAd?$AAM?$AAe?$AA?9?$AA?$DO?$AAN?$AAa?$AAm?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	?__LINE__Var@?1??Add@TiXmlAttributeSet@@QAEXPAVTiXmlAttribute@@@Z@4JA ; `TiXmlAttributeSet::Add'::`2'::__LINE__Var
;	COMDAT ??_C@_1CO@FPCHJIP@?$AA?$CB?$AAF?$AAi?$AAn?$AAd?$AA?$CI?$AA?5?$AAa?$AAd?$AAd?$AAM?$AAe?$AA?9?$AA?$DO?$AAN?$AAa?$AAm?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1CO@FPCHJIP@?$AA?$CB?$AAF?$AAi?$AAn?$AAd?$AA?$CI?$AA?5?$AAa?$AAd?$AAd?$AAM?$AAe?$AA?9?$AA?$DO?$AAN?$AAa?$AAm?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CJ?$AA?$AA@ DB '!'
	DB	00H, 'F', 00H, 'i', 00H, 'n', 00H, 'd', 00H, '(', 00H, ' ', 00H
	DB	'a', 00H, 'd', 00H, 'd', 00H, 'M', 00H, 'e', 00H, '-', 00H, '>'
	DB	00H, 'N', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '(', 00H, ')', 00H
	DB	' ', 00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?1??Add@TiXmlAttributeSet@@QAEXPAVTiXmlAttribute@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??Add@TiXmlAttributeSet@@QAEXPAVTiXmlAttribute@@@Z@4JA DD 0638H ; `TiXmlAttributeSet::Add'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?Add@TiXmlAttributeSet@@QAEXPAVTiXmlAttribute@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_addMe$ = 8						; size = 4
?Add@TiXmlAttributeSet@@QAEXPAVTiXmlAttribute@@@Z PROC	; TiXmlAttributeSet::Add, COMDAT
; _this$ = ecx

; 1592 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1593 :     #ifdef TIXML_USE_STL
; 1594 : 	assert( !Find( TIXML_STRING( addMe->Name() ) ) );	// Shouldn't be multiply adding to the set.
; 1595 : 	#else
; 1596 : 	assert( !Find( addMe->Name() ) );	// Shouldn't be multiply adding to the set.

	mov	ecx, DWORD PTR _addMe$[ebp]
	call	?Name@TiXmlAttribute@@QBEPBDXZ		; TiXmlAttribute::Name
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Find@TiXmlAttributeSet@@QAEPAVTiXmlAttribute@@PBD@Z ; TiXmlAttributeSet::Find
	test	eax, eax
	je	SHORT $LN3@Add
	mov	eax, DWORD PTR ?__LINE__Var@?1??Add@TiXmlAttributeSet@@QAEXPAVTiXmlAttribute@@@Z@4JA
	add	eax, 4
	push	eax
	push	OFFSET ??_C@_1GE@HMDMHPBA@?$AAd?$AA?3?$AA?2?$AAv?$AAi?$AAc?$AAe?$AA?9?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAs?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs?$AAh?$AAa?$AAr?$AAe?$AAd?$AA?2?$AAt?$AAi@
	push	OFFSET ??_C@_1CO@FPCHJIP@?$AA?$CB?$AAF?$AAi?$AAn?$AAd?$AA?$CI?$AA?5?$AAa?$AAd?$AAd?$AAM?$AAe?$AA?9?$AA?$DO?$AAN?$AAa?$AAm?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AA?$CJ?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@Add:

; 1597 : 	#endif
; 1598 : 
; 1599 : 	addMe->next = &sentinel;

	mov	eax, DWORD PTR _addMe$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], ecx

; 1600 : 	addMe->prev = sentinel.prev;

	mov	eax, DWORD PTR _addMe$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+28], edx

; 1601 : 
; 1602 : 	sentinel.prev->next = addMe;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _addMe$[ebp]
	mov	DWORD PTR [ecx+32], edx

; 1603 : 	sentinel.prev      = addMe;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _addMe$[ebp]
	mov	DWORD PTR [eax+28], ecx

; 1604 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Add@TiXmlAttributeSet@@QAEXPAVTiXmlAttribute@@@Z ENDP	; TiXmlAttributeSet::Add
_TEXT	ENDS
PUBLIC	?__LINE__Var@?1??Remove@TiXmlAttributeSet@@QAEXPAVTiXmlAttribute@@@Z@4JA ; `TiXmlAttributeSet::Remove'::`2'::__LINE__Var
;	COMDAT ?__LINE__Var@?1??Remove@TiXmlAttributeSet@@QAEXPAVTiXmlAttribute@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?1??Remove@TiXmlAttributeSet@@QAEXPAVTiXmlAttribute@@@Z@4JA DD 0647H ; `TiXmlAttributeSet::Remove'::`2'::__LINE__Var
; Function compile flags: /Odtp /RTCsu /ZI
_DATA	ENDS
;	COMDAT ?Remove@TiXmlAttributeSet@@QAEXPAVTiXmlAttribute@@@Z
_TEXT	SEGMENT
_node$ = -20						; size = 4
_this$ = -8						; size = 4
_removeMe$ = 8						; size = 4
?Remove@TiXmlAttributeSet@@QAEXPAVTiXmlAttribute@@@Z PROC ; TiXmlAttributeSet::Remove, COMDAT
; _this$ = ecx

; 1607 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1608 : 	TiXmlAttribute* node;
; 1609 : 
; 1610 : 	for( node = sentinel.next; node != &sentinel; node = node->next )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR _node$[ebp], ecx
	jmp	SHORT $LN4@Remove
$LN3@Remove:
	mov	eax, DWORD PTR _node$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR _node$[ebp], ecx
$LN4@Remove:
	mov	eax, DWORD PTR _node$[ebp]
	cmp	eax, DWORD PTR _this$[ebp]
	je	SHORT $LN2@Remove

; 1611 : 	{
; 1612 : 		if ( node == removeMe )

	mov	eax, DWORD PTR _node$[ebp]
	cmp	eax, DWORD PTR _removeMe$[ebp]
	jne	SHORT $LN1@Remove

; 1613 : 		{
; 1614 : 			node->prev->next = node->next;

	mov	eax, DWORD PTR _node$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR _node$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	DWORD PTR [ecx+32], eax

; 1615 : 			node->next->prev = node->prev;

	mov	eax, DWORD PTR _node$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	edx, DWORD PTR _node$[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR [ecx+28], eax

; 1616 : 			node->next = 0;

	mov	eax, DWORD PTR _node$[ebp]
	mov	DWORD PTR [eax+32], 0

; 1617 : 			node->prev = 0;

	mov	eax, DWORD PTR _node$[ebp]
	mov	DWORD PTR [eax+28], 0

; 1618 : 			return;

	jmp	SHORT $LN5@Remove
$LN1@Remove:

; 1619 : 		}
; 1620 : 	}

	jmp	SHORT $LN3@Remove
$LN2@Remove:

; 1621 : 	assert( 0 );		// we tried to remove a non-linked attribute.

	xor	eax, eax
	jne	SHORT $LN5@Remove
	mov	ecx, DWORD PTR ?__LINE__Var@?1??Remove@TiXmlAttributeSet@@QAEXPAVTiXmlAttribute@@@Z@4JA
	add	ecx, 14					; 0000000eH
	push	ecx
	push	OFFSET ??_C@_1GE@HMDMHPBA@?$AAd?$AA?3?$AA?2?$AAv?$AAi?$AAc?$AAe?$AA?9?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAs?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs?$AAh?$AAa?$AAr?$AAe?$AAd?$AA?2?$AAt?$AAi@
	push	OFFSET ??_C@_13COJANIEC@?$AA0?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN5@Remove:

; 1622 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Remove@TiXmlAttributeSet@@QAEXPAVTiXmlAttribute@@@Z ENDP ; TiXmlAttributeSet::Remove
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?Find@TiXmlAttributeSet@@QBEPBVTiXmlAttribute@@PBD@Z
_TEXT	SEGMENT
_node$210119 = -20					; size = 4
_this$ = -8						; size = 4
_name$ = 8						; size = 4
?Find@TiXmlAttributeSet@@QBEPBVTiXmlAttribute@@PBD@Z PROC ; TiXmlAttributeSet::Find, COMDAT
; _this$ = ecx

; 1651 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1652 : 	for( const TiXmlAttribute* node = sentinel.next; node != &sentinel; node = node->next )

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR _node$210119[ebp], ecx
	jmp	SHORT $LN4@Find
$LN3@Find:
	mov	eax, DWORD PTR _node$210119[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR _node$210119[ebp], ecx
$LN4@Find:
	mov	eax, DWORD PTR _node$210119[ebp]
	cmp	eax, DWORD PTR _this$[ebp]
	je	SHORT $LN2@Find

; 1653 : 	{
; 1654 : 		if ( strcmp( node->name.c_str(), name ) == 0 )

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _node$210119[ebp]
	add	ecx, 20					; 00000014H
	call	?c_str@TiXmlString@@QBEPBDXZ		; TiXmlString::c_str
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@Find

; 1655 : 			return node;

	mov	eax, DWORD PTR _node$210119[ebp]
	jmp	SHORT $LN5@Find
$LN1@Find:

; 1656 : 	}

	jmp	SHORT $LN3@Find
$LN2@Find:

; 1657 : 	return 0;

	xor	eax, eax
$LN5@Find:

; 1658 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Find@TiXmlAttributeSet@@QBEPBVTiXmlAttribute@@PBD@Z ENDP ; TiXmlAttributeSet::Find
_TEXT	ENDS
PUBLIC	??0TiXmlHandle@@QAE@PAVTiXmlNode@@@Z		; TiXmlHandle::TiXmlHandle
PUBLIC	?FirstChild@TiXmlNode@@QAEPAV1@XZ		; TiXmlNode::FirstChild
PUBLIC	?FirstChild@TiXmlHandle@@QBE?AV1@XZ		; TiXmlHandle::FirstChild
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FirstChild@TiXmlHandle@@QBE?AV1@XZ
_TEXT	SEGMENT
_child$210129 = -20					; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?FirstChild@TiXmlHandle@@QBE?AV1@XZ PROC		; TiXmlHandle::FirstChild, COMDAT
; _this$ = ecx

; 1710 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1711 : 	if ( node )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@FirstChild@4

; 1712 : 	{
; 1713 : 		TiXmlNode* child = node->FirstChild();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?FirstChild@TiXmlNode@@QAEPAV1@XZ	; TiXmlNode::FirstChild
	mov	DWORD PTR _child$210129[ebp], eax

; 1714 : 		if ( child )

	cmp	DWORD PTR _child$210129[ebp], 0
	je	SHORT $LN2@FirstChild@4

; 1715 : 			return TiXmlHandle( child );

	mov	eax, DWORD PTR _child$210129[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0TiXmlHandle@@QAE@PAVTiXmlNode@@@Z	; TiXmlHandle::TiXmlHandle
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@FirstChild@4
$LN2@FirstChild@4:

; 1716 : 	}
; 1717 : 	return TiXmlHandle( 0 );

	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0TiXmlHandle@@QAE@PAVTiXmlNode@@@Z	; TiXmlHandle::TiXmlHandle
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@FirstChild@4:

; 1718 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?FirstChild@TiXmlHandle@@QBE?AV1@XZ ENDP		; TiXmlHandle::FirstChild
_TEXT	ENDS
PUBLIC	?FirstChild@TiXmlNode@@QAEPAV1@PBD@Z		; TiXmlNode::FirstChild
PUBLIC	?FirstChild@TiXmlHandle@@QBE?AV1@PBD@Z		; TiXmlHandle::FirstChild
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FirstChild@TiXmlHandle@@QBE?AV1@PBD@Z
_TEXT	SEGMENT
_child$210139 = -20					; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_value$ = 12						; size = 4
?FirstChild@TiXmlHandle@@QBE?AV1@PBD@Z PROC		; TiXmlHandle::FirstChild, COMDAT
; _this$ = ecx

; 1722 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1723 : 	if ( node )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@FirstChild@5

; 1724 : 	{
; 1725 : 		TiXmlNode* child = node->FirstChild( value );

	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?FirstChild@TiXmlNode@@QAEPAV1@PBD@Z	; TiXmlNode::FirstChild
	mov	DWORD PTR _child$210139[ebp], eax

; 1726 : 		if ( child )

	cmp	DWORD PTR _child$210139[ebp], 0
	je	SHORT $LN2@FirstChild@5

; 1727 : 			return TiXmlHandle( child );

	mov	eax, DWORD PTR _child$210139[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0TiXmlHandle@@QAE@PAVTiXmlNode@@@Z	; TiXmlHandle::TiXmlHandle
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@FirstChild@5
$LN2@FirstChild@5:

; 1728 : 	}
; 1729 : 	return TiXmlHandle( 0 );

	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0TiXmlHandle@@QAE@PAVTiXmlNode@@@Z	; TiXmlHandle::TiXmlHandle
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@FirstChild@5:

; 1730 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?FirstChild@TiXmlHandle@@QBE?AV1@PBD@Z ENDP		; TiXmlHandle::FirstChild
_TEXT	ENDS
PUBLIC	?FirstChildElement@TiXmlNode@@QAEPAVTiXmlElement@@XZ ; TiXmlNode::FirstChildElement
PUBLIC	?FirstChildElement@TiXmlHandle@@QBE?AV1@XZ	; TiXmlHandle::FirstChildElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FirstChildElement@TiXmlHandle@@QBE?AV1@XZ
_TEXT	SEGMENT
_child$210148 = -20					; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?FirstChildElement@TiXmlHandle@@QBE?AV1@XZ PROC		; TiXmlHandle::FirstChildElement, COMDAT
; _this$ = ecx

; 1734 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1735 : 	if ( node )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@FirstChild@6

; 1736 : 	{
; 1737 : 		TiXmlElement* child = node->FirstChildElement();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?FirstChildElement@TiXmlNode@@QAEPAVTiXmlElement@@XZ ; TiXmlNode::FirstChildElement
	mov	DWORD PTR _child$210148[ebp], eax

; 1738 : 		if ( child )

	cmp	DWORD PTR _child$210148[ebp], 0
	je	SHORT $LN2@FirstChild@6

; 1739 : 			return TiXmlHandle( child );

	mov	eax, DWORD PTR _child$210148[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0TiXmlHandle@@QAE@PAVTiXmlNode@@@Z	; TiXmlHandle::TiXmlHandle
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@FirstChild@6
$LN2@FirstChild@6:

; 1740 : 	}
; 1741 : 	return TiXmlHandle( 0 );

	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0TiXmlHandle@@QAE@PAVTiXmlNode@@@Z	; TiXmlHandle::TiXmlHandle
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@FirstChild@6:

; 1742 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?FirstChildElement@TiXmlHandle@@QBE?AV1@XZ ENDP		; TiXmlHandle::FirstChildElement
_TEXT	ENDS
PUBLIC	?FirstChildElement@TiXmlNode@@QAEPAVTiXmlElement@@PBD@Z ; TiXmlNode::FirstChildElement
PUBLIC	?FirstChildElement@TiXmlHandle@@QBE?AV1@PBD@Z	; TiXmlHandle::FirstChildElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?FirstChildElement@TiXmlHandle@@QBE?AV1@PBD@Z
_TEXT	SEGMENT
_child$210158 = -20					; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_value$ = 12						; size = 4
?FirstChildElement@TiXmlHandle@@QBE?AV1@PBD@Z PROC	; TiXmlHandle::FirstChildElement, COMDAT
; _this$ = ecx

; 1746 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1747 : 	if ( node )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@FirstChild@7

; 1748 : 	{
; 1749 : 		TiXmlElement* child = node->FirstChildElement( value );

	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?FirstChildElement@TiXmlNode@@QAEPAVTiXmlElement@@PBD@Z ; TiXmlNode::FirstChildElement
	mov	DWORD PTR _child$210158[ebp], eax

; 1750 : 		if ( child )

	cmp	DWORD PTR _child$210158[ebp], 0
	je	SHORT $LN2@FirstChild@7

; 1751 : 			return TiXmlHandle( child );

	mov	eax, DWORD PTR _child$210158[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0TiXmlHandle@@QAE@PAVTiXmlNode@@@Z	; TiXmlHandle::TiXmlHandle
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@FirstChild@7
$LN2@FirstChild@7:

; 1752 : 	}
; 1753 : 	return TiXmlHandle( 0 );

	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0TiXmlHandle@@QAE@PAVTiXmlNode@@@Z	; TiXmlHandle::TiXmlHandle
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@FirstChild@7:

; 1754 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?FirstChildElement@TiXmlHandle@@QBE?AV1@PBD@Z ENDP	; TiXmlHandle::FirstChildElement
_TEXT	ENDS
PUBLIC	?Child@TiXmlHandle@@QBE?AV1@H@Z			; TiXmlHandle::Child
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Child@TiXmlHandle@@QBE?AV1@H@Z
_TEXT	SEGMENT
_child$210169 = -32					; size = 4
_i$210168 = -20						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_count$ = 12						; size = 4
?Child@TiXmlHandle@@QBE?AV1@H@Z PROC			; TiXmlHandle::Child, COMDAT
; _this$ = ecx

; 1758 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1759 : 	if ( node )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Child

; 1760 : 	{
; 1761 : 		int i;
; 1762 : 		TiXmlNode* child = node->FirstChild();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?FirstChild@TiXmlNode@@QAEPAV1@XZ	; TiXmlNode::FirstChild
	mov	DWORD PTR _child$210169[ebp], eax

; 1763 : 		for (	i=0;

	mov	DWORD PTR _i$210168[ebp], 0

; 1764 : 				child && i<count;

	jmp	SHORT $LN4@Child
$LN3@Child:

; 1765 : 				child = child->NextSibling(), ++i )

	mov	ecx, DWORD PTR _child$210169[ebp]
	call	?NextSibling@TiXmlNode@@QAEPAV1@XZ	; TiXmlNode::NextSibling
	mov	DWORD PTR _child$210169[ebp], eax
	mov	eax, DWORD PTR _i$210168[ebp]
	add	eax, 1
	mov	DWORD PTR _i$210168[ebp], eax
$LN4@Child:
	cmp	DWORD PTR _child$210169[ebp], 0
	je	SHORT $LN2@Child
	mov	eax, DWORD PTR _i$210168[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	SHORT $LN2@Child

; 1766 : 		{
; 1767 : 			// nothing
; 1768 : 		}

	jmp	SHORT $LN3@Child
$LN2@Child:

; 1769 : 		if ( child )

	cmp	DWORD PTR _child$210169[ebp], 0
	je	SHORT $LN5@Child

; 1770 : 			return TiXmlHandle( child );

	mov	eax, DWORD PTR _child$210169[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0TiXmlHandle@@QAE@PAVTiXmlNode@@@Z	; TiXmlHandle::TiXmlHandle
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN6@Child
$LN5@Child:

; 1771 : 	}
; 1772 : 	return TiXmlHandle( 0 );

	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0TiXmlHandle@@QAE@PAVTiXmlNode@@@Z	; TiXmlHandle::TiXmlHandle
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN6@Child:

; 1773 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Child@TiXmlHandle@@QBE?AV1@H@Z ENDP			; TiXmlHandle::Child
_TEXT	ENDS
PUBLIC	?NextSibling@TiXmlNode@@QAEPAV1@PBD@Z		; TiXmlNode::NextSibling
PUBLIC	?Child@TiXmlHandle@@QBE?AV1@PBDH@Z		; TiXmlHandle::Child
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Child@TiXmlHandle@@QBE?AV1@PBDH@Z
_TEXT	SEGMENT
_child$210184 = -32					; size = 4
_i$210183 = -20						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_value$ = 12						; size = 4
_count$ = 16						; size = 4
?Child@TiXmlHandle@@QBE?AV1@PBDH@Z PROC			; TiXmlHandle::Child, COMDAT
; _this$ = ecx

; 1777 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1778 : 	if ( node )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@Child@2

; 1779 : 	{
; 1780 : 		int i;
; 1781 : 		TiXmlNode* child = node->FirstChild( value );

	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?FirstChild@TiXmlNode@@QAEPAV1@PBD@Z	; TiXmlNode::FirstChild
	mov	DWORD PTR _child$210184[ebp], eax

; 1782 : 		for (	i=0;

	mov	DWORD PTR _i$210183[ebp], 0

; 1783 : 				child && i<count;

	jmp	SHORT $LN4@Child@2
$LN3@Child@2:

; 1784 : 				child = child->NextSibling( value ), ++i )

	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _child$210184[ebp]
	call	?NextSibling@TiXmlNode@@QAEPAV1@PBD@Z	; TiXmlNode::NextSibling
	mov	DWORD PTR _child$210184[ebp], eax
	mov	ecx, DWORD PTR _i$210183[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$210183[ebp], ecx
$LN4@Child@2:
	cmp	DWORD PTR _child$210184[ebp], 0
	je	SHORT $LN2@Child@2
	mov	eax, DWORD PTR _i$210183[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	SHORT $LN2@Child@2

; 1785 : 		{
; 1786 : 			// nothing
; 1787 : 		}

	jmp	SHORT $LN3@Child@2
$LN2@Child@2:

; 1788 : 		if ( child )

	cmp	DWORD PTR _child$210184[ebp], 0
	je	SHORT $LN5@Child@2

; 1789 : 			return TiXmlHandle( child );

	mov	eax, DWORD PTR _child$210184[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0TiXmlHandle@@QAE@PAVTiXmlNode@@@Z	; TiXmlHandle::TiXmlHandle
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN6@Child@2
$LN5@Child@2:

; 1790 : 	}
; 1791 : 	return TiXmlHandle( 0 );

	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0TiXmlHandle@@QAE@PAVTiXmlNode@@@Z	; TiXmlHandle::TiXmlHandle
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN6@Child@2:

; 1792 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?Child@TiXmlHandle@@QBE?AV1@PBDH@Z ENDP			; TiXmlHandle::Child
_TEXT	ENDS
PUBLIC	?NextSiblingElement@TiXmlNode@@QAEPAVTiXmlElement@@XZ ; TiXmlNode::NextSiblingElement
PUBLIC	?ChildElement@TiXmlHandle@@QBE?AV1@H@Z		; TiXmlHandle::ChildElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ChildElement@TiXmlHandle@@QBE?AV1@H@Z
_TEXT	SEGMENT
_child$210198 = -32					; size = 4
_i$210197 = -20						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_count$ = 12						; size = 4
?ChildElement@TiXmlHandle@@QBE?AV1@H@Z PROC		; TiXmlHandle::ChildElement, COMDAT
; _this$ = ecx

; 1796 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1797 : 	if ( node )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@ChildEleme

; 1798 : 	{
; 1799 : 		int i;
; 1800 : 		TiXmlElement* child = node->FirstChildElement();

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?FirstChildElement@TiXmlNode@@QAEPAVTiXmlElement@@XZ ; TiXmlNode::FirstChildElement
	mov	DWORD PTR _child$210198[ebp], eax

; 1801 : 		for (	i=0;

	mov	DWORD PTR _i$210197[ebp], 0

; 1802 : 				child && i<count;

	jmp	SHORT $LN4@ChildEleme
$LN3@ChildEleme:

; 1803 : 				child = child->NextSiblingElement(), ++i )

	mov	ecx, DWORD PTR _child$210198[ebp]
	call	?NextSiblingElement@TiXmlNode@@QAEPAVTiXmlElement@@XZ ; TiXmlNode::NextSiblingElement
	mov	DWORD PTR _child$210198[ebp], eax
	mov	eax, DWORD PTR _i$210197[ebp]
	add	eax, 1
	mov	DWORD PTR _i$210197[ebp], eax
$LN4@ChildEleme:
	cmp	DWORD PTR _child$210198[ebp], 0
	je	SHORT $LN2@ChildEleme
	mov	eax, DWORD PTR _i$210197[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	SHORT $LN2@ChildEleme

; 1804 : 		{
; 1805 : 			// nothing
; 1806 : 		}

	jmp	SHORT $LN3@ChildEleme
$LN2@ChildEleme:

; 1807 : 		if ( child )

	cmp	DWORD PTR _child$210198[ebp], 0
	je	SHORT $LN5@ChildEleme

; 1808 : 			return TiXmlHandle( child );

	mov	eax, DWORD PTR _child$210198[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0TiXmlHandle@@QAE@PAVTiXmlNode@@@Z	; TiXmlHandle::TiXmlHandle
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN6@ChildEleme
$LN5@ChildEleme:

; 1809 : 	}
; 1810 : 	return TiXmlHandle( 0 );

	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0TiXmlHandle@@QAE@PAVTiXmlNode@@@Z	; TiXmlHandle::TiXmlHandle
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN6@ChildEleme:

; 1811 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?ChildElement@TiXmlHandle@@QBE?AV1@H@Z ENDP		; TiXmlHandle::ChildElement
_TEXT	ENDS
PUBLIC	?NextSiblingElement@TiXmlNode@@QAEPAVTiXmlElement@@PBD@Z ; TiXmlNode::NextSiblingElement
PUBLIC	?ChildElement@TiXmlHandle@@QBE?AV1@PBDH@Z	; TiXmlHandle::ChildElement
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ChildElement@TiXmlHandle@@QBE?AV1@PBDH@Z
_TEXT	SEGMENT
_child$210213 = -32					; size = 4
_i$210212 = -20						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
_value$ = 12						; size = 4
_count$ = 16						; size = 4
?ChildElement@TiXmlHandle@@QBE?AV1@PBDH@Z PROC		; TiXmlHandle::ChildElement, COMDAT
; _this$ = ecx

; 1815 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1816 : 	if ( node )

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN5@ChildEleme@2

; 1817 : 	{
; 1818 : 		int i;
; 1819 : 		TiXmlElement* child = node->FirstChildElement( value );

	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?FirstChildElement@TiXmlNode@@QAEPAVTiXmlElement@@PBD@Z ; TiXmlNode::FirstChildElement
	mov	DWORD PTR _child$210213[ebp], eax

; 1820 : 		for (	i=0;

	mov	DWORD PTR _i$210212[ebp], 0

; 1821 : 				child && i<count;

	jmp	SHORT $LN4@ChildEleme@2
$LN3@ChildEleme@2:

; 1822 : 				child = child->NextSiblingElement( value ), ++i )

	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _child$210213[ebp]
	call	?NextSiblingElement@TiXmlNode@@QAEPAVTiXmlElement@@PBD@Z ; TiXmlNode::NextSiblingElement
	mov	DWORD PTR _child$210213[ebp], eax
	mov	ecx, DWORD PTR _i$210212[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$210212[ebp], ecx
$LN4@ChildEleme@2:
	cmp	DWORD PTR _child$210213[ebp], 0
	je	SHORT $LN2@ChildEleme@2
	mov	eax, DWORD PTR _i$210212[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	SHORT $LN2@ChildEleme@2

; 1823 : 		{
; 1824 : 			// nothing
; 1825 : 		}

	jmp	SHORT $LN3@ChildEleme@2
$LN2@ChildEleme@2:

; 1826 : 		if ( child )

	cmp	DWORD PTR _child$210213[ebp], 0
	je	SHORT $LN5@ChildEleme@2

; 1827 : 			return TiXmlHandle( child );

	mov	eax, DWORD PTR _child$210213[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0TiXmlHandle@@QAE@PAVTiXmlNode@@@Z	; TiXmlHandle::TiXmlHandle
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN6@ChildEleme@2
$LN5@ChildEleme@2:

; 1828 : 	}
; 1829 : 	return TiXmlHandle( 0 );

	push	0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0TiXmlHandle@@QAE@PAVTiXmlNode@@@Z	; TiXmlHandle::TiXmlHandle
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN6@ChildEleme@2:

; 1830 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?ChildElement@TiXmlHandle@@QBE?AV1@PBDH@Z ENDP		; TiXmlHandle::ChildElement
_TEXT	ENDS
PUBLIC	?VisitEnter@TiXmlPrinter@@UAE_NABVTiXmlDocument@@@Z ; TiXmlPrinter::VisitEnter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?VisitEnter@TiXmlPrinter@@UAE_NABVTiXmlDocument@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?VisitEnter@TiXmlPrinter@@UAE_NABVTiXmlDocument@@@Z PROC ; TiXmlPrinter::VisitEnter, COMDAT
; _this$ = ecx

; 1834 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1835 : 	return true;

	mov	al, 1

; 1836 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?VisitEnter@TiXmlPrinter@@UAE_NABVTiXmlDocument@@@Z ENDP ; TiXmlPrinter::VisitEnter
_TEXT	ENDS
PUBLIC	?VisitExit@TiXmlPrinter@@UAE_NABVTiXmlDocument@@@Z ; TiXmlPrinter::VisitExit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?VisitExit@TiXmlPrinter@@UAE_NABVTiXmlDocument@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
?VisitExit@TiXmlPrinter@@UAE_NABVTiXmlDocument@@@Z PROC	; TiXmlPrinter::VisitExit, COMDAT
; _this$ = ecx

; 1839 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1840 : 	return true;

	mov	al, 1

; 1841 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?VisitExit@TiXmlPrinter@@UAE_NABVTiXmlDocument@@@Z ENDP	; TiXmlPrinter::VisitExit
_TEXT	ENDS
PUBLIC	?CDATA@TiXmlText@@QBE_NXZ			; TiXmlText::CDATA
PUBLIC	?LastChild@TiXmlNode@@QBEPBV1@XZ		; TiXmlNode::LastChild
PUBLIC	?DoLineBreak@TiXmlPrinter@@AAEXXZ		; TiXmlPrinter::DoLineBreak
PUBLIC	??_C@_01MNNFJEPP@?$DM?$AA@			; `string'
PUBLIC	?DoIndent@TiXmlPrinter@@AAEXXZ			; TiXmlPrinter::DoIndent
PUBLIC	?VisitEnter@TiXmlPrinter@@UAE_NABVTiXmlElement@@PBVTiXmlAttribute@@@Z ; TiXmlPrinter::VisitEnter
;	COMDAT ??_C@_01MNNFJEPP@?$DM?$AA@
CONST	SEGMENT
??_C@_01MNNFJEPP@?$DM?$AA@ DB '<', 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?VisitEnter@TiXmlPrinter@@UAE_NABVTiXmlElement@@PBVTiXmlAttribute@@@Z
_TEXT	SEGMENT
tv166 = -220						; size = 4
tv141 = -220						; size = 4
_attrib$210234 = -20					; size = 4
_this$ = -8						; size = 4
_element$ = 8						; size = 4
_firstAttribute$ = 12					; size = 4
?VisitEnter@TiXmlPrinter@@UAE_NABVTiXmlElement@@PBVTiXmlAttribute@@@Z PROC ; TiXmlPrinter::VisitEnter, COMDAT
; _this$ = ecx

; 1844 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1845 : 	DoIndent();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoIndent@TiXmlPrinter@@AAEXXZ		; TiXmlPrinter::DoIndent

; 1846 : 	buffer += "<";

	push	OFFSET ??_C@_01MNNFJEPP@?$DM?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=

; 1847 : 	buffer += element.Value();

	mov	ecx, DWORD PTR _element$[ebp]
	call	?Value@TiXmlNode@@QBEPBDXZ		; TiXmlNode::Value
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=

; 1848 : 
; 1849 : 	for( const TiXmlAttribute* attrib = firstAttribute; attrib; attrib = attrib->Next() )

	mov	eax, DWORD PTR _firstAttribute$[ebp]
	mov	DWORD PTR _attrib$210234[ebp], eax
	jmp	SHORT $LN7@VisitEnter
$LN6@VisitEnter:
	mov	ecx, DWORD PTR _attrib$210234[ebp]
	call	?Next@TiXmlAttribute@@QBEPBV1@XZ	; TiXmlAttribute::Next
	mov	DWORD PTR _attrib$210234[ebp], eax
$LN7@VisitEnter:
	cmp	DWORD PTR _attrib$210234[ebp], 0
	je	SHORT $LN5@VisitEnter

; 1850 : 	{
; 1851 : 		buffer += " ";

	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=

; 1852 : 		attrib->Print( 0, 0, &buffer );

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _attrib$210234[ebp]
	call	?Print@TiXmlAttribute@@QBEXPAU_iobuf@@HPAVTiXmlString@@@Z ; TiXmlAttribute::Print

; 1853 : 	}

	jmp	SHORT $LN6@VisitEnter
$LN5@VisitEnter:

; 1854 : 
; 1855 : 	if ( !element.FirstChild() )

	mov	ecx, DWORD PTR _element$[ebp]
	call	?FirstChild@TiXmlNode@@QBEPBV1@XZ	; TiXmlNode::FirstChild
	test	eax, eax
	jne	SHORT $LN4@VisitEnter

; 1856 : 	{
; 1857 : 		buffer += " />";

	push	OFFSET ??_C@_03MFNJFHN@?5?1?$DO?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=

; 1858 : 		DoLineBreak();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoLineBreak@TiXmlPrinter@@AAEXXZ	; TiXmlPrinter::DoLineBreak

; 1859 : 	}
; 1860 : 	else

	jmp	$LN3@VisitEnter
$LN4@VisitEnter:

; 1861 : 	{
; 1862 : 		buffer += ">";

	push	OFFSET ??_C@_01PPODPGHN@?$DO?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=

; 1863 : 		if (    element.FirstChild()->ToText()
; 1864 : 			  && element.LastChild() == element.FirstChild()
; 1865 : 			  && element.FirstChild()->ToText()->CDATA() == false )

	mov	ecx, DWORD PTR _element$[ebp]
	call	?FirstChild@TiXmlNode@@QBEPBV1@XZ	; TiXmlNode::FirstChild
	mov	DWORD PTR tv141[ebp], eax
	mov	eax, DWORD PTR tv141[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv141[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@VisitEnter
	mov	ecx, DWORD PTR _element$[ebp]
	call	?LastChild@TiXmlNode@@QBEPBV1@XZ	; TiXmlNode::LastChild
	mov	esi, eax
	mov	ecx, DWORD PTR _element$[ebp]
	call	?FirstChild@TiXmlNode@@QBEPBV1@XZ	; TiXmlNode::FirstChild
	cmp	esi, eax
	jne	SHORT $LN2@VisitEnter
	mov	ecx, DWORD PTR _element$[ebp]
	call	?FirstChild@TiXmlNode@@QBEPBV1@XZ	; TiXmlNode::FirstChild
	mov	DWORD PTR tv166[ebp], eax
	mov	eax, DWORD PTR tv166[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv166[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, eax
	call	?CDATA@TiXmlText@@QBE_NXZ		; TiXmlText::CDATA
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@VisitEnter

; 1866 : 		{
; 1867 : 			simpleTextPrint = true;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 1

; 1868 : 			// no DoLineBreak()!
; 1869 : 		}
; 1870 : 		else

	jmp	SHORT $LN3@VisitEnter
$LN2@VisitEnter:

; 1871 : 		{
; 1872 : 			DoLineBreak();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoLineBreak@TiXmlPrinter@@AAEXXZ	; TiXmlPrinter::DoLineBreak
$LN3@VisitEnter:

; 1873 : 		}
; 1874 : 	}
; 1875 : 	++depth;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 1876 : 	return true;

	mov	al, 1

; 1877 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?VisitEnter@TiXmlPrinter@@UAE_NABVTiXmlElement@@PBVTiXmlAttribute@@@Z ENDP ; TiXmlPrinter::VisitEnter
_TEXT	ENDS
PUBLIC	??_C@_02DPNDACHE@?$DM?1?$AA@			; `string'
PUBLIC	?VisitExit@TiXmlPrinter@@UAE_NABVTiXmlElement@@@Z ; TiXmlPrinter::VisitExit
;	COMDAT ??_C@_02DPNDACHE@?$DM?1?$AA@
CONST	SEGMENT
??_C@_02DPNDACHE@?$DM?1?$AA@ DB '</', 00H		; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?VisitExit@TiXmlPrinter@@UAE_NABVTiXmlElement@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_element$ = 8						; size = 4
?VisitExit@TiXmlPrinter@@UAE_NABVTiXmlElement@@@Z PROC	; TiXmlPrinter::VisitExit, COMDAT
; _this$ = ecx

; 1881 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1882 : 	--depth;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], ecx

; 1883 : 	if ( !element.FirstChild() )

	mov	ecx, DWORD PTR _element$[ebp]
	call	?FirstChild@TiXmlNode@@QBEPBV1@XZ	; TiXmlNode::FirstChild
	test	eax, eax
	jne	SHORT $LN4@VisitExit

; 1884 : 	{
; 1885 : 		// nothing.
; 1886 : 	}
; 1887 : 	else

	jmp	SHORT $LN3@VisitExit
$LN4@VisitExit:

; 1888 : 	{
; 1889 : 		if ( simpleTextPrint )

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN2@VisitExit

; 1890 : 		{
; 1891 : 			simpleTextPrint = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 0

; 1892 : 		}
; 1893 : 		else

	jmp	SHORT $LN1@VisitExit
$LN2@VisitExit:

; 1894 : 		{
; 1895 : 			DoIndent();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoIndent@TiXmlPrinter@@AAEXXZ		; TiXmlPrinter::DoIndent
$LN1@VisitExit:

; 1896 : 		}
; 1897 : 		buffer += "</";

	push	OFFSET ??_C@_02DPNDACHE@?$DM?1?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=

; 1898 : 		buffer += element.Value();

	mov	ecx, DWORD PTR _element$[ebp]
	call	?Value@TiXmlNode@@QBEPBDXZ		; TiXmlNode::Value
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=

; 1899 : 		buffer += ">";

	push	OFFSET ??_C@_01PPODPGHN@?$DO?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=

; 1900 : 		DoLineBreak();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoLineBreak@TiXmlPrinter@@AAEXXZ	; TiXmlPrinter::DoLineBreak
$LN3@VisitExit:

; 1901 : 	}
; 1902 : 	return true;

	mov	al, 1

; 1903 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?VisitExit@TiXmlPrinter@@UAE_NABVTiXmlElement@@@Z ENDP	; TiXmlPrinter::VisitExit
_TEXT	ENDS
PUBLIC	?ValueTStr@TiXmlNode@@QBEABVTiXmlString@@XZ	; TiXmlNode::ValueTStr
PUBLIC	??_C@_03MCHNFBAC@?$FN?$FN?$DO?$AA@		; `string'
PUBLIC	??_C@_09BLLNCBLF@?$DM?$CB?$FLCDATA?$FL?$AA@	; `string'
PUBLIC	?Visit@TiXmlPrinter@@UAE_NABVTiXmlText@@@Z	; TiXmlPrinter::Visit
;	COMDAT ??_C@_03MCHNFBAC@?$FN?$FN?$DO?$AA@
CONST	SEGMENT
??_C@_03MCHNFBAC@?$FN?$FN?$DO?$AA@ DB ']]>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09BLLNCBLF@?$DM?$CB?$FLCDATA?$FL?$AA@
CONST	SEGMENT
??_C@_09BLLNCBLF@?$DM?$CB?$FLCDATA?$FL?$AA@ DB '<![CDATA[', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Visit@TiXmlPrinter@@UAE_NABVTiXmlText@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Visit@TiXmlPrinter@@UAE_NABVTiXmlText@@@Z$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Visit@TiXmlPrinter@@UAE_NABVTiXmlText@@@Z$1
__ehfuncinfo$?Visit@TiXmlPrinter@@UAE_NABVTiXmlText@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Visit@TiXmlPrinter@@UAE_NABVTiXmlText@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ?Visit@TiXmlPrinter@@UAE_NABVTiXmlText@@@Z
_TEXT	SEGMENT
_str$210262 = -44					; size = 4
_str$210260 = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_text$ = 8						; size = 4
?Visit@TiXmlPrinter@@UAE_NABVTiXmlText@@@Z PROC		; TiXmlPrinter::Visit, COMDAT
; _this$ = ecx

; 1907 : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Visit@TiXmlPrinter@@UAE_NABVTiXmlText@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1908 : 	if ( text.CDATA() )

	mov	ecx, DWORD PTR _text$[ebp]
	call	?CDATA@TiXmlText@@QBE_NXZ		; TiXmlText::CDATA
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN4@Visit

; 1909 : 	{
; 1910 : 		DoIndent();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoIndent@TiXmlPrinter@@AAEXXZ		; TiXmlPrinter::DoIndent

; 1911 : 		buffer += "<![CDATA[";

	push	OFFSET ??_C@_09BLLNCBLF@?$DM?$CB?$FLCDATA?$FL?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=

; 1912 : 		buffer += text.Value();

	mov	ecx, DWORD PTR _text$[ebp]
	call	?Value@TiXmlNode@@QBEPBDXZ		; TiXmlNode::Value
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=

; 1913 : 		buffer += "]]>";

	push	OFFSET ??_C@_03MCHNFBAC@?$FN?$FN?$DO?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=

; 1914 : 		DoLineBreak();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoLineBreak@TiXmlPrinter@@AAEXXZ	; TiXmlPrinter::DoLineBreak
	jmp	$LN3@Visit
$LN4@Visit:

; 1915 : 	}
; 1916 : 	else if ( simpleTextPrint )

	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN2@Visit

; 1917 : 	{
; 1918 : 		TIXML_STRING str;

	lea	ecx, DWORD PTR _str$210260[ebp]
	call	??0TiXmlString@@QAE@XZ			; TiXmlString::TiXmlString
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1919 : 		TiXmlBase::EncodeString( text.ValueTStr(), &str );

	lea	eax, DWORD PTR _str$210260[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?ValueTStr@TiXmlNode@@QBEABVTiXmlString@@XZ ; TiXmlNode::ValueTStr
	push	eax
	call	?EncodeString@TiXmlBase@@SAXABVTiXmlString@@PAV2@@Z ; TiXmlBase::EncodeString
	add	esp, 8

; 1920 : 		buffer += str;

	lea	eax, DWORD PTR _str$210260[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??YTiXmlString@@QAEAAV0@ABV0@@Z		; TiXmlString::operator+=

; 1921 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _str$210260[ebp]
	call	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString

; 1922 : 	else

	jmp	SHORT $LN3@Visit
$LN2@Visit:

; 1923 : 	{
; 1924 : 		DoIndent();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoIndent@TiXmlPrinter@@AAEXXZ		; TiXmlPrinter::DoIndent

; 1925 : 		TIXML_STRING str;

	lea	ecx, DWORD PTR _str$210262[ebp]
	call	??0TiXmlString@@QAE@XZ			; TiXmlString::TiXmlString
	mov	DWORD PTR __$EHRec$[ebp+8], 1

; 1926 : 		TiXmlBase::EncodeString( text.ValueTStr(), &str );

	lea	eax, DWORD PTR _str$210262[ebp]
	push	eax
	mov	ecx, DWORD PTR _text$[ebp]
	call	?ValueTStr@TiXmlNode@@QBEABVTiXmlString@@XZ ; TiXmlNode::ValueTStr
	push	eax
	call	?EncodeString@TiXmlBase@@SAXABVTiXmlString@@PAV2@@Z ; TiXmlBase::EncodeString
	add	esp, 8

; 1927 : 		buffer += str;

	lea	eax, DWORD PTR _str$210262[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??YTiXmlString@@QAEAAV0@ABV0@@Z		; TiXmlString::operator+=

; 1928 : 		DoLineBreak();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoLineBreak@TiXmlPrinter@@AAEXXZ	; TiXmlPrinter::DoLineBreak

; 1929 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _str$210262[ebp]
	call	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
$LN3@Visit:

; 1930 : 	return true;

	mov	al, 1

; 1931 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Visit
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN13@Visit:
	DD	2
	DD	$LN12@Visit
$LN12@Visit:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN9@Visit
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN10@Visit
$LN10@Visit:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN9@Visit:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Visit@TiXmlPrinter@@UAE_NABVTiXmlText@@@Z$0:
	lea	ecx, DWORD PTR _str$210260[ebp]
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__unwindfunclet$?Visit@TiXmlPrinter@@UAE_NABVTiXmlText@@@Z$1:
	lea	ecx, DWORD PTR _str$210262[ebp]
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__ehhandler$?Visit@TiXmlPrinter@@UAE_NABVTiXmlText@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Visit@TiXmlPrinter@@UAE_NABVTiXmlText@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?Visit@TiXmlPrinter@@UAE_NABVTiXmlText@@@Z ENDP		; TiXmlPrinter::Visit
PUBLIC	?Visit@TiXmlPrinter@@UAE_NABVTiXmlDeclaration@@@Z ; TiXmlPrinter::Visit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Visit@TiXmlPrinter@@UAE_NABVTiXmlDeclaration@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_declaration$ = 8					; size = 4
?Visit@TiXmlPrinter@@UAE_NABVTiXmlDeclaration@@@Z PROC	; TiXmlPrinter::Visit, COMDAT
; _this$ = ecx

; 1935 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1936 : 	DoIndent();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoIndent@TiXmlPrinter@@AAEXXZ		; TiXmlPrinter::DoIndent

; 1937 : 	declaration.Print( 0, 0, &buffer );

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	esi, esp
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _declaration$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _declaration$[ebp]
	mov	eax, DWORD PTR [edx+76]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1938 : 	DoLineBreak();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoLineBreak@TiXmlPrinter@@AAEXXZ	; TiXmlPrinter::DoLineBreak

; 1939 : 	return true;

	mov	al, 1

; 1940 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Visit@TiXmlPrinter@@UAE_NABVTiXmlDeclaration@@@Z ENDP	; TiXmlPrinter::Visit
_TEXT	ENDS
PUBLIC	??_C@_03PNLDJJMO@?9?9?$DO?$AA@			; `string'
PUBLIC	??_C@_04FFDNBKGC@?$DM?$CB?9?9?$AA@		; `string'
PUBLIC	?Visit@TiXmlPrinter@@UAE_NABVTiXmlComment@@@Z	; TiXmlPrinter::Visit
;	COMDAT ??_C@_03PNLDJJMO@?9?9?$DO?$AA@
CONST	SEGMENT
??_C@_03PNLDJJMO@?9?9?$DO?$AA@ DB '-->', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04FFDNBKGC@?$DM?$CB?9?9?$AA@
CONST	SEGMENT
??_C@_04FFDNBKGC@?$DM?$CB?9?9?$AA@ DB '<!--', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?Visit@TiXmlPrinter@@UAE_NABVTiXmlComment@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_comment$ = 8						; size = 4
?Visit@TiXmlPrinter@@UAE_NABVTiXmlComment@@@Z PROC	; TiXmlPrinter::Visit, COMDAT
; _this$ = ecx

; 1944 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1945 : 	DoIndent();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoIndent@TiXmlPrinter@@AAEXXZ		; TiXmlPrinter::DoIndent

; 1946 : 	buffer += "<!--";

	push	OFFSET ??_C@_04FFDNBKGC@?$DM?$CB?9?9?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=

; 1947 : 	buffer += comment.Value();

	mov	ecx, DWORD PTR _comment$[ebp]
	call	?Value@TiXmlNode@@QBEPBDXZ		; TiXmlNode::Value
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=

; 1948 : 	buffer += "-->";

	push	OFFSET ??_C@_03PNLDJJMO@?9?9?$DO?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=

; 1949 : 	DoLineBreak();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoLineBreak@TiXmlPrinter@@AAEXXZ	; TiXmlPrinter::DoLineBreak

; 1950 : 	return true;

	mov	al, 1

; 1951 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Visit@TiXmlPrinter@@UAE_NABVTiXmlComment@@@Z ENDP	; TiXmlPrinter::Visit
_TEXT	ENDS
PUBLIC	?Visit@TiXmlPrinter@@UAE_NABVTiXmlUnknown@@@Z	; TiXmlPrinter::Visit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Visit@TiXmlPrinter@@UAE_NABVTiXmlUnknown@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_unknown$ = 8						; size = 4
?Visit@TiXmlPrinter@@UAE_NABVTiXmlUnknown@@@Z PROC	; TiXmlPrinter::Visit, COMDAT
; _this$ = ecx

; 1955 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1956 : 	DoIndent();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoIndent@TiXmlPrinter@@AAEXXZ		; TiXmlPrinter::DoIndent

; 1957 : 	buffer += "<";

	push	OFFSET ??_C@_01MNNFJEPP@?$DM?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=

; 1958 : 	buffer += unknown.Value();

	mov	ecx, DWORD PTR _unknown$[ebp]
	call	?Value@TiXmlNode@@QBEPBDXZ		; TiXmlNode::Value
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=

; 1959 : 	buffer += ">";

	push	OFFSET ??_C@_01PPODPGHN@?$DO?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??YTiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator+=

; 1960 : 	DoLineBreak();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoLineBreak@TiXmlPrinter@@AAEXXZ	; TiXmlPrinter::DoLineBreak

; 1961 : 	return true;

	mov	al, 1

; 1962 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Visit@TiXmlPrinter@@UAE_NABVTiXmlUnknown@@@Z ENDP	; TiXmlPrinter::Visit
_TEXT	ENDS
PUBLIC	?Visit@TiXmlPrinter@@UAE_NABVTiXmlStylesheetReference@@@Z ; TiXmlPrinter::Visit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Visit@TiXmlPrinter@@UAE_NABVTiXmlStylesheetReference@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_stylesheet$ = 8					; size = 4
?Visit@TiXmlPrinter@@UAE_NABVTiXmlStylesheetReference@@@Z PROC ; TiXmlPrinter::Visit, COMDAT
; _this$ = ecx

; 1965 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1966 : 	    DoIndent();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoIndent@TiXmlPrinter@@AAEXXZ		; TiXmlPrinter::DoIndent

; 1967 : 	    stylesheet.Print( 0, 0, &buffer );

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	esi, esp
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _stylesheet$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _stylesheet$[ebp]
	mov	eax, DWORD PTR [edx+76]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1968 : 	    DoLineBreak();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?DoLineBreak@TiXmlPrinter@@AAEXXZ	; TiXmlPrinter::DoLineBreak

; 1969 : 	    return true;

	mov	al, 1

; 1970 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Visit@TiXmlPrinter@@UAE_NABVTiXmlStylesheetReference@@@Z ENDP ; TiXmlPrinter::Visit
_TEXT	ENDS
EXTRN	__vsnprintf_s:PROC
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\stdio.h
;	COMDAT ??$_snprintf_s@$0CA@@@YAHAAY0CA@DIPBDZZ
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Dest$ = 8						; size = 4
__MaxCount$ = 12					; size = 4
__Format$ = 16						; size = 4
??$_snprintf_s@$0CA@@@YAHAAY0CA@DIPBDZZ PROC		; _snprintf_s<32>, COMDAT

; 318  : __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2_ARGLIST(int, _snprintf_s, _vsnprintf_s, char, _Dest, _In_ size_t, _MaxCount, _In_z_ _Printf_format_string_ const char *,_Format)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Format$[ebp]
	push	ecx
	mov	edx, DWORD PTR __MaxCount$[ebp]
	push	edx
	push	32					; 00000020H
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	__vsnprintf_s
	add	esp, 20					; 00000014H
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_snprintf_s@$0CA@@@YAHAAY0CA@DIPBDZZ ENDP		; _snprintf_s<32>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_snprintf_s@$0EA@@@YAHAAY0EA@DIPBDZZ
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Dest$ = 8						; size = 4
__MaxCount$ = 12					; size = 4
__Format$ = 16						; size = 4
??$_snprintf_s@$0EA@@@YAHAAY0EA@DIPBDZZ PROC		; _snprintf_s<64>, COMDAT

; 318  : __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2_ARGLIST(int, _snprintf_s, _vsnprintf_s, char, _Dest, _In_ size_t, _MaxCount, _In_z_ _Printf_format_string_ const char *,_Format)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Format$[ebp]
	push	ecx
	mov	edx, DWORD PTR __MaxCount$[ebp]
	push	edx
	push	64					; 00000040H
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	__vsnprintf_s
	add	esp, 20					; 00000014H
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_snprintf_s@$0EA@@@YAHAAY0EA@DIPBDZZ ENDP		; _snprintf_s<64>
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??$_snprintf_s@$0BAA@@@YAHAAY0BAA@DIPBDZZ
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Dest$ = 8						; size = 4
__MaxCount$ = 12					; size = 4
__Format$ = 16						; size = 4
??$_snprintf_s@$0BAA@@@YAHAAY0BAA@DIPBDZZ PROC		; _snprintf_s<256>, COMDAT

; 318  : __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2_ARGLIST(int, _snprintf_s, _vsnprintf_s, char, _Dest, _In_ size_t, _MaxCount, _In_z_ _Printf_format_string_ const char *,_Format)

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Format$[ebp]
	push	ecx
	mov	edx, DWORD PTR __MaxCount$[ebp]
	push	edx
	push	256					; 00000100H
	mov	eax, DWORD PTR __Dest$[ebp]
	push	eax
	call	__vsnprintf_s
	add	esp, 20					; 00000014H
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_snprintf_s@$0BAA@@@YAHAAY0BAA@DIPBDZZ ENDP		; _snprintf_s<256>
_TEXT	ENDS
EXTRN	?nullrep_@TiXmlString@@0URep@1@A:BYTE		; TiXmlString::nullrep_
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\shared\tinyxml\tinystr.h
;	COMDAT ??0TiXmlString@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0TiXmlString@@QAE@XZ PROC				; TiXmlString::TiXmlString, COMDAT
; _this$ = ecx

; 79   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ?nullrep_@TiXmlString@@0URep@1@A ; TiXmlString::nullrep_

; 80   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??0TiXmlString@@QAE@XZ ENDP				; TiXmlString::TiXmlString
_TEXT	ENDS
PUBLIC	?start@TiXmlString@@ABEPADXZ			; TiXmlString::start
PUBLIC	?init@TiXmlString@@AAEXI@Z			; TiXmlString::init
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0TiXmlString@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??0TiXmlString@@QAE@PBD@Z PROC				; TiXmlString::TiXmlString, COMDAT
; _this$ = ecx

; 91   : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 92   : 		init( static_cast<size_type>( strlen(copy) ));

	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@TiXmlString@@AAEXI@Z		; TiXmlString::init

; 93   : 		memcpy(start(), copy, length());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@TiXmlString@@QBEIXZ		; TiXmlString::length
	push	eax
	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?start@TiXmlString@@ABEPADXZ		; TiXmlString::start
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 94   : 	}

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0TiXmlString@@QAE@PBD@Z ENDP				; TiXmlString::TiXmlString
_TEXT	ENDS
PUBLIC	?quit@TiXmlString@@AAEXXZ			; TiXmlString::quit
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1TiXmlString@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1TiXmlString@@QAE@XZ PROC				; TiXmlString::~TiXmlString, COMDAT
; _this$ = ecx

; 105  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 106  : 		quit();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?quit@TiXmlString@@AAEXXZ		; TiXmlString::quit

; 107  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1TiXmlString@@QAE@XZ ENDP				; TiXmlString::~TiXmlString
_TEXT	ENDS
EXTRN	?assign@TiXmlString@@QAEAAV1@PBDI@Z:PROC	; TiXmlString::assign
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4TiXmlString@@QAEAAV0@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??4TiXmlString@@QAEAAV0@PBD@Z PROC			; TiXmlString::operator=, COMDAT
; _this$ = ecx

; 111  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 112  : 		return assign( copy, (size_type)strlen(copy));

	mov	eax, DWORD PTR _copy$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _copy$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@TiXmlString@@QAEAAV1@PBDI@Z	; TiXmlString::assign

; 113  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4TiXmlString@@QAEAAV0@PBD@Z ENDP			; TiXmlString::operator=
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??4TiXmlString@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_copy$ = 8						; size = 4
??4TiXmlString@@QAEAAV0@ABV0@@Z PROC			; TiXmlString::operator=, COMDAT
; _this$ = ecx

; 117  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 118  : 		return assign(copy.start(), copy.length());

	mov	ecx, DWORD PTR _copy$[ebp]
	call	?length@TiXmlString@@QBEIXZ		; TiXmlString::length
	push	eax
	mov	ecx, DWORD PTR _copy$[ebp]
	call	?start@TiXmlString@@ABEPADXZ		; TiXmlString::start
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@TiXmlString@@QAEAAV1@PBDI@Z	; TiXmlString::assign

; 119  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4TiXmlString@@QAEAAV0@ABV0@@Z ENDP			; TiXmlString::operator=
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??YTiXmlString@@QAEAAV0@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_suffix$ = 8						; size = 4
??YTiXmlString@@QAEAAV0@PBD@Z PROC			; TiXmlString::operator+=, COMDAT
; _this$ = ecx

; 124  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 125  : 		return append(suffix, static_cast<size_type>( strlen(suffix) ));

	mov	eax, DWORD PTR _suffix$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _suffix$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@TiXmlString@@QAEAAV1@PBDI@Z	; TiXmlString::append

; 126  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YTiXmlString@@QAEAAV0@PBD@Z ENDP			; TiXmlString::operator+=
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??YTiXmlString@@QAEAAV0@D@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_single$ = 8						; size = 1
??YTiXmlString@@QAEAAV0@D@Z PROC			; TiXmlString::operator+=, COMDAT
; _this$ = ecx

; 130  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 131  : 		return append(&single, 1);

	push	1
	lea	eax, DWORD PTR _single$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@TiXmlString@@QAEAAV1@PBDI@Z	; TiXmlString::append

; 132  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YTiXmlString@@QAEAAV0@D@Z ENDP			; TiXmlString::operator+=
_TEXT	ENDS
PUBLIC	?data@TiXmlString@@QBEPBDXZ			; TiXmlString::data
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??YTiXmlString@@QAEAAV0@ABV0@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_suffix$ = 8						; size = 4
??YTiXmlString@@QAEAAV0@ABV0@@Z PROC			; TiXmlString::operator+=, COMDAT
; _this$ = ecx

; 136  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 137  : 		return append(suffix.data(), suffix.length());

	mov	ecx, DWORD PTR _suffix$[ebp]
	call	?length@TiXmlString@@QBEIXZ		; TiXmlString::length
	push	eax
	mov	ecx, DWORD PTR _suffix$[ebp]
	call	?data@TiXmlString@@QBEPBDXZ		; TiXmlString::data
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?append@TiXmlString@@QAEAAV1@PBDI@Z	; TiXmlString::append

; 138  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??YTiXmlString@@QAEAAV0@ABV0@@Z ENDP			; TiXmlString::operator+=
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?c_str@TiXmlString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?c_str@TiXmlString@@QBEPBDXZ PROC			; TiXmlString::c_str, COMDAT
; _this$ = ecx

; 142  : 	const char * c_str () const { return rep_->str; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	add	eax, 8
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?c_str@TiXmlString@@QBEPBDXZ ENDP			; TiXmlString::c_str
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?data@TiXmlString@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?data@TiXmlString@@QBEPBDXZ PROC			; TiXmlString::data, COMDAT
; _this$ = ecx

; 145  : 	const char * data () const { return rep_->str; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	add	eax, 8
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?data@TiXmlString@@QBEPBDXZ ENDP			; TiXmlString::data
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?length@TiXmlString@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?length@TiXmlString@@QBEIXZ PROC			; TiXmlString::length, COMDAT
; _this$ = ecx

; 148  : 	size_type length () const { return rep_->size; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?length@TiXmlString@@QBEIXZ ENDP			; TiXmlString::length
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?empty@TiXmlString@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?empty@TiXmlString@@QBE_NXZ PROC			; TiXmlString::empty, COMDAT
; _this$ = ecx

; 154  : 	bool empty () const { return rep_->size == 0; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	xor	eax, eax
	cmp	DWORD PTR [ecx], 0
	sete	al
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?empty@TiXmlString@@QBE_NXZ ENDP			; TiXmlString::empty
_TEXT	ENDS
PUBLIC	??_C@_1CC@PEHEJHGC@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DM?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1GA@NDDFGJPM@?$AAd?$AA?3?$AA?2?$AAv?$AAi?$AAc?$AAe?$AA?9?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAs?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs?$AAh?$AAa?$AAr?$AAe?$AAd?$AA?2?$AAt?$AAi@ ; `string'
;	COMDAT ??_C@_1CC@PEHEJHGC@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DM?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@PEHEJHGC@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DM?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?$AA@ DB 'i'
	DB	00H, 'n', 00H, 'd', 00H, 'e', 00H, 'x', 00H, ' ', 00H, '<', 00H
	DB	' ', 00H, 'l', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h'
	DB	00H, '(', 00H, ')', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1GA@NDDFGJPM@?$AAd?$AA?3?$AA?2?$AAv?$AAi?$AAc?$AAe?$AA?9?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAs?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs?$AAh?$AAa?$AAr?$AAe?$AAd?$AA?2?$AAt?$AAi@
CONST	SEGMENT
??_C@_1GA@NDDFGJPM@?$AAd?$AA?3?$AA?2?$AAv?$AAi?$AAc?$AAe?$AA?9?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAs?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs?$AAh?$AAa?$AAr?$AAe?$AAd?$AA?2?$AAt?$AAi@ DB 'd'
	DB	00H, ':', 00H, '\', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	'-', 00H, 'p', 00H, 'l', 00H, 'a', 00H, 'y', 00H, 'e', 00H, 'r'
	DB	00H, 's', 00H, '-', 00H, 'm', 00H, 'a', 00H, 's', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, '\', 00H, 's', 00H, 'h', 00H, 'a', 00H, 'r'
	DB	00H, 'e', 00H, 'd', 00H, '\', 00H, 't', 00H, 'i', 00H, 'n', 00H
	DB	'y', 00H, 'x', 00H, 'm', 00H, 'l', 00H, '\', 00H, 't', 00H, 'i'
	DB	00H, 'n', 00H, 'y', 00H, 's', 00H, 't', 00H, 'r', 00H, '.', 00H
	DB	'h', 00H, 00H, 00H				; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??ATiXmlString@@QBEAADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_index$ = 8						; size = 4
??ATiXmlString@@QBEAADI@Z PROC				; TiXmlString::operator[], COMDAT
; _this$ = ecx

; 169  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 170  : 		assert( index < length() );

	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@TiXmlString@@QBEIXZ		; TiXmlString::length
	cmp	DWORD PTR _index$[ebp], eax
	jb	SHORT $LN3@operator
	push	170					; 000000aaH
	push	OFFSET ??_C@_1GA@NDDFGJPM@?$AAd?$AA?3?$AA?2?$AAv?$AAi?$AAc?$AAe?$AA?9?$AAp?$AAl?$AAa?$AAy?$AAe?$AAr?$AAs?$AA?9?$AAm?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?2?$AAs?$AAh?$AAa?$AAr?$AAe?$AAd?$AA?2?$AAt?$AAi@
	push	OFFSET ??_C@_1CC@PEHEJHGC@?$AAi?$AAn?$AAd?$AAe?$AAx?$AA?5?$AA?$DM?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$CI?$AA?$CJ?$AA?$AA@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN3@operator:

; 171  : 		return rep_->str[ index ];

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _index$[ebp]
	lea	eax, DWORD PTR [ecx+edx+8]

; 172  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??ATiXmlString@@QBEAADI@Z ENDP				; TiXmlString::operator[]
_TEXT	ENDS
PUBLIC	?find@TiXmlString@@QBEIDI@Z			; TiXmlString::find
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?find@TiXmlString@@QBEID@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_lookup$ = 8						; size = 1
?find@TiXmlString@@QBEID@Z PROC				; TiXmlString::find, COMDAT
; _this$ = ecx

; 176  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 177  : 		return find(lookup, 0);

	push	0
	movzx	eax, BYTE PTR _lookup$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?find@TiXmlString@@QBEIDI@Z		; TiXmlString::find

; 178  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?find@TiXmlString@@QBEID@Z ENDP				; TiXmlString::find
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?find@TiXmlString@@QBEIDI@Z
_TEXT	SEGMENT
_p$193253 = -20						; size = 4
_this$ = -8						; size = 4
_tofind$ = 8						; size = 1
_offset$ = 12						; size = 4
?find@TiXmlString@@QBEIDI@Z PROC			; TiXmlString::find, COMDAT
; _this$ = ecx

; 182  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 183  : 		if (offset >= length()) return npos;

	mov	ecx, DWORD PTR _this$[ebp]
	call	?length@TiXmlString@@QBEIXZ		; TiXmlString::length
	cmp	DWORD PTR _offset$[ebp], eax
	jb	SHORT $LN5@find
	mov	eax, DWORD PTR ?npos@TiXmlString@@2IB	; TiXmlString::npos
	jmp	SHORT $LN6@find
$LN5@find:

; 184  : 
; 185  : 		for (const char* p = c_str() + offset; *p != '\0'; ++p)

	mov	ecx, DWORD PTR _this$[ebp]
	call	?c_str@TiXmlString@@QBEPBDXZ		; TiXmlString::c_str
	add	eax, DWORD PTR _offset$[ebp]
	mov	DWORD PTR _p$193253[ebp], eax
	jmp	SHORT $LN4@find
$LN3@find:
	mov	eax, DWORD PTR _p$193253[ebp]
	add	eax, 1
	mov	DWORD PTR _p$193253[ebp], eax
$LN4@find:
	mov	eax, DWORD PTR _p$193253[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN2@find

; 186  : 		{
; 187  : 		   if (*p == tofind) return static_cast< size_type >( p - c_str() );

	mov	eax, DWORD PTR _p$193253[ebp]
	movsx	ecx, BYTE PTR [eax]
	movsx	edx, BYTE PTR _tofind$[ebp]
	cmp	ecx, edx
	jne	SHORT $LN1@find
	mov	ecx, DWORD PTR _this$[ebp]
	call	?c_str@TiXmlString@@QBEPBDXZ		; TiXmlString::c_str
	mov	ecx, DWORD PTR _p$193253[ebp]
	sub	ecx, eax
	mov	eax, ecx
	jmp	SHORT $LN6@find
$LN1@find:

; 188  : 		}

	jmp	SHORT $LN3@find
$LN2@find:

; 189  : 		return npos;

	mov	eax, DWORD PTR ?npos@TiXmlString@@2IB	; TiXmlString::npos
$LN6@find:

; 190  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?find@TiXmlString@@QBEIDI@Z ENDP			; TiXmlString::find
_TEXT	ENDS
PUBLIC	?init@TiXmlString@@AAEXII@Z			; TiXmlString::init
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?init@TiXmlString@@AAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_sz$ = 8						; size = 4
?init@TiXmlString@@AAEXI@Z PROC				; TiXmlString::init, COMDAT
; _this$ = ecx

; 220  : 	void init(size_type sz) { init(sz, sz); }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _sz$[ebp]
	push	eax
	mov	ecx, DWORD PTR _sz$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?init@TiXmlString@@AAEXII@Z		; TiXmlString::init
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?init@TiXmlString@@AAEXI@Z ENDP				; TiXmlString::init
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?start@TiXmlString@@ABEPADXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?start@TiXmlString@@ABEPADXZ PROC			; TiXmlString::start, COMDAT
; _this$ = ecx

; 222  : 	char* start() const { return rep_->str; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	add	eax, 8
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?start@TiXmlString@@ABEPADXZ ENDP			; TiXmlString::start
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?init@TiXmlString@@AAEXII@Z
_TEXT	SEGMENT
$T211301 = -236						; size = 4
_intsNeeded$193277 = -32				; size = 4
_bytesNeeded$193275 = -20				; size = 4
_this$ = -8						; size = 4
_sz$ = 8						; size = 4
_cap$ = 12						; size = 4
?init@TiXmlString@@AAEXII@Z PROC			; TiXmlString::init, COMDAT
; _this$ = ecx

; 232  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 233  : 		if (cap)

	cmp	DWORD PTR _cap$[ebp], 0
	je	SHORT $LN2@init

; 234  : 		{
; 235  : 			// Lee: the original form:
; 236  : 			//	rep_ = static_cast<Rep*>(operator new(sizeof(Rep) + cap));
; 237  : 			// doesn't work in some cases of new being overloaded. Switching
; 238  : 			// to the normal allocation, although use an 'int' for systems
; 239  : 			// that are overly picky about structure alignment.
; 240  : 			const size_type bytesNeeded = sizeof(Rep) + cap;

	mov	eax, DWORD PTR _cap$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _bytesNeeded$193275[ebp], eax

; 241  : 			const size_type intsNeeded = ( bytesNeeded + sizeof(int) - 1 ) / sizeof( int ); 

	mov	eax, DWORD PTR _bytesNeeded$193275[ebp]
	add	eax, 3
	shr	eax, 2
	mov	DWORD PTR _intsNeeded$193277[ebp], eax

; 242  : 			rep_ = reinterpret_cast<Rep*>( new int[ intsNeeded ] );

	xor	ecx, ecx
	mov	eax, DWORD PTR _intsNeeded$193277[ebp]
	mov	edx, 4
	mul	edx
	seto	cl
	neg	ecx
	or	ecx, eax
	push	ecx
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T211301[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR $T211301[ebp]
	mov	DWORD PTR [eax], ecx

; 243  : 
; 244  : 			rep_->str[ rep_->size = sz ] = '\0';

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _sz$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _sz$[ebp]
	mov	BYTE PTR [ecx+edx+8], 0

; 245  : 			rep_->capacity = cap;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _cap$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 246  : 		}
; 247  : 		else

	jmp	SHORT $LN3@init
$LN2@init:

; 248  : 		{
; 249  : 			rep_ = &nullrep_;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ?nullrep_@TiXmlString@@0URep@1@A ; TiXmlString::nullrep_
$LN3@init:

; 250  : 		}
; 251  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?init@TiXmlString@@AAEXII@Z ENDP			; TiXmlString::init
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?quit@TiXmlString@@AAEXXZ
_TEXT	SEGMENT
$T211304 = -212						; size = 4
_this$ = -8						; size = 4
?quit@TiXmlString@@AAEXXZ PROC				; TiXmlString::quit, COMDAT
; _this$ = ecx

; 254  : 	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 255  : 		if (rep_ != &nullrep_)

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], OFFSET ?nullrep_@TiXmlString@@0URep@1@A ; TiXmlString::nullrep_
	je	SHORT $LN2@quit

; 256  : 		{
; 257  : 			// The rep_ is really an array of ints. (see the allocator, above).
; 258  : 			// Cast it back before delete, so the compiler won't incorrectly call destructors.
; 259  : 			delete [] ( reinterpret_cast<int*>( rep_ ) );

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T211304[ebp], ecx
	mov	edx, DWORD PTR $T211304[ebp]
	push	edx
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN2@quit:

; 260  : 		}
; 261  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?quit@TiXmlString@@AAEXXZ ENDP				; TiXmlString::quit
; Function compile flags: /Odtp /RTCsu /ZI
; File d:\vice-players-master\shared\tinyxml\tinyxml.h
_TEXT	ENDS
;	COMDAT ??0TiXmlCursor@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0TiXmlCursor@@QAE@XZ PROC				; TiXmlCursor::TiXmlCursor, COMDAT
; _this$ = ecx

; 110  : 	TiXmlCursor()		{ Clear(); }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Clear@TiXmlCursor@@QAEXXZ		; TiXmlCursor::Clear
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0TiXmlCursor@@QAE@XZ ENDP				; TiXmlCursor::TiXmlCursor
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?Clear@TiXmlCursor@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Clear@TiXmlCursor@@QAEXXZ PROC				; TiXmlCursor::Clear, COMDAT
; _this$ = ecx

; 111  : 	void Clear()		{ row = col = -1; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], -1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], -1
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Clear@TiXmlCursor@@QAEXXZ ENDP				; TiXmlCursor::Clear
_TEXT	ENDS
PUBLIC	??_7TiXmlBase@@6B@				; TiXmlBase::`vftable'
PUBLIC	??_R4TiXmlBase@@6B@				; TiXmlBase::`RTTI Complete Object Locator'
EXTRN	??_ETiXmlBase@@UAEPAXI@Z:PROC			; TiXmlBase::`vector deleting destructor'
;	COMDAT ??_R4TiXmlBase@@6B@
rdata$r	SEGMENT
??_R4TiXmlBase@@6B@ DD 00H				; TiXmlBase::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTiXmlBase@@@8
	DD	FLAT:??_R3TiXmlBase@@8
rdata$r	ENDS
;	COMDAT ??_7TiXmlBase@@6B@
CONST	SEGMENT
??_7TiXmlBase@@6B@ DD FLAT:??_R4TiXmlBase@@6B@		; TiXmlBase::`vftable'
	DD	FLAT:??_ETiXmlBase@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0TiXmlBase@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0TiXmlBase@@QAE@XZ PROC				; TiXmlBase::TiXmlBase, COMDAT
; _this$ = ecx

; 216  : 	TiXmlBase()	:	userData(0)		{}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TiXmlBase@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0TiXmlCursor@@QAE@XZ			; TiXmlCursor::TiXmlCursor
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0TiXmlBase@@QAE@XZ ENDP				; TiXmlBase::TiXmlBase
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1TiXmlBase@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1TiXmlBase@@UAE@XZ PROC				; TiXmlBase::~TiXmlBase, COMDAT
; _this$ = ecx

; 217  : 	virtual ~TiXmlBase()			{}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TiXmlBase@@6B@
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1TiXmlBase@@UAE@XZ ENDP				; TiXmlBase::~TiXmlBase
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GTiXmlBase@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GTiXmlBase@@UAEPAXI@Z PROC				; TiXmlBase::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TiXmlBase@@UAE@XZ			; TiXmlBase::~TiXmlBase
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@3
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@3:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GTiXmlBase@@UAEPAXI@Z ENDP				; TiXmlBase::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?Value@TiXmlNode@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Value@TiXmlNode@@QBEPBDXZ PROC				; TiXmlNode::Value, COMDAT
; _this$ = ecx

; 503  : 	const char *Value() const { return value.c_str (); }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	?c_str@TiXmlString@@QBEPBDXZ		; TiXmlString::c_str
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Value@TiXmlNode@@QBEPBDXZ ENDP				; TiXmlNode::Value
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ValueTStr@TiXmlNode@@QBEABVTiXmlString@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ValueTStr@TiXmlNode@@QBEABVTiXmlString@@XZ PROC	; TiXmlNode::ValueTStr, COMDAT
; _this$ = ecx

; 513  : 	const TIXML_STRING& ValueTStr() const { return value; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 32					; 00000020H
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ValueTStr@TiXmlNode@@QBEABVTiXmlString@@XZ ENDP	; TiXmlNode::ValueTStr
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetValue@TiXmlNode@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__value$ = 8						; size = 4
?SetValue@TiXmlNode@@QAEXPBD@Z PROC			; TiXmlNode::SetValue, COMDAT
; _this$ = ecx

; 524  : 	void SetValue(const char * _value) { value = _value;}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 32					; 00000020H
	call	??4TiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator=
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetValue@TiXmlNode@@QAEXPBD@Z ENDP			; TiXmlNode::SetValue
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?FirstChild@TiXmlNode@@QBEPBV1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?FirstChild@TiXmlNode@@QBEPBV1@XZ PROC			; TiXmlNode::FirstChild, COMDAT
; _this$ = ecx

; 538  : 	const TiXmlNode* FirstChild()	const		{ return firstChild; }	///< The first child of this node. Will be null if there are no children.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?FirstChild@TiXmlNode@@QBEPBV1@XZ ENDP			; TiXmlNode::FirstChild
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?FirstChild@TiXmlNode@@QAEPAV1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?FirstChild@TiXmlNode@@QAEPAV1@XZ PROC			; TiXmlNode::FirstChild, COMDAT
; _this$ = ecx

; 539  : 	TiXmlNode* FirstChild()						{ return firstChild; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+24]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?FirstChild@TiXmlNode@@QAEPAV1@XZ ENDP			; TiXmlNode::FirstChild
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?FirstChild@TiXmlNode@@QAEPAV1@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__value$ = 8						; size = 4
?FirstChild@TiXmlNode@@QAEPAV1@PBD@Z PROC		; TiXmlNode::FirstChild, COMDAT
; _this$ = ecx

; 542  : 	TiXmlNode* FirstChild( const char * _value ) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 543  : 		// Call through to the const version - safe since nothing is changed. Exiting syntax: cast this to a const (always safe)
; 544  : 		// call the method, cast the return back to non-const.
; 545  : 		return const_cast< TiXmlNode* > ((const_cast< const TiXmlNode* >(this))->FirstChild( _value ));

	mov	eax, DWORD PTR __value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FirstChild@TiXmlNode@@QBEPBV1@PBD@Z	; TiXmlNode::FirstChild

; 546  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?FirstChild@TiXmlNode@@QAEPAV1@PBD@Z ENDP		; TiXmlNode::FirstChild
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?LastChild@TiXmlNode@@QBEPBV1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?LastChild@TiXmlNode@@QBEPBV1@XZ PROC			; TiXmlNode::LastChild, COMDAT
; _this$ = ecx

; 547  : 	const TiXmlNode* LastChild() const	{ return lastChild; }		/// The last child of this node. Will be null if there are no children.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+28]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?LastChild@TiXmlNode@@QBEPBV1@XZ ENDP			; TiXmlNode::LastChild
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?NextSibling@TiXmlNode@@QBEPBV1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?NextSibling@TiXmlNode@@QBEPBV1@XZ PROC			; TiXmlNode::NextSibling, COMDAT
; _this$ = ecx

; 647  : 	const TiXmlNode* NextSibling() const				{ return next; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+40]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?NextSibling@TiXmlNode@@QBEPBV1@XZ ENDP			; TiXmlNode::NextSibling
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?NextSibling@TiXmlNode@@QAEPAV1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?NextSibling@TiXmlNode@@QAEPAV1@XZ PROC			; TiXmlNode::NextSibling, COMDAT
; _this$ = ecx

; 648  : 	TiXmlNode* NextSibling()							{ return next; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+40]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?NextSibling@TiXmlNode@@QAEPAV1@XZ ENDP			; TiXmlNode::NextSibling
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?NextSibling@TiXmlNode@@QAEPAV1@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__next$ = 8						; size = 4
?NextSibling@TiXmlNode@@QAEPAV1@PBD@Z PROC		; TiXmlNode::NextSibling, COMDAT
; _this$ = ecx

; 652  : 	TiXmlNode* NextSibling( const char* _next ) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 653  : 		return const_cast< TiXmlNode* >( (const_cast< const TiXmlNode* >(this))->NextSibling( _next ) );

	mov	eax, DWORD PTR __next$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NextSibling@TiXmlNode@@QBEPBV1@PBD@Z	; TiXmlNode::NextSibling

; 654  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?NextSibling@TiXmlNode@@QAEPAV1@PBD@Z ENDP		; TiXmlNode::NextSibling
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?NextSiblingElement@TiXmlNode@@QAEPAVTiXmlElement@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?NextSiblingElement@TiXmlNode@@QAEPAVTiXmlElement@@XZ PROC ; TiXmlNode::NextSiblingElement, COMDAT
; _this$ = ecx

; 661  : 	TiXmlElement* NextSiblingElement() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 662  : 		return const_cast< TiXmlElement* >( (const_cast< const TiXmlNode* >(this))->NextSiblingElement() );

	mov	ecx, DWORD PTR _this$[ebp]
	call	?NextSiblingElement@TiXmlNode@@QBEPBVTiXmlElement@@XZ ; TiXmlNode::NextSiblingElement

; 663  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?NextSiblingElement@TiXmlNode@@QAEPAVTiXmlElement@@XZ ENDP ; TiXmlNode::NextSiblingElement
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?NextSiblingElement@TiXmlNode@@QAEPAVTiXmlElement@@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__next$ = 8						; size = 4
?NextSiblingElement@TiXmlNode@@QAEPAVTiXmlElement@@PBD@Z PROC ; TiXmlNode::NextSiblingElement, COMDAT
; _this$ = ecx

; 670  : 	TiXmlElement* NextSiblingElement( const char *_next ) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 671  : 		return const_cast< TiXmlElement* >( (const_cast< const TiXmlNode* >(this))->NextSiblingElement( _next ) );

	mov	eax, DWORD PTR __next$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?NextSiblingElement@TiXmlNode@@QBEPBVTiXmlElement@@PBD@Z ; TiXmlNode::NextSiblingElement

; 672  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?NextSiblingElement@TiXmlNode@@QAEPAVTiXmlElement@@PBD@Z ENDP ; TiXmlNode::NextSiblingElement
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?FirstChildElement@TiXmlNode@@QAEPAVTiXmlElement@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?FirstChildElement@TiXmlNode@@QAEPAVTiXmlElement@@XZ PROC ; TiXmlNode::FirstChildElement, COMDAT
; _this$ = ecx

; 681  : 	TiXmlElement* FirstChildElement() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 682  : 		return const_cast< TiXmlElement* >( (const_cast< const TiXmlNode* >(this))->FirstChildElement() );

	mov	ecx, DWORD PTR _this$[ebp]
	call	?FirstChildElement@TiXmlNode@@QBEPBVTiXmlElement@@XZ ; TiXmlNode::FirstChildElement

; 683  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?FirstChildElement@TiXmlNode@@QAEPAVTiXmlElement@@XZ ENDP ; TiXmlNode::FirstChildElement
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?FirstChildElement@TiXmlNode@@QAEPAVTiXmlElement@@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__value$ = 8						; size = 4
?FirstChildElement@TiXmlNode@@QAEPAVTiXmlElement@@PBD@Z PROC ; TiXmlNode::FirstChildElement, COMDAT
; _this$ = ecx

; 687  : 	TiXmlElement* FirstChildElement( const char * _value ) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 688  : 		return const_cast< TiXmlElement* >( (const_cast< const TiXmlNode* >(this))->FirstChildElement( _value ) );

	mov	eax, DWORD PTR __value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?FirstChildElement@TiXmlNode@@QBEPBVTiXmlElement@@PBD@Z ; TiXmlNode::FirstChildElement

; 689  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?FirstChildElement@TiXmlNode@@QAEPAVTiXmlElement@@PBD@Z ENDP ; TiXmlNode::FirstChildElement
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?Type@TiXmlNode@@QBEHXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Type@TiXmlNode@@QBEHXZ PROC				; TiXmlNode::Type, COMDAT
; _this$ = ecx

; 700  : 	int Type() const	{ return type; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Type@TiXmlNode@@QBEHXZ ENDP				; TiXmlNode::Type
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?GetDocument@TiXmlNode@@QAEPAVTiXmlDocument@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetDocument@TiXmlNode@@QAEPAVTiXmlDocument@@XZ PROC	; TiXmlNode::GetDocument, COMDAT
; _this$ = ecx

; 706  : 	TiXmlDocument* GetDocument() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 707  : 		return const_cast< TiXmlDocument* >( (const_cast< const TiXmlNode* >(this))->GetDocument() );

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetDocument@TiXmlNode@@QBEPBVTiXmlDocument@@XZ ; TiXmlNode::GetDocument

; 708  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?GetDocument@TiXmlNode@@QAEPAVTiXmlDocument@@XZ ENDP	; TiXmlNode::GetDocument
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ToDocument@TiXmlNode@@UBEPBVTiXmlDocument@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToDocument@TiXmlNode@@UBEPBVTiXmlDocument@@XZ PROC	; TiXmlNode::ToDocument, COMDAT
; _this$ = ecx

; 713  : 	virtual const TiXmlDocument*    ToDocument()    const { return 0; } ///< Cast to a more defined type. Will return null if not of the requested type.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ToDocument@TiXmlNode@@UBEPBVTiXmlDocument@@XZ ENDP	; TiXmlNode::ToDocument
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ToElement@TiXmlNode@@UBEPBVTiXmlElement@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToElement@TiXmlNode@@UBEPBVTiXmlElement@@XZ PROC	; TiXmlNode::ToElement, COMDAT
; _this$ = ecx

; 714  : 	virtual const TiXmlElement*     ToElement()     const { return 0; } ///< Cast to a more defined type. Will return null if not of the requested type.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ToElement@TiXmlNode@@UBEPBVTiXmlElement@@XZ ENDP	; TiXmlNode::ToElement
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ToComment@TiXmlNode@@UBEPBVTiXmlComment@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToComment@TiXmlNode@@UBEPBVTiXmlComment@@XZ PROC	; TiXmlNode::ToComment, COMDAT
; _this$ = ecx

; 715  : 	virtual const TiXmlComment*     ToComment()     const { return 0; } ///< Cast to a more defined type. Will return null if not of the requested type.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ToComment@TiXmlNode@@UBEPBVTiXmlComment@@XZ ENDP	; TiXmlNode::ToComment
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ToUnknown@TiXmlNode@@UBEPBVTiXmlUnknown@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToUnknown@TiXmlNode@@UBEPBVTiXmlUnknown@@XZ PROC	; TiXmlNode::ToUnknown, COMDAT
; _this$ = ecx

; 716  : 	virtual const TiXmlUnknown*     ToUnknown()     const { return 0; } ///< Cast to a more defined type. Will return null if not of the requested type.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ToUnknown@TiXmlNode@@UBEPBVTiXmlUnknown@@XZ ENDP	; TiXmlNode::ToUnknown
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ToText@TiXmlNode@@UBEPBVTiXmlText@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToText@TiXmlNode@@UBEPBVTiXmlText@@XZ PROC		; TiXmlNode::ToText, COMDAT
; _this$ = ecx

; 717  : 	virtual const TiXmlText*        ToText()        const { return 0; } ///< Cast to a more defined type. Will return null if not of the requested type.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ToText@TiXmlNode@@UBEPBVTiXmlText@@XZ ENDP		; TiXmlNode::ToText
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ToDeclaration@TiXmlNode@@UBEPBVTiXmlDeclaration@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToDeclaration@TiXmlNode@@UBEPBVTiXmlDeclaration@@XZ PROC ; TiXmlNode::ToDeclaration, COMDAT
; _this$ = ecx

; 718  : 	virtual const TiXmlDeclaration* ToDeclaration() const { return 0; } ///< Cast to a more defined type. Will return null if not of the requested type.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ToDeclaration@TiXmlNode@@UBEPBVTiXmlDeclaration@@XZ ENDP ; TiXmlNode::ToDeclaration
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ToStylesheetReference@TiXmlNode@@UBEPBVTiXmlStylesheetReference@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToStylesheetReference@TiXmlNode@@UBEPBVTiXmlStylesheetReference@@XZ PROC ; TiXmlNode::ToStylesheetReference, COMDAT
; _this$ = ecx

; 719  : 	virtual const TiXmlStylesheetReference* ToStylesheetReference() const { return 0; } ///< Cast to a more defined type. Will return null if not of the requested type.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ToStylesheetReference@TiXmlNode@@UBEPBVTiXmlStylesheetReference@@XZ ENDP ; TiXmlNode::ToStylesheetReference
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ToDocument@TiXmlNode@@UAEPAVTiXmlDocument@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToDocument@TiXmlNode@@UAEPAVTiXmlDocument@@XZ PROC	; TiXmlNode::ToDocument, COMDAT
; _this$ = ecx

; 721  : 	virtual TiXmlDocument*          ToDocument()    { return 0; } ///< Cast to a more defined type. Will return null if not of the requested type.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ToDocument@TiXmlNode@@UAEPAVTiXmlDocument@@XZ ENDP	; TiXmlNode::ToDocument
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ToElement@TiXmlNode@@UAEPAVTiXmlElement@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToElement@TiXmlNode@@UAEPAVTiXmlElement@@XZ PROC	; TiXmlNode::ToElement, COMDAT
; _this$ = ecx

; 722  : 	virtual TiXmlElement*           ToElement()	    { return 0; } ///< Cast to a more defined type. Will return null if not of the requested type.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ToElement@TiXmlNode@@UAEPAVTiXmlElement@@XZ ENDP	; TiXmlNode::ToElement
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ToComment@TiXmlNode@@UAEPAVTiXmlComment@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToComment@TiXmlNode@@UAEPAVTiXmlComment@@XZ PROC	; TiXmlNode::ToComment, COMDAT
; _this$ = ecx

; 723  : 	virtual TiXmlComment*           ToComment()     { return 0; } ///< Cast to a more defined type. Will return null if not of the requested type.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ToComment@TiXmlNode@@UAEPAVTiXmlComment@@XZ ENDP	; TiXmlNode::ToComment
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ToUnknown@TiXmlNode@@UAEPAVTiXmlUnknown@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToUnknown@TiXmlNode@@UAEPAVTiXmlUnknown@@XZ PROC	; TiXmlNode::ToUnknown, COMDAT
; _this$ = ecx

; 724  : 	virtual TiXmlUnknown*           ToUnknown()	    { return 0; } ///< Cast to a more defined type. Will return null if not of the requested type.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ToUnknown@TiXmlNode@@UAEPAVTiXmlUnknown@@XZ ENDP	; TiXmlNode::ToUnknown
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ToText@TiXmlNode@@UAEPAVTiXmlText@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToText@TiXmlNode@@UAEPAVTiXmlText@@XZ PROC		; TiXmlNode::ToText, COMDAT
; _this$ = ecx

; 725  : 	virtual TiXmlText*	            ToText()        { return 0; } ///< Cast to a more defined type. Will return null if not of the requested type.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ToText@TiXmlNode@@UAEPAVTiXmlText@@XZ ENDP		; TiXmlNode::ToText
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ToDeclaration@TiXmlNode@@UAEPAVTiXmlDeclaration@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToDeclaration@TiXmlNode@@UAEPAVTiXmlDeclaration@@XZ PROC ; TiXmlNode::ToDeclaration, COMDAT
; _this$ = ecx

; 726  : 	virtual TiXmlDeclaration*       ToDeclaration() { return 0; } ///< Cast to a more defined type. Will return null if not of the requested type.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ToDeclaration@TiXmlNode@@UAEPAVTiXmlDeclaration@@XZ ENDP ; TiXmlNode::ToDeclaration
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ToStylesheetReference@TiXmlNode@@UAEPAVTiXmlStylesheetReference@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToStylesheetReference@TiXmlNode@@UAEPAVTiXmlStylesheetReference@@XZ PROC ; TiXmlNode::ToStylesheetReference, COMDAT
; _this$ = ecx

; 727  : 	virtual TiXmlStylesheetReference*       ToStylesheetReference() { return 0; } ///< Cast to a more defined type. Will return null if not of the requested type.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ToStylesheetReference@TiXmlNode@@UAEPAVTiXmlStylesheetReference@@XZ ENDP ; TiXmlNode::ToStylesheetReference
_TEXT	ENDS
PUBLIC	??_7TiXmlAttribute@@6B@				; TiXmlAttribute::`vftable'
PUBLIC	??_R4TiXmlAttribute@@6B@			; TiXmlAttribute::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTiXmlAttribute@@@8			; TiXmlAttribute `RTTI Type Descriptor'
PUBLIC	??_R3TiXmlAttribute@@8				; TiXmlAttribute::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TiXmlAttribute@@8				; TiXmlAttribute::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TiXmlAttribute@@8			; TiXmlAttribute::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?Print@TiXmlAttribute@@UBEXPAU_iobuf@@H@Z	; TiXmlAttribute::Print
EXTRN	??_ETiXmlAttribute@@UAEPAXI@Z:PROC		; TiXmlAttribute::`vector deleting destructor'
EXTRN	?Parse@TiXmlAttribute@@UAEPBDPBDPAVTiXmlParsingData@@W4TiXmlEncoding@@@Z:PROC ; TiXmlAttribute::Parse
;	COMDAT ??_R1A@?0A@EA@TiXmlAttribute@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TiXmlAttribute@@8 DD FLAT:??_R0?AVTiXmlAttribute@@@8 ; TiXmlAttribute::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TiXmlAttribute@@8
rdata$r	ENDS
;	COMDAT ??_R2TiXmlAttribute@@8
rdata$r	SEGMENT
??_R2TiXmlAttribute@@8 DD FLAT:??_R1A@?0A@EA@TiXmlAttribute@@8 ; TiXmlAttribute::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@TiXmlBase@@8
rdata$r	ENDS
;	COMDAT ??_R3TiXmlAttribute@@8
rdata$r	SEGMENT
??_R3TiXmlAttribute@@8 DD 00H				; TiXmlAttribute::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2TiXmlAttribute@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTiXmlAttribute@@@8
_DATA	SEGMENT
??_R0?AVTiXmlAttribute@@@8 DD FLAT:??_7type_info@@6B@	; TiXmlAttribute `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTiXmlAttribute@@', 00H
_DATA	ENDS
;	COMDAT ??_R4TiXmlAttribute@@6B@
rdata$r	SEGMENT
??_R4TiXmlAttribute@@6B@ DD 00H				; TiXmlAttribute::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTiXmlAttribute@@@8
	DD	FLAT:??_R3TiXmlAttribute@@8
rdata$r	ENDS
;	COMDAT ??_7TiXmlAttribute@@6B@
CONST	SEGMENT
??_7TiXmlAttribute@@6B@ DD FLAT:??_R4TiXmlAttribute@@6B@ ; TiXmlAttribute::`vftable'
	DD	FLAT:??_ETiXmlAttribute@@UAEPAXI@Z
	DD	FLAT:?Print@TiXmlAttribute@@UBEXPAU_iobuf@@H@Z
	DD	FLAT:?Parse@TiXmlAttribute@@UAEPBDPBDPAVTiXmlParsingData@@W4TiXmlEncoding@@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0TiXmlAttribute@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0TiXmlAttribute@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0TiXmlAttribute@@QAE@XZ$1
__ehfuncinfo$??0TiXmlAttribute@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0TiXmlAttribute@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0TiXmlAttribute@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0TiXmlAttribute@@QAE@XZ PROC				; TiXmlAttribute::TiXmlAttribute, COMDAT
; _this$ = ecx

; 804  : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0TiXmlAttribute@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TiXmlBase@@QAE@XZ			; TiXmlBase::TiXmlBase
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TiXmlAttribute@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0TiXmlString@@QAE@XZ			; TiXmlString::TiXmlString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0TiXmlString@@QAE@XZ			; TiXmlString::TiXmlString

; 805  : 		document = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 806  : 		prev = next = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], 0

; 807  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0TiXmlAttribute@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1TiXmlBase@@UAE@XZ			; TiXmlBase::~TiXmlBase
__unwindfunclet$??0TiXmlAttribute@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__ehhandler$??0TiXmlAttribute@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0TiXmlAttribute@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0TiXmlAttribute@@QAE@XZ ENDP				; TiXmlAttribute::TiXmlAttribute
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0TiXmlAttribute@@QAE@PBD0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0TiXmlAttribute@@QAE@PBD0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0TiXmlAttribute@@QAE@PBD0@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0TiXmlAttribute@@QAE@PBD0@Z$2
__ehfuncinfo$??0TiXmlAttribute@@QAE@PBD0@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0TiXmlAttribute@@QAE@PBD0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0TiXmlAttribute@@QAE@PBD0@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__name$ = 8						; size = 4
__value$ = 12						; size = 4
??0TiXmlAttribute@@QAE@PBD0@Z PROC			; TiXmlAttribute::TiXmlAttribute, COMDAT
; _this$ = ecx

; 821  : 	TiXmlAttribute( const char * _name, const char * _value )

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0TiXmlAttribute@@QAE@PBD0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TiXmlBase@@QAE@XZ			; TiXmlBase::TiXmlBase
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TiXmlAttribute@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??0TiXmlString@@QAE@XZ			; TiXmlString::TiXmlString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??0TiXmlString@@QAE@XZ			; TiXmlString::TiXmlString
	mov	BYTE PTR __$EHRec$[ebp+8], 2

; 822  : 	{
; 823  : 		name = _name;

	mov	eax, DWORD PTR __name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??4TiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator=

; 824  : 		value = _value;

	mov	eax, DWORD PTR __value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??4TiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator=

; 825  : 		document = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 0

; 826  : 		prev = next = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], 0

; 827  : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0TiXmlAttribute@@QAE@PBD0@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1TiXmlBase@@UAE@XZ			; TiXmlBase::~TiXmlBase
__unwindfunclet$??0TiXmlAttribute@@QAE@PBD0@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__unwindfunclet$??0TiXmlAttribute@@QAE@PBD0@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__ehhandler$??0TiXmlAttribute@@QAE@PBD0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0TiXmlAttribute@@QAE@PBD0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0TiXmlAttribute@@QAE@PBD0@Z ENDP			; TiXmlAttribute::TiXmlAttribute
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Name@TiXmlAttribute@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Name@TiXmlAttribute@@QBEPBDXZ PROC			; TiXmlAttribute::Name, COMDAT
; _this$ = ecx

; 829  : 	const char*		Name()  const		{ return name.c_str(); }		///< Return the name of this attribute.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	?c_str@TiXmlString@@QBEPBDXZ		; TiXmlString::c_str
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Name@TiXmlAttribute@@QBEPBDXZ ENDP			; TiXmlAttribute::Name
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?Value@TiXmlAttribute@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Value@TiXmlAttribute@@QBEPBDXZ PROC			; TiXmlAttribute::Value, COMDAT
; _this$ = ecx

; 830  : 	const char*		Value() const		{ return value.c_str(); }		///< Return the value of this attribute.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	?c_str@TiXmlString@@QBEPBDXZ		; TiXmlString::c_str
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Value@TiXmlAttribute@@QBEPBDXZ ENDP			; TiXmlAttribute::Value
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetValue@TiXmlAttribute@@QAEXPBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__value$ = 8						; size = 4
?SetValue@TiXmlAttribute@@QAEXPBD@Z PROC		; TiXmlAttribute::SetValue, COMDAT
; _this$ = ecx

; 854  : 	void SetValue( const char* _value )	{ value = _value; }				///< Set the value.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??4TiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator=
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetValue@TiXmlAttribute@@QAEXPBD@Z ENDP		; TiXmlAttribute::SetValue
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?Print@TiXmlAttribute@@UBEXPAU_iobuf@@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_cfile$ = 8						; size = 4
_depth$ = 12						; size = 4
?Print@TiXmlAttribute@@UBEXPAU_iobuf@@H@Z PROC		; TiXmlAttribute::Print, COMDAT
; _this$ = ecx

; 888  : 	virtual void Print( FILE* cfile, int depth ) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 889  : 		Print( cfile, depth, 0 );

	push	0
	mov	eax, DWORD PTR _depth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cfile$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Print@TiXmlAttribute@@QBEXPAU_iobuf@@HPAVTiXmlString@@@Z ; TiXmlAttribute::Print

; 890  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Print@TiXmlAttribute@@UBEXPAU_iobuf@@H@Z ENDP		; TiXmlAttribute::Print
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??_GTiXmlAttribute@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GTiXmlAttribute@@UAEPAXI@Z PROC			; TiXmlAttribute::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TiXmlAttribute@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@4:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GTiXmlAttribute@@UAEPAXI@Z ENDP			; TiXmlAttribute::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1TiXmlAttribute@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1TiXmlAttribute@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1TiXmlAttribute@@UAE@XZ$1
__ehfuncinfo$??1TiXmlAttribute@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1TiXmlAttribute@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1TiXmlAttribute@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1TiXmlAttribute@@UAE@XZ PROC				; TiXmlAttribute::~TiXmlAttribute, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1TiXmlAttribute@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 24					; 00000018H
	call	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	call	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TiXmlBase@@UAE@XZ			; TiXmlBase::~TiXmlBase
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1TiXmlAttribute@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1TiXmlBase@@UAE@XZ			; TiXmlBase::~TiXmlBase
__unwindfunclet$??1TiXmlAttribute@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 20					; 00000014H
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__ehhandler$??1TiXmlAttribute@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1TiXmlAttribute@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1TiXmlAttribute@@UAE@XZ ENDP				; TiXmlAttribute::~TiXmlAttribute
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?First@TiXmlAttributeSet@@QBEPBVTiXmlAttribute@@XZ
_TEXT	SEGMENT
tv67 = -208						; size = 4
_this$ = -8						; size = 4
?First@TiXmlAttributeSet@@QBEPBVTiXmlAttribute@@XZ PROC	; TiXmlAttributeSet::First, COMDAT
; _this$ = ecx

; 930  : 	const TiXmlAttribute* First()	const	{ return ( sentinel.next == &sentinel ) ? 0 : sentinel.next; }

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	cmp	ecx, DWORD PTR _this$[ebp]
	jne	SHORT $LN3@First
	mov	DWORD PTR tv67[ebp], 0
	jmp	SHORT $LN4@First
$LN3@First:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	DWORD PTR tv67[ebp], eax
$LN4@First:
	mov	eax, DWORD PTR tv67[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?First@TiXmlAttributeSet@@QBEPBVTiXmlAttribute@@XZ ENDP	; TiXmlAttributeSet::First
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?First@TiXmlAttributeSet@@QAEPAVTiXmlAttribute@@XZ
_TEXT	SEGMENT
tv67 = -208						; size = 4
_this$ = -8						; size = 4
?First@TiXmlAttributeSet@@QAEPAVTiXmlAttribute@@XZ PROC	; TiXmlAttributeSet::First, COMDAT
; _this$ = ecx

; 931  : 	TiXmlAttribute* First()					{ return ( sentinel.next == &sentinel ) ? 0 : sentinel.next; }

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	cmp	ecx, DWORD PTR _this$[ebp]
	jne	SHORT $LN3@First@2
	mov	DWORD PTR tv67[ebp], 0
	jmp	SHORT $LN4@First@2
$LN3@First@2:
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+32]
	mov	DWORD PTR tv67[ebp], eax
$LN4@First@2:
	mov	eax, DWORD PTR tv67[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?First@TiXmlAttributeSet@@QAEPAVTiXmlAttribute@@XZ ENDP	; TiXmlAttributeSet::First
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?Find@TiXmlAttributeSet@@QAEPAVTiXmlAttribute@@PBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__name$ = 8						; size = 4
?Find@TiXmlAttributeSet@@QAEPAVTiXmlAttribute@@PBD@Z PROC ; TiXmlAttributeSet::Find, COMDAT
; _this$ = ecx

; 936  : 	TiXmlAttribute*	Find( const char* _name ) {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 937  : 		return const_cast< TiXmlAttribute* >( (const_cast< const TiXmlAttributeSet* >(this))->Find( _name ) );

	mov	eax, DWORD PTR __name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?Find@TiXmlAttributeSet@@QBEPBVTiXmlAttribute@@PBD@Z ; TiXmlAttributeSet::Find

; 938  : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Find@TiXmlAttributeSet@@QAEPAVTiXmlAttribute@@PBD@Z ENDP ; TiXmlAttributeSet::Find
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ToElement@TiXmlElement@@UBEPBV1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToElement@TiXmlElement@@UBEPBV1@XZ PROC		; TiXmlElement::ToElement, COMDAT
; _this$ = ecx

; 1141 : 	virtual const TiXmlElement*     ToElement()     const { return this; } ///< Cast to a more defined type. Will return null not of the requested type.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ToElement@TiXmlElement@@UBEPBV1@XZ ENDP		; TiXmlElement::ToElement
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ToElement@TiXmlElement@@UAEPAV1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToElement@TiXmlElement@@UAEPAV1@XZ PROC		; TiXmlElement::ToElement, COMDAT
; _this$ = ecx

; 1142 : 	virtual TiXmlElement*           ToElement()	          { return this; } ///< Cast to a more defined type. Will return null not of the requested type.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ToElement@TiXmlElement@@UAEPAV1@XZ ENDP		; TiXmlElement::ToElement
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??0TiXmlComment@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0TiXmlComment@@QAE@XZ PROC				; TiXmlComment::TiXmlComment, COMDAT
; _this$ = ecx

; 1175 : 	TiXmlComment() : TiXmlNode( TiXmlNode::COMMENT ) {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TiXmlNode@@IAE@W4NodeType@0@@Z	; TiXmlNode::TiXmlNode
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TiXmlComment@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0TiXmlComment@@QAE@XZ ENDP				; TiXmlComment::TiXmlComment
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ToComment@TiXmlComment@@UBEPBV1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToComment@TiXmlComment@@UBEPBV1@XZ PROC		; TiXmlComment::ToComment, COMDAT
; _this$ = ecx

; 1195 : 	virtual const TiXmlComment*  ToComment() const { return this; } ///< Cast to a more defined type. Will return null not of the requested type.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ToComment@TiXmlComment@@UBEPBV1@XZ ENDP		; TiXmlComment::ToComment
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ToComment@TiXmlComment@@UAEPAV1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToComment@TiXmlComment@@UAEPAV1@XZ PROC		; TiXmlComment::ToComment, COMDAT
; _this$ = ecx

; 1196 : 	virtual TiXmlComment*  ToComment() { return this; } ///< Cast to a more defined type. Will return null not of the requested type.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ToComment@TiXmlComment@@UAEPAV1@XZ ENDP		; TiXmlComment::ToComment
_TEXT	ENDS
PUBLIC	??1TiXmlComment@@UAE@XZ				; TiXmlComment::~TiXmlComment
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GTiXmlComment@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GTiXmlComment@@UAEPAXI@Z PROC			; TiXmlComment::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TiXmlComment@@UAE@XZ			; TiXmlComment::~TiXmlComment
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@5
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@5:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GTiXmlComment@@UAEPAXI@Z ENDP			; TiXmlComment::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1TiXmlComment@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1TiXmlComment@@UAE@XZ PROC				; TiXmlComment::~TiXmlComment, COMDAT
; _this$ = ecx

; 1183 : 	virtual ~TiXmlComment()	{}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TiXmlComment@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TiXmlNode@@UAE@XZ			; TiXmlNode::~TiXmlNode
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1TiXmlComment@@UAE@XZ ENDP				; TiXmlComment::~TiXmlComment
_TEXT	ENDS
PUBLIC	??_7TiXmlText@@6B@				; TiXmlText::`vftable'
PUBLIC	??_R4TiXmlText@@6B@				; TiXmlText::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTiXmlText@@@8				; TiXmlText `RTTI Type Descriptor'
PUBLIC	??_R3TiXmlText@@8				; TiXmlText::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TiXmlText@@8				; TiXmlText::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TiXmlText@@8			; TiXmlText::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ToText@TiXmlText@@UAEPAV1@XZ			; TiXmlText::ToText
PUBLIC	?ToText@TiXmlText@@UBEPBV1@XZ			; TiXmlText::ToText
EXTRN	??_ETiXmlText@@UAEPAXI@Z:PROC			; TiXmlText::`vector deleting destructor'
EXTRN	?Parse@TiXmlText@@UAEPBDPBDPAVTiXmlParsingData@@W4TiXmlEncoding@@@Z:PROC ; TiXmlText::Parse
;	COMDAT ??_R1A@?0A@EA@TiXmlText@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TiXmlText@@8 DD FLAT:??_R0?AVTiXmlText@@@8 ; TiXmlText::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TiXmlText@@8
rdata$r	ENDS
;	COMDAT ??_R2TiXmlText@@8
rdata$r	SEGMENT
??_R2TiXmlText@@8 DD FLAT:??_R1A@?0A@EA@TiXmlText@@8	; TiXmlText::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@TiXmlNode@@8
	DD	FLAT:??_R1A@?0A@EA@TiXmlBase@@8
rdata$r	ENDS
;	COMDAT ??_R3TiXmlText@@8
rdata$r	SEGMENT
??_R3TiXmlText@@8 DD 00H				; TiXmlText::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2TiXmlText@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTiXmlText@@@8
_DATA	SEGMENT
??_R0?AVTiXmlText@@@8 DD FLAT:??_7type_info@@6B@	; TiXmlText `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTiXmlText@@', 00H
_DATA	ENDS
;	COMDAT ??_R4TiXmlText@@6B@
rdata$r	SEGMENT
??_R4TiXmlText@@6B@ DD 00H				; TiXmlText::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTiXmlText@@@8
	DD	FLAT:??_R3TiXmlText@@8
rdata$r	ENDS
;	COMDAT ??_7TiXmlText@@6B@
CONST	SEGMENT
??_7TiXmlText@@6B@ DD FLAT:??_R4TiXmlText@@6B@		; TiXmlText::`vftable'
	DD	FLAT:??_ETiXmlText@@UAEPAXI@Z
	DD	FLAT:?Print@TiXmlText@@UBEXPAU_iobuf@@H@Z
	DD	FLAT:?Parse@TiXmlText@@UAEPBDPBDPAVTiXmlParsingData@@W4TiXmlEncoding@@@Z
	DD	FLAT:?ToDocument@TiXmlNode@@UAEPAVTiXmlDocument@@XZ
	DD	FLAT:?ToDocument@TiXmlNode@@UBEPBVTiXmlDocument@@XZ
	DD	FLAT:?ToElement@TiXmlNode@@UAEPAVTiXmlElement@@XZ
	DD	FLAT:?ToElement@TiXmlNode@@UBEPBVTiXmlElement@@XZ
	DD	FLAT:?ToComment@TiXmlNode@@UAEPAVTiXmlComment@@XZ
	DD	FLAT:?ToComment@TiXmlNode@@UBEPBVTiXmlComment@@XZ
	DD	FLAT:?ToUnknown@TiXmlNode@@UAEPAVTiXmlUnknown@@XZ
	DD	FLAT:?ToUnknown@TiXmlNode@@UBEPBVTiXmlUnknown@@XZ
	DD	FLAT:?ToText@TiXmlText@@UAEPAV1@XZ
	DD	FLAT:?ToText@TiXmlText@@UBEPBV1@XZ
	DD	FLAT:?ToDeclaration@TiXmlNode@@UAEPAVTiXmlDeclaration@@XZ
	DD	FLAT:?ToDeclaration@TiXmlNode@@UBEPBVTiXmlDeclaration@@XZ
	DD	FLAT:?ToStylesheetReference@TiXmlNode@@UAEPAVTiXmlStylesheetReference@@XZ
	DD	FLAT:?ToStylesheetReference@TiXmlNode@@UBEPBVTiXmlStylesheetReference@@XZ
	DD	FLAT:?Clone@TiXmlText@@MBEPAVTiXmlNode@@XZ
	DD	FLAT:?Accept@TiXmlText@@UBE_NPAVTiXmlVisitor@@@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0TiXmlText@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0TiXmlText@@QAE@PBD@Z$0
__ehfuncinfo$??0TiXmlText@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0TiXmlText@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0TiXmlText@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_initValue$ = 8						; size = 4
??0TiXmlText@@QAE@PBD@Z PROC				; TiXmlText::TiXmlText, COMDAT
; _this$ = ecx

; 1230 : 	{

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0TiXmlText@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TiXmlNode@@IAE@W4NodeType@0@@Z	; TiXmlNode::TiXmlNode
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TiXmlText@@6B@

; 1231 : 		SetValue( initValue );

	mov	eax, DWORD PTR _initValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetValue@TiXmlNode@@QAEXPBD@Z		; TiXmlNode::SetValue

; 1232 : 		cdata = false;

	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+44], 0

; 1233 : 	}

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0TiXmlText@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1TiXmlNode@@UAE@XZ			; TiXmlNode::~TiXmlNode
__ehhandler$??0TiXmlText@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0TiXmlText@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0TiXmlText@@QAE@PBD@Z ENDP				; TiXmlText::TiXmlText
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CDATA@TiXmlText@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?CDATA@TiXmlText@@QBE_NXZ PROC				; TiXmlText::CDATA, COMDAT
; _this$ = ecx

; 1252 : 	bool CDATA() const				{ return cdata; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+44]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?CDATA@TiXmlText@@QBE_NXZ ENDP				; TiXmlText::CDATA
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ToText@TiXmlText@@UBEPBV1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToText@TiXmlText@@UBEPBV1@XZ PROC			; TiXmlText::ToText, COMDAT
; _this$ = ecx

; 1258 : 	virtual const TiXmlText* ToText() const { return this; } ///< Cast to a more defined type. Will return null not of the requested type.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ToText@TiXmlText@@UBEPBV1@XZ ENDP			; TiXmlText::ToText
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ToText@TiXmlText@@UAEPAV1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToText@TiXmlText@@UAEPAV1@XZ PROC			; TiXmlText::ToText, COMDAT
; _this$ = ecx

; 1259 : 	virtual TiXmlText*       ToText()       { return this; } ///< Cast to a more defined type. Will return null not of the requested type.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ToText@TiXmlText@@UAEPAV1@XZ ENDP			; TiXmlText::ToText
_TEXT	ENDS
PUBLIC	??1TiXmlText@@UAE@XZ				; TiXmlText::~TiXmlText
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GTiXmlText@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GTiXmlText@@UAEPAXI@Z PROC				; TiXmlText::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TiXmlText@@UAE@XZ			; TiXmlText::~TiXmlText
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@6
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@6:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GTiXmlText@@UAEPAXI@Z ENDP				; TiXmlText::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1TiXmlText@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1TiXmlText@@UAE@XZ PROC				; TiXmlText::~TiXmlText, COMDAT
; _this$ = ecx

; 1234 : 	virtual ~TiXmlText() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TiXmlText@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TiXmlNode@@UAE@XZ			; TiXmlNode::~TiXmlNode
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1TiXmlText@@UAE@XZ ENDP				; TiXmlText::~TiXmlText
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0TiXmlDeclaration@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0TiXmlDeclaration@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0TiXmlDeclaration@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0TiXmlDeclaration@@QAE@XZ$2
__ehfuncinfo$??0TiXmlDeclaration@@QAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0TiXmlDeclaration@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0TiXmlDeclaration@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0TiXmlDeclaration@@QAE@XZ PROC			; TiXmlDeclaration::TiXmlDeclaration, COMDAT
; _this$ = ecx

; 1298 : 	TiXmlDeclaration()   : TiXmlNode( TiXmlNode::DECLARATION ) {}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0TiXmlDeclaration@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	5
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TiXmlNode@@IAE@W4NodeType@0@@Z	; TiXmlNode::TiXmlNode
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TiXmlDeclaration@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0TiXmlString@@QAE@XZ			; TiXmlString::TiXmlString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??0TiXmlString@@QAE@XZ			; TiXmlString::TiXmlString
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??0TiXmlString@@QAE@XZ			; TiXmlString::TiXmlString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0TiXmlDeclaration@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1TiXmlNode@@UAE@XZ			; TiXmlNode::~TiXmlNode
__unwindfunclet$??0TiXmlDeclaration@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__unwindfunclet$??0TiXmlDeclaration@@QAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__ehhandler$??0TiXmlDeclaration@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0TiXmlDeclaration@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0TiXmlDeclaration@@QAE@XZ ENDP			; TiXmlDeclaration::TiXmlDeclaration
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Print@TiXmlDeclaration@@UBEXPAU_iobuf@@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_cfile$ = 8						; size = 4
_depth$ = 12						; size = 4
?Print@TiXmlDeclaration@@UBEXPAU_iobuf@@H@Z PROC	; TiXmlDeclaration::Print, COMDAT
; _this$ = ecx

; 1328 : 	virtual void Print( FILE* cfile, int depth ) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1329 : 		Print( cfile, depth, 0 );

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _depth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cfile$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+76]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1330 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Print@TiXmlDeclaration@@UBEXPAU_iobuf@@H@Z ENDP	; TiXmlDeclaration::Print
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ToDeclaration@TiXmlDeclaration@@UBEPBV1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToDeclaration@TiXmlDeclaration@@UBEPBV1@XZ PROC	; TiXmlDeclaration::ToDeclaration, COMDAT
; _this$ = ecx

; 1334 : 	virtual const TiXmlDeclaration* ToDeclaration() const { return this; } ///< Cast to a more defined type. Will return null not of the requested type.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ToDeclaration@TiXmlDeclaration@@UBEPBV1@XZ ENDP	; TiXmlDeclaration::ToDeclaration
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ToDeclaration@TiXmlDeclaration@@UAEPAV1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToDeclaration@TiXmlDeclaration@@UAEPAV1@XZ PROC	; TiXmlDeclaration::ToDeclaration, COMDAT
; _this$ = ecx

; 1335 : 	virtual TiXmlDeclaration*       ToDeclaration()       { return this; } ///< Cast to a more defined type. Will return null not of the requested type.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ToDeclaration@TiXmlDeclaration@@UAEPAV1@XZ ENDP	; TiXmlDeclaration::ToDeclaration
_TEXT	ENDS
PUBLIC	??1TiXmlDeclaration@@UAE@XZ			; TiXmlDeclaration::~TiXmlDeclaration
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GTiXmlDeclaration@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GTiXmlDeclaration@@UAEPAXI@Z PROC			; TiXmlDeclaration::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TiXmlDeclaration@@UAE@XZ		; TiXmlDeclaration::~TiXmlDeclaration
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@7
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@7:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GTiXmlDeclaration@@UAEPAXI@Z ENDP			; TiXmlDeclaration::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1TiXmlDeclaration@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1TiXmlDeclaration@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1TiXmlDeclaration@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1TiXmlDeclaration@@UAE@XZ$2
__ehfuncinfo$??1TiXmlDeclaration@@UAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1TiXmlDeclaration@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1TiXmlDeclaration@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1TiXmlDeclaration@@UAE@XZ PROC			; TiXmlDeclaration::~TiXmlDeclaration, COMDAT
; _this$ = ecx

; 1315 : 	virtual ~TiXmlDeclaration()	{}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1TiXmlDeclaration@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TiXmlDeclaration@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TiXmlNode@@UAE@XZ			; TiXmlNode::~TiXmlNode
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1TiXmlDeclaration@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1TiXmlNode@@UAE@XZ			; TiXmlNode::~TiXmlNode
__unwindfunclet$??1TiXmlDeclaration@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__unwindfunclet$??1TiXmlDeclaration@@UAE@XZ$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__ehhandler$??1TiXmlDeclaration@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1TiXmlDeclaration@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1TiXmlDeclaration@@UAE@XZ ENDP			; TiXmlDeclaration::~TiXmlDeclaration
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0TiXmlStylesheetReference@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0TiXmlStylesheetReference@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0TiXmlStylesheetReference@@QAE@XZ$1
__ehfuncinfo$??0TiXmlStylesheetReference@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0TiXmlStylesheetReference@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??0TiXmlStylesheetReference@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0TiXmlStylesheetReference@@QAE@XZ PROC		; TiXmlStylesheetReference::TiXmlStylesheetReference, COMDAT
; _this$ = ecx

; 1368 : 	TiXmlStylesheetReference()   : TiXmlNode( TiXmlNode::STYLESHEETREFERENCE ) {}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0TiXmlStylesheetReference@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	push	6
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TiXmlNode@@IAE@W4NodeType@0@@Z	; TiXmlNode::TiXmlNode
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TiXmlStylesheetReference@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??0TiXmlString@@QAE@XZ			; TiXmlString::TiXmlString
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??0TiXmlString@@QAE@XZ			; TiXmlString::TiXmlString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0TiXmlStylesheetReference@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1TiXmlNode@@UAE@XZ			; TiXmlNode::~TiXmlNode
__unwindfunclet$??0TiXmlStylesheetReference@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__ehhandler$??0TiXmlStylesheetReference@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0TiXmlStylesheetReference@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0TiXmlStylesheetReference@@QAE@XZ ENDP		; TiXmlStylesheetReference::TiXmlStylesheetReference
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Print@TiXmlStylesheetReference@@UBEXPAU_iobuf@@H@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_cfile$ = 8						; size = 4
_depth$ = 12						; size = 4
?Print@TiXmlStylesheetReference@@UBEXPAU_iobuf@@H@Z PROC ; TiXmlStylesheetReference::Print, COMDAT
; _this$ = ecx

; 1394 : 	virtual void Print( FILE* cfile, int depth ) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1395 : 		Print( cfile, depth, 0 );

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _depth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _cfile$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+76]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1396 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?Print@TiXmlStylesheetReference@@UBEXPAU_iobuf@@H@Z ENDP ; TiXmlStylesheetReference::Print
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ToStylesheetReference@TiXmlStylesheetReference@@UBEPBV1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToStylesheetReference@TiXmlStylesheetReference@@UBEPBV1@XZ PROC ; TiXmlStylesheetReference::ToStylesheetReference, COMDAT
; _this$ = ecx

; 1400 : 	virtual const TiXmlStylesheetReference* ToStylesheetReference() const { return this; } ///< Cast to a more defined type. Will return null not of the requested type.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ToStylesheetReference@TiXmlStylesheetReference@@UBEPBV1@XZ ENDP ; TiXmlStylesheetReference::ToStylesheetReference
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ToStylesheetReference@TiXmlStylesheetReference@@UAEPAV1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToStylesheetReference@TiXmlStylesheetReference@@UAEPAV1@XZ PROC ; TiXmlStylesheetReference::ToStylesheetReference, COMDAT
; _this$ = ecx

; 1401 : 	virtual TiXmlStylesheetReference*       ToStylesheetReference()       { return this; } ///< Cast to a more defined type. Will return null not of the requested type.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ToStylesheetReference@TiXmlStylesheetReference@@UAEPAV1@XZ ENDP ; TiXmlStylesheetReference::ToStylesheetReference
_TEXT	ENDS
PUBLIC	??1TiXmlStylesheetReference@@UAE@XZ		; TiXmlStylesheetReference::~TiXmlStylesheetReference
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GTiXmlStylesheetReference@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GTiXmlStylesheetReference@@UAEPAXI@Z PROC		; TiXmlStylesheetReference::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TiXmlStylesheetReference@@UAE@XZ	; TiXmlStylesheetReference::~TiXmlStylesheetReference
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@8
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@8:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GTiXmlStylesheetReference@@UAEPAXI@Z ENDP		; TiXmlStylesheetReference::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1TiXmlStylesheetReference@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1TiXmlStylesheetReference@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1TiXmlStylesheetReference@@UAE@XZ$1
__ehfuncinfo$??1TiXmlStylesheetReference@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1TiXmlStylesheetReference@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1TiXmlStylesheetReference@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1TiXmlStylesheetReference@@UAE@XZ PROC		; TiXmlStylesheetReference::~TiXmlStylesheetReference, COMDAT
; _this$ = ecx

; 1383 : 	virtual ~TiXmlStylesheetReference()	{}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1TiXmlStylesheetReference@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TiXmlStylesheetReference@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	call	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TiXmlNode@@UAE@XZ			; TiXmlNode::~TiXmlNode
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1TiXmlStylesheetReference@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1TiXmlNode@@UAE@XZ			; TiXmlNode::~TiXmlNode
__unwindfunclet$??1TiXmlStylesheetReference@@UAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	jmp	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
__ehhandler$??1TiXmlStylesheetReference@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1TiXmlStylesheetReference@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1TiXmlStylesheetReference@@UAE@XZ ENDP		; TiXmlStylesheetReference::~TiXmlStylesheetReference
PUBLIC	??_7TiXmlUnknown@@6B@				; TiXmlUnknown::`vftable'
PUBLIC	??_R4TiXmlUnknown@@6B@				; TiXmlUnknown::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTiXmlUnknown@@@8			; TiXmlUnknown `RTTI Type Descriptor'
PUBLIC	??_R3TiXmlUnknown@@8				; TiXmlUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TiXmlUnknown@@8				; TiXmlUnknown::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TiXmlUnknown@@8			; TiXmlUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?ToUnknown@TiXmlUnknown@@UAEPAV1@XZ		; TiXmlUnknown::ToUnknown
PUBLIC	?ToUnknown@TiXmlUnknown@@UBEPBV1@XZ		; TiXmlUnknown::ToUnknown
EXTRN	??_ETiXmlUnknown@@UAEPAXI@Z:PROC		; TiXmlUnknown::`vector deleting destructor'
EXTRN	?Parse@TiXmlUnknown@@UAEPBDPBDPAVTiXmlParsingData@@W4TiXmlEncoding@@@Z:PROC ; TiXmlUnknown::Parse
;	COMDAT ??_R1A@?0A@EA@TiXmlUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TiXmlUnknown@@8 DD FLAT:??_R0?AVTiXmlUnknown@@@8 ; TiXmlUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TiXmlUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2TiXmlUnknown@@8
rdata$r	SEGMENT
??_R2TiXmlUnknown@@8 DD FLAT:??_R1A@?0A@EA@TiXmlUnknown@@8 ; TiXmlUnknown::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@TiXmlNode@@8
	DD	FLAT:??_R1A@?0A@EA@TiXmlBase@@8
rdata$r	ENDS
;	COMDAT ??_R3TiXmlUnknown@@8
rdata$r	SEGMENT
??_R3TiXmlUnknown@@8 DD 00H				; TiXmlUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2TiXmlUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTiXmlUnknown@@@8
_DATA	SEGMENT
??_R0?AVTiXmlUnknown@@@8 DD FLAT:??_7type_info@@6B@	; TiXmlUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTiXmlUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R4TiXmlUnknown@@6B@
rdata$r	SEGMENT
??_R4TiXmlUnknown@@6B@ DD 00H				; TiXmlUnknown::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTiXmlUnknown@@@8
	DD	FLAT:??_R3TiXmlUnknown@@8
rdata$r	ENDS
;	COMDAT ??_7TiXmlUnknown@@6B@
CONST	SEGMENT
??_7TiXmlUnknown@@6B@ DD FLAT:??_R4TiXmlUnknown@@6B@	; TiXmlUnknown::`vftable'
	DD	FLAT:??_ETiXmlUnknown@@UAEPAXI@Z
	DD	FLAT:?Print@TiXmlUnknown@@UBEXPAU_iobuf@@H@Z
	DD	FLAT:?Parse@TiXmlUnknown@@UAEPBDPBDPAVTiXmlParsingData@@W4TiXmlEncoding@@@Z
	DD	FLAT:?ToDocument@TiXmlNode@@UAEPAVTiXmlDocument@@XZ
	DD	FLAT:?ToDocument@TiXmlNode@@UBEPBVTiXmlDocument@@XZ
	DD	FLAT:?ToElement@TiXmlNode@@UAEPAVTiXmlElement@@XZ
	DD	FLAT:?ToElement@TiXmlNode@@UBEPBVTiXmlElement@@XZ
	DD	FLAT:?ToComment@TiXmlNode@@UAEPAVTiXmlComment@@XZ
	DD	FLAT:?ToComment@TiXmlNode@@UBEPBVTiXmlComment@@XZ
	DD	FLAT:?ToUnknown@TiXmlUnknown@@UAEPAV1@XZ
	DD	FLAT:?ToUnknown@TiXmlUnknown@@UBEPBV1@XZ
	DD	FLAT:?ToText@TiXmlNode@@UAEPAVTiXmlText@@XZ
	DD	FLAT:?ToText@TiXmlNode@@UBEPBVTiXmlText@@XZ
	DD	FLAT:?ToDeclaration@TiXmlNode@@UAEPAVTiXmlDeclaration@@XZ
	DD	FLAT:?ToDeclaration@TiXmlNode@@UBEPBVTiXmlDeclaration@@XZ
	DD	FLAT:?ToStylesheetReference@TiXmlNode@@UAEPAVTiXmlStylesheetReference@@XZ
	DD	FLAT:?ToStylesheetReference@TiXmlNode@@UBEPBVTiXmlStylesheetReference@@XZ
	DD	FLAT:?Clone@TiXmlUnknown@@UBEPAVTiXmlNode@@XZ
	DD	FLAT:?Accept@TiXmlUnknown@@UBE_NPAVTiXmlVisitor@@@Z
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ??0TiXmlUnknown@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0TiXmlUnknown@@QAE@XZ PROC				; TiXmlUnknown::TiXmlUnknown, COMDAT
; _this$ = ecx

; 1430 : 	TiXmlUnknown() : TiXmlNode( TiXmlNode::UNKNOWN )	{}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	3
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0TiXmlNode@@IAE@W4NodeType@0@@Z	; TiXmlNode::TiXmlNode
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TiXmlUnknown@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0TiXmlUnknown@@QAE@XZ ENDP				; TiXmlUnknown::TiXmlUnknown
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ToUnknown@TiXmlUnknown@@UBEPBV1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToUnknown@TiXmlUnknown@@UBEPBV1@XZ PROC		; TiXmlUnknown::ToUnknown, COMDAT
; _this$ = ecx

; 1443 : 	virtual const TiXmlUnknown*     ToUnknown()     const { return this; } ///< Cast to a more defined type. Will return null not of the requested type.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ToUnknown@TiXmlUnknown@@UBEPBV1@XZ ENDP		; TiXmlUnknown::ToUnknown
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ToUnknown@TiXmlUnknown@@UAEPAV1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToUnknown@TiXmlUnknown@@UAEPAV1@XZ PROC		; TiXmlUnknown::ToUnknown, COMDAT
; _this$ = ecx

; 1444 : 	virtual TiXmlUnknown*           ToUnknown()	    { return this; } ///< Cast to a more defined type. Will return null not of the requested type.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ToUnknown@TiXmlUnknown@@UAEPAV1@XZ ENDP		; TiXmlUnknown::ToUnknown
_TEXT	ENDS
PUBLIC	??1TiXmlUnknown@@UAE@XZ				; TiXmlUnknown::~TiXmlUnknown
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GTiXmlUnknown@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GTiXmlUnknown@@UAEPAXI@Z PROC			; TiXmlUnknown::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TiXmlUnknown@@UAE@XZ			; TiXmlUnknown::~TiXmlUnknown
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@9
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@9:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GTiXmlUnknown@@UAEPAXI@Z ENDP			; TiXmlUnknown::`scalar deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ??1TiXmlUnknown@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1TiXmlUnknown@@UAE@XZ PROC				; TiXmlUnknown::~TiXmlUnknown, COMDAT
; _this$ = ecx

; 1431 : 	virtual ~TiXmlUnknown() {}

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TiXmlUnknown@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TiXmlNode@@UAE@XZ			; TiXmlNode::~TiXmlNode
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1TiXmlUnknown@@UAE@XZ ENDP				; TiXmlUnknown::~TiXmlUnknown
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?Error@TiXmlDocument@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?Error@TiXmlDocument@@QBE_NXZ PROC			; TiXmlDocument::Error, COMDAT
; _this$ = ecx

; 1537 : 	bool Error() const						{ return error; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+44]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?Error@TiXmlDocument@@QBE_NXZ ENDP			; TiXmlDocument::Error
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ClearError@TiXmlDocument@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ClearError@TiXmlDocument@@QAEXXZ PROC			; TiXmlDocument::ClearError, COMDAT
; _this$ = ecx

; 1588 : 	void ClearError()						{	error = false;

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+44], 0

; 1589 : 												errorId = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+48], 0

; 1590 : 												errorDesc = "";

	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??4TiXmlString@@QAEAAV0@PBD@Z		; TiXmlString::operator=

; 1591 : 												errorLocation.row = errorLocation.col = 0;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+60], 0

; 1592 : 												//errorLocation.last = 0;
; 1593 : 											}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ClearError@TiXmlDocument@@QAEXXZ ENDP			; TiXmlDocument::ClearError
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ToDocument@TiXmlDocument@@UBEPBV1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToDocument@TiXmlDocument@@UBEPBV1@XZ PROC		; TiXmlDocument::ToDocument, COMDAT
; _this$ = ecx

; 1609 : 	virtual const TiXmlDocument*    ToDocument()    const { return this; } ///< Cast to a more defined type. Will return null not of the requested type.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ToDocument@TiXmlDocument@@UBEPBV1@XZ ENDP		; TiXmlDocument::ToDocument
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?ToDocument@TiXmlDocument@@UAEPAV1@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?ToDocument@TiXmlDocument@@UAEPAV1@XZ PROC		; TiXmlDocument::ToDocument, COMDAT
; _this$ = ecx

; 1610 : 	virtual TiXmlDocument*          ToDocument()          { return this; } ///< Cast to a more defined type. Will return null not of the requested type.

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?ToDocument@TiXmlDocument@@UAEPAV1@XZ ENDP		; TiXmlDocument::ToDocument
_TEXT	ENDS
PUBLIC	??1TiXmlDocument@@UAE@XZ			; TiXmlDocument::~TiXmlDocument
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GTiXmlDocument@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GTiXmlDocument@@UAEPAXI@Z PROC			; TiXmlDocument::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TiXmlDocument@@UAE@XZ		; TiXmlDocument::~TiXmlDocument
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar@10
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar@10:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GTiXmlDocument@@UAEPAXI@Z ENDP			; TiXmlDocument::`scalar deleting destructor'
_TEXT	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1TiXmlDocument@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1TiXmlDocument@@UAE@XZ$0
__ehfuncinfo$??1TiXmlDocument@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1TiXmlDocument@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Odtp /RTCsu /ZI
xdata$x	ENDS
;	COMDAT ??1TiXmlDocument@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1TiXmlDocument@@UAE@XZ PROC				; TiXmlDocument::~TiXmlDocument, COMDAT
; _this$ = ecx

; 1482 : 	virtual ~TiXmlDocument() {}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1TiXmlDocument@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TiXmlDocument@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 52					; 00000034H
	call	??1TiXmlString@@QAE@XZ			; TiXmlString::~TiXmlString
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TiXmlNode@@UAE@XZ			; TiXmlNode::~TiXmlNode
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1TiXmlDocument@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1TiXmlNode@@UAE@XZ			; TiXmlNode::~TiXmlNode
__ehhandler$??1TiXmlDocument@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1TiXmlDocument@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1TiXmlDocument@@UAE@XZ ENDP				; TiXmlDocument::~TiXmlDocument
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0TiXmlHandle@@QAE@PAVTiXmlNode@@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__node$ = 8						; size = 4
??0TiXmlHandle@@QAE@PAVTiXmlNode@@@Z PROC		; TiXmlHandle::TiXmlHandle, COMDAT
; _this$ = ecx

; 1719 : 	TiXmlHandle( TiXmlNode* _node )					{ this->node = _node; }

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __node$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0TiXmlHandle@@QAE@PAVTiXmlNode@@@Z ENDP		; TiXmlHandle::TiXmlHandle
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?DoIndent@TiXmlPrinter@@AAEXXZ
_TEXT	SEGMENT
_i$194555 = -20						; size = 4
_this$ = -8						; size = 4
?DoIndent@TiXmlPrinter@@AAEXXZ PROC			; TiXmlPrinter::DoIndent, COMDAT
; _this$ = ecx

; 1863 : 	void DoIndent()	{

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1864 : 		for( int i=0; i<depth; ++i )

	mov	DWORD PTR _i$194555[ebp], 0
	jmp	SHORT $LN3@DoIndent
$LN2@DoIndent:
	mov	eax, DWORD PTR _i$194555[ebp]
	add	eax, 1
	mov	DWORD PTR _i$194555[ebp], eax
$LN3@DoIndent:
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _i$194555[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jge	SHORT $LN4@DoIndent

; 1865 : 			buffer += indent;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??YTiXmlString@@QAEAAV0@ABV0@@Z		; TiXmlString::operator+=
	jmp	SHORT $LN2@DoIndent
$LN4@DoIndent:

; 1866 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DoIndent@TiXmlPrinter@@AAEXXZ ENDP			; TiXmlPrinter::DoIndent
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?DoLineBreak@TiXmlPrinter@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?DoLineBreak@TiXmlPrinter@@AAEXXZ PROC			; TiXmlPrinter::DoLineBreak, COMDAT
; _this$ = ecx

; 1867 : 	void DoLineBreak() {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

; 1868 : 		buffer += lineBreak;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??YTiXmlString@@QAEAAV0@ABV0@@Z		; TiXmlString::operator+=

; 1869 : 	}

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DoLineBreak@TiXmlPrinter@@AAEXXZ ENDP			; TiXmlPrinter::DoLineBreak
_TEXT	ENDS
END
